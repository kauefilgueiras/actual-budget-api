import type { AccountEntity, CategoryEntity, CategoryGroupEntity, TransactionEntity } from '../types/models';
export declare function generateAccount(name: AccountEntity['name'], isConnected?: boolean, offbudget?: boolean): AccountEntity;
export declare function generateCategory(name: string, group: string, isIncome?: boolean): CategoryEntity;
export declare function generateCategoryGroup(name: string, isIncome?: boolean): CategoryGroupEntity;
export type CategoryGroupDefinition = Omit<CategoryGroupEntity, 'id' | 'categories'> & {
    categories: Omit<CategoryEntity, 'id' | 'group'>[];
};
export declare function generateCategoryGroups(definition: Partial<CategoryGroupDefinition>[]): CategoryGroupEntity[];
export declare function generateTransaction(data: Partial<TransactionEntity> & Pick<TransactionEntity, 'account'>, splitAmount?: number, showError?: boolean): TransactionEntity[];
export declare function generateTransactions(count: number, accountId: string, groupId: string, splitAtIndexes?: number[], showError?: boolean): TransactionEntity[];
