import { TransactionEntity } from '../../types/models';
export type ToolsHandlers = {
    'tools/fix-split-transactions': typeof fixSplitTransactions;
};
export declare const app: {
    events: import("mitt").Emitter<{
        sync: import("../../types/server-events").ServerEvents["sync-event"];
        'load-budget': {
            id: string;
        };
    }>;
    handlers: ToolsHandlers;
    services: (() => () => void)[];
    unlistenServices: (() => void)[];
    method<Name extends "tools/fix-split-transactions">(name: Name, func: ToolsHandlers[Name]): void;
    service(func: () => () => void): void;
    combine(...apps: any[]): void;
    startServices(): void;
    stopServices(): void;
};
declare function fixSplitTransactions(): Promise<{
    numBlankPayees: number;
    numCleared: number;
    numDeleted: number;
    numTransfersFixed: number;
    numNonParentErrorsFixed: number;
    numParentTransactionsWithCategoryFixed: number;
    mismatchedSplits: TransactionEntity[];
}>;
export {};
