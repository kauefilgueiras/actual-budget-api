var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
(() => {
    var __webpack_modules__ = { "./node_modules/@rschedule/core/es2015/generators.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let dateAdapterConfig;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { AddOperator: () => AddOperator, Calendar: () => Calendar, Collection: () => Collection, CollectionIterator: () => CollectionIterator, Dates: () => Dates, IntersectionOperator: () => IntersectionOperator, MergeDurationOperator: () => MergeDurationOperator, MergeDurationOperatorError: () => MergeDurationOperatorError, OccurrenceGenerator: () => OccurrenceGenerator, OccurrenceIterator: () => OccurrenceIterator, Operator: () => Operator, Rule: () => Rule, RuleBase: () => RuleBase, Schedule: () => Schedule, ScheduleBase: () => ScheduleBase, SplitDurationOperator: () => SplitDurationOperator, SplitDurationOperatorError: () => SplitDurationOperatorError, SubtractOperator: () => SubtractOperator, UniqueOperator: () => UniqueOperator, add: () => add, intersection: () => intersection, mergeDuration: () => mergeDuration, splitDuration: () => splitDuration, subtract: () => subtract, unique: () => unique });
            var DateAdapter, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@rschedule/core/es2015/main.js");
            class OccurrenceGenerator {
                constructor(args = {}) { this.timezone = void 0 !== args.timezone ? args.timezone : null, this.maxDuration = args.maxDuration || 0; }
                get firstDate() { if (void 0 !== this._firstDate)
                    return this._firstDate; let start = this._run().next().value; return this._firstDate = start ? this.dateAdapter.fromDateTime(start) : null, this._firstDate; }
                get lastDate() { if (void 0 !== this._lastDate)
                    return this._lastDate; if (this.isInfinite)
                    return this._lastDate = null, null; let end = this._run({ reverse: !0 }).next().value; return this._lastDate = end ? this.dateAdapter.fromDateTime(end) : null, this._lastDate; }
                pipe(...operators) { return operators.reduce((prev, curr) => curr({ base: prev, timezone: this.timezone }), this); }
                occurrences(args = {}) { return new OccurrenceIterator(this, this.normalizeOccurrencesArgs(args)); }
                collections(args = {}) { return new CollectionIterator(this, this.normalizeCollectionsArgs(args)); }
                occursBetween(startInput, endInput, options1 = {}) { let start = this.normalizeDateInput(startInput), end = this.normalizeDateInput(endInput); if (this.hasDuration && !options1.excludeEnds) {
                    let maxDuration = this.getMaxDuration("occursBetween", options1);
                    for (let day of this._run({ start: start.subtract(maxDuration, "millisecond"), end, reverse: !0 }))
                        if (!day.end.isBefore(start))
                            return !0;
                    return !1;
                } for (let day of this._run({ start, end })) {
                    if (options1.excludeEnds) {
                        if (day.isEqual(start))
                            continue;
                        if (day.isEqual(end))
                            break;
                    }
                    return !0;
                } return !1; }
                occursOn(rawArgs) { let args = this.normalizeOccursOnArgs(rawArgs); if (args.weekday) {
                    if (this.isInfinite && !args.before)
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError("When calling `occursOn()` with a `weekday` argument and an occurrence object that has infinite occurrences, you must include a `before` argument as well.");
                    let start = args.after && (args.excludeEnds ? args.after.add(1, "day") : args.after), end = args.before && (args.excludeEnds ? args.before.subtract(1, "day") : args.before), iterator = this._run({ start, end }), date = iterator.next().value;
                    if (!date)
                        return !1;
                    for (; date;) {
                        if (date.get("weekday") === args.weekday)
                            return !0;
                        date = iterator.next({ skipToDate: date.add((0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.getDifferenceBetweenWeekdays)(date.get("weekday"), args.weekday), "day").granularity("day") }).value;
                    }
                    return !1;
                } if (!args.date)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError('"occursOn()" must be called with either a "date" or "weekday" argument'); if (this.hasDuration) {
                    let maxDuration = this.getMaxDuration("occursOn", args);
                    for (let date of this._run({ start: args.date.subtract(maxDuration, "millisecond"), end: args.date }))
                        if (!date.end.isBefore(args.date)) {
                            if (date.isAfter(args.date))
                                return !1;
                            return !0;
                        }
                    return !1;
                } for (let day of this._run({ start: args.date, end: args.date }))
                    return !!day; return !1; }
                occursAfter(date, options1 = {}) { let adapter = this.normalizeDateInput(date); if (this.hasDuration && !options1.excludeStart) {
                    let maxDuration = this.getMaxDuration("occursAfter", options1);
                    for (let date of this._run({ start: adapter.subtract(maxDuration, "millisecond") }))
                        if (!date.end.isBefore(adapter))
                            return !0;
                    return !1;
                } for (let day of this._run({ start: adapter }))
                    if (!(options1.excludeStart && day.isEqual(adapter)))
                        return !0; return !1; }
                occursBefore(date, options1 = {}) { let adapter = this.normalizeDateInput(date); if (this.hasDuration && options1.excludeStart) {
                    for (let day of this._run({ end: adapter, reverse: !0 }))
                        if (!day.end.isAfterOrEqual(adapter))
                            return !0;
                    return !1;
                } for (let day of this._run({ end: adapter, reverse: !0 }))
                    if (!(options1.excludeStart && day.isEqual(adapter)))
                        return !0; return !1; }
                get dateAdapter() { return _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapterBase.adapter; }
                normalizeOccurrencesArgs(rawArgs) { return Object.assign(Object.assign({}, rawArgs), { start: this.normalizeDateInput(rawArgs.start), end: this.normalizeDateInput(rawArgs.end) }); }
                normalizeCollectionsArgs(rawArgs) { if (void 0 !== rawArgs.reverse)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError("`collections()` does not support the `reverse` option at this time."); return Object.assign(Object.assign({}, rawArgs), { start: this.normalizeDateInput(rawArgs.start), end: this.normalizeDateInput(rawArgs.end) }); }
                normalizeOccursOnArgs(rawArgs = {}) { return Object.assign(Object.assign({}, rawArgs), { date: this.normalizeDateInput(rawArgs.date), after: this.normalizeDateInput(rawArgs.after), before: this.normalizeDateInput(rawArgs.before), excludeDates: rawArgs.excludeDates && rawArgs.excludeDates.map(date => this.normalizeDateInput(date)) }); }
                normalizeRunArgs(args) { return Object.assign(Object.assign({}, args), { start: this.normalizeDateInput(args.start), end: this.normalizeDateInput(args.end) }); }
                normalizeDateInput(date) { return date ? (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateInputToDateTime)(date, this.timezone) : void 0; }
                normalizeDateInputToAdapter(date) { if (date)
                    return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateInputToDateAdapter)(date); }
                normalizeRunOutput(date) { return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.normalizeDateTimeTimezone)(date, this.timezone); }
                getMaxDuration(method, options1) { let maxDuration = options1.maxDuration || this.maxDuration; if (!Number.isInteger(maxDuration))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError(`When an occurrence generator has a duration, a 'maxDuration' argument must be supplied to ${method}().`); return maxDuration; }
            }
            class OccurrenceIterator {
                constructor(iterable, args) { this.iterable = iterable, this.args = args, this[Symbol.iterator] = () => this.occurrenceIterator(), this.iterator = iterable._run(args), this.isInfinite = iterable.isInfinite; }
                next(args) { return this.occurrenceIterator(args).next(); }
                toArray() { if (this.args.end || this.args.take || !this.isInfinite)
                    return Array.from(this.occurrenceIterator()); throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InfiniteLoopError("OccurrenceIterator#toArray() can only be called if the iterator is not infinite, or you provide and `end` argument, or you provide a `take` argument."); }
                *occurrenceIterator(rawArgs) { let args = this.normalizeRunArgs(rawArgs), date = this.iterator.next(args).value; for (; date;) {
                    let yieldArgs = yield this.normalizeDateOutput(date);
                    args = this.normalizeRunArgs(yieldArgs), date = this.iterator.next(args).value;
                } }
                normalizeRunArgs(args) { return { skipToDate: this.normalizeDateInput(args && args.skipToDate) }; }
                normalizeDateInput(date) { return date ? (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateInputToDateTime)(date, this.iterable.timezone) : void 0; }
                normalizeDateOutput(date) { if (date)
                    return date ? _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapterBase.adapter.fromDateTime(date) : void 0; }
            }
            class Collection {
                constructor(dates = [], granularity, periodStart, periodEnd) { this.dates = dates, this.granularity = granularity, this.periodStart = periodStart, this.periodEnd = periodEnd; }
            }
            class CollectionIterator {
                constructor(iterable, args) { if (this.iterable = iterable, this.args = args, this.granularity = "year", this[Symbol.iterator] = () => this.iterator, args.granularity && (this.granularity = args.granularity, "week" === this.granularity && !args.weekStart))
                    throw Error('"week" granularity requires `weekStart` arg'); if (args.weekStart && (this.weekStart = args.weekStart), args.reverse)
                    throw Error("`OccurrenceGenerator#collections()` does not support iterating in reverse. Though `OccurrenceGenerator#occurrences()` does support iterating in reverse."); this.args = Object.assign(Object.assign({}, args), { start: args.start || iterable._run().next().value, end: args.end && this.getPeriod(args.end).end }), this.startDate = this.args.start && this.normalizeDateOutput(this.getPeriod(this.args.start).start) || null, this.iterator = this.collectionIterator(); }
                next() { return this.iterator.next(); }
                toArray() { if (this.args.end || this.args.take || !this.iterable.isInfinite) {
                    let collections = [];
                    for (let collection of this.collectionIterator())
                        collections.push(collection);
                    return collections;
                } throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InfiniteLoopError("CollectionIterator#toArray() can only be called if the iterator is not infinite, or you provide and `end` argument, or you provide a `take` argument."); }
                normalizeDateOutput(date) { if (date)
                    return _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapterBase.adapter.fromDateTime(date); }
                *collectionIterator() { if (!this.startDate)
                    return; let iterator = this.occurrenceIterator(), date = iterator.next().value; if (!date)
                    return; let period = this.getPeriod(this.args.start), dates = [], index = 0; for (; date && (void 0 === this.args.take || this.args.take > index);) {
                    for (; date && date.isBeforeOrEqual(period.end);)
                        dates.push(date), date = iterator.next().value;
                    if (yield new Collection(dates.map(date => this.normalizeDateOutput(date)), this.granularity, this.normalizeDateOutput(period.start), this.normalizeDateOutput(period.end)), !date)
                        return;
                    dates = [], period = this.args.skipEmptyPeriods ? this.getPeriod(date) : this.getPeriod(this.incrementPeriod(period.period)), "month" === this.granularity && this.weekStart && (date = (iterator = this.iterable._run({ start: period.start, end: this.args.end })).next().value), index++;
                } }
                getPeriod(date) { let start, end, period; return "month" === this.granularity && this.weekStart ? (start = date.granularity("month").granularity("week", { weekStart: this.weekStart }), end = date.endGranularity("month").endGranularity("week", { weekStart: this.weekStart }), period = date.granularity("month")) : (start = date.granularity(this.granularity, { weekStart: this.weekStart }), end = date.endGranularity(this.granularity, { weekStart: this.weekStart }), period = start), { start, end, period }; }
                incrementPeriod(date) { return date.add(1, this.granularity); }
                occurrenceIterator() { let start = this.args.start || this.iterable._run().next().value; return start ? (start = this.getPeriod(start).start, this.iterable._run({ start, end: this.args.end })) : this.iterable._run(this.args); }
            }
            class Operator extends OccurrenceGenerator {
                constructor(streams, config) { super(config), this.streams = streams, this.config = config, this.timezone = config.timezone, this.streams = streams.map(stream => stream instanceof Operator ? stream : stream.set("timezone", this.timezone)), this.isInfinite = this.calculateIsInfinite(), this.hasDuration = this.calculateHasDuration(); }
                normalizeDateInput(date) { if (date)
                    return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateInputToDateTime)(date, this.timezone); }
                normalizeRunOutput(date) { return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.normalizeDateTimeTimezone)(date, this.timezone); }
            }
            class IterableWrapper {
                constructor(generator, runArgs) { this.runArgs = runArgs, this.stream = generator._run(this.runArgs), this.next(); }
                next(args) { let { done, value } = this.stream.next(args); return this.done = "boolean" != typeof done || done, this.value = value, { done, value }; }
            }
            function processYieldArgs(streams, options1 = {}, yieldArgs = {}) { if (yieldArgs.skipToDate && 0 !== streams.length) {
                if (options1.reverse ? streams.every(s => s.value.isBeforeOrEqual(yieldArgs.skipToDate)) : streams.every(s => s.value.isAfterOrEqual(yieldArgs.skipToDate)))
                    throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                for (let stream of streams)
                    !stream.done && ((options1.reverse ? stream.value.isBeforeOrEqual(yieldArgs.skipToDate) : stream.value.isAfterOrEqual(yieldArgs.skipToDate)) || stream.next(yieldArgs));
            } }
            function streamsComparer(a, b) { return a.done && b.done ? 0 : a.done ? 1 : b.done ? -1 : a.value.isAfter(b.value) ? 1 : -1; }
            function streamsReverseComparer(a, b) { return a.done && b.done ? 0 : a.done ? -1 : b.done ? 1 : a.value.isAfter(b.value) ? -1 : 1; }
            function selectNextIterable(streams, options1 = {}, yieldArgs = {}) { return processYieldArgs(streams, options1, yieldArgs), streams.sort(options1.reverse ? streamsReverseComparer : streamsComparer).filter(s => !s.done).shift(); }
            function add(...streams) { return options1 => new AddOperator(streams, options1); }
            class AddOperator extends Operator {
                set(_, value) { return new AddOperator(this.streams.map(stream => stream.set("timezone", value)), Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                *_run(args = {}) { let wrappedStreams = this.streams.map(input => new IterableWrapper(input, args)); if (this.config.base && wrappedStreams.push(new IterableWrapper(this.config.base, args)), 0 === wrappedStreams.length)
                    return; let stream = selectNextIterable(wrappedStreams, args); for (; stream && !stream.done;) {
                    let yieldArgs = yield this.normalizeRunOutput(stream.value);
                    yieldArgs && yieldArgs.skipToDate || stream.next(), stream = selectNextIterable(wrappedStreams, args, yieldArgs);
                } }
                calculateIsInfinite() { return this.config.base && this.config.base.isInfinite || this.streams.some(stream => stream.isInfinite); }
                calculateHasDuration() { let streamsDuration = this.streams.every(stream => stream.hasDuration); return this.config.base ? this.config.base.hasDuration && streamsDuration : streamsDuration; }
            }
            class Calendar extends OccurrenceGenerator {
                constructor(args = {}) { super(args), this.schedules = [], this.data = args.data, args.schedules && (this.schedules = Array.isArray(args.schedules) ? args.schedules : [args.schedules], this.schedules = this.schedules.map(schedule => schedule.set("timezone", this.timezone))), this.isInfinite = this.schedules.some(schedule => schedule.isInfinite), this.hasDuration = this.schedules.every(schedule => schedule.hasDuration); }
                occurrences(args = {}) { return new OccurrenceIterator(this, this.normalizeOccurrencesArgs(args)); }
                collections(args = {}) { return new CollectionIterator(this, this.normalizeCollectionsArgs(args)); }
                set(prop, value, options1) { if ("timezone" === prop)
                    return new Calendar({ schedules: this.schedules.map(schedule => schedule.set(prop, value, options1)), data: this.data, timezone: value, maxDuration: this.maxDuration }); if ("schedules" === prop)
                    return new Calendar({ schedules: Array.isArray(value) ? value : [value], data: this.data, timezone: this.timezone, maxDuration: this.maxDuration }); throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError(`Unknown value for \`prop\`: "${prop}"`); }
                *_run(args = {}) { let iterator; if (0 === this.schedules.length)
                    return; let count = args.take; delete args.take; let date = (iterator = 1 === this.schedules.length ? this.schedules[0]._run(args) : new AddOperator(this.schedules, { timezone: this.timezone })._run(args)).next().value, index = 0; for (; date && (void 0 === count || count > index);) {
                    date = date.add(this, "generator");
                    let yieldArgs = yield this.normalizeRunOutput(date);
                    date = iterator.next(yieldArgs).value, index++;
                } }
            }
            class Dates extends OccurrenceGenerator {
                constructor(args = {}) { super(args), this.adapters = [], this.isInfinite = !1, this.maxDuration = 0, this.datetimes = [], this.data = args.data, args.dates && (this.adapters = args.dates.map(date => { let adapter = this.normalizeDateInputToAdapter(date); return args.duration && !adapter.duration && (adapter = adapter.set("duration", args.duration)), adapter.set("timezone", this.timezone); }), this.datetimes = this.adapters.map(adapter => adapter.toDateTime())), this.hasDuration = this.datetimes.every(date => !!date.duration), this.hasDuration && (this.maxDuration = this.adapters.reduce((prev, curr) => curr.duration > prev ? curr.duration : prev, 0)); }
                get length() { return this.adapters.length; }
                get firstDate() { return this.adapters[0] || null; }
                get lastDate() { return this.adapters[this.length - 1] || null; }
                occurrences(args = {}) { return new OccurrenceIterator(this, this.normalizeOccurrencesArgs(args)); }
                collections(args = {}) { return new CollectionIterator(this, this.normalizeCollectionsArgs(args)); }
                add(value) { return new Dates({ dates: [...this.adapters, value], timezone: this.timezone, data: this.data }); }
                remove(value) { let dates = this.adapters.slice(), input = this.normalizeDateInputToAdapter(value), index = dates.findIndex(date => date.valueOf() === input.valueOf()); return index >= 0 && dates.splice(index, 1), new Dates({ dates, timezone: this.timezone, data: this.data }); }
                set(prop, value, options1 = {}) { let timezone = this.timezone, dates = this.adapters.slice(); if ("timezone" === prop) {
                    if (value === this.timezone)
                        return this;
                    options1.keepLocalTime && (dates = this.adapters.map(adapter => { let json = adapter.toJSON(); return json.timezone = value, this.dateAdapter.fromJSON(json); })), timezone = value;
                }
                else if ("dates" === prop)
                    dates = value;
                else if ("duration" === prop)
                    dates = dates.map(date => date.set("duration", value || 0));
                else
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError(`Unexpected prop argument "${prop}". Accepted values are "timezone" or "dates"`); return new Dates({ dates, data: this.data, timezone }); }
                filter(fn) { return new Dates({ dates: this.adapters.filter(fn), data: this.data, timezone: this.timezone }); }
                *_run(args = {}) { let yieldArgs, dates = this.datetimes.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer); args.start && (dates = dates.filter(date => date.isAfterOrEqual(args.start))), args.end && (dates = dates.filter(date => date.isBeforeOrEqual(args.end))), args.reverse && (dates = dates.slice().reverse()), args.take && (dates = dates.slice(0, args.take)); let dateCache = dates.slice(), date = dateCache.shift(); for (; date;) {
                    if (yieldArgs && yieldArgs.skipToDate && (args.reverse ? yieldArgs.skipToDate.isBefore(date) : yieldArgs.skipToDate.isAfter(date))) {
                        date = dateCache.shift();
                        continue;
                    }
                    if (date = date.add(this, "generator"), (yieldArgs = yield this.normalizeRunOutput(date)) && yieldArgs.skipToDate && (args.reverse ? yieldArgs.skipToDate.isAfterOrEqual(date) : yieldArgs.skipToDate.isBeforeOrEqual(date)))
                        throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    date = dateCache.shift();
                } }
            }
            class InvalidDateAdapterError extends Error {
            }
            class DateAdapterBase {
                constructor(_date, options1) { if (this.metadata = {}, this.duration = options1 && options1.duration || 0, this.generators = options1 && options1.generators && options1.generators.slice() || [], !Number.isInteger(this.duration) || this.duration < 0)
                    throw new InvalidDateAdapterError("duration must be a non-negative integer"); }
                static set adapter(value) { if (dateAdapterConfig)
                    throw Error(`"${dateAdapterConfig.name}" has already been configured.`); dateAdapterConfig = value; }
                static get adapter() { if (!dateAdapterConfig)
                    throw Error("No date adapter has been configured. See rSchedule docs."); return dateAdapterConfig; }
                static isDate(_object) { throw unimplementedError("isDate()"); }
                static fromDate(_date, _options) { throw unimplementedError("fromDate()"); }
                static fromJSON(_json) { throw unimplementedError("fromJSON()"); }
                static fromDateTime(_datetime) { throw unimplementedError("fromDateTime()"); }
                toISOString() { return this.set("timezone", "UTC").toDateTime().toISOString(); }
                toDateTime() { return DateTime.fromJSON(Object.assign(Object.assign({}, this.toJSON()), { generators: this.generators, metadata: this.metadata })); }
            }
            function unimplementedError(name) { return Error(`You must implement the "${name}" method for this DateAdapter class`); }
            DateAdapterBase.hasTimezoneSupport = !1, function (DateAdapter) { DateAdapter.WEEKDAYS = ["SU", "MO", "TU", "WE", "TH", "FR", "SA"], DateAdapter.MILLISECONDS_IN_SECOND = 1e3, DateAdapter.MILLISECONDS_IN_MINUTE = 60 * DateAdapter.MILLISECONDS_IN_SECOND, DateAdapter.MILLISECONDS_IN_HOUR = 60 * DateAdapter.MILLISECONDS_IN_MINUTE, DateAdapter.MILLISECONDS_IN_DAY = 24 * DateAdapter.MILLISECONDS_IN_HOUR, DateAdapter.MILLISECONDS_IN_WEEK = 7 * DateAdapter.MILLISECONDS_IN_DAY; }(DateAdapter || (DateAdapter = {}));
            class InvalidDateTimeError extends Error {
            }
            class DateTime {
                constructor(date, timezone, duration, generators, options1 = {}) { if (this.metadata = {}, this.date = new Date(date), this.timezone = timezone || null, this.duration = duration || 0, this.generators = generators && generators.slice() || [], !Number.isInteger(this.duration) || this.duration < 0)
                    throw new InvalidDateTimeError("duration must be a non-negative integer"); options1.metadata && Object.assign(this.metadata, options1.metadata), this.assertIsValid(); }
                static fromJSON(json) { return new DateTime(new Date(Date.UTC(json.year, json.month - 1, json.day, json.hour, json.minute, json.second, json.millisecond)), json.timezone, json.duration, json.generators, { metadata: json.metadata }); }
                static fromDateAdapter(adapter) { return DateTime.fromJSON(Object.assign(Object.assign({}, adapter.toJSON()), { generators: adapter.generators, metadata: adapter.metadata })); }
                get end() { if (this.duration)
                    return this._end || (this._end = this.add(this.duration, "millisecond")), this._end; }
                isEqual(object) { return !!object && (assertSameTimeZone(this, object), this.valueOf() === object.valueOf()); }
                isBefore(object) { return assertSameTimeZone(this, object), this.valueOf() < object.valueOf(); }
                isBeforeOrEqual(object) { return assertSameTimeZone(this, object), this.valueOf() <= object.valueOf(); }
                isAfter(object) { return assertSameTimeZone(this, object), this.valueOf() > object.valueOf(); }
                isAfterOrEqual(object) { return assertSameTimeZone(this, object), this.valueOf() >= object.valueOf(); }
                isOccurring(object) { if (!this.duration)
                    throw Error("DateTime#isOccurring() is only applicable to DateTimes with durations"); return assertSameTimeZone(this, object), object.isAfterOrEqual(this) && object.isBeforeOrEqual(this.add(this.duration, "millisecond")); }
                add(amount, unit) { switch (unit) {
                    case "generator": {
                        let generators = this.generators.slice();
                        return generators.unshift(amount), new DateTime(this.date, this.timezone, this.duration, generators);
                    }
                    case "year":
                        var date;
                        return this.forkDateTime((date = this.date, addUTCMonths(date, 12 * toInteger(amount))));
                    case "month": return this.forkDateTime(addUTCMonths(this.date, amount));
                    case "week": return this.forkDateTime(function (date, input) { return addUTCDays(date, 7 * toInteger(input)); }(this.date, amount));
                    case "day": return this.forkDateTime(addUTCDays(this.date, amount));
                    case "hour": return this.forkDateTime(addUTCHours(this.date, amount));
                    case "minute": return this.forkDateTime(addUTCMinutes(this.date, amount));
                    case "second": return this.forkDateTime(addUTCSeconds(this.date, amount));
                    case "millisecond": return this.forkDateTime(addUTCMilliseconds(this.date, amount));
                    default: throw Error("Invalid unit provided to `DateTime#add`");
                } }
                subtract(amount, unit) { var date, date1, date2, date3, date4, date5, date6, date7; switch (unit) {
                    case "year": return this.forkDateTime((date = this.date, addUTCMonths(date, 12 * toInteger(-amount))));
                    case "month": return this.forkDateTime((date1 = this.date, addUTCMonths(date1, -amount)));
                    case "week": return this.forkDateTime((date2 = this.date, function (date, input) { return addUTCDays(date, 7 * toInteger(input)); }(date2, -amount)));
                    case "day": return this.forkDateTime((date3 = this.date, addUTCDays(date3, -amount)));
                    case "hour": return this.forkDateTime((date4 = this.date, addUTCHours(date4, -amount)));
                    case "minute": return this.forkDateTime((date5 = this.date, addUTCMinutes(date5, -amount)));
                    case "second": return this.forkDateTime((date6 = this.date, addUTCSeconds(date6, -amount)));
                    case "millisecond": return this.forkDateTime((date7 = this.date, addUTCMilliseconds(date7, -amount)));
                    default: throw Error("Invalid unit provided to `DateTime#subtract`");
                } }
                get(unit) { switch (unit) {
                    case "year": return this.date.getUTCFullYear();
                    case "month": return this.date.getUTCMonth() + 1;
                    case "yearday":
                        var now = this.date;
                        let start = new Date(Date.UTC(now.getUTCFullYear(), 0, 1));
                        return 1 + Math.floor((now.valueOf() - start.valueOf()) / DateAdapter.MILLISECONDS_IN_DAY);
                    case "weekday": return DateAdapter.WEEKDAYS[this.date.getUTCDay()];
                    case "day": return this.date.getUTCDate();
                    case "hour": return this.date.getUTCHours();
                    case "minute": return this.date.getUTCMinutes();
                    case "second": return this.date.getUTCSeconds();
                    case "millisecond": return this.date.getUTCMilliseconds();
                    default: throw Error("Invalid unit provided to `DateTime#set`");
                } }
                set(unit, value) { if ("duration" === unit)
                    return new DateTime(this.date, this.timezone, value, this.generators); if ("generators" === unit)
                    return new DateTime(this.date, this.timezone, this.duration, value); let date = new Date(this.date); switch (unit) {
                    case "year":
                        date.setUTCFullYear(value);
                        break;
                    case "month": {
                        let length = monthLength(value, date.getUTCFullYear());
                        date.getUTCDate() > length ? (date.setUTCDate(1), date.setUTCMonth(value), date = addUTCDays(date, -1)) : date.setUTCMonth(value - 1);
                        break;
                    }
                    case "day":
                        date.setUTCDate(value);
                        break;
                    case "hour":
                        date.setUTCHours(value);
                        break;
                    case "minute":
                        date.setUTCMinutes(value);
                        break;
                    case "second":
                        date.setUTCSeconds(value);
                        break;
                    case "millisecond":
                        date.setUTCMilliseconds(value);
                        break;
                    default: throw Error("Invalid unit provided to `DateTime#set`");
                } return this.forkDateTime(date); }
                granularity(granularity, opt = {}) { let date = this.forkDateTime(this.date); switch (granularity) {
                    case "year": date = date.set("month", 1);
                    case "month":
                        date = date.set("day", 1);
                        break;
                    case "week": date = function (date, wkst) { let index = orderedWeekdays(wkst).indexOf(date.get("weekday")); return date.subtract(index, "day"); }(date, opt.weekStart);
                } switch (granularity) {
                    case "year":
                    case "month":
                    case "week":
                    case "day": date = date.set("hour", 0);
                    case "hour": date = date.set("minute", 0);
                    case "minute": date = date.set("second", 0);
                    case "second": date = date.set("millisecond", 0);
                    case "millisecond": return date;
                    default: throw Error("Invalid granularity provided to `DateTime#granularity`: " + granularity);
                } }
                endGranularity(granularity, opt = {}) { let date = this.forkDateTime(this.date); switch (granularity) {
                    case "year": date = date.set("month", 12);
                    case "month":
                        date = date.set("day", monthLength(date.get("month"), date.get("year")));
                        break;
                    case "week": date = function (date, wkst) { let index = orderedWeekdays(wkst).indexOf(date.get("weekday")); return date.add(6 - index, "day"); }(date, opt.weekStart);
                } switch (granularity) {
                    case "year":
                    case "month":
                    case "week":
                    case "day": date = date.set("hour", 23);
                    case "hour": date = date.set("minute", 59);
                    case "minute": date = date.set("second", 59);
                    case "second": date = date.set("millisecond", 999);
                    case "millisecond": return date;
                    default: throw Error("Invalid granularity provided to `DateTime#granularity`: " + granularity);
                } }
                toISOString() { return this.date.toISOString(); }
                toDateTime() { return this; }
                toJSON() { let json = { timezone: this.timezone, year: this.get("year"), month: this.get("month"), day: this.get("day"), hour: this.get("hour"), minute: this.get("minute"), second: this.get("second"), millisecond: this.get("millisecond") }; return this.duration && (json.duration = this.duration), json; }
                valueOf() { return this.date.valueOf(); }
                assertIsValid() { if (isNaN(this.valueOf()))
                    throw new InvalidDateTimeError("DateTime has invalid date."); return !0; }
                forkDateTime(date) { return new DateTime(date, this.timezone, this.duration, this.generators); }
            }
            function assertSameTimeZone(x, y) { if (x.timezone !== y.timezone)
                throw new InvalidDateTimeError("Attempted to compare a datetime to another date in a different timezone: " + JSON.stringify(x) + " and " + JSON.stringify(y)); return !0; }
            function orderedWeekdays(wkst = "SU") { let wkdays = DateAdapter.WEEKDAYS.slice(), index = wkdays.indexOf(wkst); for (; 0 !== index;)
                (function (array, from = "first") { 0 === array.length || ("first" === from ? array.push(array.shift()) : array.unshift(array.pop())); })(wkdays), index--; return wkdays; }
            function monthLength(month, year) { var year1; return ({ 1: 31, 2: (year1 = year) % 400 == 0 || year1 % 4 == 0 && year1 % 100 != 0 ? 29 : 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31 })[month]; }
            function toInteger(input) { if (null === input || !0 === input || !1 === input)
                return NaN; let int = Number(input); return isNaN(int) ? int : int < 0 ? Math.ceil(int) : Math.floor(int); }
            function addMilliseconds(dirtyDate, dirtyAmount) { if (arguments.length < 2)
                throw TypeError("2 arguments required, but only " + arguments.length + " present"); return new Date(dirtyDate.valueOf() + toInteger(dirtyAmount)); }
            function addUTCMonths(date, input) { let amount = toInteger(input), desiredMonth = (date = new Date(date)).getUTCMonth() + amount, dateWithDesiredMonth = new Date(0); dateWithDesiredMonth.setUTCFullYear(date.getUTCFullYear(), desiredMonth, 1), dateWithDesiredMonth.setUTCHours(0, 0, 0, 0); let daysInMonth = monthLength(dateWithDesiredMonth.getUTCMonth() + 1, dateWithDesiredMonth.getUTCFullYear()); return date.setUTCMonth(desiredMonth, Math.min(daysInMonth, date.getUTCDate())), date; }
            function addUTCWeeks(date, input) { return addUTCDays(date, 7 * toInteger(input)); }
            function addUTCDays(date, input) { return addUTCMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_DAY); }
            function addUTCHours(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_HOUR); }
            function addUTCMinutes(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_MINUTE); }
            function addUTCSeconds(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_SECOND); }
            function addUTCMilliseconds(date, input) { let amount = toInteger(input); return new Date(date.getTime() + amount); }
            class RuleBase extends OccurrenceGenerator {
                constructor(recurrenceRules, config, options1 = {}) { super(options1), this.recurrenceRules = recurrenceRules, this.options = (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.cloneRuleOptions)(config), this.normOptions = (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.normalizeRuleOptions)(this.recurrenceRules, this.options), this.timezone = void 0 !== options1.timezone ? options1.timezone : this.normOptions.start.timezone, this.data = options1.data, this.hasDuration = !!config.duration, this.hasDuration && (this.duration = config.duration), this.isInfinite = void 0 === this.normOptions.end && void 0 === this.normOptions.count; }
                occurrences(args = {}) { return new OccurrenceIterator(this, this.normalizeOccurrencesArgs(args)); }
                collections(args = {}) { return new CollectionIterator(this, this.normalizeCollectionsArgs(args)); }
                *_run(rawArgs = {}) { let args = this.normalizeRunArgs(rawArgs), iterator = new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRulesIterator((0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.recurrenceRulesReducer)(this.recurrenceRules), this.normOptions, args), date = iterator.next().value, index = 0; for (; date && (void 0 === args.take || index < args.take);) {
                    index++, date = date.add(this, "generator");
                    let yieldArgs = yield this.normalizeRunOutput(date);
                    if (null == yieldArgs ? void 0 : yieldArgs.skipToDate) {
                        var date1, timezone;
                        date = iterator.next(Object.assign(Object.assign({}, yieldArgs), { skipToDate: (date1 = yieldArgs.skipToDate, timezone = iterator.start.timezone, date1.timezone !== timezone ? DateAdapterBase.adapter.fromDateTime(date1).set("timezone", timezone).toDateTime() : date1) })).value;
                    }
                    else
                        date = iterator.next(yieldArgs).value;
                } }
            }
            class Rule extends RuleBase {
                constructor(config, options1 = {}) { super(Rule.recurrenceRules, config, options1); }
                set(prop, value, tzoptions = {}) { let options1 = (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.cloneRuleOptions)(this.options), timezone = this.timezone; if ("timezone" === prop) {
                    if (value === this.timezone && !tzoptions.keepLocalTime)
                        return this;
                    if (tzoptions.keepLocalTime) {
                        let json = this.normalizeDateInput(options1.start).toJSON();
                        json.timezone = value;
                        let adapter = this.dateAdapter.fromJSON(json);
                        options1.start = options1.start instanceof this.dateAdapter ? adapter : options1.start instanceof _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateTime ? adapter.toDateTime() : adapter.date;
                    }
                    timezone = value;
                }
                else
                    "options" === prop ? options1 = value : options1[prop] = value; return new Rule(options1, { data: this.data, maxDuration: this.maxDuration, timezone }); }
            }
            Rule.recurrenceRules = [];
            class ScheduleBase extends OccurrenceGenerator {
                constructor(options1) { super(options1), this.data = options1.data; }
                occurrences(args = {}) { return new OccurrenceIterator(this, this.normalizeOccurrencesArgs(args)); }
                collections(args = {}) { return new CollectionIterator(this, this.normalizeCollectionsArgs(args)); }
                *_run(args = {}) { let count = args.take; delete args.take; let iterator = this.occurrenceStream._run(args), date = iterator.next().value, index = 0; for (; date && (void 0 === count || count > index);) {
                    date = date.add(this, "generator");
                    let yieldArgs = yield this.normalizeRunOutput(date);
                    date = iterator.next(yieldArgs).value, index++;
                } }
            }
            function subtract(...streams) { return options1 => new SubtractOperator(streams, options1); }
            class SubtractOperator extends Operator {
                set(_, value) { return new SubtractOperator(this.streams.map(stream => stream.set("timezone", value)), Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                *_run(args = {}) { if (!this.config.base)
                    return; let inclusion = new IterableWrapper(this.config.base, args), exclusion = new IterableWrapper(new AddOperator(this.streams, { timezone: this.config.timezone }), args); for (cycleStreams(inclusion, exclusion, args); !inclusion.done;) {
                    let yieldArgs = yield this.normalizeRunOutput(inclusion.value);
                    yieldArgs && yieldArgs.skipToDate || inclusion.next(), cycleStreams(inclusion, exclusion, args, yieldArgs);
                } }
                calculateIsInfinite() { return !!(this.config.base && this.config.base.isInfinite); }
                calculateHasDuration() { return !!(this.config.base && this.config.base.hasDuration); }
            }
            function cycleStreams(inclusion, exclusion, options1 = {}, yieldArgs = {}) { for (processYieldArgs([inclusion, exclusion], options1, yieldArgs), iterateExclusion(inclusion, exclusion, options1); !inclusion.done && !exclusion.done && inclusion.value.isEqual(exclusion.value);)
                inclusion.next(), iterateExclusion(inclusion, exclusion, options1); }
            function iterateExclusion(inclusion, exclusion, options1 = {}) { if (options1.reverse) {
                for (; !exclusion.done && !inclusion.done && exclusion.value.isAfter(inclusion.value);)
                    exclusion.next();
                return;
            } for (; !exclusion.done && !inclusion.done && exclusion.value.isBefore(inclusion.value);)
                exclusion.next(); }
            function unique() { return options1 => new UniqueOperator([], options1); }
            class UniqueOperator extends Operator {
                set(_, value) { return new UniqueOperator([], Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                *_run(args = {}) { if (!this.config.base)
                    return; let stream = new IterableWrapper(this.config.base, args); for (; !stream.done;) {
                    let yieldArgs = yield this.normalizeRunOutput(stream.value), lastValue = stream.value;
                    for (stream.next(yieldArgs); !(yieldArgs && yieldArgs.skipToDate) && !stream.done && stream.value.isEqual(lastValue);)
                        stream.next();
                } }
                calculateIsInfinite() { return !!(this.config.base && this.config.base.isInfinite); }
                calculateHasDuration() { return !!(this.config.base && this.config.base.hasDuration); }
            }
            class Schedule extends ScheduleBase {
                constructor(options1 = {}) { for (let prop of (super(options1), this.rrules = [], this.exrules = [], ["rrules", "exrules"])) {
                    let arg = options1[prop];
                    arg && (this[prop] = arg.map(ruleArgs => ruleArgs instanceof Rule ? ruleArgs.set("timezone", this.timezone) : new Rule(ruleArgs, { timezone: this.timezone })));
                } for (let prop of ["rdates", "exdates"]) {
                    let arg = options1[prop];
                    arg ? this[prop] = arg instanceof Dates ? arg.set("timezone", this.timezone) : new Dates({ dates: arg, timezone: this.timezone }) : this[prop] = new Dates({ timezone: this.timezone });
                } this.hasDuration = this.rrules.every(rule => rule.hasDuration) && this.exrules.every(rule => rule.hasDuration) && this.rdates.hasDuration && this.exdates.hasDuration, this.isInfinite = this.rrules.some(rule => rule.isInfinite), this.occurrenceStream = [add(...this.rrules), subtract(...this.exrules), add(this.rdates), subtract(this.exdates), unique()].reduce((prev, curr) => curr({ base: prev, timezone: this.timezone }), void 0); }
                add(prop, value) { let rrules = this.rrules.slice(), exrules = this.exrules.slice(), rdates = this.rdates, exdates = this.exdates; switch (prop) {
                    case "rrule":
                        rrules.push(value);
                        break;
                    case "exrule":
                        exrules.push(value);
                        break;
                    case "rdate":
                        rdates = this.rdates.add(value);
                        break;
                    case "exdate": exdates = this.exdates.add(value);
                } return new Schedule({ timezone: this.timezone, data: this.data, rrules, exrules, rdates, exdates }); }
                remove(prop, value) { let rrules = this.rrules, exrules = this.exrules, rdates = this.rdates, exdates = this.exdates; switch (prop) {
                    case "rrule":
                        rrules = rrules.filter(rule => rule !== value);
                        break;
                    case "exrule":
                        exrules = exrules.filter(rule => rule !== value);
                        break;
                    case "rdate":
                        rdates = this.rdates.remove(value);
                        break;
                    case "exdate": exdates = this.exdates.remove(value);
                } return new Schedule({ timezone: this.timezone, data: this.data, rrules, exrules, rdates, exdates }); }
                set(prop, value, options1 = {}) { let timezone = this.timezone, rrules = this.rrules, exrules = this.exrules, rdates = this.rdates, exdates = this.exdates; switch (prop) {
                    case "timezone":
                        if (value === this.timezone && !options1.keepLocalTime)
                            return this;
                        options1.keepLocalTime && (rrules = rrules.map(rule => rule.set("timezone", value, options1)), exrules = exrules.map(rule => rule.set("timezone", value, options1)), rdates = rdates.set("timezone", value, options1), exdates = exdates.set("timezone", value, options1)), timezone = value;
                        break;
                    case "rrules":
                        rrules = value;
                        break;
                    case "exrules":
                        exrules = value;
                        break;
                    case "rdates":
                        rdates = value;
                        break;
                    case "exdates": exdates = value;
                } return new Schedule({ timezone, data: this.data, rrules, exrules, rdates, exdates }); }
            }
            function intersection(args) { return options1 => new IntersectionOperator(args, options1); }
            class IntersectionOperator extends Operator {
                constructor(args, config) { if (super(args.streams, config), this.isInfinite && (this.maxFailedIterations = args.maxFailedIterations || IntersectionOperator.defaultMaxFailedIterations, !this.maxFailedIterations))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError('The IntersectionOperator must be provided a `maxFailedIterations` argument when it is built from schedules of infinite length. This argument is used to ensure that the IntersectionOperator does not enter an infinite loop because the underlying schedules never intersect. If the `maxFailedIterations` count is reached it will be assumed that all valid occurrences have been found and iteration will end without error.Without additional information, "50" is probably a good `maxFailedIterations` value. If the schedules are not of infinite length, `maxFailedIterations` is ignored. Note also that you can provide a `defaultMaxFailedIterations` number via IntersectionOperator.defaultMaxFailedIterations.'); }
                set(_, value) { return new IntersectionOperator({ maxFailedIterations: this.maxFailedIterations, streams: this.streams.map(stream => stream.set("timezone", value)) }, Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                *_run(args = {}) { let streams = this.streams.map(stream => new IterableWrapper(stream, args)); if (this.config.base && streams.push(new IterableWrapper(this.config.base, args)), 0 === streams.length)
                    return; let hasEndDate = !!(!this.isInfinite || args.reverse || args.end); if (!cycleStreams$1(streams, void 0, Object.assign(Object.assign({}, args), { hasEndDate, iteration: 0, maxIterations: this.maxFailedIterations })))
                    return; let stream = selectNextIterable(streams, args); for (; stream;) {
                    let yieldArgs = yield this.normalizeRunOutput(stream.value), lastValidDate = stream.value;
                    if ((null == yieldArgs ? void 0 : yieldArgs.skipToDate) || stream.next(), !cycleStreams$1(streams, lastValidDate, Object.assign(Object.assign({}, args), { hasEndDate, iteration: 0, maxIterations: this.maxFailedIterations }), yieldArgs))
                        return;
                    stream = selectNextIterable(streams, args);
                } }
                calculateIsInfinite() { return this.config.base ? 0 === this.streams.length ? this.config.base.isInfinite : this.config.base.isInfinite && this.streams.every(stream => stream.isInfinite) : 0 !== this.streams.length && this.streams.every(stream => stream.isInfinite); }
                calculateHasDuration() { let streamsDuration = this.streams.every(stream => stream.hasDuration); return this.config.base ? this.config.base.hasDuration && streamsDuration : streamsDuration; }
            }
            function cycleStreams$1(streams, lastValidDate, options1, yieldArgs) { let next = selectNextIterable(streams, options1, yieldArgs); if (!next)
                return !1; if (lastValidDate && next.value.isEqual(lastValidDate))
                return !0; if (streams.some(stream => stream.done))
                return !1; if (streams.every(stream => stream.value.isEqual(next.value)))
                return !0; if (options1.iteration++, options1.maxIterations && !options1.hasEndDate && options1.iteration > options1.maxIterations)
                return !1; let last = function (streams, options1 = {}, yieldArgs = {}) { return processYieldArgs(streams, options1, yieldArgs), streams.sort(options1.reverse ? streamsReverseComparer : streamsComparer).filter(s => !s.done).pop(); }(streams, options1); return streams.forEach(stream => { last.value.isEqual(stream.value) || stream.next({ skipToDate: last.value }); }), cycleStreams$1(streams, lastValidDate, options1); }
            class DurationIterableWrapper extends IterableWrapper {
                constructor(generator, runArgs) { super(generator, runArgs), this.workingValue = this.value, this.next(); }
            }
            class MergeDurationOperatorError extends Error {
            }
            function mergeDuration(args) { return options1 => new MergeDurationOperator(args, options1); }
            class MergeDurationOperator extends Operator {
                constructor(args, config) { if (super([], config), this.maxDuration = args.maxDuration, config.base && !config.base.hasDuration)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError("Base stream provided to MergeDurationOperator does not have an associated duration. The MergeDurationOperator can only be used with streams which have a duration. "); }
                set(_, value) { return new MergeDurationOperator({ maxDuration: this.maxDuration }, Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                _run(args = {}) { return args.reverse ? this.reverseRun(args) : this.forwardRun(args); }
                calculateIsInfinite() { return !!(this.config.base && this.config.base.isInfinite); }
                calculateHasDuration() { return !0; }
                *forwardRun(args = {}) { let yieldArgs; if (!this.config.base)
                    return; let checkFromStart = args.start; args.start && (checkFromStart = args.start.subtract(this.maxDuration, "millisecond")); let checkFromEnd = args.end; args.end && (checkFromEnd = args.end.add(this.maxDuration, "millisecond")); let stream = new DurationIterableWrapper(this.config.base, Object.assign(Object.assign({}, args), { start: checkFromStart, end: checkFromEnd })); for (; stream.workingValue;) {
                    for (; !stream.done && stream.workingValue.end.isAfterOrEqual(stream.value);) {
                        if (stream.workingValue.duration > this.maxDuration)
                            throw new MergeDurationOperatorError("MergeDurationOperatorError: Occurrence duration exceeded maxDuration of " + this.maxDuration);
                        if (stream.value.end.isAfter(stream.workingValue.end)) {
                            let diff = stream.value.end.valueOf() - stream.workingValue.end.valueOf();
                            stream.workingValue = stream.workingValue.set("duration", stream.workingValue.duration + diff);
                        }
                        stream.next();
                    }
                    if (args.start && stream.workingValue.end.isBefore(args.start) || (null == yieldArgs ? void 0 : yieldArgs.skipToDate) && stream.workingValue.end.isBefore(yieldArgs.skipToDate)) {
                        stream.workingValue = stream.value, stream.next();
                        continue;
                    }
                    if (args.end && stream.workingValue && stream.workingValue.isAfter(args.end))
                        break;
                    if (stream.workingValue.duration > this.maxDuration)
                        throw new MergeDurationOperatorError("MergeDurationOperatorError: Occurrence duration exceeded maxDuration of " + this.maxDuration);
                    if ((null == (yieldArgs = yield this.normalizeRunOutput(stream.workingValue)) ? void 0 : yieldArgs.skipToDate) && stream.workingValue.isAfterOrEqual(yieldArgs.skipToDate))
                        throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    stream.workingValue = stream.value, stream.next();
                } }
                *reverseRun(args = {}) { let yieldArgs; if (!this.config.base)
                    return; let checkFromStart = args.start; args.start && (checkFromStart = args.start.subtract(this.maxDuration, "millisecond")); let checkFromEnd = args.end; args.end && (checkFromEnd = args.end.add(this.maxDuration, "millisecond")); let stream = new DurationIterableWrapper(this.config.base, Object.assign(Object.assign({}, args), { start: checkFromStart, end: checkFromEnd })); for (; stream.workingValue;) {
                    for (; !stream.done && stream.workingValue.isBeforeOrEqual(stream.value.end);) {
                        if (stream.workingValue.duration > this.maxDuration)
                            throw new MergeDurationOperatorError("MergeDurationOperatorError: Occurrence duration exceeded maxDuration of " + this.maxDuration);
                        if (stream.value.isBefore(stream.workingValue) || stream.value.end.isAfter(stream.workingValue.end))
                            if (stream.value.end.isAfter(stream.workingValue.end))
                                stream.workingValue = stream.value;
                            else {
                                let diff = stream.workingValue.valueOf() - stream.value.valueOf();
                                stream.workingValue = stream.value.set("duration", stream.workingValue.duration + diff);
                            }
                        stream.next();
                    }
                    if (args.start && stream.workingValue.end.isBefore(args.start))
                        break;
                    if (yieldArgs && yieldArgs.skipToDate && stream.workingValue.end.isBefore(yieldArgs.skipToDate) || args.end && stream.workingValue && stream.workingValue.isAfter(args.end)) {
                        stream.workingValue = stream.value, stream.next();
                        continue;
                    }
                    if (stream.workingValue.duration > this.maxDuration)
                        throw new MergeDurationOperatorError("MergeDurationOperatorError: Occurrence duration exceeded maxDuration of " + this.maxDuration);
                    if ((yieldArgs = yield this.normalizeRunOutput(stream.workingValue)) && yieldArgs.skipToDate && stream.workingValue.end.isBeforeOrEqual(yieldArgs.skipToDate))
                        throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    stream.workingValue = stream.value, stream.next();
                } }
            }
            class SplitDurationOperatorError extends Error {
            }
            function splitDuration(args) { return options1 => new SplitDurationOperator(args, options1); }
            class SplitDurationOperator extends Operator {
                constructor(args, config) { if (super([], config), this.splitFn = args.splitFn, this.maxDuration = args.maxDuration, config.base && !config.base.hasDuration)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError("Base stream provided to SplitDurationOperator does not have an associated duration. The SplitDurationOperator can only be used with streams which have a duration."); }
                set(_, value) { return new SplitDurationOperator({ maxDuration: this.maxDuration, splitFn: this.splitFn }, Object.assign(Object.assign({}, this.config), { base: this.config.base && this.config.base.set("timezone", value), timezone: value })); }
                *_run(args = {}) { let yieldArgs; if (!this.config.base)
                    return; let reverse = args.reverse || !1, checkFromStart = args.start; args.start && (checkFromStart = args.start.subtract(this.maxDuration, "millisecond")); let checkFromEnd = args.end; args.end && (checkFromEnd = args.end.add(this.maxDuration, "millisecond")); let stream = new IterableWrapper(this.config.base, Object.assign(Object.assign({}, args), { start: checkFromStart, end: checkFromEnd })), datesBucket = []; for (; !stream.done || datesBucket[0] && datesBucket[0][0];) {
                    var date, options1, date1, skipToDate;
                    for (datesBucket[0] && datesBucket[0][0] || (datesBucket.push(this.splitDate(stream.value, reverse)), stream.next()); !stream.done && (reverse ? datesBucket[0].some(date => date.isBeforeOrEqual(stream.value.end)) : datesBucket[0].some(date => date.isAfterOrEqual(stream.value)));)
                        datesBucket.push(this.splitDate(stream.value, reverse)), stream.next();
                    let selectedDate = datesBucket[0] && datesBucket[0][0], bucketIndex = -1, selectedBucketIndex = 0, dateIndex = -1, selectedDateIndex = 0;
                    for (let bucket of datesBucket)
                        for (let date of (bucketIndex++, dateIndex = -1, bucket)) {
                            let dateShouldComeNext;
                            if (dateIndex++, reverse ? date.isAfter(selectedDate) || date.isEqual(selectedDate) && date.duration > selectedDate.duration : date.isBefore(selectedDate) || date.isEqual(selectedDate) && date.duration < selectedDate.duration) {
                                selectedDate = date, selectedBucketIndex = bucketIndex, selectedDateIndex = dateIndex;
                                break;
                            }
                        }
                    if (datesBucket[selectedBucketIndex].splice(selectedDateIndex, 1), 0 === datesBucket[selectedBucketIndex].length && datesBucket.splice(selectedBucketIndex, 1), !yieldArgs || !yieldArgs.skipToDate || !selectedDate || (date = selectedDate, (options1 = args).reverse ? options1.start && date.isBefore(options1.start) : options1.end && date.isAfter(options1.end)) || (date1 = selectedDate, skipToDate = yieldArgs.skipToDate, args.reverse ? skipToDate.isAfterOrEqual(date1) : skipToDate.isBeforeOrEqual(date1))) {
                        if (args.start && selectedDate.end.isBefore(args.start)) {
                            if (reverse)
                                break;
                            continue;
                        }
                        if (args.end && selectedDate.isAfter(args.end)) {
                            if (reverse)
                                continue;
                            break;
                        }
                        if (selectedDate.duration > this.maxDuration)
                            throw new SplitDurationOperatorError("SplitDurationOperatorError: Occurrence duration exceeded maxDuration of " + this.maxDuration);
                        if ((yieldArgs = yield this.normalizeRunOutput(selectedDate)) && yieldArgs.skipToDate && (args.reverse ? selectedDate.isBeforeOrEqual(yieldArgs.skipToDate) : selectedDate.isAfterOrEqual(yieldArgs.skipToDate)))
                            throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    }
                } }
                calculateIsInfinite() { return !!(this.config.base && this.config.base.isInfinite); }
                calculateHasDuration() { return !0; }
                splitDate(date, reverse) { let valid, dates = this.splitFn(date); if (!(0 !== dates.length && (1 === dates.length ? date.duration === dates[0].duration : date.duration === dates.reduce((prev, curr) => prev + curr.duration, 0))))
                    throw Error("The provided SplitDurationOperator split function must return an array of DateTimes with length > 0 where the total duration of the new dates equals the duration of the original date."); return dates.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer), reverse && dates.reverse(), dates; }
            }
        }, "./node_modules/@rschedule/core/es2015/main.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            var DateAdapter;
            let dateAdapterConfig;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ArgumentError: () => ArgumentError, DateAdapter: () => DateAdapter, DateAdapterBase: () => DateAdapterBase, DateTime: () => DateTime, InfiniteLoopError: () => InfiniteLoopError, InvalidDateAdapterError: () => InvalidDateAdapterError, InvalidDateTime: () => InvalidDateTime, InvalidDateTimeError: () => InvalidDateTimeError, RecurrenceRuleError: () => RecurrenceRuleError, RecurrenceRulesIterator: () => RecurrenceRulesIterator, RuleOptionError: () => RuleOptionError, ValidDateTime: () => ValidDateTime, cloneJSON: () => cloneJSON, cloneRuleOptions: () => cloneRuleOptions, dateInputToDateAdapter: () => dateInputToDateAdapter, dateInputToDateTime: () => dateInputToDateTime, dateTimeSortComparer: () => dateTimeSortComparer, freqToGranularity: () => freqToGranularity, getDaysInYear: () => getDaysInYear, getDifferenceBetweenWeekdays: () => getDifferenceBetweenWeekdays, isLeapYear: () => isLeapYear, normalizeDateTimeTimezone: () => normalizeDateTimeTimezone, normalizeRuleOptions: () => normalizeRuleOptions, numberSortComparer: () => numberSortComparer, orderedWeekdays: () => orderedWeekdays, recurrenceRulesReducer: () => recurrenceRulesReducer, uniqDateTimes: () => uniqDateTimes });
            class InvalidDateAdapterError extends Error {
            }
            class DateAdapterBase {
                constructor(_date, options1) { if (this.metadata = {}, this.duration = options1 && options1.duration || 0, this.generators = options1 && options1.generators && options1.generators.slice() || [], !Number.isInteger(this.duration) || this.duration < 0)
                    throw new InvalidDateAdapterError("duration must be a non-negative integer"); }
                static set adapter(value) { if (dateAdapterConfig)
                    throw Error(`"${dateAdapterConfig.name}" has already been configured.`); dateAdapterConfig = value; }
                static get adapter() { if (!dateAdapterConfig)
                    throw Error("No date adapter has been configured. See rSchedule docs."); return dateAdapterConfig; }
                static isDate(_object) { throw unimplementedError("isDate()"); }
                static fromDate(_date, _options) { throw unimplementedError("fromDate()"); }
                static fromJSON(_json) { throw unimplementedError("fromJSON()"); }
                static fromDateTime(_datetime) { throw unimplementedError("fromDateTime()"); }
                toISOString() { return this.set("timezone", "UTC").toDateTime().toISOString(); }
                toDateTime() { return DateTime.fromJSON(Object.assign(Object.assign({}, this.toJSON()), { generators: this.generators, metadata: this.metadata })); }
            }
            function unimplementedError(name) { return Error(`You must implement the "${name}" method for this DateAdapter class`); }
            DateAdapterBase.hasTimezoneSupport = !1, function (DateAdapter) { DateAdapter.WEEKDAYS = ["SU", "MO", "TU", "WE", "TH", "FR", "SA"], DateAdapter.MILLISECONDS_IN_SECOND = 1e3, DateAdapter.MILLISECONDS_IN_MINUTE = 60 * DateAdapter.MILLISECONDS_IN_SECOND, DateAdapter.MILLISECONDS_IN_HOUR = 60 * DateAdapter.MILLISECONDS_IN_MINUTE, DateAdapter.MILLISECONDS_IN_DAY = 24 * DateAdapter.MILLISECONDS_IN_HOUR, DateAdapter.MILLISECONDS_IN_WEEK = 7 * DateAdapter.MILLISECONDS_IN_DAY; }(DateAdapter || (DateAdapter = {}));
            class InvalidDateTimeError extends Error {
            }
            class DateTime {
                constructor(date, timezone, duration, generators, options1 = {}) { if (this.metadata = {}, this.date = new Date(date), this.timezone = timezone || null, this.duration = duration || 0, this.generators = generators && generators.slice() || [], !Number.isInteger(this.duration) || this.duration < 0)
                    throw new InvalidDateTimeError("duration must be a non-negative integer"); options1.metadata && Object.assign(this.metadata, options1.metadata), this.assertIsValid(); }
                static fromJSON(json) { return new DateTime(new Date(Date.UTC(json.year, json.month - 1, json.day, json.hour, json.minute, json.second, json.millisecond)), json.timezone, json.duration, json.generators, { metadata: json.metadata }); }
                static fromDateAdapter(adapter) { return DateTime.fromJSON(Object.assign(Object.assign({}, adapter.toJSON()), { generators: adapter.generators, metadata: adapter.metadata })); }
                get end() { if (this.duration)
                    return this._end || (this._end = this.add(this.duration, "millisecond")), this._end; }
                isEqual(object) { return !!object && (assertSameTimeZone(this, object), this.valueOf() === object.valueOf()); }
                isBefore(object) { return assertSameTimeZone(this, object), this.valueOf() < object.valueOf(); }
                isBeforeOrEqual(object) { return assertSameTimeZone(this, object), this.valueOf() <= object.valueOf(); }
                isAfter(object) { return assertSameTimeZone(this, object), this.valueOf() > object.valueOf(); }
                isAfterOrEqual(object) { return assertSameTimeZone(this, object), this.valueOf() >= object.valueOf(); }
                isOccurring(object) { if (!this.duration)
                    throw Error("DateTime#isOccurring() is only applicable to DateTimes with durations"); return assertSameTimeZone(this, object), object.isAfterOrEqual(this) && object.isBeforeOrEqual(this.add(this.duration, "millisecond")); }
                add(amount, unit) { switch (unit) {
                    case "generator": {
                        let generators = this.generators.slice();
                        return generators.unshift(amount), new DateTime(this.date, this.timezone, this.duration, generators);
                    }
                    case "year":
                        var date;
                        return this.forkDateTime((date = this.date, addUTCMonths(date, 12 * toInteger(amount))));
                    case "month": return this.forkDateTime(addUTCMonths(this.date, amount));
                    case "week": return this.forkDateTime(function (date, input) { return addUTCDays(date, 7 * toInteger(input)); }(this.date, amount));
                    case "day": return this.forkDateTime(addUTCDays(this.date, amount));
                    case "hour": return this.forkDateTime(addUTCHours(this.date, amount));
                    case "minute": return this.forkDateTime(addUTCMinutes(this.date, amount));
                    case "second": return this.forkDateTime(addUTCSeconds(this.date, amount));
                    case "millisecond": return this.forkDateTime(addUTCMilliseconds(this.date, amount));
                    default: throw Error("Invalid unit provided to `DateTime#add`");
                } }
                subtract(amount, unit) { var date, date1, date2, date3, date4, date5, date6, date7; switch (unit) {
                    case "year": return this.forkDateTime((date = this.date, addUTCMonths(date, 12 * toInteger(-amount))));
                    case "month": return this.forkDateTime((date1 = this.date, addUTCMonths(date1, -amount)));
                    case "week": return this.forkDateTime((date2 = this.date, function (date, input) { return addUTCDays(date, 7 * toInteger(input)); }(date2, -amount)));
                    case "day": return this.forkDateTime((date3 = this.date, addUTCDays(date3, -amount)));
                    case "hour": return this.forkDateTime((date4 = this.date, addUTCHours(date4, -amount)));
                    case "minute": return this.forkDateTime((date5 = this.date, addUTCMinutes(date5, -amount)));
                    case "second": return this.forkDateTime((date6 = this.date, addUTCSeconds(date6, -amount)));
                    case "millisecond": return this.forkDateTime((date7 = this.date, addUTCMilliseconds(date7, -amount)));
                    default: throw Error("Invalid unit provided to `DateTime#subtract`");
                } }
                get(unit) { switch (unit) {
                    case "year": return this.date.getUTCFullYear();
                    case "month": return this.date.getUTCMonth() + 1;
                    case "yearday":
                        var now = this.date;
                        let start = new Date(Date.UTC(now.getUTCFullYear(), 0, 1));
                        return 1 + Math.floor((now.valueOf() - start.valueOf()) / DateAdapter.MILLISECONDS_IN_DAY);
                    case "weekday": return DateAdapter.WEEKDAYS[this.date.getUTCDay()];
                    case "day": return this.date.getUTCDate();
                    case "hour": return this.date.getUTCHours();
                    case "minute": return this.date.getUTCMinutes();
                    case "second": return this.date.getUTCSeconds();
                    case "millisecond": return this.date.getUTCMilliseconds();
                    default: throw Error("Invalid unit provided to `DateTime#set`");
                } }
                set(unit, value) { if ("duration" === unit)
                    return new DateTime(this.date, this.timezone, value, this.generators); if ("generators" === unit)
                    return new DateTime(this.date, this.timezone, this.duration, value); let date = new Date(this.date); switch (unit) {
                    case "year":
                        date.setUTCFullYear(value);
                        break;
                    case "month": {
                        let length = monthLength(value, date.getUTCFullYear());
                        date.getUTCDate() > length ? (date.setUTCDate(1), date.setUTCMonth(value), date = addUTCDays(date, -1)) : date.setUTCMonth(value - 1);
                        break;
                    }
                    case "day":
                        date.setUTCDate(value);
                        break;
                    case "hour":
                        date.setUTCHours(value);
                        break;
                    case "minute":
                        date.setUTCMinutes(value);
                        break;
                    case "second":
                        date.setUTCSeconds(value);
                        break;
                    case "millisecond":
                        date.setUTCMilliseconds(value);
                        break;
                    default: throw Error("Invalid unit provided to `DateTime#set`");
                } return this.forkDateTime(date); }
                granularity(granularity, opt = {}) { let date = this.forkDateTime(this.date); switch (granularity) {
                    case "year": date = date.set("month", 1);
                    case "month":
                        date = date.set("day", 1);
                        break;
                    case "week": date = function (date, wkst) { let index = orderedWeekdays(wkst).indexOf(date.get("weekday")); return date.subtract(index, "day"); }(date, opt.weekStart);
                } switch (granularity) {
                    case "year":
                    case "month":
                    case "week":
                    case "day": date = date.set("hour", 0);
                    case "hour": date = date.set("minute", 0);
                    case "minute": date = date.set("second", 0);
                    case "second": date = date.set("millisecond", 0);
                    case "millisecond": return date;
                    default: throw Error("Invalid granularity provided to `DateTime#granularity`: " + granularity);
                } }
                endGranularity(granularity, opt = {}) { let date = this.forkDateTime(this.date); switch (granularity) {
                    case "year": date = date.set("month", 12);
                    case "month":
                        date = date.set("day", monthLength(date.get("month"), date.get("year")));
                        break;
                    case "week": date = function (date, wkst) { let index = orderedWeekdays(wkst).indexOf(date.get("weekday")); return date.add(6 - index, "day"); }(date, opt.weekStart);
                } switch (granularity) {
                    case "year":
                    case "month":
                    case "week":
                    case "day": date = date.set("hour", 23);
                    case "hour": date = date.set("minute", 59);
                    case "minute": date = date.set("second", 59);
                    case "second": date = date.set("millisecond", 999);
                    case "millisecond": return date;
                    default: throw Error("Invalid granularity provided to `DateTime#granularity`: " + granularity);
                } }
                toISOString() { return this.date.toISOString(); }
                toDateTime() { return this; }
                toJSON() { let json = { timezone: this.timezone, year: this.get("year"), month: this.get("month"), day: this.get("day"), hour: this.get("hour"), minute: this.get("minute"), second: this.get("second"), millisecond: this.get("millisecond") }; return this.duration && (json.duration = this.duration), json; }
                valueOf() { return this.date.valueOf(); }
                assertIsValid() { if (isNaN(this.valueOf()))
                    throw new InvalidDateTimeError("DateTime has invalid date."); return !0; }
                forkDateTime(date) { return new DateTime(date, this.timezone, this.duration, this.generators); }
            }
            function assertSameTimeZone(x, y) { if (x.timezone !== y.timezone)
                throw new InvalidDateTimeError("Attempted to compare a datetime to another date in a different timezone: " + JSON.stringify(x) + " and " + JSON.stringify(y)); return !0; }
            function dateTimeSortComparer(a, b) { if (a.isAfter(b))
                return 1; if (a.isBefore(b))
                return -1; if (a.duration && b.duration) {
                if (a.duration > b.duration)
                    return 1;
                if (a.duration < b.duration)
                    return -1;
            } return 0; }
            function uniqDateTimes(dates) { return Array.from(new Map(dates.map(date => [date.toISOString(), date])).values()); }
            function orderedWeekdays(wkst = "SU") { let wkdays = DateAdapter.WEEKDAYS.slice(), index = wkdays.indexOf(wkst); for (; 0 !== index;)
                (function (array, from = "first") { 0 === array.length || ("first" === from ? array.push(array.shift()) : array.unshift(array.pop())); })(wkdays), index--; return wkdays; }
            function getDifferenceBetweenWeekdays(x, y) { if (x === y)
                return 0; let result = DateAdapter.WEEKDAYS.indexOf(x) - DateAdapter.WEEKDAYS.indexOf(y); return result > 0 ? 7 - result : Math.abs(result); }
            function monthLength(month, year) { return ({ 1: 31, 2: isLeapYear(year) ? 29 : 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31 })[month]; }
            function isLeapYear(year) { return year % 400 == 0 || year % 4 == 0 && year % 100 != 0; }
            function getDaysInYear(year) { return isLeapYear(year) ? 366 : 365; }
            function toInteger(input) { if (null === input || !0 === input || !1 === input)
                return NaN; let int = Number(input); return isNaN(int) ? int : int < 0 ? Math.ceil(int) : Math.floor(int); }
            function addMilliseconds(dirtyDate, dirtyAmount) { if (arguments.length < 2)
                throw TypeError("2 arguments required, but only " + arguments.length + " present"); return new Date(dirtyDate.valueOf() + toInteger(dirtyAmount)); }
            function addUTCMonths(date, input) { let amount = toInteger(input), desiredMonth = (date = new Date(date)).getUTCMonth() + amount, dateWithDesiredMonth = new Date(0); dateWithDesiredMonth.setUTCFullYear(date.getUTCFullYear(), desiredMonth, 1), dateWithDesiredMonth.setUTCHours(0, 0, 0, 0); let daysInMonth = monthLength(dateWithDesiredMonth.getUTCMonth() + 1, dateWithDesiredMonth.getUTCFullYear()); return date.setUTCMonth(desiredMonth, Math.min(daysInMonth, date.getUTCDate())), date; }
            function addUTCWeeks(date, input) { return addUTCDays(date, 7 * toInteger(input)); }
            function addUTCDays(date, input) { return addUTCMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_DAY); }
            function addUTCHours(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_HOUR); }
            function addUTCMinutes(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_MINUTE); }
            function addUTCSeconds(date, input) { return addMilliseconds(date, toInteger(input) * DateAdapter.MILLISECONDS_IN_SECOND); }
            function addUTCMilliseconds(date, input) { let amount = toInteger(input); return new Date(date.getTime() + amount); }
            class ArgumentError extends Error {
            }
            class InfiniteLoopError extends Error {
            }
            function numberSortComparer(a, b) { return a > b ? 1 : b > a ? -1 : 0; }
            function freqToGranularity(freq) { switch (freq) {
                case "YEARLY": return "year";
                case "MONTHLY": return "month";
                case "WEEKLY": return "week";
                case "DAILY": return "day";
                case "HOURLY": return "hour";
                case "MINUTELY": return "minute";
                case "SECONDLY": return "second";
                case "MILLISECONDLY": return "millisecond";
                default: throw Error("unknown freq passed to freqToGranularity()");
            } }
            function cloneJSON(json) { return JSON.parse(JSON.stringify(json)); }
            function dateInputToDateAdapter(date) { return date instanceof DateTime ? DateAdapterBase.adapter.fromDateTime(date) : date instanceof DateAdapterBase ? date : DateAdapterBase.adapter.fromDate(date); }
            function dateInputToDateTime(date, timezone) { return date instanceof DateTime ? date.timezone !== timezone ? DateAdapterBase.adapter.fromDateTime(date).set("timezone", timezone).toDateTime() : date : date instanceof DateAdapterBase ? date.set("timezone", timezone).toDateTime() : DateAdapterBase.adapter.fromDate(date).set("timezone", timezone).toDateTime(); }
            function normalizeDateTimeTimezone(date, timezone) { return date.timezone !== timezone ? DateAdapterBase.adapter.fromDateTime(date).set("timezone", timezone).toDateTime() : date; }
            class RuleOptionError extends Error {
            }
            function normalizeRuleOptions(recurrenceModules, options1) { let normOptions = function (options1) { let start, end; if (options1.start instanceof DateTime)
                start = options1.start;
            else if (options1.start instanceof DateAdapterBase)
                start = options1.start.toDateTime();
            else if (DateAdapterBase.adapter.isDate(options1.start))
                start = DateAdapterBase.adapter.fromDate(options1.start).toDateTime();
            else
                throw new RuleOptionError('"start" must be either a `DateAdapter` instance or an instance of the date a DateAdapter is wrapping (e.g. `StandardDateAdapter` wraps a `Date`)'); if (options1.end)
                if (options1.end instanceof DateTime)
                    end = options1.end;
                else if (options1.end instanceof DateAdapterBase)
                    end = options1.end.toDateTime();
                else if (DateAdapterBase.adapter.isDate(options1.end))
                    end = DateAdapterBase.adapter.fromDate(options1.end).toDateTime();
                else
                    throw new RuleOptionError('"end" must be either be `undefined`, a `DateAdapter` instance, or an instance of the date a DateAdapter is wrapping (e.g. `StandardDateAdapter` wraps a `Date`)'); if (void 0 !== options1.duration) {
                if (!Number.isInteger(options1.duration))
                    throw new RuleOptionError('"duration" expects a whole number');
                if (options1.duration <= 0)
                    throw new RuleOptionError('"duration" must be greater than 0');
            } if (void 0 !== options1.count) {
                if (!Number.isInteger(options1.count))
                    throw new RuleOptionError('"count" must be a whole number');
                if (options1.count < 0)
                    throw new RuleOptionError('"count" must be greater than 0');
            } if (void 0 !== options1.end && void 0 !== options1.count)
                throw new RuleOptionError('"end" and "count" cannot both be present'); return { start, end, count: options1.count, duration: options1.duration }; }(options1), startOptions = cloneJSON(options1); return recurrenceModules.forEach(mod => { mod.normalizeOptions(startOptions, normOptions); }), Object.keys(normOptions).forEach(key => { void 0 === normOptions[key] && delete normOptions[key]; }), normOptions; }
            function cloneRuleOptions(options1) { let obj = cloneJSON(options1); return obj.start = options1.start, options1.end && (obj.end = options1.end), obj; }
            class RecurrenceRuleError extends Error {
            }
            class ValidDateTime {
                constructor(date) { this.date = date; }
            }
            class InvalidDateTime {
                constructor(date) { this.date = date; }
            }
            function recurrenceRulesReducer(rules) { return iterator => rules.reduce((prev, curr) => { let rule = curr.get(iterator); return rule && prev.push(rule), prev; }, []); }
            class RecurrenceRulesIterator {
                constructor(recurrenceRules, options1, args) { this.options = options1, this.args = args, this.rules = [], this.iterator = void 0 === this.options.count ? this.iterate() : this.args.reverse ? this.iterateWithReverseCount() : this.iterateWithCount(), this.options = Object.assign(Object.assign({}, cloneJSON(options1)), { start: options1.start, end: options1.end }), this.reverse = void 0 === this.options.count && args.reverse || !1; let { start, end } = this.normalizeDateTimeArgs(args); if (void 0 !== options1.count ? this.start = options1.start : start && options1.start ? this.start = start.isAfterOrEqual(options1.start) ? start : options1.start : this.start = start || options1.start, end && options1.end ? this.end = end.isBeforeOrEqual(options1.end) ? end : options1.end : this.end = end || options1.end, this.args.reverse && !(void 0 !== options1.count || this.end))
                    throw Error("When iterating in reverse, the rule must have an `end` or `count` property or you must provide an `end` argument."); this.isInfinite = !this.end && void 0 === this.options.count, this.hasDuration = !!this.options.duration, this.rules = Array.isArray(recurrenceRules) ? recurrenceRules : recurrenceRules(this); }
                [Symbol.iterator]() { return this.iterator; }
                next(args) { return this.iterator.next(args); }
                *iterateWithReverseCount() { let yieldArgs, dateCache = Array.from(this.iterateWithCount()).reverse().slice(), date = dateCache.shift(); for (; date;) {
                    if (yieldArgs && yieldArgs.skipToDate && date.isAfter(yieldArgs.skipToDate)) {
                        date = dateCache.shift();
                        continue;
                    }
                    if ((yieldArgs = yield date) && yieldArgs.skipToDate && yieldArgs.skipToDate.isAfterOrEqual(date))
                        throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    date = dateCache.shift();
                } }
                *iterateWithCount() { let yieldArgs; if (0 === this.options.count)
                    return; let iterable = this.iterate(), start = this.args.start || this.start, date = iterable.next().value, index = 1; for (; date && index <= this.options.count;) {
                    if (index++, date.isBefore(start) || yieldArgs && yieldArgs.skipToDate && date.isBefore(yieldArgs.skipToDate)) {
                        date = iterable.next().value;
                        continue;
                    }
                    if ((yieldArgs = yield date) && yieldArgs.skipToDate && yieldArgs.skipToDate.isBeforeOrEqual(date))
                        throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                    date = iterable.next().value;
                } }
                *iterate() { let startingDate = this.start; this.reverse && (startingDate = this.end); let date = this.nextDate(startingDate); for (; date;) {
                    let args = yield this.normalizeRunOutput(date);
                    if (args && args.skipToDate) {
                        if (this.reverse ? args.skipToDate.isAfterOrEqual(date) : args.skipToDate.isBeforeOrEqual(date))
                            throw Error("A provided `skipToDate` option must be greater than the last yielded date (or smaller, in the case of reverse iteration)");
                        date = this.nextDate(args.skipToDate);
                    }
                    else
                        date = this.nextDate(this.reverse ? date.subtract(1, "millisecond") : date.add(1, "millisecond"));
                } }
                nextDate(start) { let result = this.runRules(start.set("generators", [])); if (this.isDatePastEnd(result.date))
                    return null; let index = 0; for (; result instanceof InvalidDateTime && index < 50;) {
                    if (result = this.runRules(result.date), this.isDatePastEnd(result.date))
                        return null;
                    index++;
                } if (result instanceof InvalidDateTime)
                    throw new RecurrenceRuleError(`Failed to find a matching occurrence in ${index} iterations. Last iterated date: "${result.date.toISOString()}"`); if (this.reverse ? start.isBefore(result.date) : start.isAfter(result.date))
                    throw new RecurrenceRuleError("An error occurred in a recurrence rule. If this happened using the rSchedule provided recurrence rules, you should open an issue in the rSchedule repo. The maintainer is going to want to know how to recreate the error."); return result.date; }
                runRules(start) { let result = new ValidDateTime(start); for (let rule of this.rules) {
                    if (result instanceof InvalidDateTime)
                        break;
                    result = rule.run(result.date);
                } return result; }
                isDatePastEnd(date) { return this.reverse ? date.isBefore(this.start) : this.end && date.isAfter(this.end); }
                normalizeRunOutput(date) { return this.hasDuration ? date.set("duration", this.options.duration) : date; }
                normalizeDateTimeArgs(args) { return { start: args.start && normalizeDateTimeTimezone(args.start, this.options.start.timezone), end: args.end && normalizeDateTimeTimezone(args.end, this.options.start.timezone) }; }
            }
        }, "./node_modules/@rschedule/core/es2015/rules.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ByDayOfMonthRule: () => ByDayOfMonthRule, ByDayOfMonthRuleModule: () => ByDayOfMonthRuleModule, ByDayOfWeekRule: () => ByDayOfWeekRule, ByDayOfWeekRuleModule: () => ByDayOfWeekRuleModule, ByHourOfDayRule: () => ByHourOfDayRule, ByHourOfDayRuleModule: () => ByHourOfDayRuleModule, ByMillisecondOfSecondRule: () => ByMillisecondOfSecondRule, ByMillisecondOfSecondRuleModule: () => ByMillisecondOfSecondRuleModule, ByMinuteOfHourRule: () => ByMinuteOfHourRule, ByMinuteOfHourRuleModule: () => ByMinuteOfHourRuleModule, ByMonthOfYearRule: () => ByMonthOfYearRule, ByMonthOfYearRuleModule: () => ByMonthOfYearRuleModule, BySecondOfMinuteRule: () => BySecondOfMinuteRule, BySecondOfMinuteRuleModule: () => BySecondOfMinuteRuleModule, FrequencyRule: () => FrequencyRule, FrequencyRuleModule: () => FrequencyRuleModule, ICAL_RULES: () => ICAL_RULES, RevByDayOfMonthRule: () => RevByDayOfMonthRule, RevByDayOfWeekRule: () => RevByDayOfWeekRule, RevByHourOfDayRule: () => RevByHourOfDayRule, RevByMillisecondOfSecondRule: () => RevByMillisecondOfSecondRule, RevByMinuteOfHourRule: () => RevByMinuteOfHourRule, RevByMonthOfYearRule: () => RevByMonthOfYearRule, RevBySecondOfMinuteRule: () => RevBySecondOfMinuteRule, RevFrequencyRule: () => RevFrequencyRule, getPrevWeekdaysOfMonth: () => getPrevWeekdaysOfMonth, getPrevWeekdaysOfYear: () => getPrevWeekdaysOfYear });
            var _rschedule_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@rschedule/core/es2015/main.js");
            class RecurrenceRule {
                constructor(processor) { this.processor = processor, this.start = processor.start, this.end = processor.end, this.options = processor.options; }
            }
            class FrequencyRule extends RecurrenceRule {
                constructor(processor, initDate) { super(processor), this.initDate = initDate, this.intervalUnit = (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.freqToGranularity)(this.options.frequency), this.firstIntervalStartDate = this.normalizedStartDate(this.options.start), this.intervalStartDate = this.firstIntervalStartDate, this.intervalEndDate = this.normalizedEndDate(this.firstIntervalStartDate), this.skipToInterval(this.initDate); }
                run(date) { return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date)); }
                validateDate(arg) { let { date } = arg; return arg instanceof _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime && this.dateIsWithinInterval(date) ? arg : (this.skipToInterval(date), new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(this.dateIsWithinInterval(date) ? date : this.setToCurrentInterval())); }
                setToCurrentInterval() { return this.intervalStartDate; }
                normalizedStartDate(date) { return "WEEKLY" === this.options.frequency ? date.granularity("week", { weekStart: this.options.weekStart }) : date.granularity(this.intervalUnit); }
                normalizedEndDate(start) { switch (this.options.frequency) {
                    case "YEARLY": return start.add(1, "year");
                    case "MONTHLY": return start.add(1, "month");
                    case "WEEKLY": return start.add(1, "week");
                    case "DAILY": return start.add(1, "day");
                    case "HOURLY": return start.add(1, "hour");
                    case "MINUTELY": return start.add(1, "minute");
                    case "SECONDLY": return start.add(1, "second");
                    case "MILLISECONDLY": return start.add(1, "millisecond");
                    default: throw Error(`Unknown frequency ${this.options.frequency}`);
                } }
                skipToInterval(date) { let amount = this.intervalDifference(date); this.intervalStartDate = this.firstIntervalStartDate.add(amount, this.intervalUnit), this.intervalEndDate = this.normalizedEndDate(this.intervalStartDate); }
                dateIsWithinInterval(date) { return this.intervalStartDate.isBeforeOrEqual(date) && this.intervalEndDate.isAfter(date); }
                intervalDifference(date) { return intervalDifferenceBetweenDates({ first: this.firstIntervalStartDate, second: date, unit: this.intervalUnit, interval: this.options.interval, weekStart: this.options.weekStart, direction: "after" }); }
            }
            function intervalDifferenceBetweenDates({ first, second, unit, interval, weekStart, direction }) { let difference = (() => { let intervalDuration, months; switch (unit) {
                case "year": return Math.floor(((second.get("year") - first.get("year")) * 12 + second.get("month") - first.get("month")) / 12);
                case "month": return (second.get("year") - first.get("year")) * 12 + second.get("month") - first.get("month");
                case "week":
                    first = first.granularity("week", { weekStart }), intervalDuration = _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.MILLISECONDS_IN_WEEK;
                    break;
                case "day":
                    intervalDuration = _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.MILLISECONDS_IN_DAY;
                    break;
                case "hour":
                    intervalDuration = _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.MILLISECONDS_IN_HOUR;
                    break;
                case "minute":
                    intervalDuration = _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.MILLISECONDS_IN_MINUTE;
                    break;
                case "second":
                    intervalDuration = _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.MILLISECONDS_IN_SECOND;
                    break;
                case "millisecond":
                    intervalDuration = 1;
                    break;
                default: throw Error("Unexpected `unit` value");
            } return Math.floor((second.valueOf() - first.valueOf()) / intervalDuration); })(); return ("after" === direction ? Math.ceil : Math.floor)(difference / interval) * interval; }
            class RevFrequencyRule extends FrequencyRule {
                setToCurrentInterval() { return this.intervalEndDate.subtract(1, "millisecond"); }
                intervalDifference(date) { return intervalDifferenceBetweenDates({ first: this.firstIntervalStartDate, second: date, unit: this.intervalUnit, interval: this.options.interval, weekStart: this.options.weekStart, direction: "before" }); }
            }
            let FREQUENCIES = ["MILLISECONDLY", "SECONDLY", "MINUTELY", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "YEARLY"], FrequencyRuleModule = { name: "FrequencyRule", get: processor => void 0 !== processor.options.byMillisecondOfSecond || "MILLISECONDLY" !== processor.options.frequency ? null : processor.reverse ? new RevFrequencyRule(processor, processor.end) : new FrequencyRule(processor, processor.start), normalizeOptions: (options1, norm) => { if (!FREQUENCIES.includes(options1.frequency))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError(`"frequency" must be one of ${JSON.stringify(FREQUENCIES)}`); if (void 0 !== options1.interval) {
                    if (!Number.isInteger(options1.interval))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"interval" expects a whole number');
                    if (options1.interval < 1)
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"interval" cannot be less than 1');
                } if (void 0 !== options1.weekStart && !_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.WEEKDAYS.includes(options1.weekStart))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError(`"weekStart" must be one of ${JSON.stringify(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.WEEKDAYS)}`); norm.frequency = options1.frequency, norm.interval = options1.interval || 1, norm.weekStart = options1.weekStart || "MO"; }, deps: () => [FrequencyRuleModule] };
            function ruleOptionFilled(option) { return Array.isArray(option) && option.length > 0; }
            let freqCache = new WeakMap;
            class RecurrenceRuleBase extends RecurrenceRule {
                constructor(processor) { super(processor), freqCache.has(this.processor) || freqCache.set(this.processor, new FrequencyRule(processor, processor.start)), this.frequency = freqCache.get(this.processor); }
                validateDate(arg) { return this.frequency.validateDate(arg); }
            }
            class RevRecurrenceRuleBase extends RecurrenceRule {
                constructor(processor) { super(processor), freqCache.has(this.processor) || freqCache.set(this.processor, new RevFrequencyRule(processor, processor.end)), this.frequency = freqCache.get(this.processor); }
                validateDate(arg) { return this.frequency.validateDate(arg); }
            }
            class RevByTimeOfUnitRule extends RevRecurrenceRuleBase {
                run(date) { let currentTime = date.get(this.granularity); for (let time of this.option)
                    if (!(currentTime < time)) {
                        if (currentTime === time)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.endGranularity(this.baseGranularity).set(this.granularity, time)));
                    } return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.endGranularity(this.baseGranularity).subtract(1, this.baseGranularity).set(this.granularity, this.option[0]))); }
            }
            class RevByMillisecondOfSecondRule extends RevByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "second", this.granularity = "millisecond", this.option = this.options.byMillisecondOfSecond.slice().reverse(); }
            }
            class ByTimeOfUnitRule extends RecurrenceRuleBase {
                run(date) { let currentTime = date.get(this.granularity); for (let time of this.option)
                    if (!(currentTime > time)) {
                        if (currentTime === time)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.granularity(this.baseGranularity).set(this.granularity, time)));
                    } return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.granularity(this.baseGranularity).add(1, this.baseGranularity).set(this.granularity, this.option[0]))); }
            }
            class ByMillisecondOfSecondRule extends ByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "second", this.granularity = "millisecond", this.option = this.options.byMillisecondOfSecond; }
            }
            let ByMillisecondOfSecondRuleModule = { name: "ByMillisecondOfSecond", get: processor => void 0 === processor.options.byMillisecondOfSecond ? null : processor.reverse ? new RevByMillisecondOfSecondRule(processor) : new ByMillisecondOfSecondRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byMillisecondOfSecond) {
                    if (!ruleOptionFilled(options1.byMillisecondOfSecond))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMillisecondOfSecond" expects a non-empty array');
                    if (options1.byMillisecondOfSecond.some(num => num < 0 || num > 999))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMillisecondOfSecond" values must be >= 0 && <= 999');
                    norm.byMillisecondOfSecond = options1.byMillisecondOfSecond, norm.byMillisecondOfSecond.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.numberSortComparer);
                }
                else
                    "MILLISECONDLY" !== options1.frequency && (norm.byMillisecondOfSecond = [norm.start.get("millisecond")]); }, deps: () => [FrequencyRuleModule, ByMillisecondOfSecondRuleModule] };
            class RevBySecondOfMinuteRule extends RevByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "minute", this.granularity = "second", this.option = this.options.bySecondOfMinute.slice().reverse(); }
            }
            class BySecondOfMinuteRule extends ByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "minute", this.granularity = "second", this.option = this.options.bySecondOfMinute; }
            }
            let BySecondOfMinuteRuleModule = { name: "BySecondOfMinute", get: processor => void 0 === processor.options.bySecondOfMinute ? null : processor.reverse ? new RevBySecondOfMinuteRule(processor) : new BySecondOfMinuteRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.bySecondOfMinute) {
                    if (!ruleOptionFilled(options1.bySecondOfMinute))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"bySecondOfMinute" expects a non-empty array');
                    if (options1.bySecondOfMinute.some(num => num < 0 || num > 60))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"bySecondOfMinute" values must be >= 0 && <= 60');
                    norm.bySecondOfMinute = options1.bySecondOfMinute, norm.bySecondOfMinute.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.numberSortComparer);
                }
                else
                    ["SECONDLY", "MILLISECONDLY"].includes(options1.frequency) || (norm.bySecondOfMinute = [norm.start.get("second")]); }, deps: () => [FrequencyRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] };
            class RevByMinuteOfHourRule extends RevByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "hour", this.granularity = "minute", this.option = this.options.byMinuteOfHour.slice().reverse(); }
            }
            class ByMinuteOfHourRule extends ByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "hour", this.granularity = "minute", this.option = this.options.byMinuteOfHour; }
            }
            let ByMinuteOfHourRuleModule = { name: "ByMinuteOfHour", get: processor => void 0 === processor.options.byMinuteOfHour ? null : processor.reverse ? new RevByMinuteOfHourRule(processor) : new ByMinuteOfHourRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byMinuteOfHour) {
                    if (!ruleOptionFilled(options1.byMinuteOfHour))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMinuteOfHour" expects a non-empty array');
                    if (options1.byMinuteOfHour.some(num => num < 0 || num > 59))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMinuteOfHour" values must be >= 0 && <= 59');
                    norm.byMinuteOfHour = options1.byMinuteOfHour, norm.byMinuteOfHour.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.numberSortComparer);
                }
                else
                    ["MINUTELY", "SECONDLY", "MILLISECONDLY"].includes(options1.frequency) || (norm.byMinuteOfHour = [norm.start.get("minute")]); }, deps: () => [FrequencyRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] };
            class RevByHourOfDayRule extends RevByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "day", this.granularity = "hour", this.option = this.options.byHourOfDay.slice().reverse(); }
            }
            class ByHourOfDayRule extends ByTimeOfUnitRule {
                constructor() { super(...arguments), this.baseGranularity = "day", this.granularity = "hour", this.option = this.options.byHourOfDay; }
            }
            let ByHourOfDayRuleModule = { name: "ByHourOfDay", get: processor => void 0 === processor.options.byHourOfDay ? null : processor.reverse ? new RevByHourOfDayRule(processor) : new ByHourOfDayRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byHourOfDay) {
                    if (!ruleOptionFilled(options1.byHourOfDay))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byHourOfDay" expects a non-empty array');
                    if (options1.byHourOfDay.some(num => num < 0 || num > 23))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byHourOfDay" values must be >= 0 && <= 23');
                    norm.byHourOfDay = options1.byHourOfDay, norm.byHourOfDay.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.numberSortComparer);
                }
                else
                    ["YEARLY", "MONTHLY", "WEEKLY", "DAILY"].includes(options1.frequency) && (norm.byHourOfDay = [norm.start.get("hour")]); }, deps: () => [FrequencyRuleModule, ByHourOfDayRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] };
            function getNextWeekday(date, weekday) { return date.add((0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.getDifferenceBetweenWeekdays)(date.get("weekday"), weekday), "day"); }
            function getNthWeekdayOfMonth(date, weekday, nth) { let base = date.set("day", 1); return nth < 0 && (base = base.add(1, "month")), base = getNextWeekday(base, weekday), nth < 0 ? base.add(nth, "week") : base.add(nth - 1, "week"); }
            class ByDayOfMonthRule extends RecurrenceRuleBase {
                run(date) { let next, normalizedByDayOfMonth = normalizeByDayOfMonth(date, this.options.byDayOfMonth, this.options.byDayOfWeek), currentDay = date.get("day"); for (let day of normalizedByDayOfMonth)
                    if (!(currentDay > day)) {
                        if (currentDay === day)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.granularity("month").set("day", day)));
                    } let nextMonth = date, index = 0; for (; !next && index < 30;)
                    next = normalizeByDayOfMonth(nextMonth = nextMonth.granularity("month").add(1, "month"), this.options.byDayOfMonth, this.options.byDayOfWeek)[0], index++; if (index >= 13)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("byDayOfMonth Infinite while loop"); return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(nextMonth.set("day", next))); }
            }
            function normalizeByDayOfMonth(date, byDayOfMonth, byDayOfWeek) { let lengthOfMonth = date.endGranularity("month").get("day"), normalizedByDayOfMonth = byDayOfMonth.filter(day => lengthOfMonth >= Math.abs(day)).map(day => day > 0 ? day : lengthOfMonth + day + 1); if (byDayOfWeek) {
                let base = date.granularity("month"), filteredByDayOfMonth = [];
                byDayOfWeek.forEach(entry => { if ("string" == typeof entry)
                    return void filteredByDayOfMonth.push(...normalizedByDayOfMonth.filter(day => base.set("day", day).get("weekday") === entry)); let nthWeekdayOfMonth = getNthWeekdayOfMonth(date, ...entry).get("day"); normalizedByDayOfMonth.includes(nthWeekdayOfMonth) && filteredByDayOfMonth.push(nthWeekdayOfMonth); }), normalizedByDayOfMonth = Array.from(new Set(filteredByDayOfMonth));
            } return normalizedByDayOfMonth.sort((a, b) => a > b ? 1 : a < b ? -1 : 0); }
            class RevByDayOfMonthRule extends RevRecurrenceRuleBase {
                run(date) { let next, normalizedByDayOfMonth = normalizeByDayOfMonth(date, this.options.byDayOfMonth, this.options.byDayOfWeek).reverse(), currentDay = date.get("day"); for (let day of normalizedByDayOfMonth)
                    if (!(currentDay < day)) {
                        if (currentDay === day)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.endGranularity("month").set("day", day)));
                    } let nextMonth = date, index = 0; for (; !next && index < 30;)
                    next = normalizeByDayOfMonth(nextMonth = nextMonth.endGranularity("month").subtract(1, "month"), this.options.byDayOfMonth, this.options.byDayOfWeek).pop(), index++; if (index >= 13)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("byDayOfMonth Infinite while loop"); return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(nextMonth.set("day", next))); }
            }
            let ByDayOfMonthRuleModule = { name: "ByDayOfMonth", get: processor => void 0 === processor.options.byDayOfMonth ? null : processor.reverse ? new RevByDayOfMonthRule(processor) : new ByDayOfMonthRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byDayOfMonth) {
                    if ("WEEKLY" === options1.frequency)
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('when "frequency" is "WEEKLY", "byDayOfMonth" cannot be present');
                    if (!ruleOptionFilled(options1.byDayOfMonth))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byDayOfMonth" expects a non-empty array');
                    if (options1.byDayOfMonth.some(num => 0 === num || num < -31 || num > 31))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byDayOfMonth" values must be `num !== 0 && num <= 31 && num >= -31`');
                    norm.byDayOfMonth = options1.byDayOfMonth.slice();
                }
                else
                    !(ruleOptionFilled(options1.byDayOfWeek) || ruleOptionFilled(options1.byDayOfYear)) && ["YEARLY", "MONTHLY"].includes(options1.frequency) && (norm.byDayOfMonth = [norm.start.get("day")]); }, deps: () => [FrequencyRuleModule, ByDayOfMonthRuleModule, ByHourOfDayRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] };
            function getNthWeekdayOfYear(date, weekday, nth) { let base = date.set("month", 1).set("day", 1); return nth < 0 && (base = base.add(1, "year")), base = getNextWeekday(base, weekday), nth < 0 ? base.add(nth, "week") : base.add(nth - 1, "week"); }
            function getPreviousWeekday(date, weekday) { let diff = (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.getDifferenceBetweenWeekdays)(date.get("weekday"), weekday); return date.subtract(0 === diff ? 0 : 7 - diff, "day"); }
            class RevByDayOfWeekRule extends RevRecurrenceRuleBase {
                run(date) { return "YEARLY" === this.options.frequency ? void 0 === this.options.byMonthOfYear ? this.expandYearly(date) : this.expandMonthly(date) : "MONTHLY" === this.options.frequency ? this.expandMonthly(date) : this.expand(date); }
                expandYearly(date) { let next = getPrevWeekdaysOfYear(date, this.options.byDayOfWeek)[0], index = 0, base = date; for (; !next && index < 28;)
                    index++, next = getPrevWeekdaysOfYear(base = base.granularity("year").subtract(1, "millisecond"), this.options.byDayOfWeek)[0]; if (!next)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("The byDayOfWeek rule appears to contain an impossible combination"); return this.result(date, next); }
                expandMonthly(date) { let next = getPrevWeekdaysOfMonth(date, this.options.byDayOfWeek)[0], index = 0, base = date; for (; !next && index < 50;)
                    index++, next = getPrevWeekdaysOfMonth(base = base.granularity("month").subtract(1, "millisecond"), this.options.byDayOfWeek)[0]; if (!next)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("The byDayOfWeek rule appears to contain an impossible combination"); return this.result(date, next); }
                expand(date) { let next = this.options.byDayOfWeek.map(weekday => getPreviousWeekday(date, weekday)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer).pop(); return this.result(date, next); }
                result(date, next) { return next.isEqual(date) ? this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date)) : this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(next.endGranularity("day"))); }
            }
            function getPrevWeekdaysOfYear(date, byDayOfWeek) { let normalizedNthWeekdaysOfYear = byDayOfWeek.filter(entry => Array.isArray(entry)).map(entry => getNthWeekdayOfYear(date, ...entry)), normalizedNextWeekdays = byDayOfWeek.filter(entry => "string" == typeof entry).map(weekday => getPreviousWeekday(date, weekday)).filter(entry => entry.get("year") === date.get("year")); return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.uniqDateTimes)([...normalizedNthWeekdaysOfYear, ...normalizedNextWeekdays]).filter(entry => entry.isBeforeOrEqual(date)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer).reverse(); }
            function getPrevWeekdaysOfMonth(date, byDayOfWeek) { let normalizedNthWeekdaysOfMonth = byDayOfWeek.filter(entry => Array.isArray(entry)).map(entry => getNthWeekdayOfMonth(date, ...entry)), normalizedNextWeekdays = byDayOfWeek.filter(entry => "string" == typeof entry).map(weekday => getPreviousWeekday(date, weekday)).filter(entry => entry.get("year") === date.get("year") && entry.get("month") === date.get("month")); return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.uniqDateTimes)([...normalizedNthWeekdaysOfMonth, ...normalizedNextWeekdays]).filter(entry => entry.isBeforeOrEqual(date)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer).reverse(); }
            class ByDayOfWeekRule extends RecurrenceRuleBase {
                run(date) { return "YEARLY" === this.options.frequency ? void 0 === this.options.byMonthOfYear ? this.expandYearly(date) : this.expandMonthly(date) : "MONTHLY" === this.options.frequency ? this.expandMonthly(date) : this.expand(date); }
                expandYearly(date) { let next = getNextWeekdaysOfYear(date, this.options.byDayOfWeek)[0], index = 0, base = date; for (; !next && index < 28;)
                    index++, next = getNextWeekdaysOfYear(base = base.granularity("year").add(1, "year"), this.options.byDayOfWeek)[0]; if (!next)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("The byDayOfWeek rule appears to contain an impossible combination"); return this.result(date, next); }
                expandMonthly(date) { let next = getNextWeekdaysOfMonth(date, this.options.byDayOfWeek)[0], index = 0, base = date; for (; !next && index < 50;)
                    index++, next = getNextWeekdaysOfMonth(base = base.granularity("month").add(1, "month"), this.options.byDayOfWeek)[0]; if (!next)
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RecurrenceRuleError("The byDayOfWeek rule appears to contain an impossible combination"); return this.result(date, next); }
                expand(date) { let next = this.options.byDayOfWeek.map(weekday => getNextWeekday(date, weekday)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer)[0]; return this.result(date, next); }
                result(date, next) { return next.isEqual(date) ? this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date)) : this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(next.granularity("day"))); }
            }
            function getNextWeekdaysOfYear(date, byDayOfWeek) { let normalizedNthWeekdaysOfYear = byDayOfWeek.filter(entry => Array.isArray(entry)).map(entry => getNthWeekdayOfYear(date, ...entry)), normalizedNextWeekdays = byDayOfWeek.filter(entry => "string" == typeof entry).map(weekday => getNextWeekday(date, weekday)).filter(entry => entry.get("year") === date.get("year")); return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.uniqDateTimes)([...normalizedNthWeekdaysOfYear, ...normalizedNextWeekdays]).filter(entry => entry.isAfterOrEqual(date)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer); }
            function getNextWeekdaysOfMonth(date, byDayOfWeek) { let normalizedNthWeekdaysOfMonth = byDayOfWeek.filter(entry => Array.isArray(entry)).map(entry => getNthWeekdayOfMonth(date, ...entry)), normalizedNextWeekdays = byDayOfWeek.filter(entry => "string" == typeof entry).map(weekday => getNextWeekday(date, weekday)).filter(entry => entry.get("year") === date.get("year") && entry.get("month") === date.get("month")); return (0, _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.uniqDateTimes)([...normalizedNthWeekdaysOfMonth, ...normalizedNextWeekdays]).filter(entry => entry.isAfterOrEqual(date)).sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.dateTimeSortComparer); }
            let ByDayOfWeekRuleModule = { name: "ByDayOfWeek", get: processor => void 0 === processor.options.byDayOfWeek ? null : processor.reverse ? new RevByDayOfWeekRule(processor) : new ByDayOfWeekRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byDayOfWeek) {
                    if (!ruleOptionFilled(options1.byDayOfWeek))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byDayOfWeek" expects a non-empty array');
                    let invalidWeeday = options1.byDayOfWeek.find(day => Array.isArray(day) ? !_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.WEEKDAYS.includes(day[0]) : !_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.WEEKDAYS.includes(day));
                    if (invalidWeeday)
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError(`"byDayOfWeek" expects weedays in the form ${JSON.stringify(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapter.WEEKDAYS)} but "${invalidWeeday}" was provided`);
                    if (!["YEARLY", "MONTHLY"].includes(options1.frequency) && options1.byDayOfWeek.some(weekday => Array.isArray(weekday)))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byDayOfWeek" can only include a numeric value (i.e. `[string, number]`) when the "frequency" is either "MONTHLY" or "YEARLY"');
                    if ("MONTHLY" === options1.frequency && options1.byDayOfWeek.some(weekday => Array.isArray(weekday) && (weekday[1] < -31 || 0 === weekday[1] || weekday[1] > 31)))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('when "frequency" is "MONTHLY", each "byDayOfWeek" can optionally only have a numeric value >= -31 and <= 31 and !== 0');
                    if ("YEARLY" === options1.frequency && options1.byDayOfWeek.some(weekday => Array.isArray(weekday) && (weekday[1] < -366 || 0 === weekday[1] || weekday[1] > 366)))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('when "frequency" is "YEARLY", each "byDayOfWeek" can optionally only have a numeric value >= -366 and <= 366 and !== 0');
                    norm.byDayOfWeek = options1.byDayOfWeek;
                }
                else
                    ruleOptionFilled(options1.byDayOfMonth) || "WEEKLY" !== options1.frequency || (norm.byDayOfWeek = [norm.start.get("weekday")]); }, deps: () => [FrequencyRuleModule, ByDayOfWeekRuleModule, ByHourOfDayRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] };
            class RevByMonthOfYearRule extends RevRecurrenceRuleBase {
                constructor() { super(...arguments), this.option = this.processor.options.byMonthOfYear.slice().reverse(); }
                run(date) { let currentMonth = date.get("month"); for (let month of this.option)
                    if (!(currentMonth < month)) {
                        if (currentMonth === month)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.endGranularity("year").set("month", month)));
                    } return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.endGranularity("year").subtract(1, "year").set("month", this.option[0]))); }
            }
            class ByMonthOfYearRule extends RecurrenceRuleBase {
                run(date) { let currentMonth = date.get("month"); for (let month of this.options.byMonthOfYear)
                    if (!(currentMonth > month)) {
                        if (currentMonth === month)
                            return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ValidDateTime(date));
                        return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.granularity("year").set("month", month)));
                    } return this.validateDate(new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateTime(date.granularity("year").add(1, "year").set("month", this.options.byMonthOfYear[0]))); }
            }
            let ByMonthOfYearRuleModule = { name: "ByMonthOfYear", get: processor => void 0 === processor.options.byMonthOfYear ? null : processor.reverse ? new RevByMonthOfYearRule(processor) : new ByMonthOfYearRule(processor), normalizeOptions: (options1, norm) => { if (void 0 !== options1.byMonthOfYear) {
                    if (!ruleOptionFilled(options1.byMonthOfYear))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMonthOfYear" expects a non-empty array');
                    if (options1.byMonthOfYear.some(num => num < 1 || num > 12))
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.RuleOptionError('"byMonthOfYear" values must be `num >= 1 && num >= 12`');
                    norm.byMonthOfYear = options1.byMonthOfYear.slice(), norm.byMonthOfYear.sort(_rschedule_core__WEBPACK_IMPORTED_MODULE_0__.numberSortComparer);
                }
                else
                    ruleOptionFilled(options1.byDayOfMonth) || ruleOptionFilled(options1.byDayOfWeek) || ruleOptionFilled(options1.byDayOfYear) || "YEARLY" !== options1.frequency || (norm.byMonthOfYear = [norm.start.get("month")]); }, deps: () => [FrequencyRuleModule, ByMonthOfYearRuleModule, ByDayOfMonthRuleModule, ByHourOfDayRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule] }, ICAL_RULES = [FrequencyRuleModule, ByMonthOfYearRuleModule, ByDayOfMonthRuleModule, ByDayOfWeekRuleModule, ByHourOfDayRuleModule, ByMinuteOfHourRuleModule, BySecondOfMinuteRuleModule, ByMillisecondOfSecondRuleModule];
        }, "./node_modules/@rschedule/standard-date-adapter/es2015/main.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { StandardDateAdapter: () => StandardDateAdapter });
            var _rschedule_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@rschedule/core/es2015/main.js");
            class StandardDateAdapter extends _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapterBase {
                constructor(date, options1 = {}) { if (super(void 0, options1), !["UTC", null, void 0].includes(options1.timezone))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateAdapterError(`StandardDateAdapter only supports "UTC" and local time zones but "${options1.timezone}" was provided.`); this._date = new Date(date), this.timezone = void 0 !== options1.timezone ? options1.timezone : null, options1.metadata && Object.assign(this.metadata, options1.metadata), this.assertIsValid(); }
                static isDate(object) { return "[object Date]" === Object.prototype.toString.call(object); }
                static fromDate(date, options1) { return new StandardDateAdapter(date, options1); }
                static fromJSON(json) { let date, args = [json.year, json.month - 1, json.day, json.hour, json.minute, json.second, json.millisecond]; switch (json.timezone) {
                    case "UTC":
                        date = new StandardDateAdapter(new Date(Date.UTC(...args)), { timezone: "UTC", duration: json.duration });
                        break;
                    case null:
                        date = new StandardDateAdapter(new Date(...args), { timezone: null, duration: json.duration });
                        break;
                    default: throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateAdapterError(`The \`StandardDateAdapter\` only supports datetimes in UTC or LOCAL (null) time. You provided a JSON object with timezone "${json.timezone}".`);
                } return json.metadata && Object.assign(date.metadata, json.metadata), date; }
                static fromDateTime(datetime) { let date = StandardDateAdapter.fromJSON(datetime.toJSON()); return date.generators.push(...datetime.generators), datetime.metadata && Object.assign(date.metadata, datetime.metadata), date; }
                get date() { return new Date(this._date); }
                get end() { if (this.duration)
                    return this._end || (this._end = StandardDateAdapter.fromDateTime(this.toDateTime().add(this.duration, "millisecond")).date), this._end; }
                set(prop, value) { if ("timezone" === prop)
                    if (this.timezone === value)
                        return this;
                    else
                        return new StandardDateAdapter(this._date, { timezone: value, duration: this.duration, generators: this.generators }); if ("duration" === prop)
                    if (this.duration === value)
                        return this;
                    else
                        return new StandardDateAdapter(this._date, { timezone: this.timezone, duration: value, generators: this.generators }); throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.ArgumentError(`Unknown prop "${prop}" for StandardDateAdapter#set()`); }
                valueOf() { return this._date.valueOf(); }
                toJSON() { let json; return json = "UTC" === this.timezone ? { timezone: this.timezone, year: this._date.getUTCFullYear(), month: this._date.getUTCMonth() + 1, day: this._date.getUTCDate(), hour: this._date.getUTCHours(), minute: this._date.getUTCMinutes(), second: this._date.getUTCSeconds(), millisecond: this._date.getUTCMilliseconds() } : { timezone: this.timezone, year: this._date.getFullYear(), month: this._date.getMonth() + 1, day: this._date.getDate(), hour: this._date.getHours(), minute: this._date.getMinutes(), second: this._date.getSeconds(), millisecond: this._date.getMilliseconds() }, this.duration && (json.duration = this.duration), json; }
                assertIsValid() { if (!StandardDateAdapter.isDate(this._date) || isNaN(this._date.valueOf()))
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateAdapterError("StandardDateAdapter has invalid date."); if ([null, "UTC"].includes(this.timezone)) {
                    if (this.duration && this.duration <= 0)
                        throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateAdapterError("If provided, duration must be greater than 0.");
                }
                else
                    throw new _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.InvalidDateAdapterError(`StandardDateAdapter only supports local (null) and UTC timezones but "${this.timezone}" was specified.`); return !0; }
            }
            StandardDateAdapter.hasTimezoneSupport = !1;
        }, "./node_modules/@rschedule/standard-date-adapter/es2015/setup.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            var _rschedule_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@rschedule/core/es2015/main.js"), _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@rschedule/core/es2015/generators.js"), _rschedule_core_rules_ICAL_RULES__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@rschedule/core/es2015/rules.js"), _rschedule_standard_date_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@rschedule/standard-date-adapter/es2015/main.js");
            _rschedule_core__WEBPACK_IMPORTED_MODULE_0__.DateAdapterBase.adapter = _rschedule_standard_date_adapter__WEBPACK_IMPORTED_MODULE_1__.StandardDateAdapter, _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_2__.Rule.recurrenceRules = _rschedule_core_rules_ICAL_RULES__WEBPACK_IMPORTED_MODULE_3__.ICAL_RULES;
        }, "./node_modules/adm-zip/adm-zip.js": (module1, __unused_webpack_exports, __webpack_require__) => { let Utils = __webpack_require__("./node_modules/adm-zip/util/index.js"), pth = __webpack_require__("path"), ZipEntry = __webpack_require__("./node_modules/adm-zip/zipEntry.js"), ZipFile = __webpack_require__("./node_modules/adm-zip/zipFile.js"), get_Bool = (...val1) => Utils.findLast(val1, c => "boolean" == typeof c), get_Str = (...val1) => Utils.findLast(val1, c => "string" == typeof c), get_Fun = (...val1) => Utils.findLast(val1, c => "function" == typeof c), defaultOptions = { noSort: !1, readEntries: !1, method: Utils.Constants.NONE, fs: null }; module1.exports = function (input, options1) { let inBuffer = null, opts = Object.assign(Object.create(null), defaultOptions); input && "object" == typeof input && (input instanceof Uint8Array || (Object.assign(opts, input), input = opts.input ? opts.input : void 0, opts.input && delete opts.input), Buffer.isBuffer(input) && (inBuffer = input, opts.method = Utils.Constants.BUFFER, input = void 0)), Object.assign(opts, options1); let filetools = new Utils(opts); if (("object" != typeof opts.decoder || "function" != typeof opts.decoder.encode || "function" != typeof opts.decoder.decode) && (opts.decoder = Utils.decoder), input && "string" == typeof input)
            if (filetools.fs.existsSync(input))
                opts.method = Utils.Constants.FILE, opts.filename = input, inBuffer = filetools.fs.readFileSync(input);
            else
                throw Utils.Errors.INVALID_FILENAME(); let _zip = new ZipFile(inBuffer, opts), { canonical, sanitize, zipnamefix } = Utils; function getEntry(entry) { if (entry && _zip) {
            var item;
            if ("string" == typeof entry && (item = _zip.getEntry(pth.posix.normalize(entry))), "object" == typeof entry && void 0 !== entry.entryName && void 0 !== entry.header && (item = _zip.getEntry(entry.entryName)), item)
                return item;
        } return null; } function fixPath(zipPath) { let { join, normalize, sep } = pth.posix; return join(".", normalize(sep + zipPath.split("\\").join(sep) + sep)); } function filenameFilter(filterfn) { if (filterfn instanceof RegExp)
            return function (filename) { return filterfn.test(filename); }; return "function" != typeof filterfn ? () => !0 : filterfn; } let relativePath = (local, entry) => { let lastChar = entry.slice(-1); return lastChar = lastChar === filetools.sep ? filetools.sep : "", pth.relative(local, entry) + lastChar; }; return { readFile: function (entry, pass) { var item = getEntry(entry); return item && item.getData(pass) || null; }, childCount: function (entry) { let item = getEntry(entry); if (item)
                return _zip.getChildCount(item); }, readFileAsync: function (entry, callback) { var item = getEntry(entry); item ? item.getDataAsync(callback) : callback(null, "getEntry failed for:" + entry); }, readAsText: function (entry, encoding) { var item = getEntry(entry); if (item) {
                var data1 = item.getData();
                if (data1 && data1.length)
                    return data1.toString(encoding || "utf8");
            } return ""; }, readAsTextAsync: function (entry, callback, encoding) { var item = getEntry(entry); item ? item.getDataAsync(function (data1, err) { if (err)
                return void callback(data1, err); data1 && data1.length ? callback(data1.toString(encoding || "utf8")) : callback(""); }) : callback(""); }, deleteFile: function (entry, withsubfolders = !0) { var item = getEntry(entry); item && _zip.deleteFile(item.entryName, withsubfolders); }, deleteEntry: function (entry) { var item = getEntry(entry); item && _zip.deleteEntry(item.entryName); }, addZipComment: function (comment) { _zip.comment = comment; }, getZipComment: function () { return _zip.comment || ""; }, addZipEntryComment: function (entry, comment) { var item = getEntry(entry); item && (item.comment = comment); }, getZipEntryComment: function (entry) { var item = getEntry(entry); return item && item.comment || ""; }, updateFile: function (entry, content) { var item = getEntry(entry); item && item.setData(content); }, addLocalFile: function (localPath1, zipPath, zipName, comment) { if (filetools.fs.existsSync(localPath1)) {
                zipPath = zipPath ? fixPath(zipPath) : "";
                let p = pth.win32.basename(pth.win32.normalize(localPath1));
                zipPath += zipName || p;
                let _attr = filetools.fs.statSync(localPath1), data1 = _attr.isFile() ? filetools.fs.readFileSync(localPath1) : Buffer.alloc(0);
                _attr.isDirectory() && (zipPath += filetools.sep), this.addFile(zipPath, data1, comment, _attr);
            }
            else
                throw Utils.Errors.FILE_NOT_FOUND(localPath1); }, addLocalFileAsync: function (options1, callback) { options1 = "object" == typeof options1 ? options1 : { localPath: options1 }; let localPath1 = pth.resolve(options1.localPath), { comment } = options1, { zipPath, zipName } = options1, self1 = this; filetools.fs.stat(localPath1, function (err, stats) { if (err)
                return callback(err, !1); zipPath = zipPath ? fixPath(zipPath) : ""; let p = pth.win32.basename(pth.win32.normalize(localPath1)); if (zipPath += zipName || p, stats.isFile())
                filetools.fs.readFile(localPath1, function (err, data1) { return err ? callback(err, !1) : (self1.addFile(zipPath, data1, comment, stats), setImmediate(callback, void 0, !0)); });
            else if (stats.isDirectory())
                return zipPath += filetools.sep, self1.addFile(zipPath, Buffer.alloc(0), comment, stats), setImmediate(callback, void 0, !0); }); }, addLocalFolder: function (localPath1, zipPath, filter) { if (filter = filenameFilter(filter), zipPath = zipPath ? fixPath(zipPath) : "", localPath1 = pth.normalize(localPath1), filetools.fs.existsSync(localPath1)) {
                let items = filetools.findFiles(localPath1);
                if (items.length)
                    for (let filepath of items) {
                        let p = pth.join(zipPath, relativePath(localPath1, filepath));
                        filter(p) && this.addLocalFile(filepath, pth.dirname(p));
                    }
            }
            else
                throw Utils.Errors.FILE_NOT_FOUND(localPath1); }, addLocalFolderAsync: function (localPath1, callback, zipPath, filter) { filter = filenameFilter(filter), zipPath = zipPath ? fixPath(zipPath) : "", localPath1 = pth.normalize(localPath1); var self1 = this; filetools.fs.open(localPath1, "r", function (err) { if (err && "ENOENT" === err.code)
                callback(void 0, Utils.Errors.FILE_NOT_FOUND(localPath1));
            else if (err)
                callback(void 0, err);
            else {
                var items = filetools.findFiles(localPath1), i = -1, next = function () { if ((i += 1) < items.length) {
                    var filepath = items[i], p = relativePath(localPath1, filepath).split("\\").join("/");
                    p = p.normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[^\x20-\x7E]/g, ""), filter(p) ? filetools.fs.stat(filepath, function (er0, stats) { er0 && callback(void 0, er0), stats.isFile() ? filetools.fs.readFile(filepath, function (er1, data1) { er1 ? callback(void 0, er1) : (self1.addFile(zipPath + p, data1, "", stats), next()); }) : (self1.addFile(zipPath + p + "/", Buffer.alloc(0), "", stats), next()); }) : process.nextTick(() => { next(); });
                }
                else
                    callback(!0, void 0); };
                next();
            } }); }, addLocalFolderAsync2: function (options1, callback) { let self1 = this; options1 = "object" == typeof options1 ? options1 : { localPath: options1 }, localPath = pth.resolve(fixPath(options1.localPath)); let { zipPath, filter, namefix } = options1; if (filter instanceof RegExp) {
                var rx;
                rx = filter, filter = function (filename) { return rx.test(filename); };
            }
            else
                "function" != typeof filter && (filter = function () { return !0; }); zipPath = zipPath ? fixPath(zipPath) : "", "latin1" == namefix && (namefix = str => str.normalize("NFD").replace(/[\u0300-\u036f]/g, "").replace(/[^\x20-\x7E]/g, "")), "function" != typeof namefix && (namefix = str => str); let relPathFix = entry => pth.join(zipPath, namefix(relativePath(localPath, entry))), fileNameFix = entry => pth.win32.basename(pth.win32.normalize(namefix(entry))); filetools.fs.open(localPath, "r", function (err) { err && "ENOENT" === err.code ? callback(void 0, Utils.Errors.FILE_NOT_FOUND(localPath)) : err ? callback(void 0, err) : filetools.findFilesAsync(localPath, function (err, fileEntries) { if (err)
                return callback(err); (fileEntries = fileEntries.filter(dir => filter(relPathFix(dir)))).length || callback(void 0, !1), setImmediate(fileEntries.reverse().reduce(function (next, entry) { return function (err, done) { if (err || !1 === done)
                return setImmediate(next, err, !1); self1.addLocalFileAsync({ localPath: entry, zipPath: pth.dirname(relPathFix(entry)), zipName: fileNameFix(entry) }, next); }; }, callback)); }); }); }, addLocalFolderPromise: function (localPath1, props) { return new Promise((resolve, reject) => { this.addLocalFolderAsync2(Object.assign({ localPath: localPath1 }, props), (err, done) => { err && reject(err), done && resolve(this); }); }); }, addFile: function (entryName, content, comment, attr1) { let entry = getEntry(entryName = zipnamefix(entryName)), update = null != entry; update || ((entry = new ZipEntry(opts)).entryName = entryName), entry.comment = comment || ""; let isStat = "object" == typeof attr1 && attr1 instanceof filetools.fs.Stats; isStat && (entry.header.time = attr1.mtime); var fileattr = 16 * !!entry.isDirectory; let unix = entry.isDirectory ? 16384 : 32768; return isStat ? unix |= 4095 & attr1.mode : "number" == typeof attr1 ? unix |= 4095 & attr1 : unix |= entry.isDirectory ? 493 : 420, fileattr = (fileattr | unix << 16) >>> 0, entry.attr = fileattr, entry.setData(content), update || _zip.setEntry(entry), entry; }, getEntries: function (password) { return _zip.password = password, _zip ? _zip.entries : []; }, getEntry: function (name) { return getEntry(name); }, getEntryCount: function () { return _zip.getEntryCount(); }, forEach: function (callback) { return _zip.forEach(callback); }, extractEntryTo: function (entry, targetPath, maintainEntryPath, overwrite, keepOriginalPermission, outFileName) { overwrite = get_Bool(!1, overwrite), keepOriginalPermission = get_Bool(!1, keepOriginalPermission), maintainEntryPath = get_Bool(!0, maintainEntryPath), outFileName = get_Str(keepOriginalPermission, outFileName); var item = getEntry(entry); if (!item)
                throw Utils.Errors.NO_ENTRY(); var entryName = canonical(item.entryName), target = sanitize(targetPath, outFileName && !item.isDirectory ? outFileName : maintainEntryPath ? entryName : pth.basename(entryName)); if (item.isDirectory)
                return _zip.getEntryChildren(item).forEach(function (child) { if (child.isDirectory)
                    return; var content = child.getData(); if (!content)
                    throw Utils.Errors.CANT_EXTRACT_FILE(); var name = canonical(child.entryName), childName = sanitize(targetPath, maintainEntryPath ? name : pth.basename(name)); let fileAttr = keepOriginalPermission ? child.header.fileAttr : void 0; filetools.writeFileTo(childName, content, overwrite, fileAttr); }), !0; var content = item.getData(_zip.password); if (!content)
                throw Utils.Errors.CANT_EXTRACT_FILE(); if (filetools.fs.existsSync(target) && !overwrite)
                throw Utils.Errors.CANT_OVERRIDE(); let fileAttr = keepOriginalPermission ? entry.header.fileAttr : void 0; return filetools.writeFileTo(target, content, overwrite, fileAttr), !0; }, test: function (pass) { if (!_zip)
                return !1; for (var entry in _zip.entries)
                try {
                    if (entry.isDirectory)
                        continue;
                    if (!_zip.entries[entry].getData(pass))
                        return !1;
                }
                catch (err) {
                    return !1;
                } return !0; }, extractAllTo: function (targetPath, overwrite, keepOriginalPermission, pass) { if (pass = get_Str(keepOriginalPermission = get_Bool(!1, keepOriginalPermission), pass), overwrite = get_Bool(!1, overwrite), !_zip)
                throw Utils.Errors.NO_ZIP(); _zip.entries.forEach(function (entry) { var entryName = sanitize(targetPath, canonical(entry.entryName)); if (entry.isDirectory)
                return void filetools.makeDir(entryName); var content = entry.getData(pass); if (!content)
                throw Utils.Errors.CANT_EXTRACT_FILE(); let fileAttr = keepOriginalPermission ? entry.header.fileAttr : void 0; filetools.writeFileTo(entryName, content, overwrite, fileAttr); try {
                filetools.fs.utimesSync(entryName, entry.header.time, entry.header.time);
            }
            catch (err) {
                throw Utils.Errors.CANT_EXTRACT_FILE();
            } }); }, extractAllToAsync: function (targetPath, overwrite, keepOriginalPermission, callback) { if (callback = get_Fun(overwrite, keepOriginalPermission, callback), keepOriginalPermission = get_Bool(!1, keepOriginalPermission), overwrite = get_Bool(!1, overwrite), !callback)
                return new Promise((resolve, reject) => { this.extractAllToAsync(targetPath, overwrite, keepOriginalPermission, function (err) { err ? reject(err) : resolve(this); }); }); if (!_zip)
                return void callback(Utils.Errors.NO_ZIP()); targetPath = pth.resolve(targetPath); let getPath = entry => sanitize(targetPath, pth.normalize(canonical(entry.entryName))), getError = (msg, file) => Error(msg + ': "' + file + '"'), dirEntries = [], fileEntries = []; for (let entry of (_zip.entries.forEach(e => { e.isDirectory ? dirEntries.push(e) : fileEntries.push(e); }), dirEntries)) {
                let dirPath = getPath(entry), dirAttr = keepOriginalPermission ? entry.header.fileAttr : void 0;
                try {
                    filetools.makeDir(dirPath), dirAttr && filetools.fs.chmodSync(dirPath, dirAttr), filetools.fs.utimesSync(dirPath, entry.header.time, entry.header.time);
                }
                catch (er) {
                    callback(getError("Unable to create folder", dirPath));
                }
            } fileEntries.reverse().reduce(function (next, entry) { return function (err) { if (err)
                next(err);
            else {
                let entryName = pth.normalize(canonical(entry.entryName)), filePath = sanitize(targetPath, entryName);
                entry.getDataAsync(function (content, err_1) { if (err_1)
                    next(err_1);
                else if (content) {
                    let fileAttr = keepOriginalPermission ? entry.header.fileAttr : void 0;
                    filetools.writeFileToAsync(filePath, content, overwrite, fileAttr, function (succ) { succ || next(getError("Unable to write file", filePath)), filetools.fs.utimes(filePath, entry.header.time, entry.header.time, function (err_2) { err_2 ? next(getError("Unable to set times", filePath)) : next(); }); });
                }
                else
                    next(Utils.Errors.CANT_EXTRACT_FILE()); });
            } }; }, callback)(); }, writeZip: function (targetFileName, callback) { if (1 == arguments.length && "function" == typeof targetFileName && (callback = targetFileName, targetFileName = ""), !targetFileName && opts.filename && (targetFileName = opts.filename), targetFileName) {
                var zipData = _zip.compressToBuffer();
                if (zipData) {
                    var ok = filetools.writeFileTo(targetFileName, zipData, !0);
                    "function" == typeof callback && callback(ok ? null : Error("failed"), "");
                }
            } }, writeZipPromise: function (targetFileName, props) { let { overwrite, perm } = Object.assign({ overwrite: !0 }, props); return new Promise((resolve, reject) => { !targetFileName && opts.filename && (targetFileName = opts.filename), targetFileName || reject("ADM-ZIP: ZIP File Name Missing"), this.toBufferPromise().then(zipData => { filetools.writeFileToAsync(targetFileName, zipData, overwrite, perm, done => done ? resolve(done) : reject("ADM-ZIP: Wasn't able to write zip file")); }, reject); }); }, toBufferPromise: function () { return new Promise((resolve, reject) => { _zip.toAsyncBuffer(resolve, reject); }); }, toBuffer: function (onSuccess, onFail, onItemStart, onItemEnd) { return "function" == typeof onSuccess ? (_zip.toAsyncBuffer(onSuccess, onFail, onItemStart, onItemEnd), null) : _zip.compressToBuffer(); } }; }; }, "./node_modules/adm-zip/headers/entryHeader.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Utils = __webpack_require__("./node_modules/adm-zip/util/index.js"), Constants = Utils.Constants; module1.exports = function () { var _verMade, _version = 10, _flags = 0, _method = 0, _time = 0, _crc = 0, _compressedSize = 0, _size = 0, _fnameLen = 0, _extraLen = 0, _comLen = 0, _diskStart = 0, _inattr = 0, _attr = 0, _offset = 0; _verMade = 20 | (Utils.isWin ? 2560 : 768), _flags |= Constants.FLG_EFS; let _localHeader = { extraLen: 0 }, uint32 = val1 => Math.max(0, val1) >>> 0, uint8 = val1 => 255 & Math.max(0, val1); return _time = Utils.fromDate2DOS(new Date), { get made() { return _verMade; }, set made(val) { _verMade = val; }, get version() { return _version; }, set version(val) { _version = val; }, get flags() { return _flags; }, set flags(val) { _flags = val; }, get flags_efs() { return (_flags & Constants.FLG_EFS) > 0; }, set flags_efs(val) { val ? _flags |= Constants.FLG_EFS : _flags &= ~Constants.FLG_EFS; }, get flags_desc() { return (_flags & Constants.FLG_DESC) > 0; }, set flags_desc(val) { val ? _flags |= Constants.FLG_DESC : _flags &= ~Constants.FLG_DESC; }, get method() { return _method; }, set method(val) { switch (val) {
                case Constants.STORED: this.version = 10;
                case Constants.DEFLATED:
                default: this.version = 20;
            } _method = val; }, get time() { return Utils.fromDOS2Date(this.timeval); }, set time(val) { this.timeval = Utils.fromDate2DOS(val); }, get timeval() { return _time; }, set timeval(val) { _time = uint32(val); }, get timeHighByte() { return uint8(_time >>> 8); }, get crc() { return _crc; }, set crc(val) { _crc = uint32(val); }, get compressedSize() { return _compressedSize; }, set compressedSize(val) { _compressedSize = uint32(val); }, get size() { return _size; }, set size(val) { _size = uint32(val); }, get fileNameLength() { return _fnameLen; }, set fileNameLength(val) { _fnameLen = val; }, get extraLength() { return _extraLen; }, set extraLength(val) { _extraLen = val; }, get extraLocalLength() { return _localHeader.extraLen; }, set extraLocalLength(val) { _localHeader.extraLen = val; }, get commentLength() { return _comLen; }, set commentLength(val) { _comLen = val; }, get diskNumStart() { return _diskStart; }, set diskNumStart(val) { _diskStart = uint32(val); }, get inAttr() { return _inattr; }, set inAttr(val) { _inattr = uint32(val); }, get attr() { return _attr; }, set attr(val) { _attr = uint32(val); }, get fileAttr() { return (_attr || 0) >> 16 & 4095; }, get offset() { return _offset; }, set offset(val) { _offset = uint32(val); }, get encrypted() { return (_flags & Constants.FLG_ENC) === Constants.FLG_ENC; }, get centralHeaderSize() { return Constants.CENHDR + _fnameLen + _extraLen + _comLen; }, get realDataOffset() { return _offset + Constants.LOCHDR + _localHeader.fnameLen + _localHeader.extraLen; }, get localHeader() { return _localHeader; }, loadLocalHeaderFromBinary: function (input) { var data1 = input.slice(_offset, _offset + Constants.LOCHDR); if (data1.readUInt32LE(0) !== Constants.LOCSIG)
                throw Utils.Errors.INVALID_LOC(); _localHeader.version = data1.readUInt16LE(Constants.LOCVER), _localHeader.flags = data1.readUInt16LE(Constants.LOCFLG), _localHeader.method = data1.readUInt16LE(Constants.LOCHOW), _localHeader.time = data1.readUInt32LE(Constants.LOCTIM), _localHeader.crc = data1.readUInt32LE(Constants.LOCCRC), _localHeader.compressedSize = data1.readUInt32LE(Constants.LOCSIZ), _localHeader.size = data1.readUInt32LE(Constants.LOCLEN), _localHeader.fnameLen = data1.readUInt16LE(Constants.LOCNAM), _localHeader.extraLen = data1.readUInt16LE(Constants.LOCEXT); let extraStart = _offset + Constants.LOCHDR + _localHeader.fnameLen, extraEnd = extraStart + _localHeader.extraLen; return input.slice(extraStart, extraEnd); }, loadFromBinary: function (data1) { if (data1.length !== Constants.CENHDR || data1.readUInt32LE(0) !== Constants.CENSIG)
                throw Utils.Errors.INVALID_CEN(); _verMade = data1.readUInt16LE(Constants.CENVEM), _version = data1.readUInt16LE(Constants.CENVER), _flags = data1.readUInt16LE(Constants.CENFLG), _method = data1.readUInt16LE(Constants.CENHOW), _time = data1.readUInt32LE(Constants.CENTIM), _crc = data1.readUInt32LE(Constants.CENCRC), _compressedSize = data1.readUInt32LE(Constants.CENSIZ), _size = data1.readUInt32LE(Constants.CENLEN), _fnameLen = data1.readUInt16LE(Constants.CENNAM), _extraLen = data1.readUInt16LE(Constants.CENEXT), _comLen = data1.readUInt16LE(Constants.CENCOM), _diskStart = data1.readUInt16LE(Constants.CENDSK), _inattr = data1.readUInt16LE(Constants.CENATT), _attr = data1.readUInt32LE(Constants.CENATX), _offset = data1.readUInt32LE(Constants.CENOFF); }, localHeaderToBinary: function () { var data1 = Buffer.alloc(Constants.LOCHDR); return data1.writeUInt32LE(Constants.LOCSIG, 0), data1.writeUInt16LE(_version, Constants.LOCVER), data1.writeUInt16LE(_flags, Constants.LOCFLG), data1.writeUInt16LE(_method, Constants.LOCHOW), data1.writeUInt32LE(_time, Constants.LOCTIM), data1.writeUInt32LE(_crc, Constants.LOCCRC), data1.writeUInt32LE(_compressedSize, Constants.LOCSIZ), data1.writeUInt32LE(_size, Constants.LOCLEN), data1.writeUInt16LE(_fnameLen, Constants.LOCNAM), data1.writeUInt16LE(_localHeader.extraLen, Constants.LOCEXT), data1; }, centralHeaderToBinary: function () { var data1 = Buffer.alloc(Constants.CENHDR + _fnameLen + _extraLen + _comLen); return data1.writeUInt32LE(Constants.CENSIG, 0), data1.writeUInt16LE(_verMade, Constants.CENVEM), data1.writeUInt16LE(_version, Constants.CENVER), data1.writeUInt16LE(_flags, Constants.CENFLG), data1.writeUInt16LE(_method, Constants.CENHOW), data1.writeUInt32LE(_time, Constants.CENTIM), data1.writeUInt32LE(_crc, Constants.CENCRC), data1.writeUInt32LE(_compressedSize, Constants.CENSIZ), data1.writeUInt32LE(_size, Constants.CENLEN), data1.writeUInt16LE(_fnameLen, Constants.CENNAM), data1.writeUInt16LE(_extraLen, Constants.CENEXT), data1.writeUInt16LE(_comLen, Constants.CENCOM), data1.writeUInt16LE(_diskStart, Constants.CENDSK), data1.writeUInt16LE(_inattr, Constants.CENATT), data1.writeUInt32LE(_attr, Constants.CENATX), data1.writeUInt32LE(_offset, Constants.CENOFF), data1; }, toJSON: function () { let bytes = function (nr) { return nr + " bytes"; }; return { made: _verMade, version: _version, flags: _flags, method: Utils.methodToString(_method), time: this.time, crc: "0x" + _crc.toString(16).toUpperCase(), compressedSize: bytes(_compressedSize), size: bytes(_size), fileNameLength: bytes(_fnameLen), extraLength: bytes(_extraLen), commentLength: bytes(_comLen), diskNumStart: _diskStart, inAttr: _inattr, attr: _attr, offset: _offset, centralHeaderSize: bytes(Constants.CENHDR + _fnameLen + _extraLen + _comLen) }; }, toString: function () { return JSON.stringify(this.toJSON(), null, "	"); } }; }; }, "./node_modules/adm-zip/headers/index.js": (__unused_webpack_module, exports, __webpack_require__) => { exports.EntryHeader = __webpack_require__("./node_modules/adm-zip/headers/entryHeader.js"), exports.MainHeader = __webpack_require__("./node_modules/adm-zip/headers/mainHeader.js"); }, "./node_modules/adm-zip/headers/mainHeader.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Utils = __webpack_require__("./node_modules/adm-zip/util/index.js"), Constants = Utils.Constants; module1.exports = function () { var _volumeEntries = 0, _totalEntries = 0, _size = 0, _offset = 0, _commentLength = 0; return { get diskEntries() { return _volumeEntries; }, set diskEntries(val) { _volumeEntries = _totalEntries = val; }, get totalEntries() { return _totalEntries; }, set totalEntries(val) { _totalEntries = _volumeEntries = val; }, get size() { return _size; }, set size(val) { _size = val; }, get offset() { return _offset; }, set offset(val) { _offset = val; }, get commentLength() { return _commentLength; }, set commentLength(val) { _commentLength = val; }, get mainHeaderSize() { return Constants.ENDHDR + _commentLength; }, loadFromBinary: function (data1) { if ((data1.length !== Constants.ENDHDR || data1.readUInt32LE(0) !== Constants.ENDSIG) && (data1.length < Constants.ZIP64HDR || data1.readUInt32LE(0) !== Constants.ZIP64SIG))
                throw Utils.Errors.INVALID_END(); data1.readUInt32LE(0) === Constants.ENDSIG ? (_volumeEntries = data1.readUInt16LE(Constants.ENDSUB), _totalEntries = data1.readUInt16LE(Constants.ENDTOT), _size = data1.readUInt32LE(Constants.ENDSIZ), _offset = data1.readUInt32LE(Constants.ENDOFF), _commentLength = data1.readUInt16LE(Constants.ENDCOM)) : (_volumeEntries = Utils.readBigUInt64LE(data1, Constants.ZIP64SUB), _totalEntries = Utils.readBigUInt64LE(data1, Constants.ZIP64TOT), _size = Utils.readBigUInt64LE(data1, Constants.ZIP64SIZE), _offset = Utils.readBigUInt64LE(data1, Constants.ZIP64OFF), _commentLength = 0); }, toBinary: function () { var b = Buffer.alloc(Constants.ENDHDR + _commentLength); return b.writeUInt32LE(Constants.ENDSIG, 0), b.writeUInt32LE(0, 4), b.writeUInt16LE(_volumeEntries, Constants.ENDSUB), b.writeUInt16LE(_totalEntries, Constants.ENDTOT), b.writeUInt32LE(_size, Constants.ENDSIZ), b.writeUInt32LE(_offset, Constants.ENDOFF), b.writeUInt16LE(_commentLength, Constants.ENDCOM), b.fill(" ", Constants.ENDHDR), b; }, toJSON: function () { return { diskEntries: _volumeEntries, totalEntries: _totalEntries, size: _size + " bytes", offset: function (nr, len) { let offs = nr.toString(16).toUpperCase(); for (; offs.length < 4;)
                    offs = "0" + offs; return "0x" + offs; }(_offset, 0), commentLength: _commentLength }; }, toString: function () { return JSON.stringify(this.toJSON(), null, "	"); } }; }; }, "./node_modules/adm-zip/methods/deflater.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = function (inbuf) { var zlib = __webpack_require__("zlib"), opts = { chunkSize: (parseInt(inbuf.length / 1024) + 1) * 1024 }; return { deflate: function () { return zlib.deflateRawSync(inbuf, opts); }, deflateAsync: function (callback) { var tmp = zlib.createDeflateRaw(opts), parts = [], total = 0; tmp.on("data", function (data1) { parts.push(data1), total += data1.length; }), tmp.on("end", function () { var buf = Buffer.alloc(total), written = 0; buf.fill(0); for (var i = 0; i < parts.length; i++) {
                var part = parts[i];
                part.copy(buf, written), written += part.length;
            } callback && callback(buf); }), tmp.end(inbuf); } }; }; }, "./node_modules/adm-zip/methods/index.js": (__unused_webpack_module, exports, __webpack_require__) => { exports.Deflater = __webpack_require__("./node_modules/adm-zip/methods/deflater.js"), exports.Inflater = __webpack_require__("./node_modules/adm-zip/methods/inflater.js"), exports.ZipCrypto = __webpack_require__("./node_modules/adm-zip/methods/zipcrypto.js"); }, "./node_modules/adm-zip/methods/inflater.js": (module1, __unused_webpack_exports, __webpack_require__) => { let version = +(process?.versions?.node ?? "").split(".")[0] || 0; module1.exports = function (inbuf, expectedLength) { var zlib = __webpack_require__("zlib"); let option = version >= 15 && expectedLength > 0 ? { maxOutputLength: expectedLength } : {}; return { inflate: function () { return zlib.inflateRawSync(inbuf, option); }, inflateAsync: function (callback) { var tmp = zlib.createInflateRaw(option), parts = [], total = 0; tmp.on("data", function (data1) { parts.push(data1), total += data1.length; }), tmp.on("end", function () { var buf = Buffer.alloc(total), written = 0; buf.fill(0); for (var i = 0; i < parts.length; i++) {
                var part = parts[i];
                part.copy(buf, written), written += part.length;
            } callback && callback(buf); }), tmp.end(inbuf); } }; }; }, "./node_modules/adm-zip/methods/zipcrypto.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            let { randomFillSync } = __webpack_require__("crypto"), Errors = __webpack_require__("./node_modules/adm-zip/util/errors.js"), crctable = new Uint32Array(256).map((t, crc) => { for (let j = 0; j < 8; j++)
                0 != (1 & crc) ? crc = crc >>> 1 ^ 0xedb88320 : crc >>>= 1; return crc >>> 0; }), uMul = (a, b) => Math.imul(a, b) >>> 0, crc32update = (pCrc32, bval) => crctable[(pCrc32 ^ bval) & 255] ^ pCrc32 >>> 8, genSalt = () => "function" == typeof randomFillSync ? randomFillSync(Buffer.alloc(12)) : genSalt.node();
            genSalt.node = () => { let salt = Buffer.alloc(12), len = salt.length; for (let i = 0; i < len; i++)
                salt[i] = 256 * Math.random() & 255; return salt; };
            let config = { genSalt };
            function Initkeys(pw) { let pass = Buffer.isBuffer(pw) ? pw : Buffer.from(pw); this.keys = new Uint32Array([0x12345678, 0x23456789, 0x34567890]); for (let i = 0; i < pass.length; i++)
                this.updateKeys(pass[i]); }
            Initkeys.prototype.updateKeys = function (byteValue) { let keys = this.keys; return keys[0] = crc32update(keys[0], byteValue), keys[1] += 255 & keys[0], keys[1] = uMul(keys[1], 0x8088405) + 1, keys[2] = crc32update(keys[2], keys[1] >>> 24), byteValue; }, Initkeys.prototype.next = function () { let k = (2 | this.keys[2]) >>> 0; return uMul(k, 1 ^ k) >> 8 & 255; }, module1.exports = { decrypt: function (data1, header, pwd) { if (!data1 || !Buffer.isBuffer(data1) || data1.length < 12)
                    return Buffer.alloc(0); let decrypter = function (pwd) { let keys = new Initkeys(pwd); return function (data1) { let result = Buffer.alloc(data1.length), pos = 0; for (let c of data1)
                    result[pos++] = keys.updateKeys(c ^ keys.next()); return result; }; }(pwd), salt = decrypter(data1.slice(0, 12)), verifyByte = (8 & header.flags) == 8 ? header.timeHighByte : header.crc >>> 24; if (salt[11] !== verifyByte)
                    throw Errors.WRONG_PASSWORD(); return decrypter(data1.slice(12)); }, encrypt: function (data1, header, pwd, oldlike = !1) { null == data1 && (data1 = Buffer.alloc(0)), Buffer.isBuffer(data1) || (data1 = Buffer.from(data1.toString())); let encrypter = function (pwd) { let keys = new Initkeys(pwd); return function (data1, result, pos = 0) { for (let c of (result || (result = Buffer.alloc(data1.length)), data1)) {
                    let k = keys.next();
                    result[pos++] = c ^ k, keys.updateKeys(c);
                } return result; }; }(pwd), salt = config.genSalt(); salt[11] = header.crc >>> 24 & 255, oldlike && (salt[10] = header.crc >>> 16 & 255); let result = Buffer.alloc(data1.length + 12); return encrypter(salt, result), encrypter(data1, result, 12); }, _salter: function (data1) { Buffer.isBuffer(data1) && data1.length >= 12 ? config.genSalt = function () { return data1.slice(0, 12); } : "node" === data1 ? config.genSalt = genSalt.node : config.genSalt = genSalt; } };
        }, "./node_modules/adm-zip/util/constants.js": module1 => { module1.exports = { LOCHDR: 30, LOCSIG: 0x4034b50, LOCVER: 4, LOCFLG: 6, LOCHOW: 8, LOCTIM: 10, LOCCRC: 14, LOCSIZ: 18, LOCLEN: 22, LOCNAM: 26, LOCEXT: 28, EXTSIG: 0x8074b50, EXTHDR: 16, EXTCRC: 4, EXTSIZ: 8, EXTLEN: 12, CENHDR: 46, CENSIG: 0x2014b50, CENVEM: 4, CENVER: 6, CENFLG: 8, CENHOW: 10, CENTIM: 12, CENCRC: 16, CENSIZ: 20, CENLEN: 24, CENNAM: 28, CENEXT: 30, CENCOM: 32, CENDSK: 34, CENATT: 36, CENATX: 38, CENOFF: 42, ENDHDR: 22, ENDSIG: 0x6054b50, ENDSUB: 8, ENDTOT: 10, ENDSIZ: 12, ENDOFF: 16, ENDCOM: 20, END64HDR: 20, END64SIG: 0x7064b50, END64START: 4, END64OFF: 8, END64NUMDISKS: 16, ZIP64SIG: 0x6064b50, ZIP64HDR: 56, ZIP64LEAD: 12, ZIP64SIZE: 4, ZIP64VEM: 12, ZIP64VER: 14, ZIP64DSK: 16, ZIP64DSKDIR: 20, ZIP64SUB: 24, ZIP64TOT: 32, ZIP64SIZB: 40, ZIP64OFF: 48, ZIP64EXTRA: 56, STORED: 0, SHRUNK: 1, REDUCED1: 2, REDUCED2: 3, REDUCED3: 4, REDUCED4: 5, IMPLODED: 6, DEFLATED: 8, ENHANCED_DEFLATED: 9, PKWARE: 10, BZIP2: 12, LZMA: 14, IBM_TERSE: 18, IBM_LZ77: 19, AES_ENCRYPT: 99, FLG_ENC: 1, FLG_COMP1: 2, FLG_COMP2: 4, FLG_DESC: 8, FLG_ENH: 16, FLG_PATCH: 32, FLG_STR: 64, FLG_EFS: 2048, FLG_MSK: 4096, FILE: 2, BUFFER: 1, NONE: 0, EF_ID: 0, EF_SIZE: 2, ID_ZIP64: 1, ID_AVINFO: 7, ID_PFS: 8, ID_OS2: 9, ID_NTFS: 10, ID_OPENVMS: 12, ID_UNIX: 13, ID_FORK: 14, ID_PATCH: 15, ID_X509_PKCS7: 20, ID_X509_CERTID_F: 21, ID_X509_CERTID_C: 22, ID_STRONGENC: 23, ID_RECORD_MGT: 24, ID_X509_PKCS7_RL: 25, ID_IBM1: 101, ID_IBM2: 102, ID_POSZIP: 18064, EF_ZIP64_OR_32: 0xffffffff, EF_ZIP64_OR_16: 65535, EF_ZIP64_SUNCOMP: 0, EF_ZIP64_SCOMP: 8, EF_ZIP64_RHO: 16, EF_ZIP64_DSN: 24 }; }, "./node_modules/adm-zip/util/decoder.js": module1 => { module1.exports = { efs: !0, encode: data1 => Buffer.from(data1, "utf8"), decode: data1 => data1.toString("utf8") }; }, "./node_modules/adm-zip/util/errors.js": (__unused_webpack_module, exports) => { let errors = { INVALID_LOC: "Invalid LOC header (bad signature)", INVALID_CEN: "Invalid CEN header (bad signature)", INVALID_END: "Invalid END header (bad signature)", DESCRIPTOR_NOT_EXIST: "No descriptor present", DESCRIPTOR_UNKNOWN: "Unknown descriptor format", DESCRIPTOR_FAULTY: "Descriptor data is malformed", NO_DATA: "Nothing to decompress", BAD_CRC: "CRC32 checksum failed {0}", FILE_IN_THE_WAY: "There is a file in the way: {0}", UNKNOWN_METHOD: "Invalid/unsupported compression method", AVAIL_DATA: "inflate::Available inflate data did not terminate", INVALID_DISTANCE: "inflate::Invalid literal/length or distance code in fixed or dynamic block", TO_MANY_CODES: "inflate::Dynamic block code description: too many length or distance codes", INVALID_REPEAT_LEN: "inflate::Dynamic block code description: repeat more than specified lengths", INVALID_REPEAT_FIRST: "inflate::Dynamic block code description: repeat lengths with no first length", INCOMPLETE_CODES: "inflate::Dynamic block code description: code lengths codes incomplete", INVALID_DYN_DISTANCE: "inflate::Dynamic block code description: invalid distance code lengths", INVALID_CODES_LEN: "inflate::Dynamic block code description: invalid literal/length code lengths", INVALID_STORE_BLOCK: "inflate::Stored block length did not match one's complement", INVALID_BLOCK_TYPE: "inflate::Invalid block type (type == 3)", CANT_EXTRACT_FILE: "Could not extract the file", CANT_OVERRIDE: "Target file already exists", DISK_ENTRY_TOO_LARGE: "Number of disk entries is too large", NO_ZIP: "No zip file was loaded", NO_ENTRY: "Entry doesn't exist", DIRECTORY_CONTENT_ERROR: "A directory cannot have content", FILE_NOT_FOUND: 'File not found: "{0}"', NOT_IMPLEMENTED: "Not implemented", INVALID_FILENAME: "Invalid filename", INVALID_FORMAT: "Invalid or unsupported zip format. No END header found", INVALID_PASS_PARAM: "Incompatible password parameter", WRONG_PASSWORD: "Wrong Password", COMMENT_TOO_LONG: "Comment is too long", EXTRA_FIELD_PARSE_ERROR: "Extra field parsing error" }; for (let msg of Object.keys(errors))
            exports[msg] = function (message) { return function (...args) { return args.length && (message = message.replace(/\{(\d)\}/g, (_, n) => args[n] || "")), Error("ADM-ZIP: " + message); }; }(errors[msg]); }, "./node_modules/adm-zip/util/fattr.js": (module1, __unused_webpack_exports, __webpack_require__) => { let pth = __webpack_require__("path"); module1.exports = function (path, { fs }) { var _path = path || "", _obj = { directory: !1, readonly: !1, hidden: !1, executable: !1, mtime: 0, atime: 0 }, _stat = null; return _path && fs.existsSync(_path) ? (_obj.directory = (_stat = fs.statSync(_path)).isDirectory(), _obj.mtime = _stat.mtime, _obj.atime = _stat.atime, _obj.executable = (73 & _stat.mode) != 0, _obj.readonly = (128 & _stat.mode) == 0, _obj.hidden = "." === pth.basename(_path)[0]) : console.warn("Invalid path: " + _path), { get directory() { return _obj.directory; }, get readOnly() { return _obj.readonly; }, get hidden() { return _obj.hidden; }, get mtime() { return _obj.mtime; }, get atime() { return _obj.atime; }, get executable() { return _obj.executable; }, decodeAttributes: function () { }, encodeAttributes: function () { }, toJSON: function () { return { path: _path, isDirectory: _obj.directory, isReadOnly: _obj.readonly, isHidden: _obj.hidden, isExecutable: _obj.executable, mTime: _obj.mtime, aTime: _obj.atime }; }, toString: function () { return JSON.stringify(this.toJSON(), null, "	"); } }; }; }, "./node_modules/adm-zip/util/index.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/adm-zip/util/utils.js"), module1.exports.Constants = __webpack_require__("./node_modules/adm-zip/util/constants.js"), module1.exports.Errors = __webpack_require__("./node_modules/adm-zip/util/errors.js"), module1.exports.FileAttr = __webpack_require__("./node_modules/adm-zip/util/fattr.js"), module1.exports.decoder = __webpack_require__("./node_modules/adm-zip/util/decoder.js"); }, "./node_modules/adm-zip/util/utils.js": (module1, __unused_webpack_exports, __webpack_require__) => { let fsystem = __webpack_require__("fs"), pth = __webpack_require__("path"), Constants = __webpack_require__("./node_modules/adm-zip/util/constants.js"), Errors = __webpack_require__("./node_modules/adm-zip/util/errors.js"), isWin = "object" == typeof process && "win32" === process.platform, is_Obj = obj => "object" == typeof obj && null !== obj, crcTable = new Uint32Array(256).map((t, c) => { for (let k = 0; k < 8; k++)
            (1 & c) != 0 ? c = 0xedb88320 ^ c >>> 1 : c >>>= 1; return c >>> 0; }); function Utils(opts) { this.sep = pth.sep, this.fs = fsystem, is_Obj(opts) && is_Obj(opts.fs) && "function" == typeof opts.fs.statSync && (this.fs = opts.fs); } module1.exports = Utils, Utils.prototype.makeDir = function (folder) { let resolvedPath, self1 = this; resolvedPath = folder.split(self1.sep)[0], folder.split(self1.sep).forEach(function (name) { var stat; if (name && ":" !== name.substr(-1, 1)) {
            resolvedPath += self1.sep + name;
            try {
                stat = self1.fs.statSync(resolvedPath);
            }
            catch (e) {
                self1.fs.mkdirSync(resolvedPath);
            }
            if (stat && stat.isFile())
                throw Errors.FILE_IN_THE_WAY(`"${resolvedPath}"`);
        } }); }, Utils.prototype.writeFileTo = function (path, content, overwrite, attr1) { if (this.fs.existsSync(path)) {
            var fd;
            if (!overwrite || this.fs.statSync(path).isDirectory())
                return !1;
        } var folder = pth.dirname(path); this.fs.existsSync(folder) || this.makeDir(folder); try {
            fd = this.fs.openSync(path, "w", 438);
        }
        catch (e) {
            this.fs.chmodSync(path, 438), fd = this.fs.openSync(path, "w", 438);
        } if (fd)
            try {
                this.fs.writeSync(fd, content, 0, content.length, 0);
            }
            finally {
                this.fs.closeSync(fd);
            } return this.fs.chmodSync(path, attr1 || 438), !0; }, Utils.prototype.writeFileToAsync = function (path, content, overwrite, attr1, callback) { "function" == typeof attr1 && (callback = attr1, attr1 = void 0); let self1 = this; self1.fs.exists(path, function (exist) { if (exist && !overwrite)
            return callback(!1); self1.fs.stat(path, function (err, stat) { if (exist && stat.isDirectory())
            return callback(!1); var folder = pth.dirname(path); self1.fs.exists(folder, function (exists) { exists || self1.makeDir(folder), self1.fs.open(path, "w", 438, function (err, fd) { err ? self1.fs.chmod(path, 438, function () { self1.fs.open(path, "w", 438, function (err, fd) { self1.fs.write(fd, content, 0, content.length, 0, function () { self1.fs.close(fd, function () { self1.fs.chmod(path, attr1 || 438, function () { callback(!0); }); }); }); }); }) : fd ? self1.fs.write(fd, content, 0, content.length, 0, function () { self1.fs.close(fd, function () { self1.fs.chmod(path, attr1 || 438, function () { callback(!0); }); }); }) : self1.fs.chmod(path, attr1 || 438, function () { callback(!0); }); }); }); }); }); }, Utils.prototype.findFiles = function (path) { let self1 = this; return function findSync(dir, pattern, recursive) { "boolean" == typeof pattern && (recursive = pattern, pattern = void 0); let files = []; return self1.fs.readdirSync(dir).forEach(function (file) { let path = pth.join(dir, file), stat = self1.fs.statSync(path); (!pattern || pattern.test(path)) && files.push(pth.normalize(path) + (stat.isDirectory() ? self1.sep : "")), stat.isDirectory() && recursive && (files = files.concat(findSync(path, pattern, recursive))); }), files; }(path, void 0, !0); }, Utils.prototype.findFilesAsync = function (dir, cb) { let self1 = this, results = []; self1.fs.readdir(dir, function (err, list) { if (err)
            return cb(err); let list_length = list.length; if (!list_length)
            return cb(null, results); list.forEach(function (file) { file = pth.join(dir, file), self1.fs.stat(file, function (err, stat) { if (err)
            return cb(err); stat && (results.push(pth.normalize(file) + (stat.isDirectory() ? self1.sep : "")), stat.isDirectory() ? self1.findFilesAsync(file, function (err, res) { if (err)
            return cb(err); results = results.concat(res), --list_length || cb(null, results); }) : --list_length || cb(null, results)); }); }); }); }, Utils.prototype.getAttributes = function () { }, Utils.prototype.setAttributes = function () { }, Utils.crc32update = function (crc, byte) { return crcTable[(crc ^ byte) & 255] ^ crc >>> 8; }, Utils.crc32 = function (buf) { "string" == typeof buf && (buf = Buffer.from(buf, "utf8")); let len = buf.length, crc = -1; for (let off = 0; off < len;)
            crc = Utils.crc32update(crc, buf[off++]); return ~crc >>> 0; }, Utils.methodToString = function (method) { switch (method) {
            case Constants.STORED: return "STORED (" + method + ")";
            case Constants.DEFLATED: return "DEFLATED (" + method + ")";
            default: return "UNSUPPORTED (" + method + ")";
        } }, Utils.canonical = function (path) { if (!path)
            return ""; let safeSuffix = pth.posix.normalize("/" + path.split("\\").join("/")); return pth.join(".", safeSuffix); }, Utils.zipnamefix = function (path) { if (!path)
            return ""; let safeSuffix = pth.posix.normalize("/" + path.split("\\").join("/")); return pth.posix.join(".", safeSuffix); }, Utils.findLast = function (arr, callback) { if (!Array.isArray(arr))
            throw TypeError("arr is not array"); let len = arr.length >>> 0; for (let i = len - 1; i >= 0; i--)
            if (callback(arr[i], i, arr))
                return arr[i]; }, Utils.sanitize = function (prefix, name) { prefix = pth.resolve(pth.normalize(prefix)); for (var parts = name.split("/"), i = 0, l = parts.length; i < l; i++) {
            var path = pth.normalize(pth.join(prefix, parts.slice(i, l).join(pth.sep)));
            if (0 === path.indexOf(prefix))
                return path;
        } return pth.normalize(pth.join(prefix, pth.basename(name))); }, Utils.toBuffer = function (input, encoder) { return Buffer.isBuffer(input) ? input : input instanceof Uint8Array ? Buffer.from(input) : "string" == typeof input ? encoder(input) : Buffer.alloc(0); }, Utils.readBigUInt64LE = function (buffer, index) { var slice = Buffer.from(buffer.slice(index, index + 8)); return slice.swap64(), parseInt(`0x${slice.toString("hex")}`); }, Utils.fromDOS2Date = function (val1) { return new Date((val1 >> 25 & 127) + 1980, Math.max((val1 >> 21 & 15) - 1, 0), Math.max(val1 >> 16 & 31, 1), val1 >> 11 & 31, val1 >> 5 & 63, (31 & val1) << 1); }, Utils.fromDate2DOS = function (val1) { let date = 0, time = 0; return val1.getFullYear() > 1979 && (date = (val1.getFullYear() - 1980 & 127) << 9 | val1.getMonth() + 1 << 5 | val1.getDate(), time = val1.getHours() << 11 | val1.getMinutes() << 5 | val1.getSeconds() >> 1), date << 16 | time; }, Utils.isWin = isWin, Utils.crcTable = crcTable; }, "./node_modules/adm-zip/zipEntry.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Utils = __webpack_require__("./node_modules/adm-zip/util/index.js"), Headers = __webpack_require__("./node_modules/adm-zip/headers/index.js"), Constants = Utils.Constants, Methods = __webpack_require__("./node_modules/adm-zip/methods/index.js"); module1.exports = function (options1, input) { var _centralHeader = new Headers.EntryHeader, _entryName = Buffer.alloc(0), _comment = Buffer.alloc(0), _isDirectory = !1, uncompressedData = null, _extra = Buffer.alloc(0), _extralocal = Buffer.alloc(0), _efs = !0; let decoder = "object" == typeof options1.decoder ? options1.decoder : Utils.decoder; function getCompressedDataFromZip() { return input && input instanceof Uint8Array ? (_extralocal = _centralHeader.loadLocalHeaderFromBinary(input), input.slice(_centralHeader.realDataOffset, _centralHeader.realDataOffset + _centralHeader.compressedSize)) : Buffer.alloc(0); } function crc32OK(data1) { if (_centralHeader.flags_desc) {
            let descriptor = {}, dataEndOffset = _centralHeader.realDataOffset + _centralHeader.compressedSize;
            if (input.readUInt32LE(dataEndOffset) == Constants.LOCSIG || input.readUInt32LE(dataEndOffset) == Constants.CENSIG)
                throw Utils.Errors.DESCRIPTOR_NOT_EXIST();
            if (input.readUInt32LE(dataEndOffset) == Constants.EXTSIG)
                descriptor.crc = input.readUInt32LE(dataEndOffset + Constants.EXTCRC), descriptor.compressedSize = input.readUInt32LE(dataEndOffset + Constants.EXTSIZ), descriptor.size = input.readUInt32LE(dataEndOffset + Constants.EXTLEN);
            else if (19280 === input.readUInt16LE(dataEndOffset + 12))
                descriptor.crc = input.readUInt32LE(dataEndOffset + Constants.EXTCRC - 4), descriptor.compressedSize = input.readUInt32LE(dataEndOffset + Constants.EXTSIZ - 4), descriptor.size = input.readUInt32LE(dataEndOffset + Constants.EXTLEN - 4);
            else
                throw Utils.Errors.DESCRIPTOR_UNKNOWN();
            if (descriptor.compressedSize !== _centralHeader.compressedSize || descriptor.size !== _centralHeader.size || descriptor.crc !== _centralHeader.crc)
                throw Utils.Errors.DESCRIPTOR_FAULTY();
            if (Utils.crc32(data1) !== descriptor.crc)
                return !1;
        }
        else if (Utils.crc32(data1) !== _centralHeader.localHeader.crc)
            return !1; return !0; } function decompress(async, callback, pass) { if (void 0 === callback && "string" == typeof async && (pass = async, async = void 0), _isDirectory)
            return async && callback && callback(Buffer.alloc(0), Utils.Errors.DIRECTORY_CONTENT_ERROR()), Buffer.alloc(0); var compressedData = getCompressedDataFromZip(); if (0 === compressedData.length)
            return async && callback && callback(compressedData), compressedData; if (_centralHeader.encrypted) {
            if ("string" != typeof pass && !Buffer.isBuffer(pass))
                throw Utils.Errors.INVALID_PASS_PARAM();
            compressedData = Methods.ZipCrypto.decrypt(compressedData, _centralHeader, pass);
        } var data1 = Buffer.alloc(_centralHeader.size); switch (_centralHeader.method) {
            case Utils.Constants.STORED:
                if (compressedData.copy(data1), crc32OK(data1))
                    return async && callback && callback(data1), data1;
                throw async && callback && callback(data1, Utils.Errors.BAD_CRC()), Utils.Errors.BAD_CRC();
            case Utils.Constants.DEFLATED:
                var inflater = new Methods.Inflater(compressedData, _centralHeader.size);
                if (async)
                    inflater.inflateAsync(function (result) { result.copy(result, 0), callback && (crc32OK(result) ? callback(result) : callback(result, Utils.Errors.BAD_CRC())); });
                else {
                    if (inflater.inflate(data1).copy(data1, 0), !crc32OK(data1))
                        throw Utils.Errors.BAD_CRC(`"${decoder.decode(_entryName)}"`);
                    return data1;
                }
                break;
            default: throw async && callback && callback(Buffer.alloc(0), Utils.Errors.UNKNOWN_METHOD()), Utils.Errors.UNKNOWN_METHOD();
        } } function compress(async, callback) { if ((!uncompressedData || !uncompressedData.length) && Buffer.isBuffer(input))
            return async && callback && callback(getCompressedDataFromZip()), getCompressedDataFromZip(); if (uncompressedData.length && !_isDirectory) {
            var compressedData;
            switch (_centralHeader.method) {
                case Utils.Constants.STORED: return _centralHeader.compressedSize = _centralHeader.size, compressedData = Buffer.alloc(uncompressedData.length), uncompressedData.copy(compressedData), async && callback && callback(compressedData), compressedData;
                default:
                case Utils.Constants.DEFLATED:
                    var deflater = new Methods.Deflater(uncompressedData);
                    if (async)
                        deflater.deflateAsync(function (data1) { compressedData = Buffer.alloc(data1.length), _centralHeader.compressedSize = data1.length, data1.copy(compressedData), callback && callback(compressedData); });
                    else {
                        var deflated = deflater.deflate();
                        return _centralHeader.compressedSize = deflated.length, deflated;
                    }
                    deflater = null;
            }
        }
        else {
            if (!async || !callback)
                return Buffer.alloc(0);
            callback(Buffer.alloc(0));
        } } function readUInt64LE(buffer, offset) { return (buffer.readUInt32LE(offset + 4) << 4) + buffer.readUInt32LE(offset); } return _efs = !!decoder.hasOwnProperty("efs") && decoder.efs, { get entryName() { return decoder.decode(_entryName); }, get rawEntryName() { return _entryName; }, set entryName(val) { var lastChar = (_entryName = Utils.toBuffer(val, decoder.encode))[_entryName.length - 1]; _isDirectory = 47 === lastChar || 92 === lastChar, _centralHeader.fileNameLength = _entryName.length; }, get efs() { if ("function" == typeof _efs)
                return _efs(this.entryName); return _efs; }, get extra() { return _extra; }, set extra(val) { _extra = val, _centralHeader.extraLength = val.length; try {
                for (var signature, size, part, offset = 0; offset + 4 < val.length;)
                    signature = val.readUInt16LE(offset), offset += 2, size = val.readUInt16LE(offset), offset += 2, part = val.slice(offset, offset + size), offset += size, Constants.ID_ZIP64 === signature && function (data1) { var size, compressedSize, offset, diskNumStart; data1.length >= Constants.EF_ZIP64_SCOMP && (size = readUInt64LE(data1, Constants.EF_ZIP64_SUNCOMP), _centralHeader.size === Constants.EF_ZIP64_OR_32 && (_centralHeader.size = size)), data1.length >= Constants.EF_ZIP64_RHO && (compressedSize = readUInt64LE(data1, Constants.EF_ZIP64_SCOMP), _centralHeader.compressedSize === Constants.EF_ZIP64_OR_32 && (_centralHeader.compressedSize = compressedSize)), data1.length >= Constants.EF_ZIP64_DSN && (offset = readUInt64LE(data1, Constants.EF_ZIP64_RHO), _centralHeader.offset === Constants.EF_ZIP64_OR_32 && (_centralHeader.offset = offset)), data1.length >= Constants.EF_ZIP64_DSN + 4 && (diskNumStart = data1.readUInt32LE(Constants.EF_ZIP64_DSN), _centralHeader.diskNumStart === Constants.EF_ZIP64_OR_16 && (_centralHeader.diskNumStart = diskNumStart)); }(part);
            }
            catch (error) {
                throw Utils.Errors.EXTRA_FIELD_PARSE_ERROR();
            } }, get comment() { return decoder.decode(_comment); }, set comment(val) { if (_centralHeader.commentLength = (_comment = Utils.toBuffer(val, decoder.encode)).length, _comment.length > 65535)
                throw Utils.Errors.COMMENT_TOO_LONG(); }, get name() { var n = decoder.decode(_entryName); return _isDirectory ? n.substr(n.length - 1).split("/").pop() : n.split("/").pop(); }, get isDirectory() { return _isDirectory; }, getCompressedData: function () { return compress(!1, null); }, getCompressedDataAsync: function (callback) { compress(!0, callback); }, setData: function (value) { uncompressedData = Utils.toBuffer(value, Utils.decoder.encode), !_isDirectory && uncompressedData.length ? (_centralHeader.size = uncompressedData.length, _centralHeader.method = Utils.Constants.DEFLATED, _centralHeader.crc = Utils.crc32(value), _centralHeader.changed = !0) : _centralHeader.method = Utils.Constants.STORED; }, getData: function (pass) { return _centralHeader.changed ? uncompressedData : decompress(!1, null, pass); }, getDataAsync: function (callback, pass) { _centralHeader.changed ? callback(uncompressedData) : decompress(!0, callback, pass); }, set attr(attr) { _centralHeader.attr = attr; }, get attr() { return _centralHeader.attr; }, set header(data) { _centralHeader.loadFromBinary(data); }, get header() { return _centralHeader; }, packCentralHeader: function () { _centralHeader.flags_efs = this.efs, _centralHeader.extraLength = _extra.length; var header = _centralHeader.centralHeaderToBinary(), addpos = Utils.Constants.CENHDR; return _entryName.copy(header, addpos), addpos += _entryName.length, _extra.copy(header, addpos), addpos += _centralHeader.extraLength, _comment.copy(header, addpos), header; }, packLocalHeader: function () { let addpos = 0; _centralHeader.flags_efs = this.efs, _centralHeader.extraLocalLength = _extralocal.length; let localHeaderBuf = _centralHeader.localHeaderToBinary(), localHeader = Buffer.alloc(localHeaderBuf.length + _entryName.length + _centralHeader.extraLocalLength); return localHeaderBuf.copy(localHeader, addpos), addpos += localHeaderBuf.length, _entryName.copy(localHeader, addpos), addpos += _entryName.length, _extralocal.copy(localHeader, addpos), addpos += _extralocal.length, localHeader; }, toJSON: function () { let bytes = function (nr) { return "<" + (nr && nr.length + " bytes buffer" || "null") + ">"; }; return { entryName: this.entryName, name: this.name, comment: this.comment, isDirectory: this.isDirectory, header: _centralHeader.toJSON(), compressedData: bytes(input), data: bytes(uncompressedData) }; }, toString: function () { return JSON.stringify(this.toJSON(), null, "	"); } }; }; }, "./node_modules/adm-zip/zipFile.js": (module1, __unused_webpack_exports, __webpack_require__) => { let ZipEntry = __webpack_require__("./node_modules/adm-zip/zipEntry.js"), Headers = __webpack_require__("./node_modules/adm-zip/headers/index.js"), Utils = __webpack_require__("./node_modules/adm-zip/util/index.js"); module1.exports = function (inBuffer, options1) { var entryList = [], entryTable = {}, _comment = Buffer.alloc(0), mainHeader = new Headers.MainHeader, loadedEntries = !1; let temporary = new Set, { noSort, decoder } = options1; function readEntries() { if (loadedEntries = !0, entryTable = {}, mainHeader.diskEntries > (inBuffer.length - mainHeader.offset) / Utils.Constants.CENHDR)
            throw Utils.Errors.DISK_ENTRY_TOO_LARGE(); entryList = Array(mainHeader.diskEntries); for (var index = mainHeader.offset, i = 0; i < entryList.length; i++) {
            var tmp = index, entry = new ZipEntry(options1, inBuffer);
            entry.header = inBuffer.slice(tmp, tmp += Utils.Constants.CENHDR), entry.entryName = inBuffer.slice(tmp, tmp += entry.header.fileNameLength), entry.header.extraLength && (entry.extra = inBuffer.slice(tmp, tmp += entry.header.extraLength)), entry.header.commentLength && (entry.comment = inBuffer.slice(tmp, tmp + entry.header.commentLength)), index += entry.header.centralHeaderSize, entryList[i] = entry, entryTable[entry.entryName] = entry;
        } temporary.clear(), function () { let foldersList = new Set; for (let elem of Object.keys(entryTable)) {
            let elements = elem.split("/");
            if (elements.pop(), elements.length)
                for (let i = 0; i < elements.length; i++) {
                    let sub = elements.slice(0, i + 1).join("/") + "/";
                    foldersList.add(sub);
                }
        } for (let elem of foldersList)
            if (!(elem in entryTable)) {
                let tempfolder = new ZipEntry(options1);
                tempfolder.entryName = elem, tempfolder.attr = 16, tempfolder.temporary = !0, entryList.push(tempfolder), entryTable[tempfolder.entryName] = tempfolder, temporary.add(tempfolder);
            } }(); } function sortEntries() { entryList.length > 1 && !noSort && entryList.sort((a, b) => a.entryName.toLowerCase().localeCompare(b.entryName.toLowerCase())); } return inBuffer ? function (readNow) { var i = inBuffer.length - Utils.Constants.ENDHDR, max = Math.max(0, i - 65535), n = max, endStart = inBuffer.length, endOffset = -1, commentEnd = 0; for ("boolean" == typeof options1.trailingSpace && options1.trailingSpace && (max = 0); i >= n; i--)
            if (80 === inBuffer[i]) {
                if (inBuffer.readUInt32LE(i) === Utils.Constants.ENDSIG) {
                    endOffset = i, commentEnd = i, endStart = i + Utils.Constants.ENDHDR, n = i - Utils.Constants.END64HDR;
                    continue;
                }
                if (inBuffer.readUInt32LE(i) === Utils.Constants.END64SIG) {
                    n = max;
                    continue;
                }
                if (inBuffer.readUInt32LE(i) === Utils.Constants.ZIP64SIG) {
                    endOffset = i, endStart = i + Utils.readBigUInt64LE(inBuffer, i + Utils.Constants.ZIP64SIZE) + Utils.Constants.ZIP64LEAD;
                    break;
                }
            } if (-1 == endOffset)
            throw Utils.Errors.INVALID_FORMAT(); mainHeader.loadFromBinary(inBuffer.slice(endOffset, endStart)), mainHeader.commentLength && (_comment = inBuffer.slice(commentEnd + Utils.Constants.ENDHDR)), readNow && readEntries(); }(options1.readEntries) : loadedEntries = !0, { get entries() { return loadedEntries || readEntries(), entryList.filter(e => !temporary.has(e)); }, get comment() { return decoder.decode(_comment); }, set comment(val) { mainHeader.commentLength = (_comment = Utils.toBuffer(val, decoder.encode)).length; }, getEntryCount: function () { return loadedEntries ? entryList.length : mainHeader.diskEntries; }, forEach: function (callback) { this.entries.forEach(callback); }, getEntry: function (entryName) { return loadedEntries || readEntries(), entryTable[entryName] || null; }, setEntry: function (entry) { loadedEntries || readEntries(), entryList.push(entry), entryTable[entry.entryName] = entry, mainHeader.totalEntries = entryList.length; }, deleteFile: function (entryName, withsubfolders = !0) { loadedEntries || readEntries(); let entry = entryTable[entryName]; this.getEntryChildren(entry, withsubfolders).map(child => child.entryName).forEach(this.deleteEntry); }, deleteEntry: function (entryName) { loadedEntries || readEntries(); let entry = entryTable[entryName], index = entryList.indexOf(entry); index >= 0 && (entryList.splice(index, 1), delete entryTable[entryName], mainHeader.totalEntries = entryList.length); }, getEntryChildren: function (entry, subfolders = !0) { if (loadedEntries || readEntries(), "object" == typeof entry)
                if (!entry.isDirectory || !subfolders)
                    return [entry];
                else {
                    let list = [], name = entry.entryName;
                    for (let zipEntry of entryList)
                        zipEntry.entryName.startsWith(name) && list.push(zipEntry);
                    return list;
                } return []; }, getChildCount: function (entry) { if (entry && entry.isDirectory) {
                let list = this.getEntryChildren(entry);
                return list.includes(entry) ? list.length - 1 : list.length;
            } return 0; }, compressToBuffer: function () { loadedEntries || readEntries(), sortEntries(); let dataBlock = [], headerBlocks = [], totalSize = 0, dindex = 0; mainHeader.size = 0, mainHeader.offset = 0; let totalEntries = 0; for (let entry of this.entries) {
                let compressedData = entry.getCompressedData();
                entry.header.offset = dindex;
                let localHeader = entry.packLocalHeader(), dataLength = localHeader.length + compressedData.length;
                dindex += dataLength, dataBlock.push(localHeader), dataBlock.push(compressedData);
                let centralHeader = entry.packCentralHeader();
                headerBlocks.push(centralHeader), mainHeader.size += centralHeader.length, totalSize += dataLength + centralHeader.length, totalEntries++;
            } totalSize += mainHeader.mainHeaderSize, mainHeader.offset = dindex, mainHeader.totalEntries = totalEntries, dindex = 0; let outBuffer = Buffer.alloc(totalSize); for (let content of dataBlock)
                content.copy(outBuffer, dindex), dindex += content.length; for (let content of headerBlocks)
                content.copy(outBuffer, dindex), dindex += content.length; let mh = mainHeader.toBinary(); return _comment && _comment.copy(mh, Utils.Constants.ENDHDR), mh.copy(outBuffer, dindex), inBuffer = outBuffer, loadedEntries = !1, outBuffer; }, toAsyncBuffer: function (onSuccess, onFail, onItemStart, onItemEnd) { try {
                loadedEntries || readEntries(), sortEntries();
                let dataBlock = [], centralHeaders = [], totalSize = 0, dindex = 0, totalEntries = 0;
                mainHeader.size = 0, mainHeader.offset = 0;
                let compress2Buffer = function (entryLists) { if (entryLists.length > 0) {
                    let entry = entryLists.shift(), name = entry.entryName + entry.extra.toString();
                    onItemStart && onItemStart(name), entry.getCompressedDataAsync(function (compressedData) { onItemEnd && onItemEnd(name), entry.header.offset = dindex; let localHeader = entry.packLocalHeader(), dataLength = localHeader.length + compressedData.length; dindex += dataLength, dataBlock.push(localHeader), dataBlock.push(compressedData); let centalHeader = entry.packCentralHeader(); centralHeaders.push(centalHeader), mainHeader.size += centalHeader.length, totalSize += dataLength + centalHeader.length, totalEntries++, compress2Buffer(entryLists); });
                }
                else {
                    totalSize += mainHeader.mainHeaderSize, mainHeader.offset = dindex, mainHeader.totalEntries = totalEntries, dindex = 0;
                    let outBuffer = Buffer.alloc(totalSize);
                    dataBlock.forEach(function (content) { content.copy(outBuffer, dindex), dindex += content.length; }), centralHeaders.forEach(function (content) { content.copy(outBuffer, dindex), dindex += content.length; });
                    let mh = mainHeader.toBinary();
                    _comment && _comment.copy(mh, Utils.Constants.ENDHDR), mh.copy(outBuffer, dindex), inBuffer = outBuffer, loadedEntries = !1, onSuccess(outBuffer);
                } };
                compress2Buffer(Array.from(this.entries));
            }
            catch (e) {
                onFail(e);
            } } }; }; }, "./node_modules/array-buffer-byte-length/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $byteLength = __webpack_require__("./node_modules/call-bound/index.js")("ArrayBuffer.prototype.byteLength", !0), isArrayBuffer = __webpack_require__("./node_modules/is-array-buffer/index.js");
            module1.exports = function (ab) { return isArrayBuffer(ab) ? $byteLength ? $byteLength(ab) : ab.byteLength : NaN; };
        }, "./node_modules/available-typed-arrays/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var possibleNames = __webpack_require__("./node_modules/possible-typed-array-names/index.js"), g = "undefined" == typeof globalThis ? global : globalThis;
            module1.exports = function () { for (var out = [], i = 0; i < possibleNames.length; i++)
                "function" == typeof g[possibleNames[i]] && (out[out.length] = possibleNames[i]); return out; };
        }, "./node_modules/call-bind-apply-helpers/actualApply.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var bind = __webpack_require__("./node_modules/function-bind/index.js"), $apply = __webpack_require__("./node_modules/call-bind-apply-helpers/functionApply.js"), $call = __webpack_require__("./node_modules/call-bind-apply-helpers/functionCall.js");
            module1.exports = __webpack_require__("./node_modules/call-bind-apply-helpers/reflectApply.js") || bind.call($call, $apply);
        }, "./node_modules/call-bind-apply-helpers/applyBind.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var bind = __webpack_require__("./node_modules/function-bind/index.js"), $apply = __webpack_require__("./node_modules/call-bind-apply-helpers/functionApply.js"), actualApply = __webpack_require__("./node_modules/call-bind-apply-helpers/actualApply.js");
            module1.exports = function () { return actualApply(bind, $apply, arguments); };
        }, "./node_modules/call-bind-apply-helpers/functionApply.js": module1 => {
            "use strict";
            module1.exports = Function.prototype.apply;
        }, "./node_modules/call-bind-apply-helpers/functionCall.js": module1 => {
            "use strict";
            module1.exports = Function.prototype.call;
        }, "./node_modules/call-bind-apply-helpers/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var bind = __webpack_require__("./node_modules/function-bind/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $call = __webpack_require__("./node_modules/call-bind-apply-helpers/functionCall.js"), $actualApply = __webpack_require__("./node_modules/call-bind-apply-helpers/actualApply.js");
            module1.exports = function (args) { if (args.length < 1 || "function" != typeof args[0])
                throw new $TypeError("a function is required"); return $actualApply(bind, $call, args); };
        }, "./node_modules/call-bind-apply-helpers/reflectApply.js": module1 => {
            "use strict";
            module1.exports = "undefined" != typeof Reflect && Reflect && Reflect.apply;
        }, "./node_modules/call-bind/callBound.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), callBind = __webpack_require__("./node_modules/call-bind/index.js"), $indexOf = callBind(GetIntrinsic("String.prototype.indexOf"));
            module1.exports = function (name, allowMissing) { var intrinsic = GetIntrinsic(name, !!allowMissing); return "function" == typeof intrinsic && $indexOf(name, ".prototype.") > -1 ? callBind(intrinsic) : intrinsic; };
        }, "./node_modules/call-bind/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var setFunctionLength = __webpack_require__("./node_modules/set-function-length/index.js"), $defineProperty = __webpack_require__("./node_modules/es-define-property/index.js"), callBindBasic = __webpack_require__("./node_modules/call-bind-apply-helpers/index.js"), applyBind = __webpack_require__("./node_modules/call-bind-apply-helpers/applyBind.js");
            module1.exports = function (originalFunction) { var func = callBindBasic(arguments), adjustedLength = originalFunction.length - (arguments.length - 1); return setFunctionLength(func, 1 + (adjustedLength > 0 ? adjustedLength : 0), !0); }, $defineProperty ? $defineProperty(module1.exports, "apply", { value: applyBind }) : module1.exports.apply = applyBind;
        }, "./node_modules/call-bound/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), callBindBasic = __webpack_require__("./node_modules/call-bind-apply-helpers/index.js"), $indexOf = callBindBasic([GetIntrinsic("%String.prototype.indexOf%")]);
            module1.exports = function (name, allowMissing) { var intrinsic = GetIntrinsic(name, !!allowMissing); return "function" == typeof intrinsic && $indexOf(name, ".prototype.") > -1 ? callBindBasic([intrinsic]) : intrinsic; };
        }, "./node_modules/charenc/charenc.js": module1 => { var charenc = { utf8: { stringToBytes: function (str) { return charenc.bin.stringToBytes(unescape(encodeURIComponent(str))); }, bytesToString: function (bytes) { return decodeURIComponent(escape(charenc.bin.bytesToString(bytes))); } }, bin: { stringToBytes: function (str) { for (var bytes = [], i = 0; i < str.length; i++)
                    bytes.push(255 & str.charCodeAt(i)); return bytes; }, bytesToString: function (bytes) { for (var str = [], i = 0; i < bytes.length; i++)
                    str.push(String.fromCharCode(bytes[i])); return str.join(""); } } }; module1.exports = charenc; }, "./node_modules/crypt/crypt.js": module1 => { !function () { var base64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", crypt = { rotl: function (n, b) { return n << b | n >>> 32 - b; }, rotr: function (n, b) { return n << 32 - b | n >>> b; }, endian: function (n) { if (n.constructor == Number)
                return 0xff00ff & crypt.rotl(n, 8) | 0xff00ff00 & crypt.rotl(n, 24); for (var i = 0; i < n.length; i++)
                n[i] = crypt.endian(n[i]); return n; }, randomBytes: function (n) { for (var bytes = []; n > 0; n--)
                bytes.push(Math.floor(256 * Math.random())); return bytes; }, bytesToWords: function (bytes) { for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
                words[b >>> 5] |= bytes[i] << 24 - b % 32; return words; }, wordsToBytes: function (words) { for (var bytes = [], b = 0; b < 32 * words.length; b += 8)
                bytes.push(words[b >>> 5] >>> 24 - b % 32 & 255); return bytes; }, bytesToHex: function (bytes) { for (var hex = [], i = 0; i < bytes.length; i++)
                hex.push((bytes[i] >>> 4).toString(16)), hex.push((15 & bytes[i]).toString(16)); return hex.join(""); }, hexToBytes: function (hex) { for (var bytes = [], c = 0; c < hex.length; c += 2)
                bytes.push(parseInt(hex.substr(c, 2), 16)); return bytes; }, bytesToBase64: function (bytes) { for (var base64 = [], i = 0; i < bytes.length; i += 3)
                for (var triplet = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2], j = 0; j < 4; j++)
                    8 * i + 6 * j <= 8 * bytes.length ? base64.push(base64map.charAt(triplet >>> 6 * (3 - j) & 63)) : base64.push("="); return base64.join(""); }, base64ToBytes: function (base64) { base64 = base64.replace(/[^A-Z0-9+\/]/ig, ""); for (var bytes = [], i = 0, imod4 = 0; i < base64.length; imod4 = ++i % 4)
                0 != imod4 && bytes.push((base64map.indexOf(base64.charAt(i - 1)) & Math.pow(2, -2 * imod4 + 8) - 1) << 2 * imod4 | base64map.indexOf(base64.charAt(i)) >>> 6 - 2 * imod4); return bytes; } }; module1.exports = crypt; }(); }, "./node_modules/csv-parse/lib/api/CsvError.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { CsvError: () => CsvError });
            class CsvError extends Error {
                constructor(code, message, options1, ...contexts) { for (let context of (Array.isArray(message) && (message = message.join(" ").trim()), super(message), void 0 !== Error.captureStackTrace && Error.captureStackTrace(this, CsvError), this.code = code, contexts))
                    for (let key in context) {
                        let value = context[key];
                        this[key] = Buffer.isBuffer(value) ? value.toString(options1.encoding) : null == value ? value : JSON.parse(JSON.stringify(value));
                    } }
            }
        }, "./node_modules/csv-parse/lib/api/index.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { CsvError: () => _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError, transform: () => transform });
            var _normalize_columns_array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/api/normalize_columns_array.js"), _init_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-parse/lib/api/init_state.js"), _normalize_options_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/csv-parse/lib/api/normalize_options.js"), _CsvError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/csv-parse/lib/api/CsvError.js");
            let isRecordEmpty = function (record) { return record.every(field => null == field || field.toString && "" === field.toString().trim()); }, boms = { utf8: Buffer.from([239, 187, 191]), utf16le: Buffer.from([255, 254]) }, transform = function (original_options = {}) {
                let options1 = (0, _normalize_options_js__WEBPACK_IMPORTED_MODULE_2__.normalize_options)(original_options);
                return { info: { bytes: 0, comment_lines: 0, empty_lines: 0, invalid_field_length: 0, lines: 1, records: 0 }, original_options: original_options, options: options1, state: (0, _init_state_js__WEBPACK_IMPORTED_MODULE_1__.init_state)(options1), __needMoreData: function (i, bufLen, end) {
                        if (end)
                            return !1;
                        let { encoding, escape: escape1, quote } = this.options, { quoting, needMoreDataSize, recordDelimiterMaxLength } = this.state;
                        return bufLen - i - 1 < Math.max(needMoreDataSize, 0 === recordDelimiterMaxLength ? Buffer.from(`\r
`, encoding).length : recordDelimiterMaxLength, quoting ? (null === escape1 ? 0 : escape1.length) + quote.length : 0, quoting ? quote.length + recordDelimiterMaxLength : 0);
                    }, parse: function (nextBuf, end, push, close) { let buf, pos, { bom, comment_no_infix, encoding, from_line, ltrim, max_record_size, raw, relax_quotes, rtrim, skip_empty_lines, to, to_line } = this.options, { comment, escape: escape1, quote, record_delimiter } = this.options, { bomSkipped, previousBuf, rawBuffer, escapeIsQuote } = this.state; if (void 0 === previousBuf)
                        if (void 0 === nextBuf)
                            return void close();
                        else
                            buf = nextBuf;
                    else
                        buf = void 0 !== previousBuf && void 0 === nextBuf ? previousBuf : Buffer.concat([previousBuf, nextBuf]); if (!1 === bomSkipped)
                        if (!1 === bom)
                            this.state.bomSkipped = !0;
                        else if (buf.length < 3) {
                            if (!1 === end) {
                                this.state.previousBuf = buf;
                                return;
                            }
                        }
                        else {
                            for (let encoding in boms)
                                if (0 === boms[encoding].compare(buf, 0, boms[encoding].length)) {
                                    let bomLength = boms[encoding].length;
                                    this.state.bufBytesStart += bomLength, buf = buf.slice(bomLength), this.options = (0, _normalize_options_js__WEBPACK_IMPORTED_MODULE_2__.normalize_options)({ ...this.original_options, encoding: encoding }), { comment, escape: escape1, quote } = this.options;
                                    break;
                                }
                            this.state.bomSkipped = !0;
                        } let bufLen = buf.length; for (pos = 0; pos < bufLen && !this.__needMoreData(pos, bufLen, end); pos++) {
                        if (!0 === this.state.wasRowDelimiter && (this.info.lines++, this.state.wasRowDelimiter = !1), -1 !== to_line && this.info.lines > to_line) {
                            this.state.stop = !0, close();
                            return;
                        }
                        !1 === this.state.quoting && 0 === record_delimiter.length && this.__autoDiscoverRecordDelimiter(buf, pos) && (record_delimiter = this.options.record_delimiter);
                        let chr = buf[pos];
                        if (!0 === raw && rawBuffer.append(chr), (13 === chr || 10 === chr) && !1 === this.state.wasRowDelimiter && (this.state.wasRowDelimiter = !0), !0 === this.state.escaping)
                            this.state.escaping = !1;
                        else {
                            if (null !== escape1 && !0 === this.state.quoting && this.__isEscape(buf, pos, chr) && pos + escape1.length < bufLen)
                                if (escapeIsQuote) {
                                    if (this.__isQuote(buf, pos + escape1.length)) {
                                        this.state.escaping = !0, pos += escape1.length - 1;
                                        continue;
                                    }
                                }
                                else {
                                    this.state.escaping = !0, pos += escape1.length - 1;
                                    continue;
                                }
                            if (!1 === this.state.commenting && this.__isQuote(buf, pos))
                                if (!0 === this.state.quoting) {
                                    let nextChr = buf[pos + quote.length], isNextChrTrimable = rtrim && this.__isCharTrimable(buf, pos + quote.length), isNextChrComment = null !== comment && this.__compareBytes(comment, buf, pos + quote.length, nextChr), isNextChrDelimiter = this.__isDelimiter(buf, pos + quote.length, nextChr), isNextChrRecordDelimiter = 0 === record_delimiter.length ? this.__autoDiscoverRecordDelimiter(buf, pos + quote.length) : this.__isRecordDelimiter(nextChr, buf, pos + quote.length);
                                    if (null !== escape1 && this.__isEscape(buf, pos, chr) && this.__isQuote(buf, pos + escape1.length))
                                        pos += escape1.length - 1;
                                    else if (!nextChr || isNextChrDelimiter || isNextChrRecordDelimiter || isNextChrComment || isNextChrTrimable) {
                                        this.state.quoting = !1, this.state.wasQuoting = !0, pos += quote.length - 1;
                                        continue;
                                    }
                                    else if (!1 === relax_quotes) {
                                        let err = this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_INVALID_CLOSING_QUOTE", ["Invalid Closing Quote:", `got "${String.fromCharCode(nextChr)}"`, `at line ${this.info.lines}`, "instead of delimiter, record delimiter, trimable character", "(if activated) or comment"], this.options, this.__infoField()));
                                        if (void 0 !== err)
                                            return err;
                                    }
                                    else
                                        this.state.quoting = !1, this.state.wasQuoting = !0, this.state.field.prepend(quote), pos += quote.length - 1;
                                }
                                else if (0 !== this.state.field.length) {
                                    if (!1 === relax_quotes) {
                                        let info = this.__infoField(), bom = Object.keys(boms).map(b => !!boms[b].equals(this.state.field.toString()) && b).filter(Boolean)[0], err = this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("INVALID_OPENING_QUOTE", ["Invalid Opening Quote:", `a quote is found on field ${JSON.stringify(info.column)} at line ${info.lines}, value is ${JSON.stringify(this.state.field.toString(encoding))}`, bom ? `(${bom} bom)` : void 0], this.options, info, { field: this.state.field }));
                                        if (void 0 !== err)
                                            return err;
                                    }
                                }
                                else {
                                    this.state.quoting = !0, pos += quote.length - 1;
                                    continue;
                                }
                            if (!1 === this.state.quoting) {
                                let recordDelimiterLength = this.__isRecordDelimiter(chr, buf, pos);
                                if (0 !== recordDelimiterLength) {
                                    if (this.state.commenting && !1 === this.state.wasQuoting && 0 === this.state.record.length && 0 === this.state.field.length)
                                        this.info.comment_lines++;
                                    else {
                                        if (!1 === this.state.enabled && this.info.lines + +(!0 === this.state.wasRowDelimiter) >= from_line) {
                                            this.state.enabled = !0, this.__resetField(), this.__resetRecord(), pos += recordDelimiterLength - 1;
                                            continue;
                                        }
                                        if (!0 === skip_empty_lines && !1 === this.state.wasQuoting && 0 === this.state.record.length && 0 === this.state.field.length) {
                                            this.info.empty_lines++, pos += recordDelimiterLength - 1;
                                            continue;
                                        }
                                        this.info.bytes = this.state.bufBytesStart + pos;
                                        let errField = this.__onField();
                                        if (void 0 !== errField)
                                            return errField;
                                        this.info.bytes = this.state.bufBytesStart + pos + recordDelimiterLength;
                                        let errRecord = this.__onRecord(push);
                                        if (void 0 !== errRecord)
                                            return errRecord;
                                        if (-1 !== to && this.info.records >= to) {
                                            this.state.stop = !0, close();
                                            return;
                                        }
                                    }
                                    this.state.commenting = !1, pos += recordDelimiterLength - 1;
                                    continue;
                                }
                                if (this.state.commenting)
                                    continue;
                                if (null !== comment && (!1 === comment_no_infix || 0 === this.state.record.length && 0 === this.state.field.length) && 0 !== this.__compareBytes(comment, buf, pos, chr)) {
                                    this.state.commenting = !0;
                                    continue;
                                }
                                let delimiterLength = this.__isDelimiter(buf, pos, chr);
                                if (0 !== delimiterLength) {
                                    this.info.bytes = this.state.bufBytesStart + pos;
                                    let errField = this.__onField();
                                    if (void 0 !== errField)
                                        return errField;
                                    pos += delimiterLength - 1;
                                    continue;
                                }
                            }
                        }
                        if (!1 === this.state.commenting && 0 !== max_record_size && this.state.record_length + this.state.field.length > max_record_size)
                            return this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_MAX_RECORD_SIZE", ["Max Record Size:", "record exceed the maximum number of tolerated bytes", `of ${max_record_size}`, `at line ${this.info.lines}`], this.options, this.__infoField()));
                        let lappend = !1 === ltrim || !0 === this.state.quoting || 0 !== this.state.field.length || !this.__isCharTrimable(buf, pos), rappend = !1 === rtrim || !1 === this.state.wasQuoting;
                        if (!0 === lappend && !0 === rappend)
                            this.state.field.append(chr);
                        else {
                            if (!0 === rtrim && !this.__isCharTrimable(buf, pos))
                                return this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_NON_TRIMABLE_CHAR_AFTER_CLOSING_QUOTE", ["Invalid Closing Quote:", "found non trimable byte after quote", `at line ${this.info.lines}`], this.options, this.__infoField()));
                            !1 === lappend && (pos += this.__isCharTrimable(buf, pos) - 1);
                            continue;
                        }
                    } if (!0 === end)
                        if (!0 === this.state.quoting) {
                            let err = this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_QUOTE_NOT_CLOSED", ["Quote Not Closed:", `the parsing is finished with an opening quote at line ${this.info.lines}`], this.options, this.__infoField()));
                            if (void 0 !== err)
                                return err;
                        }
                        else if (!0 === this.state.wasQuoting || 0 !== this.state.record.length || 0 !== this.state.field.length) {
                            this.info.bytes = this.state.bufBytesStart + pos;
                            let errField = this.__onField();
                            if (void 0 !== errField)
                                return errField;
                            let errRecord = this.__onRecord(push);
                            if (void 0 !== errRecord)
                                return errRecord;
                        }
                        else
                            !0 === this.state.wasRowDelimiter ? this.info.empty_lines++ : !0 === this.state.commenting && this.info.comment_lines++;
                    else
                        this.state.bufBytesStart += pos, this.state.previousBuf = buf.slice(pos); !0 === this.state.wasRowDelimiter && (this.info.lines++, this.state.wasRowDelimiter = !1); }, __onRecord: function (push) { let { columns, group_columns_by_name, encoding, info, from, relax_column_count, relax_column_count_less, relax_column_count_more, raw, skip_records_with_empty_values } = this.options, { enabled, record } = this.state; if (!1 === enabled)
                        return this.__resetRecord(); let recordLength = record.length; if (!0 === columns)
                        return !0 === skip_records_with_empty_values && isRecordEmpty(record) ? void this.__resetRecord() : this.__firstLineToColumns(record); if (!1 === columns && 0 === this.info.records && (this.state.expectedRecordLength = recordLength), recordLength !== this.state.expectedRecordLength) {
                        let err = !1 === columns ? new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_RECORD_INCONSISTENT_FIELDS_LENGTH", ["Invalid Record Length:", `expect ${this.state.expectedRecordLength},`, `got ${recordLength} on line ${this.info.lines}`], this.options, this.__infoField(), { record: record }) : new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_RECORD_INCONSISTENT_COLUMNS", ["Invalid Record Length:", `columns length is ${columns.length},`, `got ${recordLength} on line ${this.info.lines}`], this.options, this.__infoField(), { record: record });
                        if (!0 === relax_column_count || !0 === relax_column_count_less && recordLength < this.state.expectedRecordLength || !0 === relax_column_count_more && recordLength > this.state.expectedRecordLength)
                            this.info.invalid_field_length++, this.state.error = err;
                        else {
                            let finalErr = this.__error(err);
                            if (finalErr)
                                return finalErr;
                        }
                    } if (!0 === skip_records_with_empty_values && isRecordEmpty(record))
                        return void this.__resetRecord(); if (!0 === this.state.recordHasError) {
                        this.__resetRecord(), this.state.recordHasError = !1;
                        return;
                    } if (this.info.records++, 1 === from || this.info.records >= from) {
                        let { objname } = this.options;
                        if (!1 !== columns) {
                            let obj = {};
                            for (let i = 0, l = record.length; i < l; i++)
                                void 0 === columns[i] || columns[i].disabled || (!0 === group_columns_by_name && void 0 !== obj[columns[i].name] ? Array.isArray(obj[columns[i].name]) ? obj[columns[i].name] = obj[columns[i].name].concat(record[i]) : obj[columns[i].name] = [obj[columns[i].name], record[i]] : obj[columns[i].name] = record[i]);
                            if (!0 === raw || !0 === info) {
                                let extRecord = Object.assign({ record: obj }, !0 === raw ? { raw: this.state.rawBuffer.toString(encoding) } : {}, !0 === info ? { info: this.__infoRecord() } : {}), err = this.__push(void 0 === objname ? extRecord : [obj[objname], extRecord], push);
                                if (err)
                                    return err;
                            }
                            else {
                                let err = this.__push(void 0 === objname ? obj : [obj[objname], obj], push);
                                if (err)
                                    return err;
                            }
                        }
                        else if (!0 === raw || !0 === info) {
                            let extRecord = Object.assign({ record: record }, !0 === raw ? { raw: this.state.rawBuffer.toString(encoding) } : {}, !0 === info ? { info: this.__infoRecord() } : {}), err = this.__push(void 0 === objname ? extRecord : [record[objname], extRecord], push);
                            if (err)
                                return err;
                        }
                        else {
                            let err = this.__push(void 0 === objname ? record : [record[objname], record], push);
                            if (err)
                                return err;
                        }
                    } this.__resetRecord(); }, __firstLineToColumns: function (record) { let { firstLineToHeaders } = this.state; try {
                        let headers = void 0 === firstLineToHeaders ? record : firstLineToHeaders.call(null, record);
                        if (!Array.isArray(headers))
                            return this.__error(new _CsvError_js__WEBPACK_IMPORTED_MODULE_3__.CsvError("CSV_INVALID_COLUMN_MAPPING", ["Invalid Column Mapping:", "expect an array from column function,", `got ${JSON.stringify(headers)}`], this.options, this.__infoField(), { headers: headers }));
                        let normalizedHeaders = (0, _normalize_columns_array_js__WEBPACK_IMPORTED_MODULE_0__.normalize_columns_array)(headers);
                        this.state.expectedRecordLength = normalizedHeaders.length, this.options.columns = normalizedHeaders, this.__resetRecord();
                        return;
                    }
                    catch (err) {
                        return err;
                    } }, __resetRecord: function () { !0 === this.options.raw && this.state.rawBuffer.reset(), this.state.error = void 0, this.state.record = [], this.state.record_length = 0; }, __onField: function () { let { cast, encoding, rtrim, max_record_size } = this.options, { enabled, wasQuoting } = this.state; if (!1 === enabled)
                        return this.__resetField(); let field = this.state.field.toString(encoding); if (!0 === rtrim && !1 === wasQuoting && (field = field.trimRight()), !0 === cast) {
                        let [err, f] = this.__cast(field);
                        if (void 0 !== err)
                            return err;
                        field = f;
                    } this.state.record.push(field), 0 !== max_record_size && "string" == typeof field && (this.state.record_length += field.length), this.__resetField(); }, __resetField: function () { this.state.field.reset(), this.state.wasQuoting = !1; }, __push: function (record, push) { let { on_record } = this.options; if (void 0 !== on_record) {
                        let info = this.__infoRecord();
                        try {
                            record = on_record.call(null, record, info);
                        }
                        catch (err) {
                            return err;
                        }
                        if (null == record)
                            return;
                    } push(record); }, __cast: function (field) { let { columns, relax_column_count } = this.options; if (!0 === Array.isArray(columns) && relax_column_count && this.options.columns.length <= this.state.record.length)
                        return [void 0, void 0]; if (null !== this.state.castField)
                        try {
                            let info = this.__infoField();
                            return [void 0, this.state.castField.call(null, field, info)];
                        }
                        catch (err) {
                            return [err];
                        } if (this.__isFloat(field))
                        return [void 0, parseFloat(field)]; if (!1 !== this.options.cast_date) {
                        let info = this.__infoField();
                        return [void 0, this.options.cast_date.call(null, field, info)];
                    } return [void 0, field]; }, __isCharTrimable: function (buf, pos) { let { timchars } = this.state; loop1: for (let i = 0; i < timchars.length; i++) {
                        let timchar = timchars[i];
                        for (let j = 0; j < timchar.length; j++)
                            if (timchar[j] !== buf[pos + j])
                                continue loop1;
                        return timchar.length;
                    } return 0; }, __isFloat: function (value) { return value - parseFloat(value) + 1 >= 0; }, __compareBytes: function (sourceBuf, targetBuf, targetPos, firstByte) { if (sourceBuf[0] !== firstByte)
                        return 0; let sourceLength = sourceBuf.length; for (let i = 1; i < sourceLength; i++)
                        if (sourceBuf[i] !== targetBuf[targetPos + i])
                            return 0; return sourceLength; }, __isDelimiter: function (buf, pos, chr) { let { delimiter, ignore_last_delimiters } = this.options; if (!0 === ignore_last_delimiters && this.state.record.length === this.options.columns.length - 1 || !1 !== ignore_last_delimiters && "number" == typeof ignore_last_delimiters && this.state.record.length === ignore_last_delimiters - 1)
                        return 0; loop1: for (let i = 0; i < delimiter.length; i++) {
                        let del = delimiter[i];
                        if (del[0] === chr) {
                            for (let j = 1; j < del.length; j++)
                                if (del[j] !== buf[pos + j])
                                    continue loop1;
                            return del.length;
                        }
                    } return 0; }, __isRecordDelimiter: function (chr, buf, pos) { let { record_delimiter } = this.options, recordDelimiterLength = record_delimiter.length; loop1: for (let i = 0; i < recordDelimiterLength; i++) {
                        let rd = record_delimiter[i], rdLength = rd.length;
                        if (rd[0] === chr) {
                            for (let j = 1; j < rdLength; j++)
                                if (rd[j] !== buf[pos + j])
                                    continue loop1;
                            return rd.length;
                        }
                    } return 0; }, __isEscape: function (buf, pos, chr) { let { escape: escape1 } = this.options; if (null === escape1)
                        return !1; let l = escape1.length; if (escape1[0] === chr) {
                        for (let i = 0; i < l; i++)
                            if (escape1[i] !== buf[pos + i])
                                return !1;
                        return !0;
                    } return !1; }, __isQuote: function (buf, pos) { let { quote } = this.options; if (null === quote)
                        return !1; let l = quote.length; for (let i = 0; i < l; i++)
                        if (quote[i] !== buf[pos + i])
                            return !1; return !0; }, __autoDiscoverRecordDelimiter: function (buf, pos) {
                        let { encoding } = this.options, rds = [Buffer.from(`\r
`, encoding), Buffer.from(`
`, encoding), Buffer.from("\r", encoding)];
                        loop: for (let i = 0; i < rds.length; i++) {
                            let l = rds[i].length;
                            for (let j = 0; j < l; j++)
                                if (rds[i][j] !== buf[pos + j])
                                    continue loop;
                            return this.options.record_delimiter.push(rds[i]), this.state.recordDelimiterMaxLength = rds[i].length, rds[i].length;
                        }
                        return 0;
                    }, __error: function (msg) { let { encoding, raw, skip_records_with_error } = this.options, err = "string" == typeof msg ? Error(msg) : msg; if (!skip_records_with_error)
                        return err; this.state.recordHasError = !0, void 0 !== this.options.on_skip && this.options.on_skip(err, raw ? this.state.rawBuffer.toString(encoding) : void 0); }, __infoDataSet: function () { return { ...this.info, columns: this.options.columns }; }, __infoRecord: function () { let { columns, raw, encoding } = this.options; return { ...this.__infoDataSet(), error: this.state.error, header: !0 === columns, index: this.state.record.length, raw: raw ? this.state.rawBuffer.toString(encoding) : void 0 }; }, __infoField: function () { let { columns } = this.options, isColumns = Array.isArray(columns); return { ...this.__infoRecord(), column: !0 === isColumns ? columns.length > this.state.record.length ? columns[this.state.record.length].name : null : this.state.record.length, quoting: this.state.wasQuoting }; } };
            };
        }, "./node_modules/csv-parse/lib/api/init_state.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { init_state: () => init_state });
            var _utils_ResizeableBuffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/utils/ResizeableBuffer.js");
            let init_state = function (options1) { return { bomSkipped: !1, bufBytesStart: 0, castField: options1.cast_function, commenting: !1, error: void 0, enabled: 1 === options1.from_line, escaping: !1, escapeIsQuote: Buffer.isBuffer(options1.escape) && Buffer.isBuffer(options1.quote) && 0 === Buffer.compare(options1.escape, options1.quote), expectedRecordLength: Array.isArray(options1.columns) ? options1.columns.length : void 0, field: new _utils_ResizeableBuffer_js__WEBPACK_IMPORTED_MODULE_0__.default(20), firstLineToHeaders: options1.cast_first_line_to_header, needMoreDataSize: Math.max(null !== options1.comment ? options1.comment.length : 0, ...options1.delimiter.map(delimiter => delimiter.length), null !== options1.quote ? options1.quote.length : 0), previousBuf: void 0, quoting: !1, stop: !1, rawBuffer: new _utils_ResizeableBuffer_js__WEBPACK_IMPORTED_MODULE_0__.default(100), record: [], recordHasError: !1, record_length: 0, recordDelimiterMaxLength: 0 === options1.record_delimiter.length ? 0 : Math.max(...options1.record_delimiter.map(v => v.length)), trimChars: [Buffer.from(" ", options1.encoding)[0], Buffer.from("	", options1.encoding)[0]], wasQuoting: !1, wasRowDelimiter: !1, timchars: [Buffer.from(Buffer.from([13], "utf8").toString(), options1.encoding), Buffer.from(Buffer.from([10], "utf8").toString(), options1.encoding), Buffer.from(Buffer.from([12], "utf8").toString(), options1.encoding), Buffer.from(Buffer.from([32], "utf8").toString(), options1.encoding), Buffer.from(Buffer.from([9], "utf8").toString(), options1.encoding)] }; };
        }, "./node_modules/csv-parse/lib/api/normalize_columns_array.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalize_columns_array: () => normalize_columns_array });
            var _CsvError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/api/CsvError.js"), _utils_is_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-parse/lib/utils/is_object.js");
            let normalize_columns_array = function (columns) { let normalizedColumns = []; for (let i = 0, l = columns.length; i < l; i++) {
                let column = columns[i];
                if (null == column || !1 === column)
                    normalizedColumns[i] = { disabled: !0 };
                else if ("string" == typeof column)
                    normalizedColumns[i] = { name: column };
                else if ((0, _utils_is_object_js__WEBPACK_IMPORTED_MODULE_1__.is_object)(column)) {
                    if ("string" != typeof column.name)
                        throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_OPTION_COLUMNS_MISSING_NAME", ["Option columns missing name:", `property "name" is required at position ${i}`, "when column is an object literal"]);
                    normalizedColumns[i] = column;
                }
                else
                    throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_INVALID_COLUMN_DEFINITION", ["Invalid column definition:", "expect a string or a literal object,", `got ${JSON.stringify(column)} at position ${i}`]);
            } return normalizedColumns; };
        }, "./node_modules/csv-parse/lib/api/normalize_options.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalize_options: () => normalize_options });
            var _normalize_columns_array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/api/normalize_columns_array.js"), _CsvError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-parse/lib/api/CsvError.js"), _utils_underscore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/csv-parse/lib/utils/underscore.js");
            let normalize_options = function (opts) { let options1 = {}; for (let opt in opts)
                options1[(0, _utils_underscore_js__WEBPACK_IMPORTED_MODULE_2__.underscore)(opt)] = opts[opt]; if (void 0 === options1.encoding || !0 === options1.encoding)
                options1.encoding = "utf8";
            else if (null === options1.encoding || !1 === options1.encoding)
                options1.encoding = null;
            else if ("string" != typeof options1.encoding && null !== options1.encoding)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_ENCODING", ["Invalid option encoding:", "encoding must be a string or null to return a buffer,", `got ${JSON.stringify(options1.encoding)}`], options1); if (void 0 === options1.bom || null === options1.bom || !1 === options1.bom)
                options1.bom = !1;
            else if (!0 !== options1.bom)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_BOM", ["Invalid option bom:", "bom must be true,", `got ${JSON.stringify(options1.bom)}`], options1); if (options1.cast_function = null, void 0 === options1.cast || null === options1.cast || !1 === options1.cast || "" === options1.cast)
                options1.cast = void 0;
            else if ("function" == typeof options1.cast)
                options1.cast_function = options1.cast, options1.cast = !0;
            else if (!0 !== options1.cast)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_CAST", ["Invalid option cast:", "cast must be true or a function,", `got ${JSON.stringify(options1.cast)}`], options1); if (void 0 === options1.cast_date || null === options1.cast_date || !1 === options1.cast_date || "" === options1.cast_date)
                options1.cast_date = !1;
            else if (!0 === options1.cast_date)
                options1.cast_date = function (value) { let date = Date.parse(value); return isNaN(date) ? value : new Date(date); };
            else if ("function" != typeof options1.cast_date)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_CAST_DATE", ["Invalid option cast_date:", "cast_date must be true or a function,", `got ${JSON.stringify(options1.cast_date)}`], options1); if (options1.cast_first_line_to_header = null, !0 === options1.columns)
                options1.cast_first_line_to_header = void 0;
            else if ("function" == typeof options1.columns)
                options1.cast_first_line_to_header = options1.columns, options1.columns = !0;
            else if (Array.isArray(options1.columns))
                options1.columns = (0, _normalize_columns_array_js__WEBPACK_IMPORTED_MODULE_0__.normalize_columns_array)(options1.columns);
            else if (void 0 === options1.columns || null === options1.columns || !1 === options1.columns)
                options1.columns = !1;
            else
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_COLUMNS", ["Invalid option columns:", "expect an array, a function or true,", `got ${JSON.stringify(options1.columns)}`], options1); if (void 0 === options1.group_columns_by_name || null === options1.group_columns_by_name || !1 === options1.group_columns_by_name)
                options1.group_columns_by_name = !1;
            else if (!0 !== options1.group_columns_by_name)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME", ["Invalid option group_columns_by_name:", "expect an boolean,", `got ${JSON.stringify(options1.group_columns_by_name)}`], options1);
            else if (!1 === options1.columns)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_GROUP_COLUMNS_BY_NAME", ["Invalid option group_columns_by_name:", "the `columns` mode must be activated."], options1); if (void 0 === options1.comment || null === options1.comment || !1 === options1.comment || "" === options1.comment)
                options1.comment = null;
            else if ("string" == typeof options1.comment && (options1.comment = Buffer.from(options1.comment, options1.encoding)), !Buffer.isBuffer(options1.comment))
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_COMMENT", ["Invalid option comment:", "comment must be a buffer or a string,", `got ${JSON.stringify(options1.comment)}`], options1); if (void 0 === options1.comment_no_infix || null === options1.comment_no_infix || !1 === options1.comment_no_infix)
                options1.comment_no_infix = !1;
            else if (!0 !== options1.comment_no_infix)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_COMMENT", ["Invalid option comment_no_infix:", "value must be a boolean,", `got ${JSON.stringify(options1.comment_no_infix)}`], options1); let delimiter_json = JSON.stringify(options1.delimiter); if (Array.isArray(options1.delimiter) || (options1.delimiter = [options1.delimiter]), 0 === options1.delimiter.length)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_DELIMITER", ["Invalid option delimiter:", "delimiter must be a non empty string or buffer or array of string|buffer,", `got ${delimiter_json}`], options1); if (options1.delimiter = options1.delimiter.map(function (delimiter) { if (null == delimiter || !1 === delimiter)
                return Buffer.from(",", options1.encoding); if ("string" == typeof delimiter && (delimiter = Buffer.from(delimiter, options1.encoding)), !Buffer.isBuffer(delimiter) || 0 === delimiter.length)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_DELIMITER", ["Invalid option delimiter:", "delimiter must be a non empty string or buffer or array of string|buffer,", `got ${delimiter_json}`], options1); return delimiter; }), void 0 === options1.escape || !0 === options1.escape ? options1.escape = Buffer.from('"', options1.encoding) : "string" == typeof options1.escape ? options1.escape = Buffer.from(options1.escape, options1.encoding) : (null === options1.escape || !1 === options1.escape) && (options1.escape = null), null !== options1.escape && !Buffer.isBuffer(options1.escape))
                throw Error(`Invalid Option: escape must be a buffer, a string or a boolean, got ${JSON.stringify(options1.escape)}`); if (void 0 === options1.from || null === options1.from)
                options1.from = 1;
            else if ("string" == typeof options1.from && /\d+/.test(options1.from) && (options1.from = parseInt(options1.from)), Number.isInteger(options1.from)) {
                if (options1.from < 0)
                    throw Error(`Invalid Option: from must be a positive integer, got ${JSON.stringify(opts.from)}`);
            }
            else
                throw Error(`Invalid Option: from must be an integer, got ${JSON.stringify(options1.from)}`); if (void 0 === options1.from_line || null === options1.from_line)
                options1.from_line = 1;
            else if ("string" == typeof options1.from_line && /\d+/.test(options1.from_line) && (options1.from_line = parseInt(options1.from_line)), Number.isInteger(options1.from_line)) {
                if (options1.from_line <= 0)
                    throw Error(`Invalid Option: from_line must be a positive integer greater than 0, got ${JSON.stringify(opts.from_line)}`);
            }
            else
                throw Error(`Invalid Option: from_line must be an integer, got ${JSON.stringify(opts.from_line)}`); if (void 0 === options1.ignore_last_delimiters || null === options1.ignore_last_delimiters)
                options1.ignore_last_delimiters = !1;
            else if ("number" == typeof options1.ignore_last_delimiters)
                options1.ignore_last_delimiters = Math.floor(options1.ignore_last_delimiters), 0 === options1.ignore_last_delimiters && (options1.ignore_last_delimiters = !1);
            else if ("boolean" != typeof options1.ignore_last_delimiters)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_IGNORE_LAST_DELIMITERS", ["Invalid option `ignore_last_delimiters`:", "the value must be a boolean value or an integer,", `got ${JSON.stringify(options1.ignore_last_delimiters)}`], options1); if (!0 === options1.ignore_last_delimiters && !1 === options1.columns)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_IGNORE_LAST_DELIMITERS_REQUIRES_COLUMNS", ["The option `ignore_last_delimiters`", "requires the activation of the `columns` option"], options1); if (void 0 === options1.info || null === options1.info || !1 === options1.info)
                options1.info = !1;
            else if (!0 !== options1.info)
                throw Error(`Invalid Option: info must be true, got ${JSON.stringify(options1.info)}`); if (void 0 === options1.max_record_size || null === options1.max_record_size || !1 === options1.max_record_size)
                options1.max_record_size = 0;
            else if (Number.isInteger(options1.max_record_size) && options1.max_record_size >= 0)
                ;
            else if ("string" == typeof options1.max_record_size && /\d+/.test(options1.max_record_size))
                options1.max_record_size = parseInt(options1.max_record_size);
            else
                throw Error(`Invalid Option: max_record_size must be a positive integer, got ${JSON.stringify(options1.max_record_size)}`); if (void 0 === options1.objname || null === options1.objname || !1 === options1.objname)
                options1.objname = void 0;
            else if (Buffer.isBuffer(options1.objname)) {
                if (0 === options1.objname.length)
                    throw Error("Invalid Option: objname must be a non empty buffer");
                null === options1.encoding || (options1.objname = options1.objname.toString(options1.encoding));
            }
            else if ("string" == typeof options1.objname) {
                if (0 === options1.objname.length)
                    throw Error("Invalid Option: objname must be a non empty string");
            }
            else if ("number" == typeof options1.objname)
                ;
            else
                throw Error(`Invalid Option: objname must be a string or a buffer, got ${options1.objname}`); if (void 0 !== options1.objname) {
                if ("number" == typeof options1.objname) {
                    if (!1 !== options1.columns)
                        throw Error("Invalid Option: objname index cannot be combined with columns or be defined as a field");
                }
                else if (!1 === options1.columns)
                    throw Error("Invalid Option: objname field must be combined with columns or be defined as an index");
            } if (void 0 === options1.on_record || null === options1.on_record)
                options1.on_record = void 0;
            else if ("function" != typeof options1.on_record)
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_ON_RECORD", ["Invalid option `on_record`:", "expect a function,", `got ${JSON.stringify(options1.on_record)}`], options1); if (void 0 !== options1.on_skip && null !== options1.on_skip && "function" != typeof options1.on_skip)
                throw Error(`Invalid Option: on_skip must be a function, got ${JSON.stringify(options1.on_skip)}`); if (null === options1.quote || !1 === options1.quote || "" === options1.quote)
                options1.quote = null;
            else if (void 0 === options1.quote || !0 === options1.quote ? options1.quote = Buffer.from('"', options1.encoding) : "string" == typeof options1.quote && (options1.quote = Buffer.from(options1.quote, options1.encoding)), !Buffer.isBuffer(options1.quote))
                throw Error(`Invalid Option: quote must be a buffer or a string, got ${JSON.stringify(options1.quote)}`); if (void 0 === options1.raw || null === options1.raw || !1 === options1.raw)
                options1.raw = !1;
            else if (!0 !== options1.raw)
                throw Error(`Invalid Option: raw must be true, got ${JSON.stringify(options1.raw)}`); if (void 0 === options1.record_delimiter)
                options1.record_delimiter = [];
            else if ("string" == typeof options1.record_delimiter || Buffer.isBuffer(options1.record_delimiter)) {
                if (0 === options1.record_delimiter.length)
                    throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER", ["Invalid option `record_delimiter`:", "value must be a non empty string or buffer,", `got ${JSON.stringify(options1.record_delimiter)}`], options1);
                options1.record_delimiter = [options1.record_delimiter];
            }
            else if (!Array.isArray(options1.record_delimiter))
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER", ["Invalid option `record_delimiter`:", "value must be a string, a buffer or array of string|buffer,", `got ${JSON.stringify(options1.record_delimiter)}`], options1); if (options1.record_delimiter = options1.record_delimiter.map(function (rd, i) { if ("string" == typeof rd || Buffer.isBuffer(rd)) {
                if (0 === rd.length)
                    throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER", ["Invalid option `record_delimiter`:", "value must be a non empty string or buffer", `at index ${i},`, `got ${JSON.stringify(rd)}`], options1);
            }
            else
                throw new _CsvError_js__WEBPACK_IMPORTED_MODULE_1__.CsvError("CSV_INVALID_OPTION_RECORD_DELIMITER", ["Invalid option `record_delimiter`:", "value must be a string, a buffer or array of string|buffer", `at index ${i},`, `got ${JSON.stringify(rd)}`], options1); return "string" == typeof rd && (rd = Buffer.from(rd, options1.encoding)), rd; }), "boolean" == typeof options1.relax_column_count)
                ;
            else if (void 0 === options1.relax_column_count || null === options1.relax_column_count)
                options1.relax_column_count = !1;
            else
                throw Error(`Invalid Option: relax_column_count must be a boolean, got ${JSON.stringify(options1.relax_column_count)}`); if ("boolean" == typeof options1.relax_column_count_less)
                ;
            else if (void 0 === options1.relax_column_count_less || null === options1.relax_column_count_less)
                options1.relax_column_count_less = !1;
            else
                throw Error(`Invalid Option: relax_column_count_less must be a boolean, got ${JSON.stringify(options1.relax_column_count_less)}`); if ("boolean" == typeof options1.relax_column_count_more)
                ;
            else if (void 0 === options1.relax_column_count_more || null === options1.relax_column_count_more)
                options1.relax_column_count_more = !1;
            else
                throw Error(`Invalid Option: relax_column_count_more must be a boolean, got ${JSON.stringify(options1.relax_column_count_more)}`); if ("boolean" == typeof options1.relax_quotes)
                ;
            else if (void 0 === options1.relax_quotes || null === options1.relax_quotes)
                options1.relax_quotes = !1;
            else
                throw Error(`Invalid Option: relax_quotes must be a boolean, got ${JSON.stringify(options1.relax_quotes)}`); if ("boolean" == typeof options1.skip_empty_lines)
                ;
            else if (void 0 === options1.skip_empty_lines || null === options1.skip_empty_lines)
                options1.skip_empty_lines = !1;
            else
                throw Error(`Invalid Option: skip_empty_lines must be a boolean, got ${JSON.stringify(options1.skip_empty_lines)}`); if ("boolean" == typeof options1.skip_records_with_empty_values)
                ;
            else if (void 0 === options1.skip_records_with_empty_values || null === options1.skip_records_with_empty_values)
                options1.skip_records_with_empty_values = !1;
            else
                throw Error(`Invalid Option: skip_records_with_empty_values must be a boolean, got ${JSON.stringify(options1.skip_records_with_empty_values)}`); if ("boolean" == typeof options1.skip_records_with_error)
                ;
            else if (void 0 === options1.skip_records_with_error || null === options1.skip_records_with_error)
                options1.skip_records_with_error = !1;
            else
                throw Error(`Invalid Option: skip_records_with_error must be a boolean, got ${JSON.stringify(options1.skip_records_with_error)}`); if (void 0 === options1.rtrim || null === options1.rtrim || !1 === options1.rtrim)
                options1.rtrim = !1;
            else if (!0 !== options1.rtrim)
                throw Error(`Invalid Option: rtrim must be a boolean, got ${JSON.stringify(options1.rtrim)}`); if (void 0 === options1.ltrim || null === options1.ltrim || !1 === options1.ltrim)
                options1.ltrim = !1;
            else if (!0 !== options1.ltrim)
                throw Error(`Invalid Option: ltrim must be a boolean, got ${JSON.stringify(options1.ltrim)}`); if (void 0 === options1.trim || null === options1.trim || !1 === options1.trim)
                options1.trim = !1;
            else if (!0 !== options1.trim)
                throw Error(`Invalid Option: trim must be a boolean, got ${JSON.stringify(options1.trim)}`); if (!0 === options1.trim && !1 !== opts.ltrim ? options1.ltrim = !0 : !0 !== options1.ltrim && (options1.ltrim = !1), !0 === options1.trim && !1 !== opts.rtrim ? options1.rtrim = !0 : !0 !== options1.rtrim && (options1.rtrim = !1), void 0 === options1.to || null === options1.to)
                options1.to = -1;
            else if ("string" == typeof options1.to && /\d+/.test(options1.to) && (options1.to = parseInt(options1.to)), Number.isInteger(options1.to)) {
                if (options1.to <= 0)
                    throw Error(`Invalid Option: to must be a positive integer greater than 0, got ${JSON.stringify(opts.to)}`);
            }
            else
                throw Error(`Invalid Option: to must be an integer, got ${JSON.stringify(opts.to)}`); if (void 0 === options1.to_line || null === options1.to_line)
                options1.to_line = -1;
            else if ("string" == typeof options1.to_line && /\d+/.test(options1.to_line) && (options1.to_line = parseInt(options1.to_line)), Number.isInteger(options1.to_line)) {
                if (options1.to_line <= 0)
                    throw Error(`Invalid Option: to_line must be a positive integer greater than 0, got ${JSON.stringify(opts.to_line)}`);
            }
            else
                throw Error(`Invalid Option: to_line must be an integer, got ${JSON.stringify(opts.to_line)}`); return options1; };
        }, "./node_modules/csv-parse/lib/sync.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { CsvError: () => _api_index_js__WEBPACK_IMPORTED_MODULE_0__.CsvError, parse: () => parse });
            var _api_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/api/index.js");
            let parse = function (data1, opts = {}) { "string" == typeof data1 && (data1 = Buffer.from(data1)); let records = opts && opts.objname ? {} : [], parser = (0, _api_index_js__WEBPACK_IMPORTED_MODULE_0__.transform)(opts), push = record => { void 0 === parser.options.objname ? records.push(record) : records[record[0]] = record[1]; }, close = () => { }, err1 = parser.parse(data1, !1, push, close); if (void 0 !== err1)
                throw err1; let err2 = parser.parse(void 0, !0, push, close); if (void 0 !== err2)
                throw err2; return records; };
        }, "./node_modules/csv-parse/lib/utils/ResizeableBuffer.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
            let __WEBPACK_DEFAULT_EXPORT__ = class {
                constructor(size = 100) { this.size = size, this.length = 0, this.buf = Buffer.allocUnsafe(size); }
                prepend(val1) { if (Buffer.isBuffer(val1)) {
                    let length = this.length + val1.length;
                    if (length >= this.size && (this.resize(), length >= this.size))
                        throw Error("INVALID_BUFFER_STATE");
                    let buf = this.buf;
                    this.buf = Buffer.allocUnsafe(this.size), val1.copy(this.buf, 0), buf.copy(this.buf, val1.length), this.length += val1.length;
                }
                else {
                    let length = this.length++;
                    length === this.size && this.resize();
                    let buf = this.clone();
                    this.buf[0] = val1, buf.copy(this.buf, 1, 0, length);
                } }
                append(val1) { let length = this.length++; length === this.size && this.resize(), this.buf[length] = val1; }
                clone() { return Buffer.from(this.buf.slice(0, this.length)); }
                resize() { let length = this.length; this.size = 2 * this.size; let buf = Buffer.allocUnsafe(this.size); this.buf.copy(buf, 0, 0, length), this.buf = buf; }
                toString(encoding) { return encoding ? this.buf.slice(0, this.length).toString(encoding) : Uint8Array.prototype.slice.call(this.buf.slice(0, this.length)); }
                toJSON() { return this.toString("utf8"); }
                reset() { this.length = 0; }
            };
        }, "./node_modules/csv-parse/lib/utils/is_object.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { is_object: () => is_object });
            let is_object = function (obj) { return "object" == typeof obj && null !== obj && !Array.isArray(obj); };
        }, "./node_modules/csv-parse/lib/utils/underscore.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { underscore: () => underscore });
            let underscore = function (str) { return str.replace(/([A-Z])/g, function (_, match) { return "_" + match.toLowerCase(); }); };
        }, "./node_modules/csv-stringify/lib/api/CsvError.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { CsvError: () => CsvError });
            class CsvError extends Error {
                constructor(code, message, ...contexts) { for (let context of (Array.isArray(message) && (message = message.join(" ")), super(message), void 0 !== Error.captureStackTrace && Error.captureStackTrace(this, CsvError), this.code = code, contexts))
                    for (let key in context) {
                        let value = context[key];
                        this[key] = Buffer.isBuffer(value) ? value.toString() : null == value ? value : JSON.parse(JSON.stringify(value));
                    } }
            }
        }, "./node_modules/csv-stringify/lib/api/index.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { stringifier: () => stringifier });
            var _utils_get_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-stringify/lib/utils/get.js"), _utils_is_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-stringify/lib/utils/is_object.js"), _normalize_columns_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/csv-stringify/lib/api/normalize_columns.js"), _normalize_options_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/csv-stringify/lib/api/normalize_options.js");
            let bom_utf8 = Buffer.from([239, 187, 191]), stringifier = function (options1, state, info) { return { options: options1, state: state, info: info, __transform: function (chunk, push) { let err, chunk_string; if (!Array.isArray(chunk) && "object" != typeof chunk)
                    return Error(`Invalid Record: expect an array or an object, got ${JSON.stringify(chunk)}`); if (0 === this.info.records) {
                    if (Array.isArray(chunk)) {
                        if (!0 === this.options.header && void 0 === this.options.columns)
                            return Error("Undiscoverable Columns: header option requires column option or object records");
                    }
                    else if (void 0 === this.options.columns) {
                        let [err, columns] = (0, _normalize_columns_js__WEBPACK_IMPORTED_MODULE_2__.normalize_columns)(Object.keys(chunk));
                        if (err)
                            return;
                        this.options.columns = columns;
                    }
                } if (0 === this.info.records) {
                    this.bom(push);
                    let err = this.headers(push);
                    if (err)
                        return err;
                } try {
                    this.options.on_record && this.options.on_record(chunk, this.info.records);
                }
                catch (err) {
                    return err;
                } if (this.options.eof) {
                    if ([err, chunk_string] = this.stringify(chunk), err)
                        return err;
                    if (void 0 === chunk_string)
                        return;
                    chunk_string += this.options.record_delimiter;
                }
                else {
                    if ([err, chunk_string] = this.stringify(chunk), err)
                        return err;
                    if (void 0 === chunk_string)
                        return;
                    (this.options.header || this.info.records) && (chunk_string = this.options.record_delimiter + chunk_string);
                } this.info.records++, push(chunk_string); }, stringify: function (chunk, chunkIsHeader = !1) { if ("object" != typeof chunk)
                    return [void 0, chunk]; let { columns } = this.options, record = []; if (Array.isArray(chunk)) {
                    columns && chunk.splice(columns.length);
                    for (let i = 0; i < chunk.length; i++) {
                        let field = chunk[i], [err, value] = this.__cast(field, { index: i, column: i, records: this.info.records, header: chunkIsHeader });
                        if (err)
                            return [err];
                        record[i] = [value, field];
                    }
                }
                else
                    for (let i = 0; i < columns.length; i++) {
                        let field = (0, _utils_get_js__WEBPACK_IMPORTED_MODULE_0__.get)(chunk, columns[i].key), [err, value] = this.__cast(field, { index: i, column: columns[i].key, records: this.info.records, header: chunkIsHeader });
                        if (err)
                            return [err];
                        record[i] = [value, field];
                    } let csvrecord = ""; for (let i = 0; i < record.length; i++) {
                    let options1, err, [value, field] = record[i];
                    if ("string" == typeof value)
                        options1 = this.options;
                    else if ((0, _utils_is_object_js__WEBPACK_IMPORTED_MODULE_1__.is_object)(value)) {
                        if (value = (options1 = value).value, delete options1.value, "string" != typeof value && null != value && err)
                            return [Error(`Invalid Casting Value: returned value must return a string, null or undefined, got ${JSON.stringify(value)}`)];
                        if (options1 = { ...this.options, ...options1 }, [err, options1] = (0, _normalize_options_js__WEBPACK_IMPORTED_MODULE_3__.normalize_options)(options1), void 0 !== err)
                            return [err];
                    }
                    else {
                        if (null != value)
                            return [Error(`Invalid Casting Value: returned value must return a string, an object, null or undefined, got ${JSON.stringify(value)}`)];
                        options1 = this.options;
                    }
                    let { delimiter, escape: escape1, quote, quoted, quoted_empty, quoted_string, quoted_match, record_delimiter, escape_formulas } = options1;
                    if ("" === value && "" === field) {
                        let quotedMatch = quoted_match && quoted_match.filter(quoted_match => "string" == typeof quoted_match ? -1 !== value.indexOf(quoted_match) : quoted_match.test(value));
                        !0 === ((quotedMatch = quotedMatch && quotedMatch.length > 0) || !0 === quoted_empty || !0 === quoted_string && !1 !== quoted_empty) && (value = quote + value + quote), csvrecord += value;
                    }
                    else if (value) {
                        if ("string" != typeof value)
                            return [Error(`Formatter must return a string, null or undefined, got ${JSON.stringify(value)}`)];
                        let containsdelimiter = delimiter.length && value.indexOf(delimiter) >= 0, containsQuote = "" !== quote && value.indexOf(quote) >= 0, containsEscape = value.indexOf(escape1) >= 0 && escape1 !== quote, containsRecordDelimiter = value.indexOf(record_delimiter) >= 0, quotedString = quoted_string && "string" == typeof field, quotedMatch = quoted_match && quoted_match.filter(quoted_match => "string" == typeof quoted_match ? -1 !== value.indexOf(quoted_match) : quoted_match.test(value));
                        if (quotedMatch = quotedMatch && quotedMatch.length > 0, escape_formulas)
                            switch (value[0]) {
                                case "=":
                                case "+":
                                case "-":
                                case "@":
                                case "	":
                                case "\r":
                                case "＝":
                                case "＋":
                                case "－":
                                case "＠": value = `'${value}`;
                            }
                        let shouldQuote = !0 === containsQuote || containsdelimiter || containsRecordDelimiter || quoted || quotedString || quotedMatch;
                        if (!0 === shouldQuote && !0 === containsEscape) {
                            let regexp = "\\" === escape1 ? RegExp(escape1 + escape1, "g") : RegExp(escape1, "g");
                            value = value.replace(regexp, escape1 + escape1);
                        }
                        if (!0 === containsQuote) {
                            let regexp = RegExp(quote, "g");
                            value = value.replace(regexp, escape1 + quote);
                        }
                        !0 === shouldQuote && (value = quote + value + quote), csvrecord += value;
                    }
                    else
                        (!0 === quoted_empty || "" === field && !0 === quoted_string && !1 !== quoted_empty) && (csvrecord += quote + quote);
                    i !== record.length - 1 && (csvrecord += delimiter);
                } return [void 0, csvrecord]; }, bom: function (push) { !0 === this.options.bom && push(bom_utf8); }, headers: function (push) { let err; if (!1 === this.options.header || void 0 === this.options.columns)
                    return; let headers = this.options.columns.map(column => column.header); if (this.options.eof ? ([err, headers] = this.stringify(headers, !0), headers += this.options.record_delimiter) : [err, headers] = this.stringify(headers), err)
                    return err; push(headers); }, __cast: function (value, context) { let type = typeof value; try {
                    if ("string" === type)
                        return [void 0, this.options.cast.string(value, context)];
                    if ("bigint" === type)
                        return [void 0, this.options.cast.bigint(value, context)];
                    if ("number" === type)
                        return [void 0, this.options.cast.number(value, context)];
                    else if ("boolean" === type)
                        return [void 0, this.options.cast.boolean(value, context)];
                    else if (value instanceof Date)
                        return [void 0, this.options.cast.date(value, context)];
                    else if ("object" === type && null !== value)
                        return [void 0, this.options.cast.object(value, context)];
                    else
                        return [void 0, value, value];
                }
                catch (err) {
                    return [err];
                } } }; };
        }, "./node_modules/csv-stringify/lib/api/normalize_columns.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalize_columns: () => normalize_columns });
            let normalize_columns = function (columns) { if (null == columns)
                return [void 0, void 0]; if ("object" != typeof columns)
                return [Error('Invalid option "columns": expect an array or an object')]; if (Array.isArray(columns)) {
                let newcolumns = [];
                for (let column of columns)
                    if ("string" == typeof column)
                        newcolumns.push({ key: column, header: column });
                    else {
                        if ("object" != typeof column || null === column || Array.isArray(column))
                            return [Error("Invalid column definition: expect a string or an object")];
                        if (!column.key)
                            return [Error('Invalid column definition: property "key" is required')];
                        void 0 === column.header && (column.header = column.key), newcolumns.push(column);
                    }
                columns = newcolumns;
            }
            else {
                let newcolumns = [];
                for (let k in columns)
                    newcolumns.push({ key: k, header: columns[k] });
                columns = newcolumns;
            } return [void 0, columns]; };
        }, "./node_modules/csv-stringify/lib/api/normalize_options.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalize_options: () => normalize_options });
            var _CsvError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-stringify/lib/api/CsvError.js"), _normalize_columns_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-stringify/lib/api/normalize_columns.js"), _utils_underscore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/csv-stringify/lib/utils/underscore.js");
            let normalize_options = function (opts) {
                let options1 = {};
                for (let opt in opts)
                    options1[(0, _utils_underscore_js__WEBPACK_IMPORTED_MODULE_2__.underscore)(opt)] = opts[opt];
                if (void 0 === options1.bom || null === options1.bom || !1 === options1.bom)
                    options1.bom = !1;
                else if (!0 !== options1.bom)
                    return [new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_OPTION_BOOLEAN_INVALID_TYPE", ["option `bom` is optional and must be a boolean value,", `got ${JSON.stringify(options1.bom)}`])];
                if (void 0 === options1.delimiter || null === options1.delimiter)
                    options1.delimiter = ",";
                else if (Buffer.isBuffer(options1.delimiter))
                    options1.delimiter = options1.delimiter.toString();
                else if ("string" != typeof options1.delimiter)
                    return [new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_OPTION_DELIMITER_INVALID_TYPE", ["option `delimiter` must be a buffer or a string,", `got ${JSON.stringify(options1.delimiter)}`])];
                if (void 0 === options1.quote || null === options1.quote)
                    options1.quote = '"';
                else if (!0 === options1.quote)
                    options1.quote = '"';
                else if (!1 === options1.quote)
                    options1.quote = "";
                else if (Buffer.isBuffer(options1.quote))
                    options1.quote = options1.quote.toString();
                else if ("string" != typeof options1.quote)
                    return [new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_OPTION_QUOTE_INVALID_TYPE", ["option `quote` must be a boolean, a buffer or a string,", `got ${JSON.stringify(options1.quote)}`])];
                if ((void 0 === options1.quoted || null === options1.quoted) && (options1.quoted = !1), void 0 === options1.escape_formulas || null === options1.escape_formulas)
                    options1.escape_formulas = !1;
                else if ("boolean" != typeof options1.escape_formulas)
                    return [new _CsvError_js__WEBPACK_IMPORTED_MODULE_0__.CsvError("CSV_OPTION_ESCAPE_FORMULAS_INVALID_TYPE", ["option `escape_formulas` must be a boolean,", `got ${JSON.stringify(options1.escape_formulas)}`])];
                if ((void 0 === options1.quoted_empty || null === options1.quoted_empty) && (options1.quoted_empty = void 0), void 0 === options1.quoted_match || null === options1.quoted_match || !1 === options1.quoted_match ? options1.quoted_match = null : Array.isArray(options1.quoted_match) || (options1.quoted_match = [options1.quoted_match]), options1.quoted_match)
                    for (let quoted_match of options1.quoted_match) {
                        let isString = "string" == typeof quoted_match, isRegExp = quoted_match instanceof RegExp;
                        if (!isString && !isRegExp)
                            return [Error(`Invalid Option: quoted_match must be a string or a regex, got ${JSON.stringify(quoted_match)}`)];
                    }
                if ((void 0 === options1.quoted_string || null === options1.quoted_string) && (options1.quoted_string = !1), (void 0 === options1.eof || null === options1.eof) && (options1.eof = !0), void 0 === options1.escape || null === options1.escape)
                    options1.escape = '"';
                else if (Buffer.isBuffer(options1.escape))
                    options1.escape = options1.escape.toString();
                else if ("string" != typeof options1.escape)
                    return [Error(`Invalid Option: escape must be a buffer or a string, got ${JSON.stringify(options1.escape)}`)];
                if (options1.escape.length > 1)
                    return [Error(`Invalid Option: escape must be one character, got ${options1.escape.length} characters`)];
                (void 0 === options1.header || null === options1.header) && (options1.header = !1);
                let [errColumns, columns] = (0, _normalize_columns_js__WEBPACK_IMPORTED_MODULE_1__.normalize_columns)(options1.columns);
                if (void 0 !== errColumns)
                    return [errColumns];
                if (options1.columns = columns, (void 0 === options1.quoted || null === options1.quoted) && (options1.quoted = !1), (void 0 === options1.cast || null === options1.cast) && (options1.cast = {}), (void 0 === options1.cast.bigint || null === options1.cast.bigint) && (options1.cast.bigint = value => "" + value), (void 0 === options1.cast.boolean || null === options1.cast.boolean) && (options1.cast.boolean = value => value ? "1" : ""), (void 0 === options1.cast.date || null === options1.cast.date) && (options1.cast.date = value => "" + value.getTime()), (void 0 === options1.cast.number || null === options1.cast.number) && (options1.cast.number = value => "" + value), (void 0 === options1.cast.object || null === options1.cast.object) && (options1.cast.object = value => JSON.stringify(value)), (void 0 === options1.cast.string || null === options1.cast.string) && (options1.cast.string = function (value) { return value; }), void 0 !== options1.on_record && "function" != typeof options1.on_record)
                    return [Error('Invalid Option: "on_record" must be a function.')];
                if (void 0 === options1.record_delimiter || null === options1.record_delimiter)
                    options1.record_delimiter = `
`;
                else if (Buffer.isBuffer(options1.record_delimiter))
                    options1.record_delimiter = options1.record_delimiter.toString();
                else if ("string" != typeof options1.record_delimiter)
                    return [Error(`Invalid Option: record_delimiter must be a buffer or a string, got ${JSON.stringify(options1.record_delimiter)}`)];
                switch (options1.record_delimiter) {
                    case "unix":
                        options1.record_delimiter = `
`;
                        break;
                    case "mac":
                        options1.record_delimiter = "\r";
                        break;
                    case "windows":
                        options1.record_delimiter = `\r
`;
                        break;
                    case "ascii":
                        options1.record_delimiter = "\x1e";
                        break;
                    case "unicode": options1.record_delimiter = "\u2028";
                }
                return [void 0, options1];
            };
        }, "./node_modules/csv-stringify/lib/sync.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { stringify: () => stringify });
            var _api_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-stringify/lib/api/index.js"), _api_normalize_options_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/csv-stringify/lib/api/normalize_options.js");
            let stringify = function (records, opts = {}) { let data1 = [], [err, options1] = (0, _api_normalize_options_js__WEBPACK_IMPORTED_MODULE_1__.normalize_options)(opts); if (void 0 !== err)
                throw err; let api = (0, _api_index_js__WEBPACK_IMPORTED_MODULE_0__.stringifier)(options1, { stop: !1 }, { records: 0 }); for (let record of records) {
                let err = api.__transform(record, function (record) { data1.push(record); });
                if (void 0 !== err)
                    throw err;
            } if (0 === data1.length) {
                api.bom(d => { data1.push(d); });
                let err = api.headers(headers => { data1.push(headers); });
                if (void 0 !== err)
                    throw err;
            } return data1.join(""); };
        }, "./node_modules/csv-stringify/lib/utils/get.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { get: () => get });
            let reEscapeChar = /\\(\\)?/g, rePropName = RegExp("[^.[\\]]+|\\[(?:([^\"'][^[]*)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))", "g"), reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, isSymbol = function (value) { let type = typeof value; return "symbol" === type || "object" === type && value && "[object Symbol]" === Object.prototype.toString.call(value); }, isKey = function (value, object) { if (Array.isArray(value))
                return !1; let type = typeof value; return !!("number" === type || "symbol" === type || "boolean" === type || !value || isSymbol(value)) || reIsPlainProp.test(value) || !reIsDeepProp.test(value) || null != object && value in Object(object); }, stringToPath = function (string) { let result = []; return 46 === string.charCodeAt(0) && result.push(""), string.replace(rePropName, function (match, expression, quote, subString) { let key = match; quote ? key = subString.replace(reEscapeChar, "$1") : expression && (key = expression.trim()), result.push(key); }), result; }, toKey = function (value) { if ("string" == typeof value || isSymbol(value))
                return value; let result = `${value}`; return "0" == result && 1 / value == -INFINITY ? "-0" : result; }, get = function (object, path) { var value, object1; value = path, object1 = object; let index = 0, length = (path = Array.isArray(value) ? value : isKey(value, object1) ? [value] : stringToPath(value)).length; for (; null != object && index < length;)
                object = object[toKey(path[index++])]; return index && index === length ? object : void 0; };
        }, "./node_modules/csv-stringify/lib/utils/is_object.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { is_object: () => is_object });
            let is_object = function (obj) { return "object" == typeof obj && null !== obj && !Array.isArray(obj); };
        }, "./node_modules/csv-stringify/lib/utils/underscore.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { underscore: () => underscore });
            let underscore = function (str) { return str.replace(/([A-Z])/g, function (_, match) { return "_" + match.toLowerCase(); }); };
        }, "./node_modules/date-fns/_lib/addLeadingZeros.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function addLeadingZeros(number, targetLength) { let output = Math.abs(number).toString().padStart(targetLength, "0"); return (number < 0 ? "-" : "") + output; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addLeadingZeros: () => addLeadingZeros });
        }, "./node_modules/date-fns/_lib/defaultOptions.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getDefaultOptions: () => getDefaultOptions, setDefaultOptions: () => setDefaultOptions });
            let defaultOptions = {};
            function getDefaultOptions() { return defaultOptions; }
            function setDefaultOptions(newOptions) { defaultOptions = newOptions; }
        }, "./node_modules/date-fns/_lib/format/formatters.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatters: () => formatters });
            var _getDayOfYear_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/getDayOfYear.js"), _getISOWeek_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/getISOWeek.js"), _getISOWeekYear_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/getISOWeekYear.js"), _getWeek_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/getWeek.js"), _getWeekYear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/getWeekYear.js"), _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/_lib/addLeadingZeros.js"), _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/format/lightFormatters.js");
            let dayPeriodEnum = { midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, formatters = { G: function (date, token, localize) { let era = +(date.getFullYear() > 0); switch (token) {
                    case "G":
                    case "GG":
                    case "GGG": return localize.era(era, { width: "abbreviated" });
                    case "GGGGG": return localize.era(era, { width: "narrow" });
                    default: return localize.era(era, { width: "wide" });
                } }, y: function (date, token, localize) { if ("yo" === token) {
                    let signedYear = date.getFullYear();
                    return localize.ordinalNumber(signedYear > 0 ? signedYear : 1 - signedYear, { unit: "year" });
                } return _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.y(date, token); }, Y: function (date, token, localize, options1) { let signedWeekYear = (0, _getWeekYear_js__WEBPACK_IMPORTED_MODULE_1__.getWeekYear)(date, options1), weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; if ("YY" === token) {
                    let twoDigitYear = weekYear % 100;
                    return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(twoDigitYear, 2);
                } return "Yo" === token ? localize.ordinalNumber(weekYear, { unit: "year" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(weekYear, token.length); }, R: function (date, token) { let isoWeekYear = (0, _getISOWeekYear_js__WEBPACK_IMPORTED_MODULE_3__.getISOWeekYear)(date); return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(isoWeekYear, token.length); }, u: function (date, token) { let year = date.getFullYear(); return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(year, token.length); }, Q: function (date, token, localize) { let quarter = Math.ceil((date.getMonth() + 1) / 3); switch (token) {
                    case "Q": return String(quarter);
                    case "QQ": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(quarter, 2);
                    case "Qo": return localize.ordinalNumber(quarter, { unit: "quarter" });
                    case "QQQ": return localize.quarter(quarter, { width: "abbreviated", context: "formatting" });
                    case "QQQQQ": return localize.quarter(quarter, { width: "narrow", context: "formatting" });
                    default: return localize.quarter(quarter, { width: "wide", context: "formatting" });
                } }, q: function (date, token, localize) { let quarter = Math.ceil((date.getMonth() + 1) / 3); switch (token) {
                    case "q": return String(quarter);
                    case "qq": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(quarter, 2);
                    case "qo": return localize.ordinalNumber(quarter, { unit: "quarter" });
                    case "qqq": return localize.quarter(quarter, { width: "abbreviated", context: "standalone" });
                    case "qqqqq": return localize.quarter(quarter, { width: "narrow", context: "standalone" });
                    default: return localize.quarter(quarter, { width: "wide", context: "standalone" });
                } }, M: function (date, token, localize) { let month = date.getMonth(); switch (token) {
                    case "M":
                    case "MM": return _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.M(date, token);
                    case "Mo": return localize.ordinalNumber(month + 1, { unit: "month" });
                    case "MMM": return localize.month(month, { width: "abbreviated", context: "formatting" });
                    case "MMMMM": return localize.month(month, { width: "narrow", context: "formatting" });
                    default: return localize.month(month, { width: "wide", context: "formatting" });
                } }, L: function (date, token, localize) { let month = date.getMonth(); switch (token) {
                    case "L": return String(month + 1);
                    case "LL": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(month + 1, 2);
                    case "Lo": return localize.ordinalNumber(month + 1, { unit: "month" });
                    case "LLL": return localize.month(month, { width: "abbreviated", context: "standalone" });
                    case "LLLLL": return localize.month(month, { width: "narrow", context: "standalone" });
                    default: return localize.month(month, { width: "wide", context: "standalone" });
                } }, w: function (date, token, localize, options1) { let week = (0, _getWeek_js__WEBPACK_IMPORTED_MODULE_4__.getWeek)(date, options1); return "wo" === token ? localize.ordinalNumber(week, { unit: "week" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(week, token.length); }, I: function (date, token, localize) { let isoWeek = (0, _getISOWeek_js__WEBPACK_IMPORTED_MODULE_5__.getISOWeek)(date); return "Io" === token ? localize.ordinalNumber(isoWeek, { unit: "week" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(isoWeek, token.length); }, d: function (date, token, localize) { return "do" === token ? localize.ordinalNumber(date.getDate(), { unit: "date" }) : _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.d(date, token); }, D: function (date, token, localize) { let dayOfYear = (0, _getDayOfYear_js__WEBPACK_IMPORTED_MODULE_6__.getDayOfYear)(date); return "Do" === token ? localize.ordinalNumber(dayOfYear, { unit: "dayOfYear" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(dayOfYear, token.length); }, E: function (date, token, localize) { let dayOfWeek = date.getDay(); switch (token) {
                    case "E":
                    case "EE":
                    case "EEE": return localize.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
                    case "EEEEE": return localize.day(dayOfWeek, { width: "narrow", context: "formatting" });
                    case "EEEEEE": return localize.day(dayOfWeek, { width: "short", context: "formatting" });
                    default: return localize.day(dayOfWeek, { width: "wide", context: "formatting" });
                } }, e: function (date, token, localize, options1) { let dayOfWeek = date.getDay(), localDayOfWeek = (dayOfWeek - options1.weekStartsOn + 8) % 7 || 7; switch (token) {
                    case "e": return String(localDayOfWeek);
                    case "ee": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(localDayOfWeek, 2);
                    case "eo": return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
                    case "eee": return localize.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
                    case "eeeee": return localize.day(dayOfWeek, { width: "narrow", context: "formatting" });
                    case "eeeeee": return localize.day(dayOfWeek, { width: "short", context: "formatting" });
                    default: return localize.day(dayOfWeek, { width: "wide", context: "formatting" });
                } }, c: function (date, token, localize, options1) { let dayOfWeek = date.getDay(), localDayOfWeek = (dayOfWeek - options1.weekStartsOn + 8) % 7 || 7; switch (token) {
                    case "c": return String(localDayOfWeek);
                    case "cc": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(localDayOfWeek, token.length);
                    case "co": return localize.ordinalNumber(localDayOfWeek, { unit: "day" });
                    case "ccc": return localize.day(dayOfWeek, { width: "abbreviated", context: "standalone" });
                    case "ccccc": return localize.day(dayOfWeek, { width: "narrow", context: "standalone" });
                    case "cccccc": return localize.day(dayOfWeek, { width: "short", context: "standalone" });
                    default: return localize.day(dayOfWeek, { width: "wide", context: "standalone" });
                } }, i: function (date, token, localize) { let dayOfWeek = date.getDay(), isoDayOfWeek = 0 === dayOfWeek ? 7 : dayOfWeek; switch (token) {
                    case "i": return String(isoDayOfWeek);
                    case "ii": return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(isoDayOfWeek, token.length);
                    case "io": return localize.ordinalNumber(isoDayOfWeek, { unit: "day" });
                    case "iii": return localize.day(dayOfWeek, { width: "abbreviated", context: "formatting" });
                    case "iiiii": return localize.day(dayOfWeek, { width: "narrow", context: "formatting" });
                    case "iiiiii": return localize.day(dayOfWeek, { width: "short", context: "formatting" });
                    default: return localize.day(dayOfWeek, { width: "wide", context: "formatting" });
                } }, a: function (date, token, localize) { let dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am"; switch (token) {
                    case "a":
                    case "aa": return localize.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
                    case "aaa": return localize.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" }).toLowerCase();
                    case "aaaaa": return localize.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
                    default: return localize.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
                } }, b: function (date, token, localize) { let dayPeriodEnumValue, hours = date.getHours(); switch (dayPeriodEnumValue = 12 === hours ? dayPeriodEnum.noon : 0 === hours ? dayPeriodEnum.midnight : hours / 12 >= 1 ? "pm" : "am", token) {
                    case "b":
                    case "bb": return localize.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
                    case "bbb": return localize.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" }).toLowerCase();
                    case "bbbbb": return localize.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
                    default: return localize.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
                } }, B: function (date, token, localize) { let dayPeriodEnumValue, hours = date.getHours(); switch (dayPeriodEnumValue = hours >= 17 ? dayPeriodEnum.evening : hours >= 12 ? dayPeriodEnum.afternoon : hours >= 4 ? dayPeriodEnum.morning : dayPeriodEnum.night, token) {
                    case "B":
                    case "BB":
                    case "BBB": return localize.dayPeriod(dayPeriodEnumValue, { width: "abbreviated", context: "formatting" });
                    case "BBBBB": return localize.dayPeriod(dayPeriodEnumValue, { width: "narrow", context: "formatting" });
                    default: return localize.dayPeriod(dayPeriodEnumValue, { width: "wide", context: "formatting" });
                } }, h: function (date, token, localize) { if ("ho" === token) {
                    let hours = date.getHours() % 12;
                    return 0 === hours && (hours = 12), localize.ordinalNumber(hours, { unit: "hour" });
                } return _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.h(date, token); }, H: function (date, token, localize) { return "Ho" === token ? localize.ordinalNumber(date.getHours(), { unit: "hour" }) : _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.H(date, token); }, K: function (date, token, localize) { let hours = date.getHours() % 12; return "Ko" === token ? localize.ordinalNumber(hours, { unit: "hour" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(hours, token.length); }, k: function (date, token, localize) { let hours = date.getHours(); return (0 === hours && (hours = 24), "ko" === token) ? localize.ordinalNumber(hours, { unit: "hour" }) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(hours, token.length); }, m: function (date, token, localize) { return "mo" === token ? localize.ordinalNumber(date.getMinutes(), { unit: "minute" }) : _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.m(date, token); }, s: function (date, token, localize) { return "so" === token ? localize.ordinalNumber(date.getSeconds(), { unit: "second" }) : _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.s(date, token); }, S: function (date, token) { return _lightFormatters_js__WEBPACK_IMPORTED_MODULE_0__.lightFormatters.S(date, token); }, X: function (date, token, _localize) { let timezoneOffset = date.getTimezoneOffset(); if (0 === timezoneOffset)
                    return "Z"; switch (token) {
                    case "X": return formatTimezoneWithOptionalMinutes(timezoneOffset);
                    case "XXXX":
                    case "XX": return formatTimezone(timezoneOffset);
                    default: return formatTimezone(timezoneOffset, ":");
                } }, x: function (date, token, _localize) { let timezoneOffset = date.getTimezoneOffset(); switch (token) {
                    case "x": return formatTimezoneWithOptionalMinutes(timezoneOffset);
                    case "xxxx":
                    case "xx": return formatTimezone(timezoneOffset);
                    default: return formatTimezone(timezoneOffset, ":");
                } }, O: function (date, token, _localize) { let timezoneOffset = date.getTimezoneOffset(); switch (token) {
                    case "O":
                    case "OO":
                    case "OOO": return "GMT" + formatTimezoneShort(timezoneOffset, ":");
                    default: return "GMT" + formatTimezone(timezoneOffset, ":");
                } }, z: function (date, token, _localize) { let timezoneOffset = date.getTimezoneOffset(); switch (token) {
                    case "z":
                    case "zz":
                    case "zzz": return "GMT" + formatTimezoneShort(timezoneOffset, ":");
                    default: return "GMT" + formatTimezone(timezoneOffset, ":");
                } }, t: function (date, token, _localize) { let timestamp = Math.trunc(date / 1e3); return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(timestamp, token.length); }, T: function (date, token, _localize) { return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(+date, token.length); } };
            function formatTimezoneShort(offset, delimiter = "") { let sign = offset > 0 ? "-" : "+", absOffset = Math.abs(offset), hours = Math.trunc(absOffset / 60), minutes = absOffset % 60; return 0 === minutes ? sign + String(hours) : sign + String(hours) + delimiter + (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(minutes, 2); }
            function formatTimezoneWithOptionalMinutes(offset, delimiter) { return offset % 60 == 0 ? (offset > 0 ? "-" : "+") + (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(Math.abs(offset) / 60, 2) : formatTimezone(offset, delimiter); }
            function formatTimezone(offset, delimiter = "") { let absOffset = Math.abs(offset); return (offset > 0 ? "-" : "+") + (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(Math.trunc(absOffset / 60), 2) + delimiter + (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_2__.addLeadingZeros)(absOffset % 60, 2); }
        }, "./node_modules/date-fns/_lib/format/lightFormatters.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { lightFormatters: () => lightFormatters });
            var _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/addLeadingZeros.js");
            let lightFormatters = { y(date, token) { let signedYear = date.getFullYear(), year = signedYear > 0 ? signedYear : 1 - signedYear; return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)("yy" === token ? year % 100 : year, token.length); }, M(date, token) { let month = date.getMonth(); return "M" === token ? String(month + 1) : (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(month + 1, 2); }, d: (date, token) => (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(date.getDate(), token.length), a(date, token) { let dayPeriodEnumValue = date.getHours() / 12 >= 1 ? "pm" : "am"; switch (token) {
                    case "a":
                    case "aa": return dayPeriodEnumValue.toUpperCase();
                    case "aaa": return dayPeriodEnumValue;
                    case "aaaaa": return dayPeriodEnumValue[0];
                    default: return "am" === dayPeriodEnumValue ? "a.m." : "p.m.";
                } }, h: (date, token) => (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(date.getHours() % 12 || 12, token.length), H: (date, token) => (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(date.getHours(), token.length), m: (date, token) => (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(date.getMinutes(), token.length), s: (date, token) => (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(date.getSeconds(), token.length), S(date, token) { let numberOfDigits = token.length, fractionalSeconds = Math.trunc(date.getMilliseconds() * Math.pow(10, numberOfDigits - 3)); return (0, _addLeadingZeros_js__WEBPACK_IMPORTED_MODULE_0__.addLeadingZeros)(fractionalSeconds, token.length); } };
        }, "./node_modules/date-fns/_lib/format/longFormatters.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { longFormatters: () => longFormatters });
            let dateLongFormatter = (pattern, formatLong) => { switch (pattern) {
                case "P": return formatLong.date({ width: "short" });
                case "PP": return formatLong.date({ width: "medium" });
                case "PPP": return formatLong.date({ width: "long" });
                default: return formatLong.date({ width: "full" });
            } }, timeLongFormatter = (pattern, formatLong) => { switch (pattern) {
                case "p": return formatLong.time({ width: "short" });
                case "pp": return formatLong.time({ width: "medium" });
                case "ppp": return formatLong.time({ width: "long" });
                default: return formatLong.time({ width: "full" });
            } }, longFormatters = { p: timeLongFormatter, P: (pattern, formatLong) => { let dateTimeFormat, matchResult = pattern.match(/(P+)(p+)?/) || [], datePattern = matchResult[1], timePattern = matchResult[2]; if (!timePattern)
                    return dateLongFormatter(pattern, formatLong); switch (datePattern) {
                    case "P":
                        dateTimeFormat = formatLong.dateTime({ width: "short" });
                        break;
                    case "PP":
                        dateTimeFormat = formatLong.dateTime({ width: "medium" });
                        break;
                    case "PPP":
                        dateTimeFormat = formatLong.dateTime({ width: "long" });
                        break;
                    default: dateTimeFormat = formatLong.dateTime({ width: "full" });
                } return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong)).replace("{{time}}", timeLongFormatter(timePattern, formatLong)); } };
        }, "./node_modules/date-fns/_lib/getRoundingMethod.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function getRoundingMethod(method) { return number => { let result = (method ? Math[method] : Math.trunc)(number); return 0 === result ? 0 : result; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getRoundingMethod: () => getRoundingMethod });
        }, "./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getTimezoneOffsetInMilliseconds: () => getTimezoneOffsetInMilliseconds });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getTimezoneOffsetInMilliseconds(date) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date), utcDate = new Date(Date.UTC(_date.getFullYear(), _date.getMonth(), _date.getDate(), _date.getHours(), _date.getMinutes(), _date.getSeconds(), _date.getMilliseconds())); return utcDate.setUTCFullYear(_date.getFullYear()), date - utcDate; }
        }, "./node_modules/date-fns/_lib/normalizeDates.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalizeDates: () => normalizeDates });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js");
            function normalizeDates(context, ...dates) { let normalize = _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom.bind(null, context || dates.find(date => "object" == typeof date)); return dates.map(normalize); }
        }, "./node_modules/date-fns/_lib/protectedTokens.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { isProtectedDayOfYearToken: () => isProtectedDayOfYearToken, isProtectedWeekYearToken: () => isProtectedWeekYearToken, warnOrThrowProtectedError: () => warnOrThrowProtectedError });
            let dayOfYearTokenRE = /^D+$/, weekYearTokenRE = /^Y+$/, throwTokens = ["D", "DD", "YY", "YYYY"];
            function isProtectedDayOfYearToken(token) { return dayOfYearTokenRE.test(token); }
            function isProtectedWeekYearToken(token) { return weekYearTokenRE.test(token); }
            function warnOrThrowProtectedError(token, format, input) { let _message = function (token, format, input) { let subject = "Y" === token[0] ? "years" : "days of the month"; return `Use \`${token.toLowerCase()}\` instead of \`${token}\` (in \`${format}\`) for formatting ${subject} to the input \`${input}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`; }(token, format, input); if (console.warn(_message), throwTokens.includes(token))
                throw RangeError(_message); }
        }, "./node_modules/date-fns/addDays.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addDays: () => addDays, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function addDays(date, amount, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return isNaN(amount) ? (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(options1?.in || date, NaN) : (amount && _date.setDate(_date.getDate() + amount), _date); }
            let __WEBPACK_DEFAULT_EXPORT__ = addDays;
        }, "./node_modules/date-fns/addMonths.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addMonths: () => addMonths, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function addMonths(date, amount, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); if (isNaN(amount))
                return (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(options1?.in || date, NaN); if (!amount)
                return _date; let dayOfMonth = _date.getDate(), endOfDesiredMonth = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(options1?.in || date, _date.getTime()); return (endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0), dayOfMonth >= endOfDesiredMonth.getDate()) ? endOfDesiredMonth : (_date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth), _date); }
            let __WEBPACK_DEFAULT_EXPORT__ = addMonths;
        }, "./node_modules/date-fns/addWeeks.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addWeeks: () => addWeeks, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _addDays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addDays.js");
            function addWeeks(date, amount, options1) { return (0, _addDays_js__WEBPACK_IMPORTED_MODULE_0__.addDays)(date, 7 * amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = addWeeks;
        }, "./node_modules/date-fns/addYears.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addYears: () => addYears, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _addMonths_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addMonths.js");
            function addYears(date, amount, options1) { return (0, _addMonths_js__WEBPACK_IMPORTED_MODULE_0__.addMonths)(date, 12 * amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = addYears;
        }, "./node_modules/date-fns/compareAsc.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { compareAsc: () => compareAsc, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function compareAsc(dateLeft, dateRight) { let diff = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dateLeft) - (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dateRight); return diff < 0 ? -1 : diff > 0 ? 1 : diff; }
            let __WEBPACK_DEFAULT_EXPORT__ = compareAsc;
        }, "./node_modules/date-fns/constants.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { constructFromSymbol: () => constructFromSymbol, daysInWeek: () => daysInWeek, daysInYear: () => daysInYear, maxTime: () => maxTime, millisecondsInDay: () => millisecondsInDay, millisecondsInHour: () => millisecondsInHour, millisecondsInMinute: () => millisecondsInMinute, millisecondsInSecond: () => millisecondsInSecond, millisecondsInWeek: () => millisecondsInWeek, minTime: () => minTime, minutesInDay: () => minutesInDay, minutesInHour: () => minutesInHour, minutesInMonth: () => minutesInMonth, minutesInYear: () => minutesInYear, monthsInQuarter: () => monthsInQuarter, monthsInYear: () => monthsInYear, quartersInYear: () => quartersInYear, secondsInDay: () => secondsInDay, secondsInHour: () => secondsInHour, secondsInMinute: () => secondsInMinute, secondsInMonth: () => secondsInMonth, secondsInQuarter: () => secondsInQuarter, secondsInWeek: () => secondsInWeek, secondsInYear: () => secondsInYear });
            let daysInWeek = 7, daysInYear = 365.2425, maxTime = 864e13, minTime = -864e13, millisecondsInWeek = 6048e5, millisecondsInDay = 864e5, millisecondsInMinute = 6e4, millisecondsInHour = 36e5, millisecondsInSecond = 1e3, minutesInYear = 525600, minutesInMonth = 43200, minutesInDay = 1440, minutesInHour = 60, monthsInQuarter = 3, monthsInYear = 12, quartersInYear = 4, secondsInHour = 3600, secondsInMinute = 60, secondsInDay = 86400, secondsInWeek = 604800, secondsInYear = 0x1e18558, secondsInMonth = 2629746, secondsInQuarter = 7889238, constructFromSymbol = Symbol.for("constructDateFrom");
        }, "./node_modules/date-fns/constructFrom.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { constructFrom: () => constructFrom, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constants.js");
            function constructFrom(date, value) { return "function" == typeof date ? date(value) : date && "object" == typeof date && _constants_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol in date ? date[_constants_js__WEBPACK_IMPORTED_MODULE_0__.constructFromSymbol](value) : date instanceof Date ? new date.constructor(value) : new Date(value); }
            let __WEBPACK_DEFAULT_EXPORT__ = constructFrom;
        }, "./node_modules/date-fns/constructNow.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { constructNow: () => constructNow, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js");
            function constructNow(date) { return (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(date, Date.now()); }
            let __WEBPACK_DEFAULT_EXPORT__ = constructNow;
        }, "./node_modules/date-fns/differenceInCalendarDays.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInCalendarDays: () => differenceInCalendarDays });
            var _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"), _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"), _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/constants.js"), _startOfDay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/startOfDay.js");
            function differenceInCalendarDays(laterDate, earlierDate, options1) { let [laterDate_, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__.normalizeDates)(options1?.in, laterDate, earlierDate), laterStartOfDay = (0, _startOfDay_js__WEBPACK_IMPORTED_MODULE_1__.startOfDay)(laterDate_), earlierStartOfDay = (0, _startOfDay_js__WEBPACK_IMPORTED_MODULE_1__.startOfDay)(earlierDate_); return Math.round((laterStartOfDay - (0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_2__.getTimezoneOffsetInMilliseconds)(laterStartOfDay) - (earlierStartOfDay - (0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_2__.getTimezoneOffsetInMilliseconds)(earlierStartOfDay))) / _constants_js__WEBPACK_IMPORTED_MODULE_3__.millisecondsInDay); }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInCalendarDays;
        }, "./node_modules/date-fns/differenceInCalendarMonths.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInCalendarMonths: () => differenceInCalendarMonths });
            var _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js");
            function differenceInCalendarMonths(laterDate, earlierDate, options1) { let [laterDate_, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__.normalizeDates)(options1?.in, laterDate, earlierDate); return 12 * (laterDate_.getFullYear() - earlierDate_.getFullYear()) + (laterDate_.getMonth() - earlierDate_.getMonth()); }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInCalendarMonths;
        }, "./node_modules/date-fns/differenceInDays.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInDays: () => differenceInDays });
            var _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"), _differenceInCalendarDays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/differenceInCalendarDays.js");
            function differenceInDays(laterDate, earlierDate, options1) { let [laterDate_, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__.normalizeDates)(options1?.in, laterDate, earlierDate), sign = compareLocalAsc(laterDate_, earlierDate_), difference = Math.abs((0, _differenceInCalendarDays_js__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarDays)(laterDate_, earlierDate_)); laterDate_.setDate(laterDate_.getDate() - sign * difference); let isLastDayNotFull = Number(compareLocalAsc(laterDate_, earlierDate_) === -sign), result = sign * (difference - isLastDayNotFull); return 0 === result ? 0 : result; }
            function compareLocalAsc(laterDate, earlierDate) { let diff = laterDate.getFullYear() - earlierDate.getFullYear() || laterDate.getMonth() - earlierDate.getMonth() || laterDate.getDate() - earlierDate.getDate() || laterDate.getHours() - earlierDate.getHours() || laterDate.getMinutes() - earlierDate.getMinutes() || laterDate.getSeconds() - earlierDate.getSeconds() || laterDate.getMilliseconds() - earlierDate.getMilliseconds(); return diff < 0 ? -1 : diff > 0 ? 1 : diff; }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInDays;
        }, "./node_modules/date-fns/differenceInMilliseconds.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInMilliseconds: () => differenceInMilliseconds });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function differenceInMilliseconds(laterDate, earlierDate) { return (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(laterDate) - (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(earlierDate); }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInMilliseconds;
        }, "./node_modules/date-fns/differenceInMonths.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInMonths: () => differenceInMonths });
            var _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"), _compareAsc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/compareAsc.js"), _differenceInCalendarMonths_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/differenceInCalendarMonths.js"), _isLastDayOfMonth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/isLastDayOfMonth.js");
            function differenceInMonths(laterDate, earlierDate, options1) { let [laterDate_, workingLaterDate, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__.normalizeDates)(options1?.in, laterDate, laterDate, earlierDate), sign = (0, _compareAsc_js__WEBPACK_IMPORTED_MODULE_1__.compareAsc)(workingLaterDate, earlierDate_), difference = Math.abs((0, _differenceInCalendarMonths_js__WEBPACK_IMPORTED_MODULE_2__.differenceInCalendarMonths)(workingLaterDate, earlierDate_)); if (difference < 1)
                return 0; 1 === workingLaterDate.getMonth() && workingLaterDate.getDate() > 27 && workingLaterDate.setDate(30), workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference); let isLastMonthNotFull = (0, _compareAsc_js__WEBPACK_IMPORTED_MODULE_1__.compareAsc)(workingLaterDate, earlierDate_) === -sign; (0, _isLastDayOfMonth_js__WEBPACK_IMPORTED_MODULE_3__.isLastDayOfMonth)(laterDate_) && 1 === difference && 1 === (0, _compareAsc_js__WEBPACK_IMPORTED_MODULE_1__.compareAsc)(laterDate_, earlierDate_) && (isLastMonthNotFull = !1); let result = sign * (difference - isLastMonthNotFull); return 0 === result ? 0 : result; }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInMonths;
        }, "./node_modules/date-fns/differenceInSeconds.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, differenceInSeconds: () => differenceInSeconds });
            var _lib_getRoundingMethod_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/_lib/getRoundingMethod.js"), _differenceInMilliseconds_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/differenceInMilliseconds.js");
            function differenceInSeconds(laterDate, earlierDate, options1) { let diff = (0, _differenceInMilliseconds_js__WEBPACK_IMPORTED_MODULE_0__.differenceInMilliseconds)(laterDate, earlierDate) / 1e3; return (0, _lib_getRoundingMethod_js__WEBPACK_IMPORTED_MODULE_1__.getRoundingMethod)(options1?.roundingMethod)(diff); }
            let __WEBPACK_DEFAULT_EXPORT__ = differenceInSeconds;
        }, "./node_modules/date-fns/endOfDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, endOfDay: () => endOfDay });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function endOfDay(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return _date.setHours(23, 59, 59, 999), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = endOfDay;
        }, "./node_modules/date-fns/endOfMonth.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, endOfMonth: () => endOfMonth });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function endOfMonth(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), month = _date.getMonth(); return _date.setFullYear(_date.getFullYear(), month + 1, 0), _date.setHours(23, 59, 59, 999), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = endOfMonth;
        }, "./node_modules/date-fns/endOfWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, endOfWeek: () => endOfWeek });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function endOfWeek(date, options1) { let defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(), weekStartsOn = options1?.weekStartsOn ?? options1?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0, _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(date, options1?.in), day = _date.getDay(); return _date.setDate(_date.getDate() + ((day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn))), _date.setHours(23, 59, 59, 999), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = endOfWeek;
        }, "./node_modules/date-fns/format.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, format: () => format, formatDate: () => format, formatters: () => _lib_format_formatters_js__WEBPACK_IMPORTED_MODULE_0__.formatters, longFormatters: () => _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_1__.longFormatters });
            var _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US.js"), _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _lib_format_formatters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/format/formatters.js"), _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/_lib/format/longFormatters.js"), _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/_lib/protectedTokens.js"), _isValid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/isValid.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            let formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
            function format(date, formatStr, options1) { let defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_2__.getDefaultOptions)(), locale = options1?.locale ?? defaultOptions.locale ?? _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_3__.enUS, firstWeekContainsDate = options1?.firstWeekContainsDate ?? options1?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1, weekStartsOn = options1?.weekStartsOn ?? options1?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0, originalDate = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_4__.toDate)(date, options1?.in); if (!(0, _isValid_js__WEBPACK_IMPORTED_MODULE_5__.isValid)(originalDate))
                throw RangeError("Invalid time value"); let parts = formatStr.match(longFormattingTokensRegExp).map(substring => { let firstCharacter = substring[0]; return "p" === firstCharacter || "P" === firstCharacter ? (0, _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_1__.longFormatters[firstCharacter])(substring, locale.formatLong) : substring; }).join("").match(formattingTokensRegExp).map(substring => { if ("''" === substring)
                return { isToken: !1, value: "'" }; let firstCharacter = substring[0]; if ("'" === firstCharacter)
                return { isToken: !1, value: function (input) { let matched = input.match(escapedStringRegExp); return matched ? matched[1].replace(doubleQuoteRegExp, "'") : input; }(substring) }; if (_lib_format_formatters_js__WEBPACK_IMPORTED_MODULE_0__.formatters[firstCharacter])
                return { isToken: !0, value: substring }; if (firstCharacter.match(unescapedLatinCharacterRegExp))
                throw RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`"); return { isToken: !1, value: substring }; }); locale.localize.preprocessor && (parts = locale.localize.preprocessor(originalDate, parts)); let formatterOptions = { firstWeekContainsDate, weekStartsOn, locale }; return parts.map(part => { if (!part.isToken)
                return part.value; let token = part.value; return (!options1?.useAdditionalWeekYearTokens && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_6__.isProtectedWeekYearToken)(token) || !options1?.useAdditionalDayOfYearTokens && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_6__.isProtectedDayOfYearToken)(token)) && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_6__.warnOrThrowProtectedError)(token, formatStr, String(date)), (0, _lib_format_formatters_js__WEBPACK_IMPORTED_MODULE_0__.formatters[token[0]])(originalDate, token, locale.localize, formatterOptions); }).join(""); }
            let __WEBPACK_DEFAULT_EXPORT__ = format;
        }, "./node_modules/date-fns/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, formatDistance: () => formatDistance });
            var _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-US.js"), _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"), _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"), _compareAsc_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/compareAsc.js"), _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/constants.js"), _differenceInMonths_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/differenceInMonths.js"), _differenceInSeconds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/differenceInSeconds.js");
            function formatDistance(laterDate, earlierDate, options1) { let months, defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(), locale = options1?.locale ?? defaultOptions.locale ?? _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_1__.enUS, comparison = (0, _compareAsc_js__WEBPACK_IMPORTED_MODULE_2__.compareAsc)(laterDate, earlierDate); if (isNaN(comparison))
                throw RangeError("Invalid time value"); let localizeOptions = Object.assign({}, options1, { addSuffix: options1?.addSuffix, comparison: comparison }), [laterDate_, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_3__.normalizeDates)(options1?.in, ...comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]), seconds = (0, _differenceInSeconds_js__WEBPACK_IMPORTED_MODULE_4__.differenceInSeconds)(earlierDate_, laterDate_), minutes = Math.round((seconds - ((0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_5__.getTimezoneOffsetInMilliseconds)(earlierDate_) - (0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_5__.getTimezoneOffsetInMilliseconds)(laterDate_)) / 1e3) / 60); if (minutes < 2)
                if (options1?.includeSeconds)
                    if (seconds < 5)
                        return locale.formatDistance("lessThanXSeconds", 5, localizeOptions);
                    else if (seconds < 10)
                        return locale.formatDistance("lessThanXSeconds", 10, localizeOptions);
                    else if (seconds < 20)
                        return locale.formatDistance("lessThanXSeconds", 20, localizeOptions);
                    else if (seconds < 40)
                        return locale.formatDistance("halfAMinute", 0, localizeOptions);
                    else if (seconds < 60)
                        return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
                    else
                        return locale.formatDistance("xMinutes", 1, localizeOptions);
                else if (0 === minutes)
                    return locale.formatDistance("lessThanXMinutes", 1, localizeOptions);
                else
                    return locale.formatDistance("xMinutes", minutes, localizeOptions); if (minutes < 45)
                return locale.formatDistance("xMinutes", minutes, localizeOptions); if (minutes < 90)
                return locale.formatDistance("aboutXHours", 1, localizeOptions); if (minutes < _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInDay) {
                let hours = Math.round(minutes / 60);
                return locale.formatDistance("aboutXHours", hours, localizeOptions);
            } if (minutes < 2520)
                return locale.formatDistance("xDays", 1, localizeOptions);
            else if (minutes < _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInMonth) {
                let days = Math.round(minutes / _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInDay);
                return locale.formatDistance("xDays", days, localizeOptions);
            }
            else if (minutes < 2 * _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInMonth)
                return months = Math.round(minutes / _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInMonth), locale.formatDistance("aboutXMonths", months, localizeOptions); if ((months = (0, _differenceInMonths_js__WEBPACK_IMPORTED_MODULE_7__.differenceInMonths)(earlierDate_, laterDate_)) < 12) {
                let nearestMonth = Math.round(minutes / _constants_js__WEBPACK_IMPORTED_MODULE_6__.minutesInMonth);
                return locale.formatDistance("xMonths", nearestMonth, localizeOptions);
            } {
                let monthsSinceStartOfYear = months % 12, years = Math.trunc(months / 12);
                return monthsSinceStartOfYear < 3 ? locale.formatDistance("aboutXYears", years, localizeOptions) : monthsSinceStartOfYear < 9 ? locale.formatDistance("overXYears", years, localizeOptions) : locale.formatDistance("almostXYears", years + 1, localizeOptions);
            } }
            let __WEBPACK_DEFAULT_EXPORT__ = formatDistance;
        }, "./node_modules/date-fns/formatDistanceToNow.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, formatDistanceToNow: () => formatDistanceToNow });
            var _constructNow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/constructNow.js"), _formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/formatDistance.js");
            function formatDistanceToNow(date, options1) { return (0, _formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance)(date, (0, _constructNow_js__WEBPACK_IMPORTED_MODULE_1__.constructNow)(date), options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = formatDistanceToNow;
        }, "./node_modules/date-fns/getDate.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getDate: () => getDate });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getDate(date, options1) { return (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in).getDate(); }
            let __WEBPACK_DEFAULT_EXPORT__ = getDate;
        }, "./node_modules/date-fns/getDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getDay: () => getDay });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getDay(date, options1) { return (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in).getDay(); }
            let __WEBPACK_DEFAULT_EXPORT__ = getDay;
        }, "./node_modules/date-fns/getDayOfYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getDayOfYear: () => getDayOfYear });
            var _differenceInCalendarDays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/differenceInCalendarDays.js"), _startOfYear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfYear.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getDayOfYear(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return (0, _differenceInCalendarDays_js__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarDays)(_date, (0, _startOfYear_js__WEBPACK_IMPORTED_MODULE_2__.startOfYear)(_date)) + 1; }
            let __WEBPACK_DEFAULT_EXPORT__ = getDayOfYear;
        }, "./node_modules/date-fns/getDefaultOptions.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getDefaultOptions: () => getDefaultOptions });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js");
            function getDefaultOptions() { return Object.assign({}, (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)()); }
            let __WEBPACK_DEFAULT_EXPORT__ = getDefaultOptions;
        }, "./node_modules/date-fns/getISODay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getISODay: () => getISODay });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getISODay(date, options1) { let day = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in).getDay(); return 0 === day ? 7 : day; }
            let __WEBPACK_DEFAULT_EXPORT__ = getISODay;
        }, "./node_modules/date-fns/getISOWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getISOWeek: () => getISOWeek });
            var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/constants.js"), _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/startOfISOWeek.js"), _startOfISOWeekYear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfISOWeekYear.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getISOWeek(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return Math.round(((0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_1__.startOfISOWeek)(_date) - (0, _startOfISOWeekYear_js__WEBPACK_IMPORTED_MODULE_2__.startOfISOWeekYear)(_date)) / _constants_js__WEBPACK_IMPORTED_MODULE_3__.millisecondsInWeek) + 1; }
            let __WEBPACK_DEFAULT_EXPORT__ = getISOWeek;
        }, "./node_modules/date-fns/getISOWeekYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getISOWeekYear: () => getISOWeekYear });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfISOWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getISOWeekYear(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), year = _date.getFullYear(), fourthOfJanuaryOfNextYear = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(_date, 0); fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4), fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0); let startOfNextYear = (0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_2__.startOfISOWeek)(fourthOfJanuaryOfNextYear), fourthOfJanuaryOfThisYear = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(_date, 0); fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4), fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0); let startOfThisYear = (0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_2__.startOfISOWeek)(fourthOfJanuaryOfThisYear); return _date.getTime() >= startOfNextYear.getTime() ? year + 1 : _date.getTime() >= startOfThisYear.getTime() ? year : year - 1; }
            let __WEBPACK_DEFAULT_EXPORT__ = getISOWeekYear;
        }, "./node_modules/date-fns/getWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getWeek: () => getWeek });
            var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/constants.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js"), _startOfWeekYear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfWeekYear.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getWeek(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return Math.round(((0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_1__.startOfWeek)(_date, options1) - (0, _startOfWeekYear_js__WEBPACK_IMPORTED_MODULE_2__.startOfWeekYear)(_date, options1)) / _constants_js__WEBPACK_IMPORTED_MODULE_3__.millisecondsInWeek) + 1; }
            let __WEBPACK_DEFAULT_EXPORT__ = getWeek;
        }, "./node_modules/date-fns/getWeekYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, getWeekYear: () => getWeekYear });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function getWeekYear(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), year = _date.getFullYear(), defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_1__.getDefaultOptions)(), firstWeekContainsDate = options1?.firstWeekContainsDate ?? options1?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1, firstWeekOfNextYear = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(options1?.in || date, 0); firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate), firstWeekOfNextYear.setHours(0, 0, 0, 0); let startOfNextYear = (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)(firstWeekOfNextYear, options1), firstWeekOfThisYear = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(options1?.in || date, 0); firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate), firstWeekOfThisYear.setHours(0, 0, 0, 0); let startOfThisYear = (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)(firstWeekOfThisYear, options1); return +_date >= +startOfNextYear ? year + 1 : +_date >= +startOfThisYear ? year : year - 1; }
            let __WEBPACK_DEFAULT_EXPORT__ = getWeekYear;
        }, "./node_modules/date-fns/isAfter.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isAfter: () => isAfter });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function isAfter(date, dateToCompare) { return +(0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date) > +(0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dateToCompare); }
            let __WEBPACK_DEFAULT_EXPORT__ = isAfter;
        }, "./node_modules/date-fns/isBefore.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isBefore: () => isBefore });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function isBefore(date, dateToCompare) { return +(0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date) < +(0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dateToCompare); }
            let __WEBPACK_DEFAULT_EXPORT__ = isBefore;
        }, "./node_modules/date-fns/isDate.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function isDate(value) { return value instanceof Date || "object" == typeof value && "[object Date]" === Object.prototype.toString.call(value); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isDate: () => isDate });
            let __WEBPACK_DEFAULT_EXPORT__ = isDate;
        }, "./node_modules/date-fns/isLastDayOfMonth.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isLastDayOfMonth: () => isLastDayOfMonth });
            var _endOfDay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/endOfDay.js"), _endOfMonth_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/endOfMonth.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function isLastDayOfMonth(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return +(0, _endOfDay_js__WEBPACK_IMPORTED_MODULE_1__.endOfDay)(_date, options1) == +(0, _endOfMonth_js__WEBPACK_IMPORTED_MODULE_2__.endOfMonth)(_date, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = isLastDayOfMonth;
        }, "./node_modules/date-fns/isSameWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isSameWeek: () => isSameWeek });
            var _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/normalizeDates.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js");
            function isSameWeek(laterDate, earlierDate, options1) { let [laterDate_, earlierDate_] = (0, _lib_normalizeDates_js__WEBPACK_IMPORTED_MODULE_0__.normalizeDates)(options1?.in, laterDate, earlierDate); return +(0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_1__.startOfWeek)(laterDate_, options1) == +(0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_1__.startOfWeek)(earlierDate_, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = isSameWeek;
        }, "./node_modules/date-fns/isValid.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isValid: () => isValid });
            var _isDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isDate.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function isValid(date) { return !(!(0, _isDate_js__WEBPACK_IMPORTED_MODULE_0__.isDate)(date) && "number" != typeof date || isNaN(+(0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(date))); }
            let __WEBPACK_DEFAULT_EXPORT__ = isValid;
        }, "./node_modules/date-fns/isWeekend.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, isWeekend: () => isWeekend });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function isWeekend(date, options1) { let day = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in).getDay(); return 0 === day || 6 === day; }
            let __WEBPACK_DEFAULT_EXPORT__ = isWeekend;
        }, "./node_modules/date-fns/locale.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { af: () => _locale_af_js__WEBPACK_IMPORTED_MODULE_0__.af, ar: () => _locale_ar_js__WEBPACK_IMPORTED_MODULE_1__.ar, arDZ: () => _locale_ar_DZ_js__WEBPACK_IMPORTED_MODULE_2__.arDZ, arEG: () => _locale_ar_EG_js__WEBPACK_IMPORTED_MODULE_3__.arEG, arMA: () => _locale_ar_MA_js__WEBPACK_IMPORTED_MODULE_4__.arMA, arSA: () => _locale_ar_SA_js__WEBPACK_IMPORTED_MODULE_5__.arSA, arTN: () => _locale_ar_TN_js__WEBPACK_IMPORTED_MODULE_6__.arTN, az: () => _locale_az_js__WEBPACK_IMPORTED_MODULE_7__.az, be: () => _locale_be_js__WEBPACK_IMPORTED_MODULE_8__.be, beTarask: () => _locale_be_tarask_js__WEBPACK_IMPORTED_MODULE_9__.beTarask, bg: () => _locale_bg_js__WEBPACK_IMPORTED_MODULE_10__.bg, bn: () => _locale_bn_js__WEBPACK_IMPORTED_MODULE_11__.bn, bs: () => _locale_bs_js__WEBPACK_IMPORTED_MODULE_12__.bs, ca: () => _locale_ca_js__WEBPACK_IMPORTED_MODULE_13__.ca, ckb: () => _locale_ckb_js__WEBPACK_IMPORTED_MODULE_14__.ckb, cs: () => _locale_cs_js__WEBPACK_IMPORTED_MODULE_15__.cs, cy: () => _locale_cy_js__WEBPACK_IMPORTED_MODULE_16__.cy, da: () => _locale_da_js__WEBPACK_IMPORTED_MODULE_17__.da, de: () => _locale_de_js__WEBPACK_IMPORTED_MODULE_18__.de, deAT: () => _locale_de_AT_js__WEBPACK_IMPORTED_MODULE_19__.deAT, el: () => _locale_el_js__WEBPACK_IMPORTED_MODULE_20__.el, enAU: () => _locale_en_AU_js__WEBPACK_IMPORTED_MODULE_21__.enAU, enCA: () => _locale_en_CA_js__WEBPACK_IMPORTED_MODULE_22__.enCA, enGB: () => _locale_en_GB_js__WEBPACK_IMPORTED_MODULE_23__.enGB, enIE: () => _locale_en_IE_js__WEBPACK_IMPORTED_MODULE_24__.enIE, enIN: () => _locale_en_IN_js__WEBPACK_IMPORTED_MODULE_25__.enIN, enNZ: () => _locale_en_NZ_js__WEBPACK_IMPORTED_MODULE_26__.enNZ, enUS: () => _locale_en_US_js__WEBPACK_IMPORTED_MODULE_27__.enUS, enZA: () => _locale_en_ZA_js__WEBPACK_IMPORTED_MODULE_28__.enZA, eo: () => _locale_eo_js__WEBPACK_IMPORTED_MODULE_29__.eo, es: () => _locale_es_js__WEBPACK_IMPORTED_MODULE_30__.es, et: () => _locale_et_js__WEBPACK_IMPORTED_MODULE_31__.et, eu: () => _locale_eu_js__WEBPACK_IMPORTED_MODULE_32__.eu, faIR: () => _locale_fa_IR_js__WEBPACK_IMPORTED_MODULE_33__.faIR, fi: () => _locale_fi_js__WEBPACK_IMPORTED_MODULE_34__.fi, fr: () => _locale_fr_js__WEBPACK_IMPORTED_MODULE_35__.fr, frCA: () => _locale_fr_CA_js__WEBPACK_IMPORTED_MODULE_36__.frCA, frCH: () => _locale_fr_CH_js__WEBPACK_IMPORTED_MODULE_37__.frCH, fy: () => _locale_fy_js__WEBPACK_IMPORTED_MODULE_38__.fy, gd: () => _locale_gd_js__WEBPACK_IMPORTED_MODULE_39__.gd, gl: () => _locale_gl_js__WEBPACK_IMPORTED_MODULE_40__.gl, gu: () => _locale_gu_js__WEBPACK_IMPORTED_MODULE_41__.gu, he: () => _locale_he_js__WEBPACK_IMPORTED_MODULE_42__.he, hi: () => _locale_hi_js__WEBPACK_IMPORTED_MODULE_43__.hi, hr: () => _locale_hr_js__WEBPACK_IMPORTED_MODULE_44__.hr, ht: () => _locale_ht_js__WEBPACK_IMPORTED_MODULE_45__.ht, hu: () => _locale_hu_js__WEBPACK_IMPORTED_MODULE_46__.hu, hy: () => _locale_hy_js__WEBPACK_IMPORTED_MODULE_47__.hy, id: () => _locale_id_js__WEBPACK_IMPORTED_MODULE_48__.id, is: () => _locale_is_js__WEBPACK_IMPORTED_MODULE_49__.is, it: () => _locale_it_js__WEBPACK_IMPORTED_MODULE_50__.it, itCH: () => _locale_it_CH_js__WEBPACK_IMPORTED_MODULE_51__.itCH, ja: () => _locale_ja_js__WEBPACK_IMPORTED_MODULE_52__.ja, jaHira: () => _locale_ja_Hira_js__WEBPACK_IMPORTED_MODULE_53__.jaHira, ka: () => _locale_ka_js__WEBPACK_IMPORTED_MODULE_54__.ka, kk: () => _locale_kk_js__WEBPACK_IMPORTED_MODULE_55__.kk, km: () => _locale_km_js__WEBPACK_IMPORTED_MODULE_56__.km, kn: () => _locale_kn_js__WEBPACK_IMPORTED_MODULE_57__.kn, ko: () => _locale_ko_js__WEBPACK_IMPORTED_MODULE_58__.ko, lb: () => _locale_lb_js__WEBPACK_IMPORTED_MODULE_59__.lb, lt: () => _locale_lt_js__WEBPACK_IMPORTED_MODULE_60__.lt, lv: () => _locale_lv_js__WEBPACK_IMPORTED_MODULE_61__.lv, mk: () => _locale_mk_js__WEBPACK_IMPORTED_MODULE_62__.mk, mn: () => _locale_mn_js__WEBPACK_IMPORTED_MODULE_63__.mn, ms: () => _locale_ms_js__WEBPACK_IMPORTED_MODULE_64__.ms, mt: () => _locale_mt_js__WEBPACK_IMPORTED_MODULE_65__.mt, nb: () => _locale_nb_js__WEBPACK_IMPORTED_MODULE_66__.nb, nl: () => _locale_nl_js__WEBPACK_IMPORTED_MODULE_67__.nl, nlBE: () => _locale_nl_BE_js__WEBPACK_IMPORTED_MODULE_68__.nlBE, nn: () => _locale_nn_js__WEBPACK_IMPORTED_MODULE_69__.nn, oc: () => _locale_oc_js__WEBPACK_IMPORTED_MODULE_70__.oc, pl: () => _locale_pl_js__WEBPACK_IMPORTED_MODULE_71__.pl, pt: () => _locale_pt_js__WEBPACK_IMPORTED_MODULE_72__.pt, ptBR: () => _locale_pt_BR_js__WEBPACK_IMPORTED_MODULE_73__.ptBR, ro: () => _locale_ro_js__WEBPACK_IMPORTED_MODULE_74__.ro, ru: () => _locale_ru_js__WEBPACK_IMPORTED_MODULE_75__.ru, se: () => _locale_se_js__WEBPACK_IMPORTED_MODULE_76__.se, sk: () => _locale_sk_js__WEBPACK_IMPORTED_MODULE_77__.sk, sl: () => _locale_sl_js__WEBPACK_IMPORTED_MODULE_78__.sl, sq: () => _locale_sq_js__WEBPACK_IMPORTED_MODULE_79__.sq, sr: () => _locale_sr_js__WEBPACK_IMPORTED_MODULE_80__.sr, srLatn: () => _locale_sr_Latn_js__WEBPACK_IMPORTED_MODULE_81__.srLatn, sv: () => _locale_sv_js__WEBPACK_IMPORTED_MODULE_82__.sv, ta: () => _locale_ta_js__WEBPACK_IMPORTED_MODULE_83__.ta, te: () => _locale_te_js__WEBPACK_IMPORTED_MODULE_84__.te, th: () => _locale_th_js__WEBPACK_IMPORTED_MODULE_85__.th, tr: () => _locale_tr_js__WEBPACK_IMPORTED_MODULE_86__.tr, ug: () => _locale_ug_js__WEBPACK_IMPORTED_MODULE_87__.ug, uk: () => _locale_uk_js__WEBPACK_IMPORTED_MODULE_88__.uk, uz: () => _locale_uz_js__WEBPACK_IMPORTED_MODULE_89__.uz, uzCyrl: () => _locale_uz_Cyrl_js__WEBPACK_IMPORTED_MODULE_90__.uzCyrl, vi: () => _locale_vi_js__WEBPACK_IMPORTED_MODULE_91__.vi, zhCN: () => _locale_zh_CN_js__WEBPACK_IMPORTED_MODULE_92__.zhCN, zhHK: () => _locale_zh_HK_js__WEBPACK_IMPORTED_MODULE_93__.zhHK, zhTW: () => _locale_zh_TW_js__WEBPACK_IMPORTED_MODULE_94__.zhTW });
            var _locale_af_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/af.js"), _locale_ar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar.js"), _locale_ar_DZ_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ.js"), _locale_ar_EG_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG.js"), _locale_ar_MA_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA.js"), _locale_ar_SA_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA.js"), _locale_ar_TN_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN.js"), _locale_az_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/locale/az.js"), _locale_be_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/date-fns/locale/be.js"), _locale_be_tarask_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask.js"), _locale_bg_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/date-fns/locale/bg.js"), _locale_bn_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/date-fns/locale/bn.js"), _locale_bs_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/date-fns/locale/bs.js"), _locale_ca_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/date-fns/locale/ca.js"), _locale_ckb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/date-fns/locale/ckb.js"), _locale_cs_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/date-fns/locale/cs.js"), _locale_cy_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/locale/cy.js"), _locale_da_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/date-fns/locale/da.js"), _locale_de_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/date-fns/locale/de.js"), _locale_de_AT_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/date-fns/locale/de-AT.js"), _locale_el_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/date-fns/locale/el.js"), _locale_en_AU_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./node_modules/date-fns/locale/en-AU.js"), _locale_en_CA_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("./node_modules/date-fns/locale/en-CA.js"), _locale_en_GB_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("./node_modules/date-fns/locale/en-GB.js"), _locale_en_IE_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__("./node_modules/date-fns/locale/en-IE.js"), _locale_en_IN_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__("./node_modules/date-fns/locale/en-IN.js"), _locale_en_NZ_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__("./node_modules/date-fns/locale/en-NZ.js"), _locale_en_US_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__("./node_modules/date-fns/locale/en-US.js"), _locale_en_ZA_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__("./node_modules/date-fns/locale/en-ZA.js"), _locale_eo_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__("./node_modules/date-fns/locale/eo.js"), _locale_es_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__("./node_modules/date-fns/locale/es.js"), _locale_et_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__("./node_modules/date-fns/locale/et.js"), _locale_eu_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__("./node_modules/date-fns/locale/eu.js"), _locale_fa_IR_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR.js"), _locale_fi_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__("./node_modules/date-fns/locale/fi.js"), _locale_fr_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__("./node_modules/date-fns/locale/fr.js"), _locale_fr_CA_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__("./node_modules/date-fns/locale/fr-CA.js"), _locale_fr_CH_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__("./node_modules/date-fns/locale/fr-CH.js"), _locale_fy_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__("./node_modules/date-fns/locale/fy.js"), _locale_gd_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__("./node_modules/date-fns/locale/gd.js"), _locale_gl_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__("./node_modules/date-fns/locale/gl.js"), _locale_gu_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__("./node_modules/date-fns/locale/gu.js"), _locale_he_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__("./node_modules/date-fns/locale/he.js"), _locale_hi_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__("./node_modules/date-fns/locale/hi.js"), _locale_hr_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__("./node_modules/date-fns/locale/hr.js"), _locale_ht_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__("./node_modules/date-fns/locale/ht.js"), _locale_hu_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__("./node_modules/date-fns/locale/hu.js"), _locale_hy_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__("./node_modules/date-fns/locale/hy.js"), _locale_id_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__("./node_modules/date-fns/locale/id.js"), _locale_is_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__("./node_modules/date-fns/locale/is.js"), _locale_it_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__("./node_modules/date-fns/locale/it.js"), _locale_it_CH_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__("./node_modules/date-fns/locale/it-CH.js"), _locale_ja_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__("./node_modules/date-fns/locale/ja.js"), _locale_ja_Hira_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira.js"), _locale_ka_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__("./node_modules/date-fns/locale/ka.js"), _locale_kk_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__("./node_modules/date-fns/locale/kk.js"), _locale_km_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__("./node_modules/date-fns/locale/km.js"), _locale_kn_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__("./node_modules/date-fns/locale/kn.js"), _locale_ko_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__("./node_modules/date-fns/locale/ko.js"), _locale_lb_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__("./node_modules/date-fns/locale/lb.js"), _locale_lt_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__("./node_modules/date-fns/locale/lt.js"), _locale_lv_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__("./node_modules/date-fns/locale/lv.js"), _locale_mk_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__("./node_modules/date-fns/locale/mk.js"), _locale_mn_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__("./node_modules/date-fns/locale/mn.js"), _locale_ms_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__("./node_modules/date-fns/locale/ms.js"), _locale_mt_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__("./node_modules/date-fns/locale/mt.js"), _locale_nb_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__("./node_modules/date-fns/locale/nb.js"), _locale_nl_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__("./node_modules/date-fns/locale/nl.js"), _locale_nl_BE_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE.js"), _locale_nn_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__("./node_modules/date-fns/locale/nn.js"), _locale_oc_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__("./node_modules/date-fns/locale/oc.js"), _locale_pl_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__("./node_modules/date-fns/locale/pl.js"), _locale_pt_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__("./node_modules/date-fns/locale/pt.js"), _locale_pt_BR_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR.js"), _locale_ro_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__("./node_modules/date-fns/locale/ro.js"), _locale_ru_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__("./node_modules/date-fns/locale/ru.js"), _locale_se_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__("./node_modules/date-fns/locale/se.js"), _locale_sk_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__("./node_modules/date-fns/locale/sk.js"), _locale_sl_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__("./node_modules/date-fns/locale/sl.js"), _locale_sq_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__("./node_modules/date-fns/locale/sq.js"), _locale_sr_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__("./node_modules/date-fns/locale/sr.js"), _locale_sr_Latn_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn.js"), _locale_sv_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__("./node_modules/date-fns/locale/sv.js"), _locale_ta_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__("./node_modules/date-fns/locale/ta.js"), _locale_te_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__("./node_modules/date-fns/locale/te.js"), _locale_th_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__("./node_modules/date-fns/locale/th.js"), _locale_tr_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__("./node_modules/date-fns/locale/tr.js"), _locale_ug_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__("./node_modules/date-fns/locale/ug.js"), _locale_uk_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__("./node_modules/date-fns/locale/uk.js"), _locale_uz_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__("./node_modules/date-fns/locale/uz.js"), _locale_uz_Cyrl_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl.js"), _locale_vi_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__("./node_modules/date-fns/locale/vi.js"), _locale_zh_CN_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN.js"), _locale_zh_HK_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK.js"), _locale_zh_TW_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW.js");
        }, "./node_modules/date-fns/locale/_lib/buildFormatLongFn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function buildFormatLongFn(args) { return (options1 = {}) => { let width = options1.width ? String(options1.width) : args.defaultWidth; return args.formats[width] || args.formats[args.defaultWidth]; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { buildFormatLongFn: () => buildFormatLongFn });
        }, "./node_modules/date-fns/locale/_lib/buildLocalizeFn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function buildLocalizeFn(args) { return (value, options1) => { let valuesArray; if ("formatting" === (options1?.context ? String(options1.context) : "standalone") && args.formattingValues) {
                let defaultWidth = args.defaultFormattingWidth || args.defaultWidth, width = options1?.width ? String(options1.width) : defaultWidth;
                valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
            }
            else {
                let defaultWidth = args.defaultWidth, width = options1?.width ? String(options1.width) : args.defaultWidth;
                valuesArray = args.values[width] || args.values[defaultWidth];
            } return valuesArray[args.argumentCallback ? args.argumentCallback(value) : value]; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { buildLocalizeFn: () => buildLocalizeFn });
        }, "./node_modules/date-fns/locale/_lib/buildMatchFn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function buildMatchFn(args) { return (string, options1 = {}) => { let value, width = options1.width, matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth], matchResult = string.match(matchPattern); if (!matchResult)
                return null; let matchedString = matchResult[0], parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth], key = Array.isArray(parsePatterns) ? function (array, predicate) { for (let key = 0; key < array.length; key++)
                if (predicate(array[key]))
                    return key; }(parsePatterns, pattern => pattern.test(matchedString)) : function (object, predicate) { for (let key in object)
                if (Object.prototype.hasOwnProperty.call(object, key) && predicate(object[key]))
                    return key; }(parsePatterns, pattern => pattern.test(matchedString)); return value = args.valueCallback ? args.valueCallback(key) : key, { value: value = options1.valueCallback ? options1.valueCallback(value) : value, rest: string.slice(matchedString.length) }; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { buildMatchFn: () => buildMatchFn });
        }, "./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function buildMatchPatternFn(args) { return (string, options1 = {}) => { let matchResult = string.match(args.matchPattern); if (!matchResult)
                return null; let matchedString = matchResult[0], parseResult = string.match(args.parsePattern); if (!parseResult)
                return null; let value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0]; return { value: value = options1.valueCallback ? options1.valueCallback(value) : value, rest: string.slice(matchedString.length) }; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { buildMatchPatternFn: () => buildMatchPatternFn });
        }, "./node_modules/date-fns/locale/af.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { af: () => af, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _af_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/af/_lib/formatDistance.js"), _af_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/af/_lib/formatLong.js"), _af_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/af/_lib/formatRelative.js"), _af_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/af/_lib/localize.js"), _af_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/af/_lib/match.js");
            let af = { code: "af", formatDistance: _af_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _af_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _af_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _af_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _af_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = af;
        }, "./node_modules/date-fns/locale/af/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "minder as 'n sekonde", other: "minder as {{count}} sekondes" }, xSeconds: { one: "1 sekonde", other: "{{count}} sekondes" }, halfAMinute: "'n halwe minuut", lessThanXMinutes: { one: "minder as 'n minuut", other: "minder as {{count}} minute" }, xMinutes: { one: "'n minuut", other: "{{count}} minute" }, aboutXHours: { one: "ongeveer 1 uur", other: "ongeveer {{count}} ure" }, xHours: { one: "1 uur", other: "{{count}} ure" }, xDays: { one: "1 dag", other: "{{count}} dae" }, aboutXWeeks: { one: "ongeveer 1 week", other: "ongeveer {{count}} weke" }, xWeeks: { one: "1 week", other: "{{count}} weke" }, aboutXMonths: { one: "ongeveer 1 maand", other: "ongeveer {{count}} maande" }, xMonths: { one: "1 maand", other: "{{count}} maande" }, aboutXYears: { one: "ongeveer 1 jaar", other: "ongeveer {{count}} jaar" }, xYears: { one: "1 jaar", other: "{{count}} jaar" }, overXYears: { one: "meer as 1 jaar", other: "meer as {{count}} jaar" }, almostXYears: { one: "byna 1 jaar", other: "byna {{count}} jaar" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "oor " + result;
                else
                    return result + " gelede"; return result; };
        }, "./node_modules/date-fns/locale/af/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "yyyy/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'om' {{time}}", long: "{{date}} 'om' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/af/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'verlede' eeee 'om' p", yesterday: "'gister om' p", today: "'vandag om' p", tomorrow: "'môre om' p", nextWeek: "eeee 'om' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/af/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 < 20)
                    switch (rem100) {
                        case 1:
                        case 8: break;
                        default: return number + "de";
                    } return number + "ste"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["vC", "nC"], abbreviated: ["vC", "nC"], wide: ["voor Christus", "na Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], wide: ["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "D", "W", "D", "V", "S"], short: ["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], abbreviated: ["Son", "Maa", "Din", "Woe", "Don", "Vry", "Sat"], wide: ["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "vm", pm: "nm", midnight: "middernag", noon: "middaguur", morning: "oggend", afternoon: "middag", evening: "laat middag", night: "aand" }, abbreviated: { am: "vm", pm: "nm", midnight: "middernag", noon: "middaguur", morning: "oggend", afternoon: "middag", evening: "laat middag", night: "aand" }, wide: { am: "vm", pm: "nm", midnight: "middernag", noon: "middaguur", morning: "oggend", afternoon: "middag", evening: "laat middag", night: "aand" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "vm", pm: "nm", midnight: "middernag", noon: "uur die middag", morning: "uur die oggend", afternoon: "uur die middag", evening: "uur die aand", night: "uur die aand" }, abbreviated: { am: "vm", pm: "nm", midnight: "middernag", noon: "uur die middag", morning: "uur die oggend", afternoon: "uur die middag", evening: "uur die aand", night: "uur die aand" }, wide: { am: "vm", pm: "nm", midnight: "middernag", noon: "uur die middag", morning: "uur die oggend", afternoon: "uur die middag", evening: "uur die aand", night: "uur die aand" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/af/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ste|de)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([vn]\.? ?C\.?)/, abbreviated: /^([vn]\. ?C\.?)/, wide: /^((voor|na) Christus)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^v/, /^n/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K[1234]/i, wide: /^[1234](st|d)e kwartaal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\.?/i, wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^J/i, /^F/i, /^M/i, /^A/i, /^M/i, /^J/i, /^J/i, /^A/i, /^S/i, /^O/i, /^N/i, /^D/i], any: [/^Jan/i, /^Feb/i, /^Mrt/i, /^Apr/i, /^Mei/i, /^Jun/i, /^Jul/i, /^Aug/i, /^Sep/i, /^Okt/i, /^Nov/i, /^Dec/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smdwv]/i, short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i, abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i, wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i], any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^vm/i, pm: /^nm/i, midnight: /^middernag/i, noon: /^middaguur/i, morning: /oggend/i, afternoon: /middag/i, evening: /laat middag/i, night: /aand/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar-DZ.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { arDZ: () => arDZ, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_DZ_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ/_lib/formatDistance.js"), _ar_DZ_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ/_lib/formatLong.js"), _ar_DZ_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ/_lib/formatRelative.js"), _ar_DZ_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ/_lib/localize.js"), _ar_DZ_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-DZ/_lib/match.js");
            let arDZ = { code: "ar-DZ", formatDistance: _ar_DZ_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_DZ_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_DZ_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_DZ_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_DZ_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = arDZ;
        }, "./node_modules/date-fns/locale/ar-DZ/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية واحدة", two: "أقل من ثانتين", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية واحدة", two: "ثانتين", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نصف دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقائق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة واحدة", two: "دقيقتين", threeToTen: "{{count}} دقائق", other: "{{count}} دقيقة" }, aboutXHours: { one: "ساعة واحدة تقريباً", two: "ساعتين تقريباً", threeToTen: "{{count}} ساعات تقريباً", other: "{{count}} ساعة تقريباً" }, xHours: { one: "ساعة واحدة", two: "ساعتين", threeToTen: "{{count}} ساعات", other: "{{count}} ساعة" }, xDays: { one: "يوم واحد", two: "يومين", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "أسبوع واحد تقريباً", two: "أسبوعين تقريباً", threeToTen: "{{count}} أسابيع تقريباً", other: "{{count}} أسبوع تقريباً" }, xWeeks: { one: "أسبوع واحد", two: "أسبوعين", threeToTen: "{{count}} أسابيع", other: "{{count}} أسبوع" }, aboutXMonths: { one: "شهر واحد تقريباً", two: "شهرين تقريباً", threeToTen: "{{count}} أشهر تقريباً", other: "{{count}} شهر تقريباً" }, xMonths: { one: "شهر واحد", two: "شهرين", threeToTen: "{{count}} أشهر", other: "{{count}} شهر" }, aboutXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" }, xYears: { one: "عام واحد", two: "عامين", threeToTen: "{{count}} أعوام", other: "{{count}} عام" }, overXYears: { one: "أكثر من عام", two: "أكثر من عامين", threeToTen: "أكثر من {{count}} أعوام", other: "أكثر من {{count}} عام" }, almostXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" } }, formatDistance = (token, count, options1) => { let result; options1 = options1 || {}; let usageGroup = formatDistanceLocale[token]; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : 2 === count ? usageGroup.two : count <= 10 ? usageGroup.threeToTen.replace("{{count}}", String(count)) : usageGroup.other.replace("{{count}}", String(count)), options1.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "في خلال " + result;
                else
                    return "منذ " + result; return result; };
        }, "./node_modules/date-fns/locale/ar-DZ/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'عند' {{time}}", long: "{{date}} 'عند' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar-DZ/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'أخر' eeee 'عند' p", yesterday: "'أمس عند' p", today: "'اليوم عند' p", tomorrow: "'غداً عند' p", nextWeek: "eeee 'عند' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar-DZ/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ج", "ف", "م", "أ", "م", "ج", "ج", "أ", "س", "أ", "ن", "د"], abbreviated: ["جانـ", "فيفـ", "مارس", "أفريل", "مايـ", "جوانـ", "جويـ", "أوت", "سبتـ", "أكتـ", "نوفـ", "ديسـ"], wide: ["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"], wide: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "في الصباح", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "في الصباح", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar-DZ/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ق|ب)/i, abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i, wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^قبل/i, /^بعد/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ر[1234]/i, wide: /^الربع [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => Number(index) + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[جفمأسند]/i, abbreviated: /^(جان|فيف|مار|أفر|ماي|جوا|جوي|أوت|سبت|أكت|نوف|ديس)/i, wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ج/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ج/i, /^ج/i, /^أ/i, /^س/i, /^أ/i, /^ن/i, /^د/i], any: [/^جان/i, /^فيف/i, /^مار/i, /^أفر/i, /^ماي/i, /^جوا/i, /^جوي/i, /^أوت/i, /^سبت/i, /^أكت/i, /^نوف/i, /^ديس/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[حنثرخجس]/i, short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i, wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i], wide: [/^الأحد/i, /^الاثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i], any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar-EG.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { arEG: () => arEG, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_EG_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG/_lib/formatDistance.js"), _ar_EG_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG/_lib/formatLong.js"), _ar_EG_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG/_lib/formatRelative.js"), _ar_EG_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG/_lib/localize.js"), _ar_EG_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-EG/_lib/match.js");
            let arEG = { code: "ar-EG", formatDistance: _ar_EG_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_EG_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_EG_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_EG_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_EG_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = arEG;
        }, "./node_modules/date-fns/locale/ar-EG/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية", two: "أقل من ثانيتين", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية", two: "ثانيتين", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نص دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقايق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة", two: "دقيقتين", threeToTen: "{{count}} دقايق", other: "{{count}} دقيقة" }, aboutXHours: { one: "حوالي ساعة", two: "حوالي ساعتين", threeToTen: "حوالي {{count}} ساعات", other: "حوالي {{count}} ساعة" }, xHours: { one: "ساعة", two: "ساعتين", threeToTen: "{{count}} ساعات", other: "{{count}} ساعة" }, xDays: { one: "يوم", two: "يومين", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "حوالي أسبوع", two: "حوالي أسبوعين", threeToTen: "حوالي {{count}} أسابيع", other: "حوالي {{count}} أسبوع" }, xWeeks: { one: "أسبوع", two: "أسبوعين", threeToTen: "{{count}} أسابيع", other: "{{count}} أسبوع" }, aboutXMonths: { one: "حوالي شهر", two: "حوالي شهرين", threeToTen: "حوالي {{count}} أشهر", other: "حوالي {{count}} شهر" }, xMonths: { one: "شهر", two: "شهرين", threeToTen: "{{count}} أشهر", other: "{{count}} شهر" }, aboutXYears: { one: "حوالي سنة", two: "حوالي سنتين", threeToTen: "حوالي {{count}} سنين", other: "حوالي {{count}} سنة" }, xYears: { one: "عام", two: "عامين", threeToTen: "{{count}} أعوام", other: "{{count}} عام" }, overXYears: { one: "أكثر من سنة", two: "أكثر من سنتين", threeToTen: "أكثر من {{count}} سنين", other: "أكثر من {{count}} سنة" }, almostXYears: { one: "عام تقريبًا", two: "عامين تقريبًا", threeToTen: "{{count}} أعوام تقريبًا", other: "{{count}} عام تقريبًا" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count ? tokenValue.two : count <= 10 ? tokenValue.threeToTen.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return `في خلال ${result}`;
                else
                    return `منذ ${result}`; return result; };
        }, "./node_modules/date-fns/locale/ar-EG/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE، do MMMM y", long: "do MMMM y", medium: "dd/MMM/y", short: "d/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'الساعة' {{time}}", long: "{{date}} 'الساعة' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar-EG/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'اللي جاي الساعة' p", yesterday: "'إمبارح الساعة' p", today: "'النهاردة الساعة' p", tomorrow: "'بكرة الساعة' p", nextWeek: "eeee 'الساعة' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar-EG/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م", "ب.م"], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"], abbreviated: ["ينا", "فبر", "مارس", "أبريل", "مايو", "يونـ", "يولـ", "أغسـ", "سبتـ", "أكتـ", "نوفـ", "ديسـ"], wide: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], wide: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءً", night: "ليلاً" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهراً", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءً", night: "ليلاً" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهراً", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءً", night: "ليلاً" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "في الصباح", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهراً", morning: "في الصباح", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", morning: "في الصباح", noon: "ظهراً", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar-EG/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)/, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ق|ب)/g, abbreviated: /^(ق.م|ب.م)/g, wide: /^(قبل الميلاد|بعد الميلاد)/g }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ق/g, /^ب/g] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/, abbreviated: /^ر[1234]/, wide: /^الربع (الأول|الثاني|الثالث|الرابع)/ }, defaultMatchWidth: "wide", parsePatterns: { wide: [/الربع الأول/, /الربع الثاني/, /الربع الثالث/, /الربع الرابع/], any: [/1/, /2/, /3/, /4/] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ي|ف|م|أ|س|ن|د)/, abbreviated: /^(ينا|فبر|مارس|أبريل|مايو|يونـ|يولـ|أغسـ|سبتـ|أكتـ|نوفـ|ديسـ)/, wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/ }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/, /^ف/, /^م/, /^أ/, /^م/, /^ي/, /^ي/, /^أ/, /^س/, /^أ/, /^ن/, /^د/], any: [/^ينا/, /^فبر/, /^مارس/, /^أبريل/, /^مايو/, /^يون/, /^يول/, /^أغس/, /^سبت/, /^أكت/, /^نوف/, /^ديس/] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ح|ن|ث|ر|خ|ج|س)/, short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/, abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/, wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/ }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/, /^ن/, /^ث/, /^ر/, /^خ/, /^ج/, /^س/], any: [/أحد/, /اثنين/, /ثلاثاء/, /أربعاء/, /خميس/, /جمعة/, /سبت/] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ص|م|ن|ظ|في الصباح|بعد الظهر|في المساء|في الليل)/, abbreviated: /^(ص|م|نصف الليل|ظهراً|في الصباح|بعد الظهر|في المساء|في الليل)/, wide: /^(ص|م|نصف الليل|في الصباح|ظهراً|بعد الظهر|في المساء|في الليل)/, any: /^(ص|م|صباح|ظهر|مساء|ليل)/ }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ص/, pm: /^م/, midnight: /^ن/, noon: /^ظ/, morning: /^ص/, afternoon: /^بعد/, evening: /^م/, night: /^ل/ } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar-MA.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { arMA: () => arMA, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_MA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA/_lib/formatDistance.js"), _ar_MA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA/_lib/formatLong.js"), _ar_MA_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA/_lib/formatRelative.js"), _ar_MA_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA/_lib/localize.js"), _ar_MA_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-MA/_lib/match.js");
            let arMA = { code: "ar-MA", formatDistance: _ar_MA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_MA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_MA_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_MA_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_MA_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = arMA;
        }, "./node_modules/date-fns/locale/ar-MA/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية واحدة", two: "أقل من ثانتين", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية واحدة", two: "ثانتين", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نصف دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقائق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة واحدة", two: "دقيقتين", threeToTen: "{{count}} دقائق", other: "{{count}} دقيقة" }, aboutXHours: { one: "ساعة واحدة تقريباً", two: "ساعتين تقريباً", threeToTen: "{{count}} ساعات تقريباً", other: "{{count}} ساعة تقريباً" }, xHours: { one: "ساعة واحدة", two: "ساعتين", threeToTen: "{{count}} ساعات", other: "{{count}} ساعة" }, xDays: { one: "يوم واحد", two: "يومين", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "أسبوع واحد تقريباً", two: "أسبوعين تقريباً", threeToTen: "{{count}} أسابيع تقريباً", other: "{{count}} أسبوع تقريباً" }, xWeeks: { one: "أسبوع واحد", two: "أسبوعين", threeToTen: "{{count}} أسابيع", other: "{{count}} أسبوع" }, aboutXMonths: { one: "شهر واحد تقريباً", two: "شهرين تقريباً", threeToTen: "{{count}} أشهر تقريباً", other: "{{count}} شهر تقريباً" }, xMonths: { one: "شهر واحد", two: "شهرين", threeToTen: "{{count}} أشهر", other: "{{count}} شهر" }, aboutXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" }, xYears: { one: "عام واحد", two: "عامين", threeToTen: "{{count}} أعوام", other: "{{count}} عام" }, overXYears: { one: "أكثر من عام", two: "أكثر من عامين", threeToTen: "أكثر من {{count}} أعوام", other: "أكثر من {{count}} عام" }, almostXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" } }, formatDistance = (token, count, options1) => { let result; options1 = options1 || {}; let usageGroup = formatDistanceLocale[token]; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : 2 === count ? usageGroup.two : count <= 10 ? usageGroup.threeToTen.replace("{{count}}", String(count)) : usageGroup.other.replace("{{count}}", String(count)), options1.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "في خلال " + result;
                else
                    return "منذ " + result; return result; };
        }, "./node_modules/date-fns/locale/ar-MA/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'عند' {{time}}", long: "{{date}} 'عند' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar-MA/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'أخر' eeee 'عند' p", yesterday: "'أمس عند' p", today: "'اليوم عند' p", tomorrow: "'غداً عند' p", nextWeek: "eeee 'عند' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar-MA/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "غ", "ش", "أ", "ن", "د"], abbreviated: ["ينا", "فبر", "مارس", "أبريل", "ماي", "يونـ", "يولـ", "غشت", "شتنـ", "أكتـ", "نونـ", "دجنـ"], wide: ["يناير", "فبراير", "مارس", "أبريل", "ماي", "يونيو", "يوليوز", "غشت", "شتنبر", "أكتوبر", "نونبر", "دجنبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"], wide: ["الأحد", "الإثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "في الصباح", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "في الصباح", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar-MA/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ق|ب)/i, abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i, wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^قبل/i, /^بعد/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ر[1234]/i, wide: /^الربع [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => Number(index) + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[يفمأمسند]/i, abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i, wide: /^(ين|ف|مار|أب|ماي|يون|يول|غش|شت|أك|ن|د)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ي/i, /^ي/i, /^غ/i, /^ش/i, /^أ/i, /^ن/i, /^د/i], any: [/^ين/i, /^فب/i, /^مار/i, /^أب/i, /^ماي/i, /^يون/i, /^يول/i, /^غشت/i, /^ش/i, /^أك/i, /^ن/i, /^د/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[حنثرخجس]/i, short: /^(أحد|إثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, abbreviated: /^(أحد|إثن|ثلا|أرب|خمي|جمعة|سبت)/i, wide: /^(الأحد|الإثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i], wide: [/^الأحد/i, /^الإثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i], any: [/^أح/i, /^إث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar-SA.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { arSA: () => arSA, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_SA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA/_lib/formatDistance.js"), _ar_SA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA/_lib/formatLong.js"), _ar_SA_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA/_lib/formatRelative.js"), _ar_SA_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA/_lib/localize.js"), _ar_SA_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-SA/_lib/match.js");
            let arSA = { code: "ar-SA", formatDistance: _ar_SA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_SA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_SA_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_SA_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_SA_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = arSA;
        }, "./node_modules/date-fns/locale/ar-SA/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية واحدة", two: "أقل من ثانتين", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية واحدة", two: "ثانتين", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نصف دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقائق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة واحدة", two: "دقيقتين", threeToTen: "{{count}} دقائق", other: "{{count}} دقيقة" }, aboutXHours: { one: "ساعة واحدة تقريباً", two: "ساعتين تقريباً", threeToTen: "{{count}} ساعات تقريباً", other: "{{count}} ساعة تقريباً" }, xHours: { one: "ساعة واحدة", two: "ساعتين", threeToTen: "{{count}} ساعات", other: "{{count}} ساعة" }, xDays: { one: "يوم واحد", two: "يومين", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "أسبوع واحد تقريباً", two: "أسبوعين تقريباً", threeToTen: "{{count}} أسابيع تقريباً", other: "{{count}} أسبوع تقريباً" }, xWeeks: { one: "أسبوع واحد", two: "أسبوعين", threeToTen: "{{count}} أسابيع", other: "{{count}} أسبوع" }, aboutXMonths: { one: "شهر واحد تقريباً", two: "شهرين تقريباً", threeToTen: "{{count}} أشهر تقريباً", other: "{{count}} شهر تقريباً" }, xMonths: { one: "شهر واحد", two: "شهرين", threeToTen: "{{count}} أشهر", other: "{{count}} شهر" }, aboutXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" }, xYears: { one: "عام واحد", two: "عامين", threeToTen: "{{count}} أعوام", other: "{{count}} عام" }, overXYears: { one: "أكثر من عام", two: "أكثر من عامين", threeToTen: "أكثر من {{count}} أعوام", other: "أكثر من {{count}} عام" }, almostXYears: { one: "عام واحد تقريباً", two: "عامين تقريباً", threeToTen: "{{count}} أعوام تقريباً", other: "{{count}} عام تقريباً" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count ? tokenValue.two : count <= 10 ? tokenValue.threeToTen.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "في خلال " + result;
                else
                    return "منذ " + result; return result; };
        }, "./node_modules/date-fns/locale/ar-SA/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'عند' {{time}}", long: "{{date}} 'عند' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar-SA/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'أخر' eeee 'عند' p", yesterday: "'أمس عند' p", today: "'اليوم عند' p", tomorrow: "'غداً عند' p", nextWeek: "eeee 'عند' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar-SA/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"], abbreviated: ["ينا", "فبر", "مارس", "أبريل", "مايو", "يونـ", "يولـ", "أغسـ", "سبتـ", "أكتـ", "نوفـ", "ديسـ"], wide: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنـ", "ثلا", "أربـ", "خميـ", "جمعة", "سبت"], wide: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظهر", evening: "مساءاً", night: "ليلاً" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "م", midnight: "ن", noon: "ظ", morning: "في الصباح", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" }, abbreviated: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "في الصباح", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل" }, wide: { am: "ص", pm: "م", midnight: "نصف الليل", noon: "ظهر", morning: "صباحاً", afternoon: "بعد الظـهر", evening: "في المساء", night: "في الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar-SA/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ق|ب)/i, abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?م\.?\s?|a\.?\s?d\.?|c\.?\s?)/i, wide: /^(قبل الميلاد|قبل الميلاد|بعد الميلاد|بعد الميلاد)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^قبل/i, /^بعد/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ر[1234]/i, wide: /^الربع [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[يفمأمسند]/i, abbreviated: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i, wide: /^(ين|ف|مار|أب|ماي|يون|يول|أغ|س|أك|ن|د)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ي/i, /^ي/i, /^أ/i, /^س/i, /^أ/i, /^ن/i, /^د/i], any: [/^ين/i, /^ف/i, /^مار/i, /^أب/i, /^ماي/i, /^يون/i, /^يول/i, /^أغ/i, /^س/i, /^أك/i, /^ن/i, /^د/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[حنثرخجس]/i, short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, abbreviated: /^(أحد|اثن|ثلا|أرب|خمي|جمعة|سبت)/i, wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i], wide: [/^الأحد/i, /^الاثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i], any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar-TN.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { arTN: () => arTN, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_TN_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN/_lib/formatDistance.js"), _ar_TN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN/_lib/formatLong.js"), _ar_TN_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN/_lib/formatRelative.js"), _ar_TN_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN/_lib/localize.js"), _ar_TN_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar-TN/_lib/match.js");
            let arTN = { code: "ar-TN", formatDistance: _ar_TN_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_TN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_TN_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_TN_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_TN_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = arTN;
        }, "./node_modules/date-fns/locale/ar-TN/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية", two: "أقل من زوز ثواني", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية", two: "زوز ثواني", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نص دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقايق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة", two: "دقيقتين", threeToTen: "{{count}} دقايق", other: "{{count}} دقيقة" }, aboutXHours: { one: "ساعة تقريب", two: "ساعتين تقريب", threeToTen: "{{count}} سوايع تقريب", other: "{{count}} ساعة تقريب" }, xHours: { one: "ساعة", two: "ساعتين", threeToTen: "{{count}} سوايع", other: "{{count}} ساعة" }, xDays: { one: "نهار", two: "نهارين", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "جمعة تقريب", two: "جمعتين تقريب", threeToTen: "{{count}} جماع تقريب", other: "{{count}} جمعة تقريب" }, xWeeks: { one: "جمعة", two: "جمعتين", threeToTen: "{{count}} جماع", other: "{{count}} جمعة" }, aboutXMonths: { one: "شهر تقريب", two: "شهرين تقريب", threeToTen: "{{count}} أشهرة تقريب", other: "{{count}} شهر تقريب" }, xMonths: { one: "شهر", two: "شهرين", threeToTen: "{{count}} أشهرة", other: "{{count}} شهر" }, aboutXYears: { one: "عام تقريب", two: "عامين تقريب", threeToTen: "{{count}} أعوام تقريب", other: "{{count}} عام تقريب" }, xYears: { one: "عام", two: "عامين", threeToTen: "{{count}} أعوام", other: "{{count}} عام" }, overXYears: { one: "أكثر من عام", two: "أكثر من عامين", threeToTen: "أكثر من {{count}} أعوام", other: "أكثر من {{count}} عام" }, almostXYears: { one: "عام تقريب", two: "عامين تقريب", threeToTen: "{{count}} أعوام تقريب", other: "{{count}} عام تقريب" } }, formatDistance = (token, count, options1) => { let result, usageGroup = formatDistanceLocale[token]; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : 2 === count ? usageGroup.two : count <= 10 ? usageGroup.threeToTen.replace("{{count}}", String(count)) : usageGroup.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "في " + result;
                else
                    return "عندو " + result; return result; };
        }, "./node_modules/date-fns/locale/ar-TN/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE، do MMMM y", long: "do MMMM y", medium: "d MMM y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss", long: "HH:mm:ss", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'مع' {{time}}", long: "{{date}} 'مع' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar-TN/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'إلي فات مع' p", yesterday: "'البارح مع' p", today: "'اليوم مع' p", tomorrow: "'غدوة مع' p", nextWeek: "eeee 'الجمعة الجاية مع' p 'نهار'", other: "P" }, formatRelative = token => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar-TN/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: num => String(num), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["د", "ن", "أ", "س", "أ", "ج", "ج", "م", "أ", "م", "ف", "ج"], abbreviated: ["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], wide: ["جانفي", "فيفري", "مارس", "أفريل", "ماي", "جوان", "جويلية", "أوت", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], wide: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "ع", morning: "الصباح", noon: "القايلة", afternoon: "بعد القايلة", evening: "العشية", night: "الليل", midnight: "نص الليل" }, abbreviated: { am: "ص", pm: "ع", morning: "الصباح", noon: "القايلة", afternoon: "بعد القايلة", evening: "العشية", night: "الليل", midnight: "نص الليل" }, wide: { am: "ص", pm: "ع", morning: "الصباح", noon: "القايلة", afternoon: "بعد القايلة", evening: "العشية", night: "الليل", midnight: "نص الليل" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "ع", morning: "في الصباح", noon: "في القايلة", afternoon: "بعد القايلة", evening: "في العشية", night: "في الليل", midnight: "نص الليل" }, abbreviated: { am: "ص", pm: "ع", morning: "في الصباح", noon: "في القايلة", afternoon: "بعد القايلة", evening: "في العشية", night: "في الليل", midnight: "نص الليل" }, wide: { am: "ص", pm: "ع", morning: "في الصباح", noon: "في القايلة", afternoon: "بعد القايلة", evening: "في العشية", night: "في الليل", midnight: "نص الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar-TN/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /[قب]/, abbreviated: /[قب]\.م\./, wide: /(قبل|بعد) الميلاد/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/قبل/, /بعد/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /ر[1234]/, wide: /الربع (الأول|الثاني|الثالث|الرابع)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[جفمأسند]/, abbreviated: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/, wide: /^(جانفي|فيفري|مارس|أفريل|ماي|جوان|جويلية|أوت|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/ }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ج/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ج/i, /^ج/i, /^أ/i, /^س/i, /^أ/i, /^ن/i, /^د/i], any: [/^جانفي/i, /^فيفري/i, /^مارس/i, /^أفريل/i, /^ماي/i, /^جوان/i, /^جويلية/i, /^أوت/i, /^سبتمبر/i, /^أكتوبر/i, /^نوفمبر/i, /^ديسمبر/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[حنثرخجس]/i, short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i], wide: [/^الأحد/i, /^الاثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i], any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ص|ع|ن ل|ل|(في|مع) (صباح|قايلة|عشية|ليل))/, any: /^([صع]|نص الليل|قايلة|(في|مع) (صباح|قايلة|عشية|ليل))/ }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ص/, pm: /^ع/, midnight: /نص الليل/, noon: /قايلة/, afternoon: /بعد القايلة/, morning: /صباح/, evening: /عشية/, night: /ليل/ } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ar.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ar: () => ar, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ar_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ar/_lib/formatDistance.js"), _ar_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ar/_lib/formatLong.js"), _ar_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ar/_lib/formatRelative.js"), _ar_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ar/_lib/localize.js"), _ar_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ar/_lib/match.js");
            let ar = { code: "ar", formatDistance: _ar_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ar_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ar_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ar_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ar_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 6, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ar;
        }, "./node_modules/date-fns/locale/ar/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "أقل من ثانية", two: "أقل من ثانيتين", threeToTen: "أقل من {{count}} ثواني", other: "أقل من {{count}} ثانية" }, xSeconds: { one: "ثانية واحدة", two: "ثانيتان", threeToTen: "{{count}} ثواني", other: "{{count}} ثانية" }, halfAMinute: "نصف دقيقة", lessThanXMinutes: { one: "أقل من دقيقة", two: "أقل من دقيقتين", threeToTen: "أقل من {{count}} دقائق", other: "أقل من {{count}} دقيقة" }, xMinutes: { one: "دقيقة واحدة", two: "دقيقتان", threeToTen: "{{count}} دقائق", other: "{{count}} دقيقة" }, aboutXHours: { one: "ساعة واحدة تقريباً", two: "ساعتين تقريبا", threeToTen: "{{count}} ساعات تقريباً", other: "{{count}} ساعة تقريباً" }, xHours: { one: "ساعة واحدة", two: "ساعتان", threeToTen: "{{count}} ساعات", other: "{{count}} ساعة" }, xDays: { one: "يوم واحد", two: "يومان", threeToTen: "{{count}} أيام", other: "{{count}} يوم" }, aboutXWeeks: { one: "أسبوع واحد تقريبا", two: "أسبوعين تقريبا", threeToTen: "{{count}} أسابيع تقريبا", other: "{{count}} أسبوعا تقريبا" }, xWeeks: { one: "أسبوع واحد", two: "أسبوعان", threeToTen: "{{count}} أسابيع", other: "{{count}} أسبوعا" }, aboutXMonths: { one: "شهر واحد تقريباً", two: "شهرين تقريبا", threeToTen: "{{count}} أشهر تقريبا", other: "{{count}} شهرا تقريباً" }, xMonths: { one: "شهر واحد", two: "شهران", threeToTen: "{{count}} أشهر", other: "{{count}} شهرا" }, aboutXYears: { one: "سنة واحدة تقريباً", two: "سنتين تقريبا", threeToTen: "{{count}} سنوات تقريباً", other: "{{count}} سنة تقريباً" }, xYears: { one: "سنة واحد", two: "سنتان", threeToTen: "{{count}} سنوات", other: "{{count}} سنة" }, overXYears: { one: "أكثر من سنة", two: "أكثر من سنتين", threeToTen: "أكثر من {{count}} سنوات", other: "أكثر من {{count}} سنة" }, almostXYears: { one: "ما يقارب سنة واحدة", two: "ما يقارب سنتين", threeToTen: "ما يقارب {{count}} سنوات", other: "ما يقارب {{count}} سنة" } }, formatDistance = (token, count, options1) => { let result, usageGroup = formatDistanceLocale[token]; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : 2 === count ? usageGroup.two : count <= 10 ? usageGroup.threeToTen.replace("{{count}}", String(count)) : usageGroup.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "خلال " + result;
                else
                    return "منذ " + result; return result; };
        }, "./node_modules/date-fns/locale/ar/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE، do MMMM y", long: "do MMMM y", medium: "d MMM y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss", long: "HH:mm:ss", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'عند الساعة' {{time}}", long: "{{date}} 'عند الساعة' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ar/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'الماضي عند الساعة' p", yesterday: "'الأمس عند الساعة' p", today: "'اليوم عند الساعة' p", tomorrow: "'غدا عند الساعة' p", nextWeek: "eeee 'القادم عند الساعة' p", other: "P" }, formatRelative = token => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ar/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: num => String(num), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل الميلاد", "بعد الميلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ر1", "ر2", "ر3", "ر4"], wide: ["الربع الأول", "الربع الثاني", "الربع الثالث", "الربع الرابع"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "ف", "م", "أ", "م", "ي", "ي", "أ", "س", "أ", "ن", "د"], abbreviated: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], wide: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ح", "ن", "ث", "ر", "خ", "ج", "س"], short: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], abbreviated: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت"], wide: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ص", pm: "م", morning: "الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "المساء", night: "الليل", midnight: "منتصف الليل" }, abbreviated: { am: "ص", pm: "م", morning: "الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "المساء", night: "الليل", midnight: "منتصف الليل" }, wide: { am: "ص", pm: "م", morning: "الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "المساء", night: "الليل", midnight: "منتصف الليل" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ص", pm: "م", morning: "في الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل", midnight: "منتصف الليل" }, abbreviated: { am: "ص", pm: "م", morning: "في الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل", midnight: "منتصف الليل" }, wide: { am: "ص", pm: "م", morning: "في الصباح", noon: "الظهر", afternoon: "بعد الظهر", evening: "في المساء", night: "في الليل", midnight: "منتصف الليل" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ar/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /[قب]/, abbreviated: /[قب]\.م\./, wide: /(قبل|بعد) الميلاد/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/قبل/, /بعد/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /ر[1234]/, wide: /الربع (الأول|الثاني|الثالث|الرابع)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[أيفمسند]/, abbreviated: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/, wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/ }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/i, /^ف/i, /^م/i, /^أ/i, /^م/i, /^ي/i, /^ي/i, /^أ/i, /^س/i, /^أ/i, /^ن/i, /^د/i], any: [/^يناير/i, /^فبراير/i, /^مارس/i, /^أبريل/i, /^مايو/i, /^يونيو/i, /^يوليو/i, /^أغسطس/i, /^سبتمبر/i, /^أكتوبر/i, /^نوفمبر/i, /^ديسمبر/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[حنثرخجس]/i, short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i, wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i], wide: [/^الأحد/i, /^الاثنين/i, /^الثلاثاء/i, /^الأربعاء/i, /^الخميس/i, /^الجمعة/i, /^السبت/i], any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/, any: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/ }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ص/, pm: /^م/, midnight: /منتصف الليل/, noon: /الظهر/, afternoon: /بعد الظهر/, morning: /في الصباح/, evening: /في المساء/, night: /في الليل/ } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/az.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { az: () => az, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _az_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/az/_lib/formatDistance.js"), _az_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/az/_lib/formatLong.js"), _az_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/az/_lib/formatRelative.js"), _az_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/az/_lib/localize.js"), _az_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/az/_lib/match.js");
            let az = { code: "az", formatDistance: _az_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _az_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _az_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _az_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _az_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = az;
        }, "./node_modules/date-fns/locale/az/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "bir saniyədən az", other: "{{count}} bir saniyədən az" }, xSeconds: { one: "1 saniyə", other: "{{count}} saniyə" }, halfAMinute: "yarım dəqiqə", lessThanXMinutes: { one: "bir dəqiqədən az", other: "{{count}} bir dəqiqədən az" }, xMinutes: { one: "bir dəqiqə", other: "{{count}} dəqiqə" }, aboutXHours: { one: "təxminən 1 saat", other: "təxminən {{count}} saat" }, xHours: { one: "1 saat", other: "{{count}} saat" }, xDays: { one: "1 gün", other: "{{count}} gün" }, aboutXWeeks: { one: "təxminən 1 həftə", other: "təxminən {{count}} həftə" }, xWeeks: { one: "1 həftə", other: "{{count}} həftə" }, aboutXMonths: { one: "təxminən 1 ay", other: "təxminən {{count}} ay" }, xMonths: { one: "1 ay", other: "{{count}} ay" }, aboutXYears: { one: "təxminən 1 il", other: "təxminən {{count}} il" }, xYears: { one: "1 il", other: "{{count}} il" }, overXYears: { one: "1 ildən çox", other: "{{count}} ildən çox" }, almostXYears: { one: "demək olar ki 1 il", other: "demək olar ki {{count}} il" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " sonra";
                else
                    return result + " əvvəl"; return result; };
        }, "./node_modules/date-fns/locale/az/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y 'il'", long: "do MMMM y 'il'", medium: "d MMM y 'il'", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}} - 'də'", long: "{{date}} {{time}} - 'də'", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/az/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'sonuncu' eeee p -'də'", yesterday: "'dünən' p -'də'", today: "'bugün' p -'də'", tomorrow: "'sabah' p -'də'", nextWeek: "eeee p -'də'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/az/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let suffixes = { 1: "-inci", 5: "-inci", 8: "-inci", 70: "-inci", 80: "-inci", 2: "-nci", 7: "-nci", 20: "-nci", 50: "-nci", 3: "-üncü", 4: "-üncü", 100: "-üncü", 6: "-ncı", 9: "-uncu", 10: "-uncu", 30: "-uncu", 60: "-ıncı", 90: "-ıncı" }, getSuffix = number => { if (0 === number)
                return number + "-ıncı"; let a = number % 10, b = number % 100 - a, c = number >= 100 ? 100 : null; return suffixes[a] ? suffixes[a] : suffixes[b] ? suffixes[b] : null !== c ? suffixes[c] : ""; }, localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), suffix = getSuffix(number); return number + suffix; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["e.ə", "b.e"], abbreviated: ["e.ə", "b.e"], wide: ["eramızdan əvvəl", "bizim era"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1ci kvartal", "2ci kvartal", "3cü kvartal", "4cü kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Y", "F", "M", "A", "M", "İ", "İ", "A", "S", "O", "N", "D"], abbreviated: ["Yan", "Fev", "Mar", "Apr", "May", "İyun", "İyul", "Avq", "Sen", "Okt", "Noy", "Dek"], wide: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "İyun", "İyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."], short: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."], abbreviated: ["Baz", "Baz.e", "Çər.a", "Çər", "Cüm.a", "Cüm", "Şə"], wide: ["Bazar", "Bazar ertəsi", "Çərşənbə axşamı", "Çərşənbə", "Cümə axşamı", "Cümə", "Şənbə"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" }, abbreviated: { am: "AM", pm: "PM", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" }, wide: { am: "a.m.", pm: "p.m.", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" }, abbreviated: { am: "AM", pm: "PM", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" }, wide: { am: "a.m.", pm: "p.m.", midnight: "gecəyarı", noon: "gün", morning: "səhər", afternoon: "gündüz", evening: "axşam", night: "gecə" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/az/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(ci|inci|nci|uncu|üncü|ncı))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(b|a)$/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)$/i, wide: /^(bizim eradan əvvəl|bizim era)$/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b$/i, /^(a|c)$/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]$/i, abbreviated: /^K[1234]$/i, wide: /^[1234](ci)? kvartal$/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[(?-i)yfmaisond]$/i, abbreviated: /^(Yan|Fev|Mar|Apr|May|İyun|İyul|Avq|Sen|Okt|Noy|Dek)$/i, wide: /^(Yanvar|Fevral|Mart|Aprel|May|İyun|İyul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^[(?-i)y]$/i, /^[(?-i)f]$/i, /^[(?-i)m]$/i, /^[(?-i)a]$/i, /^[(?-i)m]$/i, /^[(?-i)i]$/i, /^[(?-i)i]$/i, /^[(?-i)a]$/i, /^[(?-i)s]$/i, /^[(?-i)o]$/i, /^[(?-i)n]$/i, /^[(?-i)d]$/i], abbreviated: [/^Yan$/i, /^Fev$/i, /^Mar$/i, /^Apr$/i, /^May$/i, /^İyun$/i, /^İyul$/i, /^Avg$/i, /^Sen$/i, /^Okt$/i, /^Noy$/i, /^Dek$/i], wide: [/^Yanvar$/i, /^Fevral$/i, /^Mart$/i, /^Aprel$/i, /^May$/i, /^İyun$/i, /^İyul$/i, /^Avgust$/i, /^Sentyabr$/i, /^Oktyabr$/i, /^Noyabr$/i, /^Dekabr$/i] }, defaultParseWidth: "narrow" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i, short: /^(B\.|B\.e|Ç\.a|Ç\.|C\.a|C\.|Ş\.)$/i, abbreviated: /^(Baz\.e|Çər|Çər\.a|Cüm|Cüm\.a|Şə)$/i, wide: /^(Bazar|Bazar ertəsi|Çərşənbə axşamı|Çərşənbə|Cümə axşamı|Cümə|Şənbə)$/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^B\.$/i, /^B\.e$/i, /^Ç\.a$/i, /^Ç\.$/i, /^C\.a$/i, /^C\.$/i, /^Ş\.$/i], abbreviated: [/^Baz$/i, /^Baz\.e$/i, /^Çər\.a$/i, /^Çər$/i, /^Cüm\.a$/i, /^Cüm$/i, /^Şə$/i], wide: [/^Bazar$/i, /^Bazar ertəsi$/i, /^Çərşənbə axşamı$/i, /^Çərşənbə$/i, /^Cümə axşamı$/i, /^Cümə$/i, /^Şənbə$/i], any: [/^B\.$/i, /^B\.e$/i, /^Ç\.a$/i, /^Ç\.$/i, /^C\.a$/i, /^C\.$/i, /^Ş\.$/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i, any: /^(am|pm|a\.m\.|p\.m\.|AM|PM|gecəyarı|gün|səhər|gündüz|axşam|gecə)$/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a$/i, pm: /^p$/i, midnight: /^gecəyarı$/i, noon: /^gün$/i, morning: /səhər$/i, afternoon: /gündüz$/i, evening: /axşam$/i, night: /gecə$/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/be-tarask.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { beTarask: () => beTarask, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _be_tarask_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask/_lib/formatDistance.js"), _be_tarask_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask/_lib/formatLong.js"), _be_tarask_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask/_lib/formatRelative.js"), _be_tarask_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask/_lib/localize.js"), _be_tarask_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/be-tarask/_lib/match.js");
            let beTarask = { code: "be-tarask", formatDistance: _be_tarask_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _be_tarask_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _be_tarask_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _be_tarask_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _be_tarask_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = beTarask;
        }, "./node_modules/date-fns/locale/be-tarask/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function declension(scheme, count) { if (void 0 !== scheme.one && 1 === count)
                return scheme.one; let rem10 = count % 10, rem100 = count % 100; return 1 === rem10 && 11 !== rem100 ? scheme.singularNominative.replace("{{count}}", String(count)) : rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20) ? scheme.singularGenitive.replace("{{count}}", String(count)) : scheme.pluralGenitive.replace("{{count}}", String(count)); }
            function buildLocalizeTokenFn(scheme) { return (count, options1) => { if (!options1 || !options1.addSuffix)
                return declension(scheme.regular, count); if (options1.comparison && options1.comparison > 0)
                if (scheme.future)
                    return declension(scheme.future, count);
                else
                    return "праз " + declension(scheme.regular, count); return scheme.past ? declension(scheme.past, count) : declension(scheme.regular, count) + " таму"; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: buildLocalizeTokenFn({ regular: { one: "менш за секунду", singularNominative: "менш за {{count}} секунду", singularGenitive: "менш за {{count}} секунды", pluralGenitive: "менш за {{count}} секунд" }, future: { one: "менш, чым праз секунду", singularNominative: "менш, чым праз {{count}} секунду", singularGenitive: "менш, чым праз {{count}} секунды", pluralGenitive: "менш, чым праз {{count}} секунд" } }), xSeconds: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} секунда", singularGenitive: "{{count}} секунды", pluralGenitive: "{{count}} секунд" }, past: { singularNominative: "{{count}} секунду таму", singularGenitive: "{{count}} секунды таму", pluralGenitive: "{{count}} секунд таму" }, future: { singularNominative: "праз {{count}} секунду", singularGenitive: "праз {{count}} секунды", pluralGenitive: "праз {{count}} секунд" } }), halfAMinute: (_, options1) => { if (options1 && options1.addSuffix)
                    if (options1.comparison && options1.comparison > 0)
                        return "праз паўхвіліны";
                    else
                        return "паўхвіліны таму"; return "паўхвіліны"; }, lessThanXMinutes: buildLocalizeTokenFn({ regular: { one: "менш за хвіліну", singularNominative: "менш за {{count}} хвіліну", singularGenitive: "менш за {{count}} хвіліны", pluralGenitive: "менш за {{count}} хвілін" }, future: { one: "менш, чым праз хвіліну", singularNominative: "менш, чым праз {{count}} хвіліну", singularGenitive: "менш, чым праз {{count}} хвіліны", pluralGenitive: "менш, чым праз {{count}} хвілін" } }), xMinutes: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} хвіліна", singularGenitive: "{{count}} хвіліны", pluralGenitive: "{{count}} хвілін" }, past: { singularNominative: "{{count}} хвіліну таму", singularGenitive: "{{count}} хвіліны таму", pluralGenitive: "{{count}} хвілін таму" }, future: { singularNominative: "праз {{count}} хвіліну", singularGenitive: "праз {{count}} хвіліны", pluralGenitive: "праз {{count}} хвілін" } }), aboutXHours: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} гадзіны", singularGenitive: "каля {{count}} гадзін", pluralGenitive: "каля {{count}} гадзін" }, future: { singularNominative: "прыблізна праз {{count}} гадзіну", singularGenitive: "прыблізна праз {{count}} гадзіны", pluralGenitive: "прыблізна праз {{count}} гадзін" } }), xHours: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} гадзіна", singularGenitive: "{{count}} гадзіны", pluralGenitive: "{{count}} гадзін" }, past: { singularNominative: "{{count}} гадзіну таму", singularGenitive: "{{count}} гадзіны таму", pluralGenitive: "{{count}} гадзін таму" }, future: { singularNominative: "праз {{count}} гадзіну", singularGenitive: "праз {{count}} гадзіны", pluralGenitive: "праз {{count}} гадзін" } }), xDays: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} дзень", singularGenitive: "{{count}} дні", pluralGenitive: "{{count}} дзён" } }), aboutXWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} тыдні", singularGenitive: "каля {{count}} тыдняў", pluralGenitive: "каля {{count}} тыдняў" }, future: { singularNominative: "прыблізна праз {{count}} тыдзень", singularGenitive: "прыблізна праз {{count}} тыдні", pluralGenitive: "прыблізна праз {{count}} тыдняў" } }), xWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} тыдзень", singularGenitive: "{{count}} тыдні", pluralGenitive: "{{count}} тыдняў" } }), aboutXMonths: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} месяца", singularGenitive: "каля {{count}} месяцаў", pluralGenitive: "каля {{count}} месяцаў" }, future: { singularNominative: "прыблізна праз {{count}} месяц", singularGenitive: "прыблізна праз {{count}} месяцы", pluralGenitive: "прыблізна праз {{count}} месяцаў" } }), xMonths: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} месяц", singularGenitive: "{{count}} месяцы", pluralGenitive: "{{count}} месяцаў" } }), aboutXYears: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} года", singularGenitive: "каля {{count}} гадоў", pluralGenitive: "каля {{count}} гадоў" }, future: { singularNominative: "прыблізна праз {{count}} год", singularGenitive: "прыблізна праз {{count}} гады", pluralGenitive: "прыблізна праз {{count}} гадоў" } }), xYears: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} год", singularGenitive: "{{count}} гады", pluralGenitive: "{{count}} гадоў" } }), overXYears: buildLocalizeTokenFn({ regular: { singularNominative: "больш за {{count}} год", singularGenitive: "больш за {{count}} гады", pluralGenitive: "больш за {{count}} гадоў" }, future: { singularNominative: "больш, чым праз {{count}} год", singularGenitive: "больш, чым праз {{count}} гады", pluralGenitive: "больш, чым праз {{count}} гадоў" } }), almostXYears: buildLocalizeTokenFn({ regular: { singularNominative: "амаль {{count}} год", singularGenitive: "амаль {{count}} гады", pluralGenitive: "амаль {{count}} гадоў" }, future: { singularNominative: "амаль праз {{count}} год", singularGenitive: "амаль праз {{count}} гады", pluralGenitive: "амаль праз {{count}} гадоў" } }) }, formatDistance = (token, count, options1) => (options1 = options1 || {}, formatDistanceLocale[token](count, options1));
        }, "./node_modules/date-fns/locale/be-tarask/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM y 'г.'", long: "d MMMM y 'г.'", medium: "d MMM y 'г.'", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/be-tarask/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            let accusativeWeekdays = ["нядзелю", "панядзелак", "аўторак", "сераду", "чацьвер", "пятніцу", "суботу"];
            function thisWeek(day) { return "'у " + accusativeWeekdays[day] + " а' p"; }
            let formatRelativeLocale = { lastWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у мінулую " + weekday + " а' p";
                    case 1:
                    case 2:
                    case 4: return "'у мінулы " + weekday + " а' p";
                } }(day); }, yesterday: "'учора а' p", today: "'сёньня а' p", tomorrow: "'заўтра а' p", nextWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у наступную " + weekday + " а' p";
                    case 1:
                    case 2:
                    case 4: return "'у наступны " + weekday + " а' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/be-tarask/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let suffix, unit = String(options1?.unit), number = Number(dirtyNumber); return suffix = "date" === unit ? "-га" : "hour" === unit || "minute" === unit || "second" === unit ? "-я" : (number % 10 == 2 || number % 10 == 3) && number % 100 != 12 && number % 100 != 13 ? "-і" : "-ы", number + suffix; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["да н.э.", "н.э."], abbreviated: ["да н. э.", "н. э."], wide: ["да нашай эры", "нашай эры"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-ы кв.", "2-і кв.", "3-і кв.", "4-ы кв."], wide: ["1-ы квартал", "2-і квартал", "3-і квартал", "4-ы квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["С", "Л", "С", "К", "Т", "Ч", "Л", "Ж", "В", "К", "Л", "С"], abbreviated: ["студз.", "лют.", "сак.", "крас.", "трав.", "чэрв.", "ліп.", "жн.", "вер.", "кастр.", "ліст.", "сьнеж."], wide: ["студзень", "люты", "сакавік", "красавік", "травень", "чэрвень", "ліпень", "жнівень", "верасень", "кастрычнік", "лістапад", "сьнежань"] }, defaultWidth: "wide", formattingValues: { narrow: ["С", "Л", "С", "К", "Т", "Ч", "Л", "Ж", "В", "К", "Л", "С"], abbreviated: ["студз.", "лют.", "сак.", "крас.", "трав.", "чэрв.", "ліп.", "жн.", "вер.", "кастр.", "ліст.", "сьнеж."], wide: ["студзеня", "лютага", "сакавіка", "красавіка", "траўня", "чэрвеня", "ліпеня", "жніўня", "верасня", "кастрычніка", "лістапада", "сьнежня"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "А", "С", "Ч", "П", "С"], short: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"], abbreviated: ["нядз", "пан", "аўт", "сер", "чаць", "пят", "суб"], wide: ["нядзеля", "панядзелак", "аўторак", "серада", "чацьвер", "пятніца", "субота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дзень", evening: "веч.", night: "ноч" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дзень", evening: "веч.", night: "ноч" }, wide: { am: "ДП", pm: "ПП", midnight: "поўнач", noon: "поўдзень", morning: "раніца", afternoon: "дзень", evening: "вечар", night: "ноч" } }, defaultWidth: "any", formattingValues: { narrow: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дня", evening: "веч.", night: "ночы" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дня", evening: "веч.", night: "ночы" }, wide: { am: "ДП", pm: "ПП", midnight: "поўнач", noon: "поўдзень", morning: "раніцы", afternoon: "дня", evening: "вечара", night: "ночы" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/be-tarask/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((да )?н\.?\s?э\.?)/i, abbreviated: /^((да )?н\.?\s?э\.?)/i, wide: /^(да нашай эры|нашай эры|наша эра)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^д/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[ыі]?)? кв.?/i, wide: /^[1234](-?[ыі]?)? квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[слкмчжв]/i, abbreviated: /^(студз|лют|сак|крас|тр(ав)?|чэрв|ліп|жн|вер|кастр|ліст|сьнеж)\.?/i, wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|тра(вень|ўня)|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|сьнеж(ань|ня))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^с/i, /^л/i, /^с/i, /^к/i, /^т/i, /^ч/i, /^л/i, /^ж/i, /^в/i, /^к/i, /^л/i, /^с/i], any: [/^ст/i, /^лю/i, /^са/i, /^кр/i, /^тр/i, /^ч/i, /^ліп/i, /^ж/i, /^в/i, /^ка/i, /^ліс/i, /^сн/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[нпасч]/i, short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\.?/i, abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцьв|чаць|птн|пят|суб).?/i, wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацьв(ер|ярга)|пятніц[аы]|субот[аы])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i, abbreviated: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i, wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^дп/i, pm: /^пп/i, midnight: /^поўн/i, noon: /^поўд/i, morning: /^р/i, afternoon: /^д[зн]/i, evening: /^в/i, night: /^н/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/be.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { be: () => be, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _be_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/be/_lib/formatDistance.js"), _be_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/be/_lib/formatLong.js"), _be_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/be/_lib/formatRelative.js"), _be_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/be/_lib/localize.js"), _be_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/be/_lib/match.js");
            let be = { code: "be", formatDistance: _be_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _be_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _be_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _be_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _be_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = be;
        }, "./node_modules/date-fns/locale/be/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function declension(scheme, count) { if (void 0 !== scheme.one && 1 === count)
                return scheme.one; let rem10 = count % 10, rem100 = count % 100; return 1 === rem10 && 11 !== rem100 ? scheme.singularNominative.replace("{{count}}", String(count)) : rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20) ? scheme.singularGenitive.replace("{{count}}", String(count)) : scheme.pluralGenitive.replace("{{count}}", String(count)); }
            function buildLocalizeTokenFn(scheme) { return (count, options1) => { if (!options1 || !options1.addSuffix)
                return declension(scheme.regular, count); if (options1.comparison && options1.comparison > 0)
                if (scheme.future)
                    return declension(scheme.future, count);
                else
                    return "праз " + declension(scheme.regular, count); return scheme.past ? declension(scheme.past, count) : declension(scheme.regular, count) + " таму"; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: buildLocalizeTokenFn({ regular: { one: "менш за секунду", singularNominative: "менш за {{count}} секунду", singularGenitive: "менш за {{count}} секунды", pluralGenitive: "менш за {{count}} секунд" }, future: { one: "менш, чым праз секунду", singularNominative: "менш, чым праз {{count}} секунду", singularGenitive: "менш, чым праз {{count}} секунды", pluralGenitive: "менш, чым праз {{count}} секунд" } }), xSeconds: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} секунда", singularGenitive: "{{count}} секунды", pluralGenitive: "{{count}} секунд" }, past: { singularNominative: "{{count}} секунду таму", singularGenitive: "{{count}} секунды таму", pluralGenitive: "{{count}} секунд таму" }, future: { singularNominative: "праз {{count}} секунду", singularGenitive: "праз {{count}} секунды", pluralGenitive: "праз {{count}} секунд" } }), halfAMinute: (_, options1) => { if (options1 && options1.addSuffix)
                    if (options1.comparison && options1.comparison > 0)
                        return "праз паўхвіліны";
                    else
                        return "паўхвіліны таму"; return "паўхвіліны"; }, lessThanXMinutes: buildLocalizeTokenFn({ regular: { one: "менш за хвіліну", singularNominative: "менш за {{count}} хвіліну", singularGenitive: "менш за {{count}} хвіліны", pluralGenitive: "менш за {{count}} хвілін" }, future: { one: "менш, чым праз хвіліну", singularNominative: "менш, чым праз {{count}} хвіліну", singularGenitive: "менш, чым праз {{count}} хвіліны", pluralGenitive: "менш, чым праз {{count}} хвілін" } }), xMinutes: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} хвіліна", singularGenitive: "{{count}} хвіліны", pluralGenitive: "{{count}} хвілін" }, past: { singularNominative: "{{count}} хвіліну таму", singularGenitive: "{{count}} хвіліны таму", pluralGenitive: "{{count}} хвілін таму" }, future: { singularNominative: "праз {{count}} хвіліну", singularGenitive: "праз {{count}} хвіліны", pluralGenitive: "праз {{count}} хвілін" } }), aboutXHours: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} гадзіны", singularGenitive: "каля {{count}} гадзін", pluralGenitive: "каля {{count}} гадзін" }, future: { singularNominative: "прыблізна праз {{count}} гадзіну", singularGenitive: "прыблізна праз {{count}} гадзіны", pluralGenitive: "прыблізна праз {{count}} гадзін" } }), xHours: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} гадзіна", singularGenitive: "{{count}} гадзіны", pluralGenitive: "{{count}} гадзін" }, past: { singularNominative: "{{count}} гадзіну таму", singularGenitive: "{{count}} гадзіны таму", pluralGenitive: "{{count}} гадзін таму" }, future: { singularNominative: "праз {{count}} гадзіну", singularGenitive: "праз {{count}} гадзіны", pluralGenitive: "праз {{count}} гадзін" } }), xDays: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} дзень", singularGenitive: "{{count}} дні", pluralGenitive: "{{count}} дзён" } }), aboutXWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} тыдні", singularGenitive: "каля {{count}} тыдняў", pluralGenitive: "каля {{count}} тыдняў" }, future: { singularNominative: "прыблізна праз {{count}} тыдзень", singularGenitive: "прыблізна праз {{count}} тыдні", pluralGenitive: "прыблізна праз {{count}} тыдняў" } }), xWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} тыдзень", singularGenitive: "{{count}} тыдні", pluralGenitive: "{{count}} тыдняў" } }), aboutXMonths: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} месяца", singularGenitive: "каля {{count}} месяцаў", pluralGenitive: "каля {{count}} месяцаў" }, future: { singularNominative: "прыблізна праз {{count}} месяц", singularGenitive: "прыблізна праз {{count}} месяцы", pluralGenitive: "прыблізна праз {{count}} месяцаў" } }), xMonths: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} месяц", singularGenitive: "{{count}} месяцы", pluralGenitive: "{{count}} месяцаў" } }), aboutXYears: buildLocalizeTokenFn({ regular: { singularNominative: "каля {{count}} года", singularGenitive: "каля {{count}} гадоў", pluralGenitive: "каля {{count}} гадоў" }, future: { singularNominative: "прыблізна праз {{count}} год", singularGenitive: "прыблізна праз {{count}} гады", pluralGenitive: "прыблізна праз {{count}} гадоў" } }), xYears: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} год", singularGenitive: "{{count}} гады", pluralGenitive: "{{count}} гадоў" } }), overXYears: buildLocalizeTokenFn({ regular: { singularNominative: "больш за {{count}} год", singularGenitive: "больш за {{count}} гады", pluralGenitive: "больш за {{count}} гадоў" }, future: { singularNominative: "больш, чым праз {{count}} год", singularGenitive: "больш, чым праз {{count}} гады", pluralGenitive: "больш, чым праз {{count}} гадоў" } }), almostXYears: buildLocalizeTokenFn({ regular: { singularNominative: "амаль {{count}} год", singularGenitive: "амаль {{count}} гады", pluralGenitive: "амаль {{count}} гадоў" }, future: { singularNominative: "амаль праз {{count}} год", singularGenitive: "амаль праз {{count}} гады", pluralGenitive: "амаль праз {{count}} гадоў" } }) }, formatDistance = (token, count, options1) => (options1 = options1 || {}, formatDistanceLocale[token](count, options1));
        }, "./node_modules/date-fns/locale/be/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM y 'г.'", long: "d MMMM y 'г.'", medium: "d MMM y 'г.'", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/be/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            let accusativeWeekdays = ["нядзелю", "панядзелак", "аўторак", "сераду", "чацвер", "пятніцу", "суботу"];
            function thisWeek(day) { return "'у " + accusativeWeekdays[day] + " а' p"; }
            let formatRelativeLocale = { lastWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у мінулую " + weekday + " а' p";
                    case 1:
                    case 2:
                    case 4: return "'у мінулы " + weekday + " а' p";
                } }(day); }, yesterday: "'учора а' p", today: "'сёння а' p", tomorrow: "'заўтра а' p", nextWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у наступную " + weekday + " а' p";
                    case 1:
                    case 2:
                    case 4: return "'у наступны " + weekday + " а' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/be/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let suffix, unit = String(options1?.unit), number = Number(dirtyNumber); return suffix = "date" === unit ? "-га" : "hour" === unit || "minute" === unit || "second" === unit ? "-я" : (number % 10 == 2 || number % 10 == 3) && number % 100 != 12 && number % 100 != 13 ? "-і" : "-ы", number + suffix; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["да н.э.", "н.э."], abbreviated: ["да н. э.", "н. э."], wide: ["да нашай эры", "нашай эры"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-ы кв.", "2-і кв.", "3-і кв.", "4-ы кв."], wide: ["1-ы квартал", "2-і квартал", "3-і квартал", "4-ы квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["С", "Л", "С", "К", "М", "Ч", "Л", "Ж", "В", "К", "Л", "С"], abbreviated: ["студз.", "лют.", "сак.", "крас.", "май", "чэрв.", "ліп.", "жн.", "вер.", "кастр.", "ліст.", "снеж."], wide: ["студзень", "люты", "сакавік", "красавік", "май", "чэрвень", "ліпень", "жнівень", "верасень", "кастрычнік", "лістапад", "снежань"] }, defaultWidth: "wide", formattingValues: { narrow: ["С", "Л", "С", "К", "М", "Ч", "Л", "Ж", "В", "К", "Л", "С"], abbreviated: ["студз.", "лют.", "сак.", "крас.", "мая", "чэрв.", "ліп.", "жн.", "вер.", "кастр.", "ліст.", "снеж."], wide: ["студзеня", "лютага", "сакавіка", "красавіка", "мая", "чэрвеня", "ліпеня", "жніўня", "верасня", "кастрычніка", "лістапада", "снежня"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "А", "С", "Ч", "П", "С"], short: ["нд", "пн", "аў", "ср", "чц", "пт", "сб"], abbreviated: ["нядз", "пан", "аўт", "сер", "чац", "пят", "суб"], wide: ["нядзеля", "панядзелак", "аўторак", "серада", "чацвер", "пятніца", "субота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дзень", evening: "веч.", night: "ноч" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дзень", evening: "веч.", night: "ноч" }, wide: { am: "ДП", pm: "ПП", midnight: "поўнач", noon: "поўдзень", morning: "раніца", afternoon: "дзень", evening: "вечар", night: "ноч" } }, defaultWidth: "any", formattingValues: { narrow: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дня", evening: "веч.", night: "ночы" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "поўн.", noon: "поўд.", morning: "ран.", afternoon: "дня", evening: "веч.", night: "ночы" }, wide: { am: "ДП", pm: "ПП", midnight: "поўнач", noon: "поўдзень", morning: "раніцы", afternoon: "дня", evening: "вечара", night: "ночы" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/be/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(е|я|га|і|ы|ае|ая|яя|шы|гі|ці|ты|мы))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((да )?н\.?\s?э\.?)/i, abbreviated: /^((да )?н\.?\s?э\.?)/i, wide: /^(да нашай эры|нашай эры|наша эра)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^д/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[ыі]?)? кв.?/i, wide: /^[1234](-?[ыі]?)? квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[слкмчжв]/i, abbreviated: /^(студз|лют|сак|крас|ма[йя]|чэрв|ліп|жн|вер|кастр|ліст|снеж)\.?/i, wide: /^(студзен[ья]|лют(ы|ага)|сакавіка?|красавіка?|ма[йя]|чэрвен[ья]|ліпен[ья]|жні(вень|ўня)|верас(ень|ня)|кастрычніка?|лістапада?|снеж(ань|ня))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^с/i, /^л/i, /^с/i, /^к/i, /^м/i, /^ч/i, /^л/i, /^ж/i, /^в/i, /^к/i, /^л/i, /^с/i], any: [/^ст/i, /^лю/i, /^са/i, /^кр/i, /^ма/i, /^ч/i, /^ліп/i, /^ж/i, /^в/i, /^ка/i, /^ліс/i, /^сн/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[нпасч]/i, short: /^(нд|ня|пн|па|аў|ат|ср|се|чц|ча|пт|пя|сб|су)\.?/i, abbreviated: /^(нядз?|ндз|пнд|пан|аўт|срд|сер|чцв|чац|птн|пят|суб).?/i, wide: /^(нядзел[яі]|панядзел(ак|ка)|аўтор(ак|ка)|серад[аы]|чацв(ер|ярга)|пятніц[аы]|субот[аы])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^п/i, /^а/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^н/i, /^п[ан]/i, /^а/i, /^с[ер]/i, /^ч/i, /^п[ят]/i, /^с[уб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i, abbreviated: /^([дп]п|поўн\.?|поўд\.?|ран\.?|дзень|дня|веч\.?|ночы?)/i, wide: /^([дп]п|поўнач|поўдзень|раніц[аы]|дзень|дня|вечара?|ночы?)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^дп/i, pm: /^пп/i, midnight: /^поўн/i, noon: /^поўд/i, morning: /^р/i, afternoon: /^д[зн]/i, evening: /^в/i, night: /^н/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/bg.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { bg: () => bg, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _bg_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/bg/_lib/formatDistance.js"), _bg_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/bg/_lib/formatLong.js"), _bg_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/bg/_lib/formatRelative.js"), _bg_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/bg/_lib/localize.js"), _bg_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/bg/_lib/match.js");
            let bg = { code: "bg", formatDistance: _bg_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _bg_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _bg_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _bg_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _bg_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = bg;
        }, "./node_modules/date-fns/locale/bg/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "по-малко от секунда", other: "по-малко от {{count}} секунди" }, xSeconds: { one: "1 секунда", other: "{{count}} секунди" }, halfAMinute: "половин минута", lessThanXMinutes: { one: "по-малко от минута", other: "по-малко от {{count}} минути" }, xMinutes: { one: "1 минута", other: "{{count}} минути" }, aboutXHours: { one: "около час", other: "около {{count}} часа" }, xHours: { one: "1 час", other: "{{count}} часа" }, xDays: { one: "1 ден", other: "{{count}} дни" }, aboutXWeeks: { one: "около седмица", other: "около {{count}} седмици" }, xWeeks: { one: "1 седмица", other: "{{count}} седмици" }, aboutXMonths: { one: "около месец", other: "около {{count}} месеца" }, xMonths: { one: "1 месец", other: "{{count}} месеца" }, aboutXYears: { one: "около година", other: "около {{count}} години" }, xYears: { one: "1 година", other: "{{count}} години" }, overXYears: { one: "над година", other: "над {{count}} години" }, almostXYears: { one: "почти година", other: "почти {{count}} години" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "след " + result;
                else
                    return "преди " + result; return result; };
        }, "./node_modules/date-fns/locale/bg/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, dd MMMM yyyy", long: "dd MMMM yyyy", medium: "dd MMM yyyy", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}} {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/bg/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            let weekdays = ["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"];
            function thisWeek(day) { let weekday = weekdays[day]; return 2 === day ? "'във " + weekday + " в' p" : "'в " + weekday + " в' p"; }
            let formatRelativeLocale = { lastWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = weekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 6: return "'миналата " + weekday + " в' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5: return "'миналия " + weekday + " в' p";
                } }(day); }, yesterday: "'вчера в' p", today: "'днес в' p", tomorrow: "'утре в' p", nextWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = weekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 6: return "'следващата " + weekday + " в' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5: return "'следващия " + weekday + " в' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/bg/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            function numberWithSuffix(number, unit, masculine, feminine, neuter) { return number + "-" + ("quarter" === unit ? neuter : "year" === unit || "week" === unit || "minute" === unit || "second" === unit ? feminine : masculine); }
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber), unit = options1?.unit; if (0 === number)
                    return numberWithSuffix(0, unit, "ев", "ева", "ево"); if (number % 1e3 == 0)
                    return numberWithSuffix(number, unit, "ен", "на", "но"); if (number % 100 == 0)
                    return numberWithSuffix(number, unit, "тен", "тна", "тно"); let rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1: return numberWithSuffix(number, unit, "ви", "ва", "во");
                        case 2: return numberWithSuffix(number, unit, "ри", "ра", "ро");
                        case 7:
                        case 8: return numberWithSuffix(number, unit, "ми", "ма", "мо");
                    } return numberWithSuffix(number, unit, "ти", "та", "то"); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["пр.н.е.", "н.е."], abbreviated: ["преди н. е.", "н. е."], wide: ["преди новата ера", "новата ера"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-во тримес.", "2-ро тримес.", "3-то тримес.", "4-то тримес."], wide: ["1-во тримесечие", "2-ро тримесечие", "3-то тримесечие", "4-то тримесечие"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { abbreviated: ["яну", "фев", "мар", "апр", "май", "юни", "юли", "авг", "сеп", "окт", "ное", "дек"], wide: ["януари", "февруари", "март", "април", "май", "юни", "юли", "август", "септември", "октомври", "ноември", "декември"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "В", "С", "Ч", "П", "С"], short: ["нд", "пн", "вт", "ср", "чт", "пт", "сб"], abbreviated: ["нед", "пон", "вто", "сря", "чет", "пет", "съб"], wide: ["неделя", "понеделник", "вторник", "сряда", "четвъртък", "петък", "събота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { wide: { am: "преди обяд", pm: "след обяд", midnight: "в полунощ", noon: "на обяд", morning: "сутринта", afternoon: "следобед", evening: "вечерта", night: "през нощта" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/bg/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?[врмт][аи]|-?т?(ен|на)|-?(ев|ева))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((пр)?н\.?\s?е\.?)/i, abbreviated: /^((пр)?н\.?\s?е\.?)/i, wide: /^(преди новата ера|новата ера|нова ера)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^п/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[врт]?o?)? тримес.?/i, wide: /^[1234](-?[врт]?о?)? тримесечие/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { abbreviated: /^(яну|фев|мар|апр|май|юни|юли|авг|сеп|окт|ное|дек)/i, wide: /^(януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^май/i, /^юн/i, /^юл/i, /^ав/i, /^се/i, /^окт/i, /^но/i, /^де/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[нпвсч]/i, short: /^(нд|пн|вт|ср|чт|пт|сб)/i, abbreviated: /^(нед|пон|вто|сря|чет|пет|съб)/i, wide: /^(неделя|понеделник|вторник|сряда|четвъртък|петък|събота)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[ъб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(преди о|след о|в по|на о|през|веч|сут|следо)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^преди о/i, pm: /^след о/i, midnight: /^в пол/i, noon: /^на об/i, morning: /^сут/i, afternoon: /^следо/i, evening: /^веч/i, night: /^през н/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/bn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { bn: () => bn, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _bn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/formatDistance.js"), _bn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/formatLong.js"), _bn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/formatRelative.js"), _bn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/localize.js"), _bn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/match.js");
            let bn = { code: "bn", formatDistance: _bn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _bn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _bn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _bn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _bn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = bn;
        }, "./node_modules/date-fns/locale/bn/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            var _localize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/bn/_lib/localize.js");
            let formatDistanceLocale = { lessThanXSeconds: { one: "প্রায় ১ সেকেন্ড", other: "প্রায় {{count}} সেকেন্ড" }, xSeconds: { one: "১ সেকেন্ড", other: "{{count}} সেকেন্ড" }, halfAMinute: "আধ মিনিট", lessThanXMinutes: { one: "প্রায় ১ মিনিট", other: "প্রায় {{count}} মিনিট" }, xMinutes: { one: "১ মিনিট", other: "{{count}} মিনিট" }, aboutXHours: { one: "প্রায় ১ ঘন্টা", other: "প্রায় {{count}} ঘন্টা" }, xHours: { one: "১ ঘন্টা", other: "{{count}} ঘন্টা" }, xDays: { one: "১ দিন", other: "{{count}} দিন" }, aboutXWeeks: { one: "প্রায় ১ সপ্তাহ", other: "প্রায় {{count}} সপ্তাহ" }, xWeeks: { one: "১ সপ্তাহ", other: "{{count}} সপ্তাহ" }, aboutXMonths: { one: "প্রায় ১ মাস", other: "প্রায় {{count}} মাস" }, xMonths: { one: "১ মাস", other: "{{count}} মাস" }, aboutXYears: { one: "প্রায় ১ বছর", other: "প্রায় {{count}} বছর" }, xYears: { one: "১ বছর", other: "{{count}} বছর" }, overXYears: { one: "১ বছরের বেশি", other: "{{count}} বছরের বেশি" }, almostXYears: { one: "প্রায় ১ বছর", other: "প্রায় {{count}} বছর" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", (0, _localize_js__WEBPACK_IMPORTED_MODULE_0__.numberToLocale)(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " এর মধ্যে";
                else
                    return result + " আগে"; return result; };
        }, "./node_modules/date-fns/locale/bn/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}} 'সময়'", long: "{{date}} {{time}} 'সময়'", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/bn/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'গত' eeee 'সময়' p", yesterday: "'গতকাল' 'সময়' p", today: "'আজ' 'সময়' p", tomorrow: "'আগামীকাল' 'সময়' p", nextWeek: "eeee 'সময়' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/bn/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize, numberToLocale: () => numberToLocale });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let numberValues = { locale: { 1: "১", 2: "২", 3: "৩", 4: "৪", 5: "৫", 6: "৬", 7: "৭", 8: "৮", 9: "৯", 0: "০" } };
            function numberToLocale(enNumber) { return enNumber.toString().replace(/\d/g, function (match) { return numberValues.locale[match]; }); }
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber), localeNumber = numberToLocale(number); if ("date" === options1?.unit)
                    return function (number, localeNumber) { if (number > 18 && number <= 31)
                        return localeNumber + "শে"; switch (number) {
                        case 1: return localeNumber + "লা";
                        case 2:
                        case 3: return localeNumber + "রা";
                        case 4: return localeNumber + "ঠা";
                        default: return localeNumber + "ই";
                    } }(number, localeNumber); if (number > 10 || 0 === number)
                    return localeNumber + "তম"; switch (number % 10) {
                    case 2:
                    case 3: return localeNumber + "য়";
                    case 4: return localeNumber + "র্থ";
                    case 6: return localeNumber + "ষ্ঠ";
                    default: return localeNumber + "ম";
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["খ্রিঃপূঃ", "খ্রিঃ"], abbreviated: ["খ্রিঃপূর্ব", "খ্রিঃ"], wide: ["খ্রিস্টপূর্ব", "খ্রিস্টাব্দ"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["১", "২", "৩", "৪"], abbreviated: ["১ত্রৈ", "২ত্রৈ", "৩ত্রৈ", "৪ত্রৈ"], wide: ["১ম ত্রৈমাসিক", "২য় ত্রৈমাসিক", "৩য় ত্রৈমাসিক", "৪র্থ ত্রৈমাসিক"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["জানু", "ফেব্রু", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্ট", "অক্টো", "নভে", "ডিসে"], abbreviated: ["জানু", "ফেব্রু", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্ট", "অক্টো", "নভে", "ডিসে"], wide: ["জানুয়ারি", "ফেব্রুয়ারি", "মার্চ", "এপ্রিল", "মে", "জুন", "জুলাই", "আগস্ট", "সেপ্টেম্বর", "অক্টোবর", "নভেম্বর", "ডিসেম্বর"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["র", "সো", "ম", "বু", "বৃ", "শু", "শ"], short: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহ", "শুক্র", "শনি"], abbreviated: ["রবি", "সোম", "মঙ্গল", "বুধ", "বৃহ", "শুক্র", "শনি"], wide: ["রবিবার", "সোমবার", "মঙ্গলবার", "বুধবার", "বৃহস্পতিবার ", "শুক্রবার", "শনিবার"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "পূ", pm: "অপ", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" }, abbreviated: { am: "পূর্বাহ্ন", pm: "অপরাহ্ন", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" }, wide: { am: "পূর্বাহ্ন", pm: "অপরাহ্ন", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "পূ", pm: "অপ", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" }, abbreviated: { am: "পূর্বাহ্ন", pm: "অপরাহ্ন", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" }, wide: { am: "পূর্বাহ্ন", pm: "অপরাহ্ন", midnight: "মধ্যরাত", noon: "মধ্যাহ্ন", morning: "সকাল", afternoon: "বিকাল", evening: "সন্ধ্যা", night: "রাত" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/bn/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ম|য়|র্থ|ষ্ঠ|শে|ই|তম)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(খ্রিঃপূঃ|খ্রিঃ)/i, abbreviated: /^(খ্রিঃপূর্ব|খ্রিঃ)/i, wide: /^(খ্রিস্টপূর্ব|খ্রিস্টাব্দ)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^খ্রিঃপূঃ/i, /^খ্রিঃ/i], abbreviated: [/^খ্রিঃপূর্ব/i, /^খ্রিঃ/i], wide: [/^খ্রিস্টপূর্ব/i, /^খ্রিস্টাব্দ/i] }, defaultParseWidth: "wide" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[১২৩৪]/i, abbreviated: /^[১২৩৪]ত্রৈ/i, wide: /^[১২৩৪](ম|য়|র্থ)? ত্রৈমাসিক/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/১/i, /২/i, /৩/i, /৪/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i, abbreviated: /^(জানু|ফেব্রু|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্ট|অক্টো|নভে|ডিসে)/i, wide: /^(জানুয়ারি|ফেব্রুয়ারি|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^জানু/i, /^ফেব্রু/i, /^মার্চ/i, /^এপ্রিল/i, /^মে/i, /^জুন/i, /^জুলাই/i, /^আগস্ট/i, /^সেপ্ট/i, /^অক্টো/i, /^নভে/i, /^ডিসে/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(র|সো|ম|বু|বৃ|শু|শ)+/i, short: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i, abbreviated: /^(রবি|সোম|মঙ্গল|বুধ|বৃহ|শুক্র|শনি)+/i, wide: /^(রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার |শুক্রবার|শনিবার)+/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^র/i, /^সো/i, /^ম/i, /^বু/i, /^বৃ/i, /^শু/i, /^শ/i], short: [/^রবি/i, /^সোম/i, /^মঙ্গল/i, /^বুধ/i, /^বৃহ/i, /^শুক্র/i, /^শনি/i], abbreviated: [/^রবি/i, /^সোম/i, /^মঙ্গল/i, /^বুধ/i, /^বৃহ/i, /^শুক্র/i, /^শনি/i], wide: [/^রবিবার/i, /^সোমবার/i, /^মঙ্গলবার/i, /^বুধবার/i, /^বৃহস্পতিবার /i, /^শুক্রবার/i, /^শনিবার/i] }, defaultParseWidth: "wide" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(পূ|অপ|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i, abbreviated: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i, wide: /^(পূর্বাহ্ন|অপরাহ্ন|মধ্যরাত|মধ্যাহ্ন|সকাল|বিকাল|সন্ধ্যা|রাত)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^পূ/i, pm: /^অপ/i, midnight: /^মধ্যরাত/i, noon: /^মধ্যাহ্ন/i, morning: /সকাল/i, afternoon: /বিকাল/i, evening: /সন্ধ্যা/i, night: /রাত/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/bs.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { bs: () => bs, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _bs_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/bs/_lib/formatDistance.js"), _bs_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/bs/_lib/formatLong.js"), _bs_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/bs/_lib/formatRelative.js"), _bs_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/bs/_lib/localize.js"), _bs_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/bs/_lib/match.js");
            let bs = { code: "bs", formatDistance: _bs_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _bs_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _bs_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _bs_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _bs_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = bs;
        }, "./node_modules/date-fns/locale/bs/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { standalone: "manje od 1 sekunde", withPrepositionAgo: "manje od 1 sekunde", withPrepositionIn: "manje od 1 sekundu" }, dual: "manje od {{count}} sekunde", other: "manje od {{count}} sekundi" }, xSeconds: { one: { standalone: "1 sekunda", withPrepositionAgo: "1 sekunde", withPrepositionIn: "1 sekundu" }, dual: "{{count}} sekunde", other: "{{count}} sekundi" }, halfAMinute: "pola minute", lessThanXMinutes: { one: { standalone: "manje od 1 minute", withPrepositionAgo: "manje od 1 minute", withPrepositionIn: "manje od 1 minutu" }, dual: "manje od {{count}} minute", other: "manje od {{count}} minuta" }, xMinutes: { one: { standalone: "1 minuta", withPrepositionAgo: "1 minute", withPrepositionIn: "1 minutu" }, dual: "{{count}} minute", other: "{{count}} minuta" }, aboutXHours: { one: { standalone: "oko 1 sat", withPrepositionAgo: "oko 1 sat", withPrepositionIn: "oko 1 sat" }, dual: "oko {{count}} sata", other: "oko {{count}} sati" }, xHours: { one: { standalone: "1 sat", withPrepositionAgo: "1 sat", withPrepositionIn: "1 sat" }, dual: "{{count}} sata", other: "{{count}} sati" }, xDays: { one: { standalone: "1 dan", withPrepositionAgo: "1 dan", withPrepositionIn: "1 dan" }, dual: "{{count}} dana", other: "{{count}} dana" }, aboutXWeeks: { one: { standalone: "oko 1 sedmicu", withPrepositionAgo: "oko 1 sedmicu", withPrepositionIn: "oko 1 sedmicu" }, dual: "oko {{count}} sedmice", other: "oko {{count}} sedmice" }, xWeeks: { one: { standalone: "1 sedmicu", withPrepositionAgo: "1 sedmicu", withPrepositionIn: "1 sedmicu" }, dual: "{{count}} sedmice", other: "{{count}} sedmice" }, aboutXMonths: { one: { standalone: "oko 1 mjesec", withPrepositionAgo: "oko 1 mjesec", withPrepositionIn: "oko 1 mjesec" }, dual: "oko {{count}} mjeseca", other: "oko {{count}} mjeseci" }, xMonths: { one: { standalone: "1 mjesec", withPrepositionAgo: "1 mjesec", withPrepositionIn: "1 mjesec" }, dual: "{{count}} mjeseca", other: "{{count}} mjeseci" }, aboutXYears: { one: { standalone: "oko 1 godinu", withPrepositionAgo: "oko 1 godinu", withPrepositionIn: "oko 1 godinu" }, dual: "oko {{count}} godine", other: "oko {{count}} godina" }, xYears: { one: { standalone: "1 godina", withPrepositionAgo: "1 godine", withPrepositionIn: "1 godinu" }, dual: "{{count}} godine", other: "{{count}} godina" }, overXYears: { one: { standalone: "preko 1 godinu", withPrepositionAgo: "preko 1 godinu", withPrepositionIn: "preko 1 godinu" }, dual: "preko {{count}} godine", other: "preko {{count}} godina" }, almostXYears: { one: { standalone: "gotovo 1 godinu", withPrepositionAgo: "gotovo 1 godinu", withPrepositionIn: "gotovo 1 godinu" }, dual: "gotovo {{count}} godine", other: "gotovo {{count}} godina" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? tokenValue.one.withPrepositionIn : tokenValue.one.withPrepositionAgo : tokenValue.one.standalone : count % 10 > 1 && count % 10 < 5 && "1" !== String(count).substr(-2, 1) ? tokenValue.dual.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "za " + result;
                else
                    return "prije " + result; return result; };
        }, "./node_modules/date-fns/locale/bs/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM yyyy.", long: "d. MMMM yyyy.", medium: "d. MMM yy.", short: "dd. MM. yy." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss (zzzz)", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'u' {{time}}", long: "{{date}} 'u' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/bs/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { switch (date.getDay()) {
                    case 0: return "'prošle nedjelje u' p";
                    case 3: return "'prošle srijede u' p";
                    case 6: return "'prošle subote u' p";
                    default: return "'prošli' EEEE 'u' p";
                } }, yesterday: "'juče u' p", today: "'danas u' p", tomorrow: "'sutra u' p", nextWeek: date => { switch (date.getDay()) {
                    case 0: return "'sljedeće nedjelje u' p";
                    case 3: return "'sljedeću srijedu u' p";
                    case 6: return "'sljedeću subotu u' p";
                    default: return "'sljedeći' EEEE 'u' p";
                } }, other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/bs/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(Number(dirtyNumber)) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pr.n.e.", "AD"], abbreviated: ["pr. Hr.", "po. Hr."], wide: ["Prije Hrista", "Poslije Hrista"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4."], abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], wide: ["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"] }, defaultWidth: "wide", formattingValues: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], wide: ["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["N", "P", "U", "S", "Č", "P", "S"], short: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"], abbreviated: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"], wide: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "poslije podne", evening: "uveče", night: "noću" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "poslije podne", evening: "uveče", night: "noću" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/bs/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(pr\.n\.e\.|AD)/i, abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i, wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^pr/i, /^(po|nova)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\.\s?kv\.?/i, wide: /^[1234]\. kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(10|11|12|[123456789])\./i, abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i, wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^avg/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npusčc]/i, short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i, abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i, wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|poslije podne|ujutru)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^pono/i, noon: /^pod/i, morning: /jutro/i, afternoon: /(poslije\s|po)+podne/i, evening: /(uvece|uveče)/i, night: /(nocu|noću)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ca.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ca: () => ca, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ca_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ca/_lib/formatDistance.js"), _ca_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ca/_lib/formatLong.js"), _ca_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ca/_lib/formatRelative.js"), _ca_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ca/_lib/localize.js"), _ca_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ca/_lib/match.js");
            let ca = { code: "ca", formatDistance: _ca_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ca_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ca_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ca_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ca_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = ca;
        }, "./node_modules/date-fns/locale/ca/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "menys d'un segon", eleven: "menys d'onze segons", other: "menys de {{count}} segons" }, xSeconds: { one: "1 segon", other: "{{count}} segons" }, halfAMinute: "mig minut", lessThanXMinutes: { one: "menys d'un minut", eleven: "menys d'onze minuts", other: "menys de {{count}} minuts" }, xMinutes: { one: "1 minut", other: "{{count}} minuts" }, aboutXHours: { one: "aproximadament una hora", other: "aproximadament {{count}} hores" }, xHours: { one: "1 hora", other: "{{count}} hores" }, xDays: { one: "1 dia", other: "{{count}} dies" }, aboutXWeeks: { one: "aproximadament una setmana", other: "aproximadament {{count}} setmanes" }, xWeeks: { one: "1 setmana", other: "{{count}} setmanes" }, aboutXMonths: { one: "aproximadament un mes", other: "aproximadament {{count}} mesos" }, xMonths: { one: "1 mes", other: "{{count}} mesos" }, aboutXYears: { one: "aproximadament un any", other: "aproximadament {{count}} anys" }, xYears: { one: "1 any", other: "{{count}} anys" }, overXYears: { one: "més d'un any", eleven: "més d'onze anys", other: "més de {{count}} anys" }, almostXYears: { one: "gairebé un any", other: "gairebé {{count}} anys" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 11 === count && tokenValue.eleven ? tokenValue.eleven : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "en " + result;
                else
                    return "fa " + result; return result; };
        }, "./node_modules/date-fns/locale/ca/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d 'de' MMMM y", long: "d 'de' MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'a les' {{time}}", long: "{{date}} 'a les' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ca/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'el' eeee 'passat a la' LT", yesterday: "'ahir a la' p", today: "'avui a la' p", tomorrow: "'demà a la' p", nextWeek: "eeee 'a la' p", other: "P" }, formatRelativeLocalePlural = { lastWeek: "'el' eeee 'passat a les' p", yesterday: "'ahir a les' p", today: "'avui a les' p", tomorrow: "'demà a les' p", nextWeek: "eeee 'a les' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => 1 !== date.getHours() ? formatRelativeLocalePlural[token] : formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ca/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1:
                        case 3: return number + "r";
                        case 2: return number + "n";
                        case 4: return number + "t";
                    } return number + "è"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["aC", "dC"], abbreviated: ["a. de C.", "d. de C."], wide: ["abans de Crist", "després de Crist"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["GN", "FB", "MÇ", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], abbreviated: ["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], wide: ["gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."], short: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."], abbreviated: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."], wide: ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "mitjanit", noon: "migdia", morning: "matí", afternoon: "tarda", evening: "vespre", night: "nit" }, abbreviated: { am: "a.m.", pm: "p.m.", midnight: "mitjanit", noon: "migdia", morning: "matí", afternoon: "tarda", evening: "vespre", night: "nit" }, wide: { am: "ante meridiem", pm: "post meridiem", midnight: "mitjanit", noon: "migdia", morning: "matí", afternoon: "tarda", evening: "vespre", night: "nit" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "am", pm: "pm", midnight: "de la mitjanit", noon: "del migdia", morning: "del matí", afternoon: "de la tarda", evening: "del vespre", night: "de la nit" }, abbreviated: { am: "AM", pm: "PM", midnight: "de la mitjanit", noon: "del migdia", morning: "del matí", afternoon: "de la tarda", evening: "del vespre", night: "de la nit" }, wide: { am: "ante meridiem", pm: "post meridiem", midnight: "de la mitjanit", noon: "del migdia", morning: "del matí", afternoon: "de la tarda", evening: "del vespre", night: "de la nit" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ca/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(è|r|n|r|t)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(aC|dC)/i, abbreviated: /^(a. de C.|d. de C.)/i, wide: /^(abans de Crist|despr[eé]s de Crist)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^aC/i, /^dC/i], abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i], wide: [/^(abans de Crist)/i, /^(despr[eé]s de Crist)/i] }, defaultParseWidth: "wide" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^[1234](è|r|n|r|t)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i, abbreviated: /^(gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i, wide: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^GN/i, /^FB/i, /^MÇ/i, /^AB/i, /^MG/i, /^JN/i, /^JL/i, /^AG/i, /^ST/i, /^OC/i, /^NV/i, /^DS/i], abbreviated: [/^gen./i, /^febr./i, /^març/i, /^abr./i, /^maig/i, /^juny/i, /^jul./i, /^ag./i, /^set./i, /^oct./i, /^nov./i, /^des./i], wide: [/^gener/i, /^febrer/i, /^març/i, /^abril/i, /^maig/i, /^juny/i, /^juliol/i, /^agost/i, /^setembre/i, /^octubre/i, /^novembre/i, /^desembre/i] }, defaultParseWidth: "wide" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i, short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i, abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i, wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i], abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i], wide: [/^diumenge/i, /^dilluns/i, /^dimarts/i, /^dimecres/i, /^dijous/i, /^divendres/i, /^disssabte/i] }, defaultParseWidth: "wide" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mn|md|(del|de la) (matí|tarda|vespre|nit))/i, abbreviated: /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i, wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matí|tarda|vespre|nit))/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mitjanit/i, noon: /^migdia/i, morning: /matí/i, afternoon: /tarda/i, evening: /vespre/i, night: /nit/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ckb.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ckb: () => ckb, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _ckb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ckb/_lib/formatDistance.js"), _ckb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ckb/_lib/formatLong.js"), _ckb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ckb/_lib/formatRelative.js"), _ckb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ckb/_lib/localize.js"), _ckb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ckb/_lib/match.js");
            let ckb = { code: "ckb", formatDistance: _ckb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ckb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ckb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ckb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ckb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ckb;
        }, "./node_modules/date-fns/locale/ckb/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "کەمتر لە یەک چرکە", other: "کەمتر لە {{count}} چرکە" }, xSeconds: { one: "1 چرکە", other: "{{count}} چرکە" }, halfAMinute: "نیو کاتژمێر", lessThanXMinutes: { one: "کەمتر لە یەک خولەک", other: "کەمتر لە {{count}} خولەک" }, xMinutes: { one: "1 خولەک", other: "{{count}} خولەک" }, aboutXHours: { one: "دەوروبەری 1 کاتژمێر", other: "دەوروبەری {{count}} کاتژمێر" }, xHours: { one: "1 کاتژمێر", other: "{{count}} کاتژمێر" }, xDays: { one: "1 ڕۆژ", other: "{{count}} ژۆژ" }, aboutXWeeks: { one: "دەوروبەری 1 هەفتە", other: "دوروبەری {{count}} هەفتە" }, xWeeks: { one: "1 هەفتە", other: "{{count}} هەفتە" }, aboutXMonths: { one: "داوروبەری 1 مانگ", other: "دەوروبەری {{count}} مانگ" }, xMonths: { one: "1 مانگ", other: "{{count}} مانگ" }, aboutXYears: { one: "دەوروبەری  1 ساڵ", other: "دەوروبەری {{count}} ساڵ" }, xYears: { one: "1 ساڵ", other: "{{count}} ساڵ" }, overXYears: { one: "زیاتر لە ساڵێک", other: "زیاتر لە {{count}} ساڵ" }, almostXYears: { one: "بەنزیکەیی ساڵێک  ", other: "بەنزیکەیی {{count}} ساڵ" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "لە ماوەی " + result + "دا";
                else
                    return result + "پێش ئێستا"; return result; };
        }, "./node_modules/date-fns/locale/ckb/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'کاتژمێر' {{time}}", long: "{{date}} 'کاتژمێر' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ckb/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'هەفتەی ڕابردوو' eeee 'کاتژمێر' p", yesterday: "'دوێنێ کاتژمێر' p", today: "'ئەمڕۆ کاتژمێر' p", tomorrow: "'بەیانی کاتژمێر' p", nextWeek: "eeee 'کاتژمێر' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ckb/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["پ", "د"], abbreviated: ["پ-ز", "د-ز"], wide: ["پێش زاین", "دوای زاین"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["چ1م", "چ2م", "چ3م", "چ4م"], wide: ["چارەگی یەکەم", "چارەگی دووەم", "چارەگی سێیەم", "چارەگی چوارەم"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ک-د", "ش", "ئا", "ن", "م", "ح", "ت", "ئا", "ئە", "تش-ی", "تش-د", "ک-ی"], abbreviated: ["کان-دوو", "شوب", "ئاد", "نیس", "مایس", "حوز", "تەم", "ئاب", "ئەل", "تش-یەک", "تش-دوو", "کان-یەک"], wide: ["کانوونی دووەم", "شوبات", "ئادار", "نیسان", "مایس", "حوزەیران", "تەمموز", "ئاب", "ئەیلول", "تشرینی یەکەم", "تشرینی دووەم", "کانوونی یەکەم"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ی-ش", "د-ش", "س-ش", "چ-ش", "پ-ش", "هە", "ش"], short: ["یە-شە", "دوو-شە", "سێ-شە", "چو-شە", "پێ-شە", "هەی", "شە"], abbreviated: ["یەک-شەم", "دوو-شەم", "سێ-شەم", "چوار-شەم", "پێنج-شەم", "هەینی", "شەمە"], wide: ["یەک شەمە", "دوو شەمە", "سێ شەمە", "چوار شەمە", "پێنج شەمە", "هەینی", "شەمە"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "پ", pm: "د", midnight: "ن-ش", noon: "ن", morning: "بەیانی", afternoon: "دوای نیوەڕۆ", evening: "ئێوارە", night: "شەو" }, abbreviated: { am: "پ-ن", pm: "د-ن", midnight: "نیوە شەو", noon: "نیوەڕۆ", morning: "بەیانی", afternoon: "دوای نیوەڕۆ", evening: "ئێوارە", night: "شەو" }, wide: { am: "پێش نیوەڕۆ", pm: "دوای نیوەڕۆ", midnight: "نیوە شەو", noon: "نیوەڕۆ", morning: "بەیانی", afternoon: "دوای نیوەڕۆ", evening: "ئێوارە", night: "شەو" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "پ", pm: "د", midnight: "ن-ش", noon: "ن", morning: "لە بەیانیدا", afternoon: "لە دوای نیوەڕۆدا", evening: "لە ئێوارەدا", night: "لە شەودا" }, abbreviated: { am: "پ-ن", pm: "د-ن", midnight: "نیوە شەو", noon: "نیوەڕۆ", morning: "لە بەیانیدا", afternoon: "لە دوای نیوەڕۆدا", evening: "لە ئێوارەدا", night: "لە شەودا" }, wide: { am: "پێش نیوەڕۆ", pm: "دوای نیوەڕۆ", midnight: "نیوە شەو", noon: "نیوەڕۆ", morning: "لە بەیانیدا", afternoon: "لە دوای نیوەڕۆدا", evening: "لە ئێوارەدا", night: "لە شەودا" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ckb/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(پ|د)/i, abbreviated: /^(پ-ز|د.ز)/i, wide: /^(پێش زاین| دوای زاین)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^د/g, /^پ/g] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^م[1234]چ/i, wide: /^(یەکەم|دووەم|سێیەم| چوارەم) (چارەگی)? quarter/i }, defaultMatchWidth: "wide", parsePatterns: { wide: [/چارەگی یەکەم/, /چارەگی دووەم/, /چارەگی سيیەم/, /چارەگی چوارەم/], any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ک-د|ش|ئا|ن|م|ح|ت|ئە|تش-ی|تش-د|ک-ی)/i, abbreviated: /^(کان-دوو|شوب|ئاد|نیس|مایس|حوز|تەم|ئاب|ئەل|تش-یەک|تش-دوو|کان-یەک)/i, wide: /^(کانوونی دووەم|شوبات|ئادار|نیسان|مایس|حوزەیران|تەمموز|ئاب|ئەیلول|تشرینی یەکەم|تشرینی دووەم|کانوونی یەکەم)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ک-د/i, /^ش/i, /^ئا/i, /^ن/i, /^م/i, /^ح/i, /^ت/i, /^ئا/i, /^ئە/i, /^تش-ی/i, /^تش-د/i, /^ک-ی/i], any: [/^کان-دوو/i, /^شوب/i, /^ئاد/i, /^نیس/i, /^مایس/i, /^حوز/i, /^تەم/i, /^ئاب/i, /^ئەل/i, /^تش-یەک/i, /^تش-دوو/i, /^|کان-یەک/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ش|ی|د|س|چ|پ|هە)/i, short: /^(یە-شە|دوو-شە|سێ-شە|چو-شە|پێ-شە|هە|شە)/i, abbreviated: /^(یەک-شەم|دوو-شەم|سێ-شەم|چوار-شەم|پێنخ-شەم|هەینی|شەمە)/i, wide: /^(یەک شەمە|دوو شەمە|سێ شەمە|چوار شەمە|پێنج شەمە|هەینی|شەمە)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(پ|د|ن-ش|ن| (بەیانی|دوای نیوەڕۆ|ئێوارە|شەو))/i, abbreviated: /^(پ-ن|د-ن|نیوە شەو|نیوەڕۆ|بەیانی|دوای نیوەڕۆ|ئێوارە|شەو)/, wide: /^(پێش نیوەڕۆ|دوای نیوەڕۆ|نیوەڕۆ|نیوە شەو|لەبەیانیدا|لەدواینیوەڕۆدا|لە ئێوارەدا|لە شەودا)/, any: /^(پ|د|بەیانی|نیوەڕۆ|ئێوارە|شەو)/ }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^د/i, pm: /^پ/i, midnight: /^ن-ش/i, noon: /^ن/i, morning: /بەیانی/i, afternoon: /دواینیوەڕۆ/i, evening: /ئێوارە/i, night: /شەو/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/cs.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { cs: () => cs, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _cs_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/cs/_lib/formatDistance.js"), _cs_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/cs/_lib/formatLong.js"), _cs_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/cs/_lib/formatRelative.js"), _cs_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/cs/_lib/localize.js"), _cs_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/cs/_lib/match.js");
            let cs = { code: "cs", formatDistance: _cs_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _cs_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _cs_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _cs_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _cs_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = cs;
        }, "./node_modules/date-fns/locale/cs/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { regular: "méně než 1 sekunda", past: "před méně než 1 sekundou", future: "za méně než 1 sekundu" }, few: { regular: "méně než {{count}} sekundy", past: "před méně než {{count}} sekundami", future: "za méně než {{count}} sekundy" }, many: { regular: "méně než {{count}} sekund", past: "před méně než {{count}} sekundami", future: "za méně než {{count}} sekund" } }, xSeconds: { one: { regular: "1 sekunda", past: "před 1 sekundou", future: "za 1 sekundu" }, few: { regular: "{{count}} sekundy", past: "před {{count}} sekundami", future: "za {{count}} sekundy" }, many: { regular: "{{count}} sekund", past: "před {{count}} sekundami", future: "za {{count}} sekund" } }, halfAMinute: { type: "other", other: { regular: "půl minuty", past: "před půl minutou", future: "za půl minuty" } }, lessThanXMinutes: { one: { regular: "méně než 1 minuta", past: "před méně než 1 minutou", future: "za méně než 1 minutu" }, few: { regular: "méně než {{count}} minuty", past: "před méně než {{count}} minutami", future: "za méně než {{count}} minuty" }, many: { regular: "méně než {{count}} minut", past: "před méně než {{count}} minutami", future: "za méně než {{count}} minut" } }, xMinutes: { one: { regular: "1 minuta", past: "před 1 minutou", future: "za 1 minutu" }, few: { regular: "{{count}} minuty", past: "před {{count}} minutami", future: "za {{count}} minuty" }, many: { regular: "{{count}} minut", past: "před {{count}} minutami", future: "za {{count}} minut" } }, aboutXHours: { one: { regular: "přibližně 1 hodina", past: "přibližně před 1 hodinou", future: "přibližně za 1 hodinu" }, few: { regular: "přibližně {{count}} hodiny", past: "přibližně před {{count}} hodinami", future: "přibližně za {{count}} hodiny" }, many: { regular: "přibližně {{count}} hodin", past: "přibližně před {{count}} hodinami", future: "přibližně za {{count}} hodin" } }, xHours: { one: { regular: "1 hodina", past: "před 1 hodinou", future: "za 1 hodinu" }, few: { regular: "{{count}} hodiny", past: "před {{count}} hodinami", future: "za {{count}} hodiny" }, many: { regular: "{{count}} hodin", past: "před {{count}} hodinami", future: "za {{count}} hodin" } }, xDays: { one: { regular: "1 den", past: "před 1 dnem", future: "za 1 den" }, few: { regular: "{{count}} dny", past: "před {{count}} dny", future: "za {{count}} dny" }, many: { regular: "{{count}} dní", past: "před {{count}} dny", future: "za {{count}} dní" } }, aboutXWeeks: { one: { regular: "přibližně 1 týden", past: "přibližně před 1 týdnem", future: "přibližně za 1 týden" }, few: { regular: "přibližně {{count}} týdny", past: "přibližně před {{count}} týdny", future: "přibližně za {{count}} týdny" }, many: { regular: "přibližně {{count}} týdnů", past: "přibližně před {{count}} týdny", future: "přibližně za {{count}} týdnů" } }, xWeeks: { one: { regular: "1 týden", past: "před 1 týdnem", future: "za 1 týden" }, few: { regular: "{{count}} týdny", past: "před {{count}} týdny", future: "za {{count}} týdny" }, many: { regular: "{{count}} týdnů", past: "před {{count}} týdny", future: "za {{count}} týdnů" } }, aboutXMonths: { one: { regular: "přibližně 1 měsíc", past: "přibližně před 1 měsícem", future: "přibližně za 1 měsíc" }, few: { regular: "přibližně {{count}} měsíce", past: "přibližně před {{count}} měsíci", future: "přibližně za {{count}} měsíce" }, many: { regular: "přibližně {{count}} měsíců", past: "přibližně před {{count}} měsíci", future: "přibližně za {{count}} měsíců" } }, xMonths: { one: { regular: "1 měsíc", past: "před 1 měsícem", future: "za 1 měsíc" }, few: { regular: "{{count}} měsíce", past: "před {{count}} měsíci", future: "za {{count}} měsíce" }, many: { regular: "{{count}} měsíců", past: "před {{count}} měsíci", future: "za {{count}} měsíců" } }, aboutXYears: { one: { regular: "přibližně 1 rok", past: "přibližně před 1 rokem", future: "přibližně za 1 rok" }, few: { regular: "přibližně {{count}} roky", past: "přibližně před {{count}} roky", future: "přibližně za {{count}} roky" }, many: { regular: "přibližně {{count}} roků", past: "přibližně před {{count}} roky", future: "přibližně za {{count}} roků" } }, xYears: { one: { regular: "1 rok", past: "před 1 rokem", future: "za 1 rok" }, few: { regular: "{{count}} roky", past: "před {{count}} roky", future: "za {{count}} roky" }, many: { regular: "{{count}} roků", past: "před {{count}} roky", future: "za {{count}} roků" } }, overXYears: { one: { regular: "více než 1 rok", past: "před více než 1 rokem", future: "za více než 1 rok" }, few: { regular: "více než {{count}} roky", past: "před více než {{count}} roky", future: "za více než {{count}} roky" }, many: { regular: "více než {{count}} roků", past: "před více než {{count}} roky", future: "za více než {{count}} roků" } }, almostXYears: { one: { regular: "skoro 1 rok", past: "skoro před 1 rokem", future: "skoro za 1 rok" }, few: { regular: "skoro {{count}} roky", past: "skoro před {{count}} roky", future: "skoro za {{count}} roky" }, many: { regular: "skoro {{count}} roků", past: "skoro před {{count}} roky", future: "skoro za {{count}} roků" } } }, formatDistance = (token, count, options1) => { let pluralResult, timeResult, tokenValue = formatDistanceLocale[token]; pluralResult = "other" === tokenValue.type ? tokenValue.other : 1 === count ? tokenValue.one : count > 1 && count < 5 ? tokenValue.few : tokenValue.many; let suffixExist = options1?.addSuffix === !0, comparison = options1?.comparison; return (suffixExist && -1 === comparison ? pluralResult.past : suffixExist && 1 === comparison ? pluralResult.future : pluralResult.regular).replace("{{count}}", String(count)); };
        }, "./node_modules/date-fns/locale/cs/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM yyyy", long: "d. MMMM yyyy", medium: "d. M. yyyy", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'v' {{time}}", long: "{{date}} 'v' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/cs/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let accusativeWeekdays = ["neděli", "pondělí", "úterý", "středu", "čtvrtek", "pátek", "sobotu"], formatRelativeLocale = { lastWeek: "'poslední' eeee 've' p", yesterday: "'včera v' p", today: "'dnes v' p", tomorrow: "'zítra v' p", nextWeek: date => "'v " + accusativeWeekdays[date.getDay()] + " o' p", other: "P" }, formatRelative = (token, date) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/cs/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["př. n. l.", "n. l."], abbreviated: ["př. n. l.", "n. l."], wide: ["před naším letopočtem", "našeho letopočtu"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"], wide: ["1. čtvrtletí", "2. čtvrtletí", "3. čtvrtletí", "4. čtvrtletí"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["L", "Ú", "B", "D", "K", "Č", "Č", "S", "Z", "Ř", "L", "P"], abbreviated: ["led", "úno", "bře", "dub", "kvě", "čvn", "čvc", "srp", "zář", "říj", "lis", "pro"], wide: ["leden", "únor", "březen", "duben", "květen", "červen", "červenec", "srpen", "září", "říjen", "listopad", "prosinec"] }, defaultWidth: "wide", formattingValues: { narrow: ["L", "Ú", "B", "D", "K", "Č", "Č", "S", "Z", "Ř", "L", "P"], abbreviated: ["led", "úno", "bře", "dub", "kvě", "čvn", "čvc", "srp", "zář", "říj", "lis", "pro"], wide: ["ledna", "února", "března", "dubna", "května", "června", "července", "srpna", "září", "října", "listopadu", "prosince"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ne", "po", "út", "st", "čt", "pá", "so"], short: ["ne", "po", "út", "st", "čt", "pá", "so"], abbreviated: ["ned", "pon", "úte", "stř", "čtv", "pát", "sob"], wide: ["neděle", "pondělí", "úterý", "středa", "čtvrtek", "pátek", "sobota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "dop.", pm: "odp.", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" }, abbreviated: { am: "dop.", pm: "odp.", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" }, wide: { am: "dopoledne", pm: "odpoledne", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "dop.", pm: "odp.", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" }, abbreviated: { am: "dop.", pm: "odp.", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" }, wide: { am: "dopoledne", pm: "odpoledne", midnight: "půlnoc", noon: "poledne", morning: "ráno", afternoon: "odpoledne", evening: "večer", night: "noc" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/cs/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i, abbreviated: /^(p[řr](\.|ed) Kr\.|p[řr](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i, wide: /^(p[řr](\.|ed) Kristem|p[řr](\.|ed) na[šs][íi]m letopo[čc]tem|po Kristu|na[šs]eho letopo[čc]tu)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^p[řr]/i, /^(po|n)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\. [čc]tvrtlet[íi]/i, wide: /^[1234]\. [čc]tvrtlet[íi]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[lúubdkčcszřrlp]/i, abbreviated: /^(led|[úu]no|b[řr]e|dub|kv[ěe]|[čc]vn|[čc]vc|srp|z[áa][řr]|[řr][íi]j|lis|pro)/i, wide: /^(leden|ledna|[úu]nora?|b[řr]ezen|b[řr]ezna|duben|dubna|kv[ěe]ten|kv[ěe]tna|[čc]erven(ec|ce)?|[čc]ervna|srpen|srpna|z[áa][řr][íi]|[řr][íi]jen|[řr][íi]jna|listopad(a|u)?|prosinec|prosince)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^l/i, /^[úu]/i, /^b/i, /^d/i, /^k/i, /^[čc]/i, /^[čc]/i, /^s/i, /^z/i, /^[řr]/i, /^l/i, /^p/i], any: [/^led/i, /^[úu]n/i, /^b[řr]e/i, /^dub/i, /^kv[ěe]/i, /^[čc]vn|[čc]erven(?!\w)|[čc]ervna/i, /^[čc]vc|[čc]erven(ec|ce)/i, /^srp/i, /^z[áa][řr]/i, /^[řr][íi]j/i, /^lis/i, /^pro/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npuúsčps]/i, short: /^(ne|po|[úu]t|st|[čc]t|p[áa]|so)/i, abbreviated: /^(ned|pon|[úu]te|st[rř]|[čc]tv|p[áa]t|sob)/i, wide: /^(ned[ěe]le|pond[ěe]l[íi]|[úu]ter[ýy]|st[řr]eda|[čc]tvrtek|p[áa]tek|sobota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^n/i, /^p/i, /^[úu]/i, /^s/i, /^[čc]/i, /^p/i, /^s/i], any: [/^ne/i, /^po/i, /^[úu]t/i, /^st/i, /^[čc]t/i, /^p[áa]/i, /^so/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^dopoledne|dop\.?|odpoledne|odp\.?|p[ůu]lnoc|poledne|r[áa]no|odpoledne|ve[čc]er|(v )?noci?/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^dop/i, pm: /^odp/i, midnight: /^p[ůu]lnoc/i, noon: /^poledne/i, morning: /r[áa]no/i, afternoon: /odpoledne/i, evening: /ve[čc]er/i, night: /noc/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/cy.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { cy: () => cy, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _cy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/cy/_lib/formatDistance.js"), _cy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/cy/_lib/formatLong.js"), _cy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/cy/_lib/formatRelative.js"), _cy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/cy/_lib/localize.js"), _cy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/cy/_lib/match.js");
            let cy = { code: "cy", formatDistance: _cy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _cy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _cy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _cy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _cy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = cy;
        }, "./node_modules/date-fns/locale/cy/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "llai na eiliad", other: "llai na {{count}} eiliad" }, xSeconds: { one: "1 eiliad", other: "{{count}} eiliad" }, halfAMinute: "hanner munud", lessThanXMinutes: { one: "llai na munud", two: "llai na 2 funud", other: "llai na {{count}} munud" }, xMinutes: { one: "1 munud", two: "2 funud", other: "{{count}} munud" }, aboutXHours: { one: "tua 1 awr", other: "tua {{count}} awr" }, xHours: { one: "1 awr", other: "{{count}} awr" }, xDays: { one: "1 diwrnod", two: "2 ddiwrnod", other: "{{count}} diwrnod" }, aboutXWeeks: { one: "tua 1 wythnos", two: "tua pythefnos", other: "tua {{count}} wythnos" }, xWeeks: { one: "1 wythnos", two: "pythefnos", other: "{{count}} wythnos" }, aboutXMonths: { one: "tua 1 mis", two: "tua 2 fis", other: "tua {{count}} mis" }, xMonths: { one: "1 mis", two: "2 fis", other: "{{count}} mis" }, aboutXYears: { one: "tua 1 flwyddyn", two: "tua 2 flynedd", other: "tua {{count}} mlynedd" }, xYears: { one: "1 flwyddyn", two: "2 flynedd", other: "{{count}} mlynedd" }, overXYears: { one: "dros 1 flwyddyn", two: "dros 2 flynedd", other: "dros {{count}} mlynedd" }, almostXYears: { one: "bron 1 flwyddyn", two: "bron 2 flynedd", other: "bron {{count}} mlynedd" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count && tokenValue.two ? tokenValue.two : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "mewn " + result;
                else
                    return result + " yn ôl"; return result; };
        }, "./node_modules/date-fns/locale/cy/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'am' {{time}}", long: "{{date}} 'am' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/cy/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'diwethaf am' p", yesterday: "'ddoe am' p", today: "'heddiw am' p", tomorrow: "'yfory am' p", nextWeek: "eeee 'am' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/cy/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber); if (number < 20)
                    switch (number) {
                        case 0:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 12:
                        case 15:
                        case 18: return number + "fed";
                        case 1: return number + "af";
                        case 2: return number + "ail";
                        case 3:
                        case 4: return number + "ydd";
                        case 5:
                        case 6: return number + "ed";
                        case 11:
                        case 13:
                        case 14:
                        case 16:
                        case 17:
                        case 19: return number + "eg";
                    }
                else if (number >= 50 && number <= 60 || 80 === number || number >= 100)
                    return number + "fed"; return number + "ain"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["C", "O"], abbreviated: ["CC", "OC"], wide: ["Cyn Crist", "Ar ôl Crist"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Ch1", "Ch2", "Ch3", "Ch4"], wide: ["Chwarter 1af", "2ail chwarter", "3ydd chwarter", "4ydd chwarter"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["I", "Ch", "Ma", "E", "Mi", "Me", "G", "A", "Md", "H", "T", "Rh"], abbreviated: ["Ion", "Chwe", "Maw", "Ebr", "Mai", "Meh", "Gor", "Aws", "Med", "Hyd", "Tach", "Rhag"], wide: ["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "Ll", "M", "M", "I", "G", "S"], short: ["Su", "Ll", "Ma", "Me", "Ia", "Gw", "Sa"], abbreviated: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], wide: ["dydd Sul", "dydd Llun", "dydd Mawrth", "dydd Mercher", "dydd Iau", "dydd Gwener", "dydd Sadwrn"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "b", pm: "h", midnight: "hn", noon: "hd", morning: "bore", afternoon: "prynhawn", evening: "gyda'r nos", night: "nos" }, abbreviated: { am: "yb", pm: "yh", midnight: "hanner nos", noon: "hanner dydd", morning: "bore", afternoon: "prynhawn", evening: "gyda'r nos", night: "nos" }, wide: { am: "y.b.", pm: "y.h.", midnight: "hanner nos", noon: "hanner dydd", morning: "bore", afternoon: "prynhawn", evening: "gyda'r nos", night: "nos" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "b", pm: "h", midnight: "hn", noon: "hd", morning: "yn y bore", afternoon: "yn y prynhawn", evening: "gyda'r nos", night: "yn y nos" }, abbreviated: { am: "yb", pm: "yh", midnight: "hanner nos", noon: "hanner dydd", morning: "yn y bore", afternoon: "yn y prynhawn", evening: "gyda'r nos", night: "yn y nos" }, wide: { am: "y.b.", pm: "y.h.", midnight: "hanner nos", noon: "hanner dydd", morning: "yn y bore", afternoon: "yn y prynhawn", evening: "gyda'r nos", night: "yn y nos" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/cy/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(af|ail|ydd|ed|fed|eg|ain)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(c|o)/i, abbreviated: /^(c\.?\s?c\.?|o\.?\s?c\.?)/i, wide: /^(cyn christ|ar ôl crist|ar ol crist)/i }, defaultMatchWidth: "wide", parsePatterns: { wide: [/^c/i, /^(ar ôl crist|ar ol crist)/i], any: [/^c/i, /^o/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ch[1234]/i, wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(i|ch|m|e|g|a|h|t|rh)/i, abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i, wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^i/i, /^ch/i, /^m/i, /^e/i, /^m/i, /^m/i, /^g/i, /^a/i, /^m/i, /^h/i, /^t/i, /^rh/i], any: [/^io/i, /^ch/i, /^maw/i, /^e/i, /^mai/i, /^meh/i, /^g/i, /^a/i, /^med/i, /^h/i, /^t/i, /^rh/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(s|ll|m|i|g)/i, short: /^(su|ll|ma|me|ia|gw|sa)/i, abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i, wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i], wide: [/^dydd su/i, /^dydd ll/i, /^dydd ma/i, /^dydd me/i, /^dydd i/i, /^dydd g/i, /^dydd sa/i], any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i, any: /^(y\.?\s?[bh]\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^b|(y\.?\s?b\.?)/i, pm: /^h|(y\.?\s?h\.?)|(yr hwyr)/i, midnight: /^hn|hanner nos/i, noon: /^hd|hanner dydd/i, morning: /bore/i, afternoon: /prynhawn/i, evening: /^gyda'r nos$/i, night: /blah/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/da.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { da: () => da, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _da_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/da/_lib/formatDistance.js"), _da_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/da/_lib/formatLong.js"), _da_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/da/_lib/formatRelative.js"), _da_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/da/_lib/localize.js"), _da_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/da/_lib/match.js");
            let da = { code: "da", formatDistance: _da_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _da_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _da_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _da_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _da_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = da;
        }, "./node_modules/date-fns/locale/da/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mindre end ét sekund", other: "mindre end {{count}} sekunder" }, xSeconds: { one: "1 sekund", other: "{{count}} sekunder" }, halfAMinute: "ét halvt minut", lessThanXMinutes: { one: "mindre end ét minut", other: "mindre end {{count}} minutter" }, xMinutes: { one: "1 minut", other: "{{count}} minutter" }, aboutXHours: { one: "cirka 1 time", other: "cirka {{count}} timer" }, xHours: { one: "1 time", other: "{{count}} timer" }, xDays: { one: "1 dag", other: "{{count}} dage" }, aboutXWeeks: { one: "cirka 1 uge", other: "cirka {{count}} uger" }, xWeeks: { one: "1 uge", other: "{{count}} uger" }, aboutXMonths: { one: "cirka 1 måned", other: "cirka {{count}} måneder" }, xMonths: { one: "1 måned", other: "{{count}} måneder" }, aboutXYears: { one: "cirka 1 år", other: "cirka {{count}} år" }, xYears: { one: "1 år", other: "{{count}} år" }, overXYears: { one: "over 1 år", other: "over {{count}} år" }, almostXYears: { one: "næsten 1 år", other: "næsten {{count}} år" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "om " + result;
                else
                    return result + " siden"; return result; };
        }, "./node_modules/date-fns/locale/da/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE 'den' d. MMMM y", long: "d. MMMM y", medium: "d. MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kl'. {{time}}", long: "{{date}} 'kl'. {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/da/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'sidste' eeee 'kl.' p", yesterday: "'i går kl.' p", today: "'i dag kl.' p", tomorrow: "'i morgen kl.' p", nextWeek: "'på' eeee 'kl.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/da/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["fvt", "vt"], abbreviated: ["f.v.t.", "v.t."], wide: ["før vesterlandsk tidsregning", "vesterlandsk tidsregning"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], wide: ["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "T", "O", "T", "F", "L"], short: ["sø", "ma", "ti", "on", "to", "fr", "lø"], abbreviated: ["søn.", "man.", "tir.", "ons.", "tor.", "fre.", "lør."], wide: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "midnat", noon: "middag", morning: "morgen", afternoon: "eftermiddag", evening: "aften", night: "nat" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnat", noon: "middag", morning: "morgen", afternoon: "eftermiddag", evening: "aften", night: "nat" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnat", noon: "middag", morning: "morgen", afternoon: "eftermiddag", evening: "aften", night: "nat" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "midnat", noon: "middag", morning: "om morgenen", afternoon: "om eftermiddagen", evening: "om aftenen", night: "om natten" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnat", noon: "middag", morning: "om morgenen", afternoon: "om eftermiddagen", evening: "om aftenen", night: "om natten" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnat", noon: "middag", morning: "om morgenen", afternoon: "om eftermiddagen", evening: "om aftenen", night: "om natten" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/da/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(fKr|fvt|eKr|vt)/i, abbreviated: /^(f\.Kr\.?|f\.v\.t\.?|e\.Kr\.?|v\.t\.)/i, wide: /^(f.Kr.|før vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^f/i, /^(v|e)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]. kvt\./i, wide: /^[1234]\.? kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i, wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtofl]/i, short: /^(søn.|man.|tir.|ons.|tor.|fre.|lør.)/i, abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i, wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i], any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i, any: /^([ap]\.?\s?m\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /midnat/i, noon: /middag/i, morning: /morgen/i, afternoon: /eftermiddag/i, evening: /aften/i, night: /nat/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/de-AT.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { deAT: () => deAT, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _de_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatDistance.js"), _de_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatLong.js"), _de_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatRelative.js"), _de_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/match.js"), _de_AT_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/de-AT/_lib/localize.js");
            let deAT = { code: "de-AT", formatDistance: _de_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _de_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _de_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _de_AT_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _de_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = deAT;
        }, "./node_modules/date-fns/locale/de-AT/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let monthValues = { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jän", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], wide: ["Jänner", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"] }, formattingMonthValues = { narrow: monthValues.narrow, abbreviated: ["Jän.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], wide: monthValues.wide }, localize = { ordinalNumber: dirtyNumber => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["v.Chr.", "n.Chr."], abbreviated: ["v.Chr.", "n.Chr."], wide: ["vor Christus", "nach Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: monthValues, formattingValues: formattingMonthValues, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "D", "M", "D", "F", "S"], short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], wide: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "vm.", pm: "nm.", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachm.", evening: "Abend", night: "Nacht" }, abbreviated: { am: "vorm.", pm: "nachm.", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachmittag", evening: "Abend", night: "Nacht" }, wide: { am: "vormittags", pm: "nachmittags", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachmittag", evening: "Abend", night: "Nacht" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "vm.", pm: "nm.", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachm.", evening: "abends", night: "nachts" }, abbreviated: { am: "vorm.", pm: "nachm.", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachmittags", evening: "abends", night: "nachts" }, wide: { am: "vormittags", pm: "nachmittags", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachmittags", evening: "abends", night: "nachts" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/de.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { de: () => de, default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _de_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatDistance.js"), _de_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatLong.js"), _de_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/formatRelative.js"), _de_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/localize.js"), _de_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/de/_lib/match.js");
            let de = { code: "de", formatDistance: _de_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _de_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _de_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _de_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _de_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = de;
        }, "./node_modules/date-fns/locale/de/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { standalone: { one: "weniger als 1 Sekunde", other: "weniger als {{count}} Sekunden" }, withPreposition: { one: "weniger als 1 Sekunde", other: "weniger als {{count}} Sekunden" } }, xSeconds: { standalone: { one: "1 Sekunde", other: "{{count}} Sekunden" }, withPreposition: { one: "1 Sekunde", other: "{{count}} Sekunden" } }, halfAMinute: { standalone: "eine halbe Minute", withPreposition: "einer halben Minute" }, lessThanXMinutes: { standalone: { one: "weniger als 1 Minute", other: "weniger als {{count}} Minuten" }, withPreposition: { one: "weniger als 1 Minute", other: "weniger als {{count}} Minuten" } }, xMinutes: { standalone: { one: "1 Minute", other: "{{count}} Minuten" }, withPreposition: { one: "1 Minute", other: "{{count}} Minuten" } }, aboutXHours: { standalone: { one: "etwa 1 Stunde", other: "etwa {{count}} Stunden" }, withPreposition: { one: "etwa 1 Stunde", other: "etwa {{count}} Stunden" } }, xHours: { standalone: { one: "1 Stunde", other: "{{count}} Stunden" }, withPreposition: { one: "1 Stunde", other: "{{count}} Stunden" } }, xDays: { standalone: { one: "1 Tag", other: "{{count}} Tage" }, withPreposition: { one: "1 Tag", other: "{{count}} Tagen" } }, aboutXWeeks: { standalone: { one: "etwa 1 Woche", other: "etwa {{count}} Wochen" }, withPreposition: { one: "etwa 1 Woche", other: "etwa {{count}} Wochen" } }, xWeeks: { standalone: { one: "1 Woche", other: "{{count}} Wochen" }, withPreposition: { one: "1 Woche", other: "{{count}} Wochen" } }, aboutXMonths: { standalone: { one: "etwa 1 Monat", other: "etwa {{count}} Monate" }, withPreposition: { one: "etwa 1 Monat", other: "etwa {{count}} Monaten" } }, xMonths: { standalone: { one: "1 Monat", other: "{{count}} Monate" }, withPreposition: { one: "1 Monat", other: "{{count}} Monaten" } }, aboutXYears: { standalone: { one: "etwa 1 Jahr", other: "etwa {{count}} Jahre" }, withPreposition: { one: "etwa 1 Jahr", other: "etwa {{count}} Jahren" } }, xYears: { standalone: { one: "1 Jahr", other: "{{count}} Jahre" }, withPreposition: { one: "1 Jahr", other: "{{count}} Jahren" } }, overXYears: { standalone: { one: "mehr als 1 Jahr", other: "mehr als {{count}} Jahre" }, withPreposition: { one: "mehr als 1 Jahr", other: "mehr als {{count}} Jahren" } }, almostXYears: { standalone: { one: "fast 1 Jahr", other: "fast {{count}} Jahre" }, withPreposition: { one: "fast 1 Jahr", other: "fast {{count}} Jahren" } } }, formatDistance = (token, count, options1) => { let result, tokenValue = options1?.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "in " + result;
                else
                    return "vor " + result; return result; };
        }, "./node_modules/date-fns/locale/de/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y", long: "do MMMM y", medium: "do MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'um' {{time}}", long: "{{date}} 'um' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/de/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'letzten' eeee 'um' p", yesterday: "'gestern um' p", today: "'heute um' p", tomorrow: "'morgen um' p", nextWeek: "eeee 'um' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/de/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let monthValues = { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], wide: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"] }, formattingMonthValues = { narrow: monthValues.narrow, abbreviated: ["Jan.", "Feb.", "März", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], wide: monthValues.wide }, localize = { ordinalNumber: dirtyNumber => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["v.Chr.", "n.Chr."], abbreviated: ["v.Chr.", "n.Chr."], wide: ["vor Christus", "nach Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: monthValues, formattingValues: formattingMonthValues, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "D", "M", "D", "F", "S"], short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."], wide: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "vm.", pm: "nm.", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachm.", evening: "Abend", night: "Nacht" }, abbreviated: { am: "vorm.", pm: "nachm.", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachmittag", evening: "Abend", night: "Nacht" }, wide: { am: "vormittags", pm: "nachmittags", midnight: "Mitternacht", noon: "Mittag", morning: "Morgen", afternoon: "Nachmittag", evening: "Abend", night: "Nacht" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "vm.", pm: "nm.", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachm.", evening: "abends", night: "nachts" }, abbreviated: { am: "vorm.", pm: "nachm.", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachmittags", evening: "abends", night: "nachts" }, wide: { am: "vormittags", pm: "nachmittags", midnight: "Mitternacht", noon: "Mittag", morning: "morgens", afternoon: "nachmittags", evening: "abends", night: "nachts" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/de/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i, abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i, wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^v/i, /^n/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](\.)? Quartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\.?/i, wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^j[aä]/i, /^f/i, /^mär/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smdmf]/i, short: /^(so|mo|di|mi|do|fr|sa)/i, abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i, wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i, abbreviated: /^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i, wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^v/i, pm: /^n/i, midnight: /^Mitte/i, noon: /^Mitta/i, morning: /morgens/i, afternoon: /nachmittags/i, evening: /abends/i, night: /nachts/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/el.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, el: () => el });
            var _el_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/el/_lib/formatDistance.js"), _el_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/el/_lib/formatLong.js"), _el_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/el/_lib/formatRelative.js"), _el_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/el/_lib/localize.js"), _el_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/el/_lib/match.js");
            let el = { code: "el", formatDistance: _el_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _el_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _el_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _el_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _el_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = el;
        }, "./node_modules/date-fns/locale/el/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "λιγότερο από ένα δευτερόλεπτο", other: "λιγότερο από {{count}} δευτερόλεπτα" }, xSeconds: { one: "1 δευτερόλεπτο", other: "{{count}} δευτερόλεπτα" }, halfAMinute: "μισό λεπτό", lessThanXMinutes: { one: "λιγότερο από ένα λεπτό", other: "λιγότερο από {{count}} λεπτά" }, xMinutes: { one: "1 λεπτό", other: "{{count}} λεπτά" }, aboutXHours: { one: "περίπου 1 ώρα", other: "περίπου {{count}} ώρες" }, xHours: { one: "1 ώρα", other: "{{count}} ώρες" }, xDays: { one: "1 ημέρα", other: "{{count}} ημέρες" }, aboutXWeeks: { one: "περίπου 1 εβδομάδα", other: "περίπου {{count}} εβδομάδες" }, xWeeks: { one: "1 εβδομάδα", other: "{{count}} εβδομάδες" }, aboutXMonths: { one: "περίπου 1 μήνας", other: "περίπου {{count}} μήνες" }, xMonths: { one: "1 μήνας", other: "{{count}} μήνες" }, aboutXYears: { one: "περίπου 1 χρόνο", other: "περίπου {{count}} χρόνια" }, xYears: { one: "1 χρόνο", other: "{{count}} χρόνια" }, overXYears: { one: "πάνω από 1 χρόνο", other: "πάνω από {{count}} χρόνια" }, almostXYears: { one: "περίπου 1 χρόνο", other: "περίπου {{count}} χρόνια" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "σε " + result;
                else
                    return result + " πριν"; return result; };
        }, "./node_modules/date-fns/locale/el/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "d/M/yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} - {{time}}", long: "{{date}} - {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/el/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => 6 === date.getDay() ? "'το προηγούμενο' eeee 'στις' p" : "'την προηγούμενη' eeee 'στις' p", yesterday: "'χθες στις' p", today: "'σήμερα στις' p", tomorrow: "'αύριο στις' p", nextWeek: "eeee 'στις' p", other: "P" }, formatRelative = (token, date) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/el/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let suffix, number = Number(dirtyNumber), unit = options1?.unit; return number + ("year" === unit || "month" === unit ? "ος" : "week" === unit || "dayOfYear" === unit || "day" === unit || "hour" === unit || "date" === unit ? "η" : "ο"); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["πΧ", "μΧ"], abbreviated: ["π.Χ.", "μ.Χ."], wide: ["προ Χριστού", "μετά Χριστόν"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Τ1", "Τ2", "Τ3", "Τ4"], wide: ["1ο τρίμηνο", "2ο τρίμηνο", "3ο τρίμηνο", "4ο τρίμηνο"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"], abbreviated: ["Ιαν", "Φεβ", "Μάρ", "Απρ", "Μάι", "Ιούν", "Ιούλ", "Αύγ", "Σεπ", "Οκτ", "Νοέ", "Δεκ"], wide: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"] }, defaultWidth: "wide", formattingValues: { narrow: ["Ι", "Φ", "Μ", "Α", "Μ", "Ι", "Ι", "Α", "Σ", "Ο", "Ν", "Δ"], abbreviated: ["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μαΐ", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"], wide: ["Ιανουαρίου", "Φεβρουαρίου", "Μαρτίου", "Απριλίου", "Μαΐου", "Ιουνίου", "Ιουλίου", "Αυγούστου", "Σεπτεμβρίου", "Οκτωβρίου", "Νοεμβρίου", "Δεκεμβρίου"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Κ", "Δ", "T", "Τ", "Π", "Π", "Σ"], short: ["Κυ", "Δε", "Τρ", "Τε", "Πέ", "Πα", "Σά"], abbreviated: ["Κυρ", "Δευ", "Τρί", "Τετ", "Πέμ", "Παρ", "Σάβ"], wide: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "πμ", pm: "μμ", midnight: "μεσάνυχτα", noon: "μεσημέρι", morning: "πρωί", afternoon: "απόγευμα", evening: "βράδυ", night: "νύχτα" }, abbreviated: { am: "π.μ.", pm: "μ.μ.", midnight: "μεσάνυχτα", noon: "μεσημέρι", morning: "πρωί", afternoon: "απόγευμα", evening: "βράδυ", night: "νύχτα" }, wide: { am: "π.μ.", pm: "μ.μ.", midnight: "μεσάνυχτα", noon: "μεσημέρι", morning: "πρωί", afternoon: "απόγευμα", evening: "βράδυ", night: "νύχτα" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/el/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ος|η|ο)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(πΧ|μΧ)/i, abbreviated: /^(π\.?\s?χ\.?|π\.?\s?κ\.?\s?χ\.?|μ\.?\s?χ\.?|κ\.?\s?χ\.?)/i, wide: /^(προ Χριστο(ύ|υ)|πριν απ(ό|ο) την Κοιν(ή|η) Χρονολογ(ί|ι)α|μετ(ά|α) Χριστ(ό|ο)ν|Κοιν(ή|η) Χρονολογ(ί|ι)α)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^π/i, /^(μ|κ)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^τ[1234]/i, wide: /^[1234]ο? τρ(ί|ι)μηνο/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ιφμαμιιασονδ]/i, abbreviated: /^(ιαν|φεβ|μ[άα]ρ|απρ|μ[άα][ιΐ]|ιο[ύυ]ν|ιο[ύυ]λ|α[ύυ]γ|σεπ|οκτ|νο[έε]|δεκ)/i, wide: /^(μ[άα][ιΐ]|α[ύυ]γο[υύ]στ)(ος|ου)|(ιανου[άα]ρ|φεβρου[άα]ρ|μ[άα]ρτ|απρ[ίι]λ|ιο[ύυ]ν|ιο[ύυ]λ|σεπτ[έε]μβρ|οκτ[ώω]βρ|νο[έε]μβρ|δεκ[έε]μβρ)(ιος|ίου)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ι/i, /^φ/i, /^μ/i, /^α/i, /^μ/i, /^ι/i, /^ι/i, /^α/i, /^σ/i, /^ο/i, /^ν/i, /^δ/i], any: [/^ια/i, /^φ/i, /^μ[άα]ρ/i, /^απ/i, /^μ[άα][ιΐ]/i, /^ιο[ύυ]ν/i, /^ιο[ύυ]λ/i, /^α[ύυ]/i, /^σ/i, /^ο/i, /^ν/i, /^δ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[κδτπσ]/i, short: /^(κυ|δε|τρ|τε|π[εέ]|π[αά]|σ[αά])/i, abbreviated: /^(κυρ|δευ|τρι|τετ|πεμ|παρ|σαβ)/i, wide: /^(κυριακ(ή|η)|δευτ(έ|ε)ρα|τρ(ί|ι)τη|τετ(ά|α)ρτη|π(έ|ε)μπτη|παρασκευ(ή|η)|σ(ά|α)ββατο)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^κ/i, /^δ/i, /^τ/i, /^τ/i, /^π/i, /^π/i, /^σ/i], any: [/^κ/i, /^δ/i, /^τρ/i, /^τε/i, /^π[εέ]/i, /^π[αά]/i, /^σ/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(πμ|μμ|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i, any: /^([πμ]\.?\s?μ\.?|μεσ(ά|α)νυχτα|μεσημ(έ|ε)ρι|πρω(ί|ι)|απ(ό|ο)γευμα|βρ(ά|α)δυ|ν(ύ|υ)χτα)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^πμ|π\.\s?μ\./i, pm: /^μμ|μ\.\s?μ\./i, midnight: /^μεσάν/i, noon: /^μεσημ(έ|ε)/i, morning: /πρω(ί|ι)/i, afternoon: /απ(ό|ο)γευμα/i, evening: /βρ(ά|α)δυ/i, night: /ν(ύ|υ)χτα/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/en-AU.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enAU: () => enAU });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_AU_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-AU/_lib/formatLong.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js");
            let enAU = { code: "en-AU", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_AU_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = enAU;
        }, "./node_modules/date-fns/locale/en-AU/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-CA.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enCA: () => enCA });
            var _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_CA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-CA/_lib/formatDistance.js"), _en_CA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-CA/_lib/formatLong.js");
            let enCA = { code: "en-CA", formatDistance: _en_CA_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_CA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = enCA;
        }, "./node_modules/date-fns/locale/en-CA/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" }, xSeconds: { one: "a second", other: "{{count}} seconds" }, halfAMinute: "half a minute", lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" }, xMinutes: { one: "a minute", other: "{{count}} minutes" }, aboutXHours: { one: "about an hour", other: "about {{count}} hours" }, xHours: { one: "an hour", other: "{{count}} hours" }, xDays: { one: "a day", other: "{{count}} days" }, aboutXWeeks: { one: "about a week", other: "about {{count}} weeks" }, xWeeks: { one: "a week", other: "{{count}} weeks" }, aboutXMonths: { one: "about a month", other: "about {{count}} months" }, xMonths: { one: "a month", other: "{{count}} months" }, aboutXYears: { one: "about a year", other: "about {{count}} years" }, xYears: { one: "a year", other: "{{count}} years" }, overXYears: { one: "over a year", other: "over {{count}} years" }, almostXYears: { one: "almost a year", other: "almost {{count}} years" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "in " + result;
                else
                    return result + " ago"; return result; };
        }, "./node_modules/date-fns/locale/en-CA/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, yyyy", long: "MMMM do, yyyy", medium: "MMM d, yyyy", short: "yyyy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-GB.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enGB: () => enGB });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_GB_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-GB/_lib/formatLong.js");
            let enGB = { code: "en-GB", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_GB_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = enGB;
        }, "./node_modules/date-fns/locale/en-GB/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-IE.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enIE: () => enIE });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_GB_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-GB/_lib/formatLong.js");
            let enIE = { code: "en-IE", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_GB_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = enIE;
        }, "./node_modules/date-fns/locale/en-IN.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enIN: () => enIN });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_IN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-IN/_lib/formatLong.js");
            let enIN = { code: "en-IN", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_IN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = enIN;
        }, "./node_modules/date-fns/locale/en-IN/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM, yyyy", medium: "d MMM, yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-NZ.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enNZ: () => enNZ });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_NZ_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-NZ/_lib/formatLong.js");
            let enNZ = { code: "en-NZ", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_NZ_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = enNZ;
        }, "./node_modules/date-fns/locale/en-NZ/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-US.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enUS: () => enUS });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatLong.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js");
            let enUS = { code: "en-US", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_US_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = enUS;
        }, "./node_modules/date-fns/locale/en-US/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "less than a second", other: "less than {{count}} seconds" }, xSeconds: { one: "1 second", other: "{{count}} seconds" }, halfAMinute: "half a minute", lessThanXMinutes: { one: "less than a minute", other: "less than {{count}} minutes" }, xMinutes: { one: "1 minute", other: "{{count}} minutes" }, aboutXHours: { one: "about 1 hour", other: "about {{count}} hours" }, xHours: { one: "1 hour", other: "{{count}} hours" }, xDays: { one: "1 day", other: "{{count}} days" }, aboutXWeeks: { one: "about 1 week", other: "about {{count}} weeks" }, xWeeks: { one: "1 week", other: "{{count}} weeks" }, aboutXMonths: { one: "about 1 month", other: "about {{count}} months" }, xMonths: { one: "1 month", other: "{{count}} months" }, aboutXYears: { one: "about 1 year", other: "about {{count}} years" }, xYears: { one: "1 year", other: "{{count}} years" }, overXYears: { one: "over 1 year", other: "over {{count}} years" }, almostXYears: { one: "almost 1 year", other: "almost {{count}} years" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "in " + result;
                else
                    return result + " ago"; return result; };
        }, "./node_modules/date-fns/locale/en-US/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/en-US/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'last' eeee 'at' p", yesterday: "'yesterday at' p", today: "'today at' p", tomorrow: "'tomorrow at' p", nextWeek: "eeee 'at' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/en-US/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1: return number + "st";
                        case 2: return number + "nd";
                        case 3: return number + "rd";
                    } return number + "th"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["B", "A"], abbreviated: ["BC", "AD"], wide: ["Before Christ", "Anno Domini"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "T", "W", "T", "F", "S"], short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"], abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "morning", afternoon: "afternoon", evening: "evening", night: "night" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mi", noon: "n", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, abbreviated: { am: "AM", pm: "PM", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnight", noon: "noon", morning: "in the morning", afternoon: "in the afternoon", evening: "in the evening", night: "at night" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/en-US/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(b|a)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(before christ|before common era|anno domini|common era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](th|st|nd|rd)? quarter/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i, wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|mo|tu|we|th|fr|sa)/i, abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i, wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i, any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mi/i, noon: /^no/i, morning: /morning/i, afternoon: /afternoon/i, evening: /evening/i, night: /night/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/en-ZA.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, enZA: () => enZA });
            var _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatDistance.js"), _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/formatRelative.js"), _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/localize.js"), _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US/_lib/match.js"), _en_ZA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/en-ZA/_lib/formatLong.js");
            let enZA = { code: "en-ZA", formatDistance: _en_US_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _en_ZA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _en_US_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _en_US_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _en_US_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = enZA;
        }, "./node_modules/date-fns/locale/en-ZA/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, dd MMMM yyyy", long: "dd MMMM yyyy", medium: "dd MMM yyyy", short: "yyyy/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'at' {{time}}", long: "{{date}} 'at' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/eo.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, eo: () => eo });
            var _eo_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/eo/_lib/formatDistance.js"), _eo_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/eo/_lib/formatLong.js"), _eo_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/eo/_lib/formatRelative.js"), _eo_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/eo/_lib/localize.js"), _eo_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/eo/_lib/match.js");
            let eo = { code: "eo", formatDistance: _eo_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _eo_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _eo_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _eo_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _eo_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = eo;
        }, "./node_modules/date-fns/locale/eo/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "malpli ol sekundo", other: "malpli ol {{count}} sekundoj" }, xSeconds: { one: "1 sekundo", other: "{{count}} sekundoj" }, halfAMinute: "duonminuto", lessThanXMinutes: { one: "malpli ol minuto", other: "malpli ol {{count}} minutoj" }, xMinutes: { one: "1 minuto", other: "{{count}} minutoj" }, aboutXHours: { one: "proksimume 1 horo", other: "proksimume {{count}} horoj" }, xHours: { one: "1 horo", other: "{{count}} horoj" }, xDays: { one: "1 tago", other: "{{count}} tagoj" }, aboutXMonths: { one: "proksimume 1 monato", other: "proksimume {{count}} monatoj" }, xWeeks: { one: "1 semajno", other: "{{count}} semajnoj" }, aboutXWeeks: { one: "proksimume 1 semajno", other: "proksimume {{count}} semajnoj" }, xMonths: { one: "1 monato", other: "{{count}} monatoj" }, aboutXYears: { one: "proksimume 1 jaro", other: "proksimume {{count}} jaroj" }, xYears: { one: "1 jaro", other: "{{count}} jaroj" }, overXYears: { one: "pli ol 1 jaro", other: "pli ol {{count}} jaroj" }, almostXYears: { one: "preskaŭ 1 jaro", other: "preskaŭ {{count}} jaroj" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1?.comparison && options1.comparison > 0)
                    return "post " + result;
                else
                    return "antaŭ " + result; return result; };
        }, "./node_modules/date-fns/locale/eo/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do 'de' MMMM y", long: "y-MMMM-dd", medium: "y-MMM-dd", short: "yyyy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "Ho 'horo kaj' m:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}} {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/eo/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'pasinta' eeee 'je' p", yesterday: "'hieraŭ je' p", today: "'hodiaŭ je' p", tomorrow: "'morgaŭ je' p", nextWeek: "eeee 'je' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/eo/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => Number(dirtyNumber) + "-a", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["aK", "pK"], abbreviated: ["a.K.E.", "p.K.E."], wide: ["antaŭ Komuna Erao", "Komuna Erao"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1-a kvaronjaro", "2-a kvaronjaro", "3-a kvaronjaro", "4-a kvaronjaro"] }, defaultWidth: "wide", argumentCallback: function (quarter) { return Number(quarter) - 1; } }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aŭg", "sep", "okt", "nov", "dec"], wide: ["januaro", "februaro", "marto", "aprilo", "majo", "junio", "julio", "aŭgusto", "septembro", "oktobro", "novembro", "decembro"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "L", "M", "M", "Ĵ", "V", "S"], short: ["di", "lu", "ma", "me", "ĵa", "ve", "sa"], abbreviated: ["dim", "lun", "mar", "mer", "ĵaŭ", "ven", "sab"], wide: ["dimanĉo", "lundo", "mardo", "merkredo", "ĵaŭdo", "vendredo", "sabato"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "noktomezo", noon: "tagmezo", morning: "matene", afternoon: "posttagmeze", evening: "vespere", night: "nokte" }, abbreviated: { am: "a.t.m.", pm: "p.t.m.", midnight: "noktomezo", noon: "tagmezo", morning: "matene", afternoon: "posttagmeze", evening: "vespere", night: "nokte" }, wide: { am: "antaŭtagmeze", pm: "posttagmeze", midnight: "noktomezo", noon: "tagmezo", morning: "matene", afternoon: "posttagmeze", evening: "vespere", night: "nokte" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/eo/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(-?a)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([ap]k)/i, abbreviated: /^([ap]\.?\s?k\.?\s?e\.?)/i, wide: /^((antaǔ |post )?komuna erao)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^a/i, /^[kp]/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^k[1234]/i, wide: /^[1234](-?a)? kvaronjaro/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: function (index) { return index + 1; } }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(ŭ|ux|uh|u)g|sep|okt|nov|dec)/i, wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(ŭ|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^a(u|ŭ)/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmĵjvs]/i, short: /^(di|lu|ma|me|(ĵ|jx|jh|j)a|ve|sa)/i, abbreviated: /^(dim|lun|mar|mer|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)|ven|sab)/i, wide: /^(diman(ĉ|cx|ch|c)o|lundo|mardo|merkredo|(ĵ|jx|jh|j)a(ŭ|ux|uh|u)do|vendredo|sabato)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|ĵ)/i, /^v/i, /^s/i], any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|ĵ)/i, /^v/i, /^s/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i, abbreviated: /^([ap][.\s]?t[.\s]?m[.\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i, wide: /^(anta(ŭ|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^noktom/i, noon: /^t/i, morning: /^m/i, afternoon: /^posttagmeze/i, evening: /^v/i, night: /^n/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/es.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, es: () => es });
            var _es_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/es/_lib/formatDistance.js"), _es_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/es/_lib/formatLong.js"), _es_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/es/_lib/formatRelative.js"), _es_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/es/_lib/localize.js"), _es_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/es/_lib/match.js");
            let es = { code: "es", formatDistance: _es_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _es_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _es_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _es_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _es_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = es;
        }, "./node_modules/date-fns/locale/es/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "menos de un segundo", other: "menos de {{count}} segundos" }, xSeconds: { one: "1 segundo", other: "{{count}} segundos" }, halfAMinute: "medio minuto", lessThanXMinutes: { one: "menos de un minuto", other: "menos de {{count}} minutos" }, xMinutes: { one: "1 minuto", other: "{{count}} minutos" }, aboutXHours: { one: "alrededor de 1 hora", other: "alrededor de {{count}} horas" }, xHours: { one: "1 hora", other: "{{count}} horas" }, xDays: { one: "1 día", other: "{{count}} días" }, aboutXWeeks: { one: "alrededor de 1 semana", other: "alrededor de {{count}} semanas" }, xWeeks: { one: "1 semana", other: "{{count}} semanas" }, aboutXMonths: { one: "alrededor de 1 mes", other: "alrededor de {{count}} meses" }, xMonths: { one: "1 mes", other: "{{count}} meses" }, aboutXYears: { one: "alrededor de 1 año", other: "alrededor de {{count}} años" }, xYears: { one: "1 año", other: "{{count}} años" }, overXYears: { one: "más de 1 año", other: "más de {{count}} años" }, almostXYears: { one: "casi 1 año", other: "casi {{count}} años" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "en " + result;
                else
                    return "hace " + result; return result; };
        }, "./node_modules/date-fns/locale/es/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d 'de' MMMM 'de' y", long: "d 'de' MMMM 'de' y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'a las' {{time}}", long: "{{date}} 'a las' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/es/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'el' eeee 'pasado a la' p", yesterday: "'ayer a la' p", today: "'hoy a la' p", tomorrow: "'mañana a la' p", nextWeek: "eeee 'a la' p", other: "P" }, formatRelativeLocalePlural = { lastWeek: "'el' eeee 'pasado a las' p", yesterday: "'ayer a las' p", today: "'hoy a las' p", tomorrow: "'mañana a las' p", nextWeek: "eeee 'a las' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => 1 !== date.getHours() ? formatRelativeLocalePlural[token] : formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/es/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "º", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["AC", "DC"], abbreviated: ["AC", "DC"], wide: ["antes de cristo", "después de cristo"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"], wide: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["d", "l", "m", "m", "j", "v", "s"], short: ["do", "lu", "ma", "mi", "ju", "vi", "sá"], abbreviated: ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"], wide: ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "mañana", afternoon: "tarde", evening: "tarde", night: "noche" }, abbreviated: { am: "AM", pm: "PM", midnight: "medianoche", noon: "mediodia", morning: "mañana", afternoon: "tarde", evening: "tarde", night: "noche" }, wide: { am: "a.m.", pm: "p.m.", midnight: "medianoche", noon: "mediodia", morning: "mañana", afternoon: "tarde", evening: "tarde", night: "noche" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "de la mañana", afternoon: "de la tarde", evening: "de la tarde", night: "de la noche" }, abbreviated: { am: "AM", pm: "PM", midnight: "medianoche", noon: "mediodia", morning: "de la mañana", afternoon: "de la tarde", evening: "de la tarde", night: "de la noche" }, wide: { am: "a.m.", pm: "p.m.", midnight: "medianoche", noon: "mediodia", morning: "de la mañana", afternoon: "de la tarde", evening: "de la tarde", night: "de la noche" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/es/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+)(º)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ac|dc|a|d)/i, abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i, wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ac/i, /^dc/i], wide: [/^(antes de cristo|antes de la era com[uú]n)/i, /^(despu[eé]s de cristo|era com[uú]n)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^[1234](º)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[efmajsond]/i, abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i, wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^e/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^en/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmjvs]/i, short: /^(do|lu|ma|mi|ju|vi|s[áa])/i, abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i, wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i], any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i, any: /^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mn/i, noon: /^md/i, morning: /mañana/i, afternoon: /tarde/i, evening: /tarde/i, night: /noche/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/et.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, et: () => et });
            var _et_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/et/_lib/formatDistance.js"), _et_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/et/_lib/formatLong.js"), _et_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/et/_lib/formatRelative.js"), _et_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/et/_lib/localize.js"), _et_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/et/_lib/match.js");
            let et = { code: "et", formatDistance: _et_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _et_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _et_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _et_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _et_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = et;
        }, "./node_modules/date-fns/locale/et/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { standalone: { one: "vähem kui üks sekund", other: "vähem kui {{count}} sekundit" }, withPreposition: { one: "vähem kui ühe sekundi", other: "vähem kui {{count}} sekundi" } }, xSeconds: { standalone: { one: "üks sekund", other: "{{count}} sekundit" }, withPreposition: { one: "ühe sekundi", other: "{{count}} sekundi" } }, halfAMinute: { standalone: "pool minutit", withPreposition: "poole minuti" }, lessThanXMinutes: { standalone: { one: "vähem kui üks minut", other: "vähem kui {{count}} minutit" }, withPreposition: { one: "vähem kui ühe minuti", other: "vähem kui {{count}} minuti" } }, xMinutes: { standalone: { one: "üks minut", other: "{{count}} minutit" }, withPreposition: { one: "ühe minuti", other: "{{count}} minuti" } }, aboutXHours: { standalone: { one: "umbes üks tund", other: "umbes {{count}} tundi" }, withPreposition: { one: "umbes ühe tunni", other: "umbes {{count}} tunni" } }, xHours: { standalone: { one: "üks tund", other: "{{count}} tundi" }, withPreposition: { one: "ühe tunni", other: "{{count}} tunni" } }, xDays: { standalone: { one: "üks päev", other: "{{count}} päeva" }, withPreposition: { one: "ühe päeva", other: "{{count}} päeva" } }, aboutXWeeks: { standalone: { one: "umbes üks nädal", other: "umbes {{count}} nädalat" }, withPreposition: { one: "umbes ühe nädala", other: "umbes {{count}} nädala" } }, xWeeks: { standalone: { one: "üks nädal", other: "{{count}} nädalat" }, withPreposition: { one: "ühe nädala", other: "{{count}} nädala" } }, aboutXMonths: { standalone: { one: "umbes üks kuu", other: "umbes {{count}} kuud" }, withPreposition: { one: "umbes ühe kuu", other: "umbes {{count}} kuu" } }, xMonths: { standalone: { one: "üks kuu", other: "{{count}} kuud" }, withPreposition: { one: "ühe kuu", other: "{{count}} kuu" } }, aboutXYears: { standalone: { one: "umbes üks aasta", other: "umbes {{count}} aastat" }, withPreposition: { one: "umbes ühe aasta", other: "umbes {{count}} aasta" } }, xYears: { standalone: { one: "üks aasta", other: "{{count}} aastat" }, withPreposition: { one: "ühe aasta", other: "{{count}} aasta" } }, overXYears: { standalone: { one: "rohkem kui üks aasta", other: "rohkem kui {{count}} aastat" }, withPreposition: { one: "rohkem kui ühe aasta", other: "rohkem kui {{count}} aasta" } }, almostXYears: { standalone: { one: "peaaegu üks aasta", other: "peaaegu {{count}} aastat" }, withPreposition: { one: "peaaegu ühe aasta", other: "peaaegu {{count}} aasta" } } }, formatDistance = (token, count, options1) => { let result, usageGroup = options1?.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : usageGroup.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " pärast";
                else
                    return result + " eest"; return result; };
        }, "./node_modules/date-fns/locale/et/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM y", long: "d. MMMM y", medium: "d. MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kell' {{time}}", long: "{{date}} 'kell' {{time}}", medium: "{{date}}. {{time}}", short: "{{date}}. {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/et/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'eelmine' eeee 'kell' p", yesterday: "'eile kell' p", today: "'täna kell' p", tomorrow: "'homme kell' p", nextWeek: "'järgmine' eeee 'kell' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/et/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let monthValues = { narrow: ["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jaan", "veebr", "märts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], wide: ["jaanuar", "veebruar", "märts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"] }, dayValues = { narrow: ["P", "E", "T", "K", "N", "R", "L"], short: ["P", "E", "T", "K", "N", "R", "L"], abbreviated: ["pühap.", "esmasp.", "teisip.", "kolmap.", "neljap.", "reede.", "laup."], wide: ["pühapäev", "esmaspäev", "teisipäev", "kolmapäev", "neljapäev", "reede", "laupäev"] }, localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["e.m.a", "m.a.j"], abbreviated: ["e.m.a", "m.a.j"], wide: ["enne meie ajaarvamist", "meie ajaarvamise järgi"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: monthValues, defaultWidth: "wide", formattingValues: monthValues, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: dayValues, defaultWidth: "wide", formattingValues: dayValues, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "kesköö", noon: "keskpäev", morning: "hommik", afternoon: "pärastlõuna", evening: "õhtu", night: "öö" }, abbreviated: { am: "AM", pm: "PM", midnight: "kesköö", noon: "keskpäev", morning: "hommik", afternoon: "pärastlõuna", evening: "õhtu", night: "öö" }, wide: { am: "AM", pm: "PM", midnight: "kesköö", noon: "keskpäev", morning: "hommik", afternoon: "pärastlõuna", evening: "õhtu", night: "öö" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "keskööl", noon: "keskpäeval", morning: "hommikul", afternoon: "pärastlõunal", evening: "õhtul", night: "öösel" }, abbreviated: { am: "AM", pm: "PM", midnight: "keskööl", noon: "keskpäeval", morning: "hommikul", afternoon: "pärastlõunal", evening: "õhtul", night: "öösel" }, wide: { am: "AM", pm: "PM", midnight: "keskööl", noon: "keskpäeval", morning: "hommikul", afternoon: "pärastlõunal", evening: "õhtul", night: "öösel" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/et/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^\d+\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i, abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i, wide: /^(enne meie ajaarvamist|meie ajaarvamise järgi|enne Kristust|pärast Kristust)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^e/i, /^(m|p)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K[1234]/i, wide: /^[1234](\.)? kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jvmasond]/i, abbreviated: /^(jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i, wide: /^(jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^v/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^v/i, /^mär/i, /^ap/i, /^mai/i, /^juun/i, /^juul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[petknrl]/i, short: /^[petknrl]/i, abbreviated: /^(püh?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i, wide: /^(pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|keskööl?|keskpäev(al)?|hommik(ul)?|pärastlõunal?|õhtul?|öö(sel)?)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^keskö/i, noon: /^keskp/i, morning: /hommik/i, afternoon: /pärastlõuna/i, evening: /õhtu/i, night: /öö/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/eu.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, eu: () => eu });
            var _eu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/eu/_lib/formatDistance.js"), _eu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/eu/_lib/formatLong.js"), _eu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/eu/_lib/formatRelative.js"), _eu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/eu/_lib/localize.js"), _eu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/eu/_lib/match.js");
            let eu = { code: "eu", formatDistance: _eu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _eu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _eu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _eu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _eu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = eu;
        }, "./node_modules/date-fns/locale/eu/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "segundo bat baino gutxiago", other: "{{count}} segundo baino gutxiago" }, xSeconds: { one: "1 segundo", other: "{{count}} segundo" }, halfAMinute: "minutu erdi", lessThanXMinutes: { one: "minutu bat baino gutxiago", other: "{{count}} minutu baino gutxiago" }, xMinutes: { one: "1 minutu", other: "{{count}} minutu" }, aboutXHours: { one: "1 ordu gutxi gorabehera", other: "{{count}} ordu gutxi gorabehera" }, xHours: { one: "1 ordu", other: "{{count}} ordu" }, xDays: { one: "1 egun", other: "{{count}} egun" }, aboutXWeeks: { one: "aste 1 inguru", other: "{{count}} aste inguru" }, xWeeks: { one: "1 aste", other: "{{count}} astean" }, aboutXMonths: { one: "1 hilabete gutxi gorabehera", other: "{{count}} hilabete gutxi gorabehera" }, xMonths: { one: "1 hilabete", other: "{{count}} hilabete" }, aboutXYears: { one: "1 urte gutxi gorabehera", other: "{{count}} urte gutxi gorabehera" }, xYears: { one: "1 urte", other: "{{count}} urte" }, overXYears: { one: "1 urte baino gehiago", other: "{{count}} urte baino gehiago" }, almostXYears: { one: "ia 1 urte", other: "ia {{count}} urte" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "en " + result;
                else
                    return "duela " + result; return result; };
        }, "./node_modules/date-fns/locale/eu/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, y'ko' MMMM'ren' d'a' y'ren'", long: "y'ko' MMMM'ren' d'a'", medium: "y MMM d", short: "yy/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'tan' {{time}}", long: "{{date}} 'tan' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/eu/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'joan den' eeee, LT", yesterday: "'atzo,' p", today: "'gaur,' p", tomorrow: "'bihar,' p", nextWeek: "eeee, p", other: "P" }, formatRelativeLocalePlural = { lastWeek: "'joan den' eeee, p", yesterday: "'atzo,' p", today: "'gaur,' p", tomorrow: "'bihar,' p", nextWeek: "eeee, p", other: "P" }, formatRelative = (token, date) => 1 !== date.getHours() ? formatRelativeLocalePlural[token] : formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/eu/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["k.a.", "k.o."], abbreviated: ["k.a.", "k.o."], wide: ["kristo aurretik", "kristo ondoren"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1H", "2H", "3H", "4H"], wide: ["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["u", "o", "m", "a", "m", "e", "u", "a", "i", "u", "a", "a"], abbreviated: ["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"], wide: ["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["i", "a", "a", "a", "o", "o", "l"], short: ["ig", "al", "as", "az", "og", "or", "lr"], abbreviated: ["iga", "ast", "ast", "ast", "ost", "ost", "lar"], wide: ["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "ge", noon: "eg", morning: "goiza", afternoon: "arratsaldea", evening: "arratsaldea", night: "gaua" }, abbreviated: { am: "AM", pm: "PM", midnight: "gauerdia", noon: "eguerdia", morning: "goiza", afternoon: "arratsaldea", evening: "arratsaldea", night: "gaua" }, wide: { am: "a.m.", pm: "p.m.", midnight: "gauerdia", noon: "eguerdia", morning: "goiza", afternoon: "arratsaldea", evening: "arratsaldea", night: "gaua" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "ge", noon: "eg", morning: "goizean", afternoon: "arratsaldean", evening: "arratsaldean", night: "gauean" }, abbreviated: { am: "AM", pm: "PM", midnight: "gauerdia", noon: "eguerdia", morning: "goizean", afternoon: "arratsaldean", evening: "arratsaldean", night: "gauean" }, wide: { am: "a.m.", pm: "p.m.", midnight: "gauerdia", noon: "eguerdia", morning: "goizean", afternoon: "arratsaldean", evening: "arratsaldean", night: "gauean" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/eu/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(.)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(k.a.|k.o.)/i, abbreviated: /^(k.a.|k.o.)/i, wide: /^(kristo aurretik|kristo ondoren)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^k.a./i, /^k.o./i], abbreviated: [/^(k.a.)/i, /^(k.o.)/i], wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i] }, defaultParseWidth: "wide" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]H/i, wide: /^[1234](.)? hiruhilekoa/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[uomaei]/i, abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i, wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^u/i, /^o/i, /^m/i, /^a/i, /^m/i, /^e/i, /^u/i, /^a/i, /^i/i, /^u/i, /^a/i, /^a/i], any: [/^urt/i, /^ots/i, /^mar/i, /^api/i, /^mai/i, /^eka/i, /^uzt/i, /^abu/i, /^ira/i, /^urr/i, /^aza/i, /^abe/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[iaol]/i, short: /^(ig|al|as|az|og|or|lr)/i, abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i, wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i], short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i], abbreviated: [/^iga/i, /^ast/i, /^ast/i, /^ast/i, /^ost/i, /^ost/i, /^lar/i], wide: [/^igandea/i, /^astelehena/i, /^asteartea/i, /^asteazkena/i, /^osteguna/i, /^ostirala/i, /^larunbata/i] }, defaultParseWidth: "wide" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i, any: /^([ap]\.?\s?m\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i }, defaultMatchWidth: "any", parsePatterns: { narrow: { am: /^a/i, pm: /^p/i, midnight: /^ge/i, noon: /^eg/i, morning: /goiz/i, afternoon: /arratsaldea/i, evening: /arratsaldea/i, night: /gau/i }, any: { am: /^a/i, pm: /^p/i, midnight: /^gauerdia/i, noon: /^eguerdia/i, morning: /goiz/i, afternoon: /arratsaldea/i, evening: /arratsaldea/i, night: /gau/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/fa-IR.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, faIR: () => faIR });
            var _fa_IR_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR/_lib/formatDistance.js"), _fa_IR_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR/_lib/formatLong.js"), _fa_IR_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR/_lib/formatRelative.js"), _fa_IR_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR/_lib/localize.js"), _fa_IR_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fa-IR/_lib/match.js");
            let faIR = { code: "fa-IR", formatDistance: _fa_IR_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fa_IR_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fa_IR_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fa_IR_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fa_IR_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 6, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = faIR;
        }, "./node_modules/date-fns/locale/fa-IR/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "کمتر از یک ثانیه", other: "کمتر از {{count}} ثانیه" }, xSeconds: { one: "1 ثانیه", other: "{{count}} ثانیه" }, halfAMinute: "نیم دقیقه", lessThanXMinutes: { one: "کمتر از یک دقیقه", other: "کمتر از {{count}} دقیقه" }, xMinutes: { one: "1 دقیقه", other: "{{count}} دقیقه" }, aboutXHours: { one: "حدود 1 ساعت", other: "حدود {{count}} ساعت" }, xHours: { one: "1 ساعت", other: "{{count}} ساعت" }, xDays: { one: "1 روز", other: "{{count}} روز" }, aboutXWeeks: { one: "حدود 1 هفته", other: "حدود {{count}} هفته" }, xWeeks: { one: "1 هفته", other: "{{count}} هفته" }, aboutXMonths: { one: "حدود 1 ماه", other: "حدود {{count}} ماه" }, xMonths: { one: "1 ماه", other: "{{count}} ماه" }, aboutXYears: { one: "حدود 1 سال", other: "حدود {{count}} سال" }, xYears: { one: "1 سال", other: "{{count}} سال" }, overXYears: { one: "بیشتر از 1 سال", other: "بیشتر از {{count}} سال" }, almostXYears: { one: "نزدیک 1 سال", other: "نزدیک {{count}} سال" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "در " + result;
                else
                    return result + " قبل"; return result; };
        }, "./node_modules/date-fns/locale/fa-IR/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE do MMMM y", long: "do MMMM y", medium: "d MMM y", short: "yyyy/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'در' {{time}}", long: "{{date}} 'در' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fa-IR/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'گذشته در' p", yesterday: "'دیروز در' p", today: "'امروز در' p", tomorrow: "'فردا در' p", nextWeek: "eeee 'در' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/fa-IR/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ق", "ب"], abbreviated: ["ق.م.", "ب.م."], wide: ["قبل از میلاد", "بعد از میلاد"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["س‌م1", "س‌م2", "س‌م3", "س‌م4"], wide: ["سه‌ماهه 1", "سه‌ماهه 2", "سه‌ماهه 3", "سه‌ماهه 4"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ژ", "ف", "م", "آ", "م", "ج", "ج", "آ", "س", "ا", "ن", "د"], abbreviated: ["ژانـ", "فور", "مارس", "آپر", "می", "جون", "جولـ", "آگو", "سپتـ", "اکتـ", "نوامـ", "دسامـ"], wide: ["ژانویه", "فوریه", "مارس", "آپریل", "می", "جون", "جولای", "آگوست", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ی", "د", "س", "چ", "پ", "ج", "ش"], short: ["1ش", "2ش", "3ش", "4ش", "5ش", "ج", "ش"], abbreviated: ["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"], wide: ["یکشنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنجشنبه", "جمعه", "شنبه"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ق", pm: "ب", midnight: "ن", noon: "ظ", morning: "ص", afternoon: "ب.ظ.", evening: "ع", night: "ش" }, abbreviated: { am: "ق.ظ.", pm: "ب.ظ.", midnight: "نیمه‌شب", noon: "ظهر", morning: "صبح", afternoon: "بعدازظهر", evening: "عصر", night: "شب" }, wide: { am: "قبل‌ازظهر", pm: "بعدازظهر", midnight: "نیمه‌شب", noon: "ظهر", morning: "صبح", afternoon: "بعدازظهر", evening: "عصر", night: "شب" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ق", pm: "ب", midnight: "ن", noon: "ظ", morning: "ص", afternoon: "ب.ظ.", evening: "ع", night: "ش" }, abbreviated: { am: "ق.ظ.", pm: "ب.ظ.", midnight: "نیمه‌شب", noon: "ظهر", morning: "صبح", afternoon: "بعدازظهر", evening: "عصر", night: "شب" }, wide: { am: "قبل‌ازظهر", pm: "بعدازظهر", midnight: "نیمه‌شب", noon: "ظهر", morning: "صبح", afternoon: "بعدازظهر", evening: "عصر", night: "شب" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/fa-IR/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ق|ب)/i, abbreviated: /^(ق\.?\s?م\.?|ق\.?\s?د\.?\s?م\.?|م\.?\s?|د\.?\s?م\.?)/i, wide: /^(قبل از میلاد|قبل از دوران مشترک|میلادی|دوران مشترک|بعد از میلاد)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^قبل/i, /^بعد/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^س‌م[1234]/i, wide: /^سه‌ماهه [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[جژفمآاماسند]/i, abbreviated: /^(جنو|ژانـ|ژانویه|فوریه|فور|مارس|آوریل|آپر|مه|می|ژوئن|جون|جول|جولـ|ژوئیه|اوت|آگو|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نوامـ|دسامبر|دسامـ|دسم)/i, wide: /^(ژانویه|جنوری|فبروری|فوریه|مارچ|مارس|آپریل|اپریل|ایپریل|آوریل|مه|می|ژوئن|جون|جولای|ژوئیه|آگست|اگست|آگوست|اوت|سپتمبر|سپتامبر|اکتبر|اکتوبر|نوامبر|نومبر|دسامبر|دسمبر)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^(ژ|ج)/i, /^ف/i, /^م/i, /^(آ|ا)/i, /^م/i, /^(ژ|ج)/i, /^(ج|ژ)/i, /^(آ|ا)/i, /^س/i, /^ا/i, /^ن/i, /^د/i], any: [/^ژا/i, /^ف/i, /^ما/i, /^آپ/i, /^(می|مه)/i, /^(ژوئن|جون)/i, /^(ژوئی|جول)/i, /^(اوت|آگ)/i, /^س/i, /^(اوک|اک)/i, /^ن/i, /^د/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[شیدسچپج]/i, short: /^(ش|ج|1ش|2ش|3ش|4ش|5ش)/i, abbreviated: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i, wide: /^(یکشنبه|دوشنبه|سه‌شنبه|چهارشنبه|پنج‌شنبه|جمعه|شنبه)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ی/i, /^دو/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i], any: [/^(ی|1ش|یکشنبه)/i, /^(د|2ش|دوشنبه)/i, /^(س|3ش|سه‌شنبه)/i, /^(چ|4ش|چهارشنبه)/i, /^(پ|5ش|پنجشنبه)/i, /^(ج|جمعه)/i, /^(ش|شنبه)/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ب|ق|ن|ظ|ص|ب.ظ.|ع|ش)/i, abbreviated: /^(ق.ظ.|ب.ظ.|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i, wide: /^(قبل‌ازظهر|نیمه‌شب|ظهر|صبح|بعدازظهر|عصر|شب)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^(ق|ق.ظ.|قبل‌ازظهر)/i, pm: /^(ب|ب.ظ.|بعدازظهر)/i, midnight: /^(‌نیمه‌شب|ن)/i, noon: /^(ظ|ظهر)/i, morning: /(ص|صبح)/i, afternoon: /(ب|ب.ظ.|بعدازظهر)/i, evening: /(ع|عصر)/i, night: /(ش|شب)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/fi.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, fi: () => fi });
            var _fi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fi/_lib/formatDistance.js"), _fi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fi/_lib/formatLong.js"), _fi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fi/_lib/formatRelative.js"), _fi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fi/_lib/localize.js"), _fi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fi/_lib/match.js");
            let fi = { code: "fi", formatDistance: _fi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = fi;
        }, "./node_modules/date-fns/locale/fi/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function futureSeconds(text) { return text.replace(/sekuntia?/, "sekunnin"); }
            function futureMinutes(text) { return text.replace(/minuuttia?/, "minuutin"); }
            function futureHours(text) { return text.replace(/tuntia?/, "tunnin"); }
            function futureWeeks(text) { return text.replace(/(viikko|viikkoa)/, "viikon"); }
            function futureMonths(text) { return text.replace(/(kuukausi|kuukautta)/, "kuukauden"); }
            function futureYears(text) { return text.replace(/(vuosi|vuotta)/, "vuoden"); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "alle sekunti", other: "alle {{count}} sekuntia", futureTense: futureSeconds }, xSeconds: { one: "sekunti", other: "{{count}} sekuntia", futureTense: futureSeconds }, halfAMinute: { one: "puoli minuuttia", other: "puoli minuuttia", futureTense: _text => "puolen minuutin" }, lessThanXMinutes: { one: "alle minuutti", other: "alle {{count}} minuuttia", futureTense: futureMinutes }, xMinutes: { one: "minuutti", other: "{{count}} minuuttia", futureTense: futureMinutes }, aboutXHours: { one: "noin tunti", other: "noin {{count}} tuntia", futureTense: futureHours }, xHours: { one: "tunti", other: "{{count}} tuntia", futureTense: futureHours }, xDays: { one: "päivä", other: "{{count}} päivää", futureTense: function (text) { return text.replace(/päivää?/, "päivän"); } }, aboutXWeeks: { one: "noin viikko", other: "noin {{count}} viikkoa", futureTense: futureWeeks }, xWeeks: { one: "viikko", other: "{{count}} viikkoa", futureTense: futureWeeks }, aboutXMonths: { one: "noin kuukausi", other: "noin {{count}} kuukautta", futureTense: futureMonths }, xMonths: { one: "kuukausi", other: "{{count}} kuukautta", futureTense: futureMonths }, aboutXYears: { one: "noin vuosi", other: "noin {{count}} vuotta", futureTense: futureYears }, xYears: { one: "vuosi", other: "{{count}} vuotta", futureTense: futureYears }, overXYears: { one: "yli vuosi", other: "yli {{count}} vuotta", futureTense: futureYears }, almostXYears: { one: "lähes vuosi", other: "lähes {{count}} vuotta", futureTense: futureYears } }, formatDistance = (token, count, options1) => { let tokenValue = formatDistanceLocale[token], result = 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)); if (options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return tokenValue.futureTense(result) + " kuluttua";
                else
                    return result + " sitten"; return result; };
        }, "./node_modules/date-fns/locale/fi/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "eeee d. MMMM y", long: "d. MMMM y", medium: "d. MMM y", short: "d.M.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH.mm.ss zzzz", long: "HH.mm.ss z", medium: "HH.mm.ss", short: "HH.mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'klo' {{time}}", long: "{{date}} 'klo' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fi/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'viime' eeee 'klo' p", yesterday: "'eilen klo' p", today: "'tänään klo' p", tomorrow: "'huomenna klo' p", nextWeek: "'ensi' eeee 'klo' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/fi/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let monthValues = { narrow: ["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], abbreviated: ["tammi", "helmi", "maalis", "huhti", "touko", "kesä", "heinä", "elo", "syys", "loka", "marras", "joulu"], wide: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"] }, formattingMonthValues = { narrow: monthValues.narrow, abbreviated: monthValues.abbreviated, wide: ["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kesäkuuta", "heinäkuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"] }, dayValues = { narrow: ["S", "M", "T", "K", "T", "P", "L"], short: ["su", "ma", "ti", "ke", "to", "pe", "la"], abbreviated: ["sunn.", "maan.", "tiis.", "kesk.", "torst.", "perj.", "la"], wide: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"] }, formattingDayValues = { narrow: dayValues.narrow, short: dayValues.short, abbreviated: dayValues.abbreviated, wide: ["sunnuntaina", "maanantaina", "tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"] }, localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["eaa.", "jaa."], abbreviated: ["eaa.", "jaa."], wide: ["ennen ajanlaskun alkua", "jälkeen ajanlaskun alun"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. kvartaali", "2. kvartaali", "3. kvartaali", "4. kvartaali"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: monthValues, defaultWidth: "wide", formattingValues: formattingMonthValues, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: dayValues, defaultWidth: "wide", formattingValues: formattingDayValues, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ap", pm: "ip", midnight: "keskiyö", noon: "keskipäivä", morning: "ap", afternoon: "ip", evening: "illalla", night: "yöllä" }, abbreviated: { am: "ap", pm: "ip", midnight: "keskiyö", noon: "keskipäivä", morning: "ap", afternoon: "ip", evening: "illalla", night: "yöllä" }, wide: { am: "ap", pm: "ip", midnight: "keskiyöllä", noon: "keskipäivällä", morning: "aamupäivällä", afternoon: "iltapäivällä", evening: "illalla", night: "yöllä" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/fi/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(e|j)/i, abbreviated: /^(eaa.|jaa.)/i, wide: /^(ennen ajanlaskun alkua|jälkeen ajanlaskun alun)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^e/i, /^j/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234]\.? kvartaali/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[thmkeslj]/i, abbreviated: /^(tammi|helmi|maalis|huhti|touko|kesä|heinä|elo|syys|loka|marras|joulu)/i, wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesäkuu|heinäkuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^t/i, /^h/i, /^m/i, /^h/i, /^t/i, /^k/i, /^h/i, /^e/i, /^s/i, /^l/i, /^m/i, /^j/i], any: [/^ta/i, /^hel/i, /^maa/i, /^hu/i, /^to/i, /^k/i, /^hei/i, /^e/i, /^s/i, /^l/i, /^mar/i, /^j/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtkpl]/i, short: /^(su|ma|ti|ke|to|pe|la)/i, abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i, wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i], any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ap|ip|keskiyö|keskipäivä|aamupäivällä|iltapäivällä|illalla|yöllä)/i, any: /^(ap|ip|keskiyöllä|keskipäivällä|aamupäivällä|iltapäivällä|illalla|yöllä)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ap/i, pm: /^ip/i, midnight: /^keskiyö/i, noon: /^keskipäivä/i, morning: /aamupäivällä/i, afternoon: /iltapäivällä/i, evening: /illalla/i, night: /yöllä/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/fr-CA.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, frCA: () => frCA });
            var _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatDistance.js"), _fr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatRelative.js"), _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/localize.js"), _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/match.js"), _fr_CA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fr-CA/_lib/formatLong.js");
            let frCA = { code: "fr-CA", formatDistance: _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fr_CA_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = frCA;
        }, "./node_modules/date-fns/locale/fr-CA/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "yy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'à' {{time}}", long: "{{date}} 'à' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fr-CH.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, frCH: () => frCH });
            var _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatDistance.js"), _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/localize.js"), _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/match.js"), _fr_CH_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fr-CH/_lib/formatLong.js"), _fr_CH_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fr-CH/_lib/formatRelative.js");
            let frCH = { code: "fr-CH", formatDistance: _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fr_CH_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fr_CH_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = frCH;
        }, "./node_modules/date-fns/locale/fr-CH/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'à' {{time}}", long: "{{date}} 'à' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fr-CH/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'la semaine dernière à' p", yesterday: "'hier à' p", today: "'aujourd’hui à' p", tomorrow: "'demain à' p'", nextWeek: "eeee 'la semaine prochaine à' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/fr.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, fr: () => fr });
            var _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatDistance.js"), _fr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatLong.js"), _fr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/formatRelative.js"), _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/localize.js"), _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fr/_lib/match.js");
            let fr = { code: "fr", formatDistance: _fr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = fr;
        }, "./node_modules/date-fns/locale/fr/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "moins d’une seconde", other: "moins de {{count}} secondes" }, xSeconds: { one: "1 seconde", other: "{{count}} secondes" }, halfAMinute: "30 secondes", lessThanXMinutes: { one: "moins d’une minute", other: "moins de {{count}} minutes" }, xMinutes: { one: "1 minute", other: "{{count}} minutes" }, aboutXHours: { one: "environ 1 heure", other: "environ {{count}} heures" }, xHours: { one: "1 heure", other: "{{count}} heures" }, xDays: { one: "1 jour", other: "{{count}} jours" }, aboutXWeeks: { one: "environ 1 semaine", other: "environ {{count}} semaines" }, xWeeks: { one: "1 semaine", other: "{{count}} semaines" }, aboutXMonths: { one: "environ 1 mois", other: "environ {{count}} mois" }, xMonths: { one: "1 mois", other: "{{count}} mois" }, aboutXYears: { one: "environ 1 an", other: "environ {{count}} ans" }, xYears: { one: "1 an", other: "{{count}} ans" }, overXYears: { one: "plus d’un an", other: "plus de {{count}} ans" }, almostXYears: { one: "presqu’un an", other: "presque {{count}} ans" } }, formatDistance = (token, count, options1) => { let result, form = formatDistanceLocale[token]; if (result = "string" == typeof form ? form : 1 === count ? form.one : form.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "dans " + result;
                else
                    return "il y a " + result; return result; };
        }, "./node_modules/date-fns/locale/fr/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'à' {{time}}", long: "{{date}} 'à' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fr/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'dernier à' p", yesterday: "'hier à' p", today: "'aujourd’hui à' p", tomorrow: "'demain à' p'", nextWeek: "eeee 'prochain à' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/fr/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let LONG_MONTHS_TOKENS = ["MMM", "MMMM"], localize = { preprocessor: (date, parts) => 1 !== date.getDate() && parts.some(part => part.isToken && LONG_MONTHS_TOKENS.includes(part.value)) ? parts.map(part => part.isToken && "do" === part.value ? { isToken: !0, value: "d" } : part) : parts, ordinalNumber: (dirtyNumber, options1) => { let suffix, number = Number(dirtyNumber), unit = options1?.unit; return 0 === number ? "0" : (suffix = 1 === number ? unit && ["year", "week", "hour", "minute", "second"].includes(unit) ? "ère" : "er" : "ème", number + suffix); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["av. J.-C", "ap. J.-C"], abbreviated: ["av. J.-C", "ap. J.-C"], wide: ["avant Jésus-Christ", "après Jésus-Christ"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["T1", "T2", "T3", "T4"], abbreviated: ["1er trim.", "2ème trim.", "3ème trim.", "4ème trim."], wide: ["1er trimestre", "2ème trimestre", "3ème trimestre", "4ème trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."], wide: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "L", "M", "M", "J", "V", "S"], short: ["di", "lu", "ma", "me", "je", "ve", "sa"], abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], wide: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "minuit", noon: "midi", morning: "mat.", afternoon: "ap.m.", evening: "soir", night: "mat." }, abbreviated: { am: "AM", pm: "PM", midnight: "minuit", noon: "midi", morning: "matin", afternoon: "après-midi", evening: "soir", night: "matin" }, wide: { am: "AM", pm: "PM", midnight: "minuit", noon: "midi", morning: "du matin", afternoon: "de l’après-midi", evening: "du soir", night: "du matin" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/fr/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ième|ère|ème|er|e)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i, abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i, wide: /^(avant Jésus-Christ|après Jésus-Christ)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^av/i, /^ap/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^T?[1234]/i, abbreviated: /^[1234](er|ème|e)? trim\.?/i, wide: /^[1234](er|ème|e)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\.?/i, wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^av/i, /^ma/i, /^juin/i, /^juil/i, /^ao/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[lmjvsd]/i, short: /^(di|lu|ma|me|je|ve|sa)/i, abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i, wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i], any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i, any: /^([ap]\.?\s?m\.?|du matin|de l'après[-\s]midi|du soir|de la nuit)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^min/i, noon: /^mid/i, morning: /mat/i, afternoon: /ap/i, evening: /soir/i, night: /nuit/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/fy.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, fy: () => fy });
            var _fy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/fy/_lib/formatDistance.js"), _fy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/fy/_lib/formatLong.js"), _fy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/fy/_lib/formatRelative.js"), _fy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/fy/_lib/localize.js"), _fy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/fy/_lib/match.js");
            let fy = { code: "fy", formatDistance: _fy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _fy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _fy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _fy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _fy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = fy;
        }, "./node_modules/date-fns/locale/fy/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "minder as 1 sekonde", other: "minder as {{count}} sekonden" }, xSeconds: { one: "1 sekonde", other: "{{count}} sekonden" }, halfAMinute: "oardel minút", lessThanXMinutes: { one: "minder as 1 minút", other: "minder as {{count}} minuten" }, xMinutes: { one: "1 minút", other: "{{count}} minuten" }, aboutXHours: { one: "sawat 1 oere", other: "sawat {{count}} oere" }, xHours: { one: "1 oere", other: "{{count}} oere" }, xDays: { one: "1 dei", other: "{{count}} dagen" }, aboutXWeeks: { one: "sawat 1 wike", other: "sawat {{count}} wiken" }, xWeeks: { one: "1 wike", other: "{{count}} wiken" }, aboutXMonths: { one: "sawat 1 moanne", other: "sawat {{count}} moannen" }, xMonths: { one: "1 moanne", other: "{{count}} moannen" }, aboutXYears: { one: "sawat 1 jier", other: "sawat {{count}} jier" }, xYears: { one: "1 jier", other: "{{count}} jier" }, overXYears: { one: "mear as 1 jier", other: "mear as {{count}}s jier" }, almostXYears: { one: "hast 1 jier", other: "hast {{count}} jier" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "oer " + result;
                else
                    return result + " lyn"; return result; };
        }, "./node_modules/date-fns/locale/fy/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd-MM-y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'om' {{time}}", long: "{{date}} 'om' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/fy/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ôfrûne' eeee 'om' p", yesterday: "'juster om' p", today: "'hjoed om' p", tomorrow: "'moarn om' p", nextWeek: "eeee 'om' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/fy/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "e", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["f.K.", "n.K."], abbreviated: ["f.Kr.", "n.Kr."], wide: ["foar Kristus", "nei Kristus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1e fearnsjier", "2e fearnsjier", "3e fearnsjier", "4e fearnsjier"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mai.", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], wide: ["jannewaris", "febrewaris", "maart", "april", "maaie", "juny", "july", "augustus", "septimber", "oktober", "novimber", "desimber"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["s", "m", "t", "w", "t", "f", "s"], short: ["si", "mo", "ti", "wo", "to", "fr", "so"], abbreviated: ["snein", "moa", "tii", "woa", "ton", "fre", "sneon"], wide: ["snein", "moandei", "tiisdei", "woansdei", "tongersdei", "freed", "sneon"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "middernacht", noon: "middei", morning: "moarns", afternoon: "middeis", evening: "jûns", night: "nachts" }, abbreviated: { am: "AM", pm: "PM", midnight: "middernacht", noon: "middei", morning: "moarns", afternoon: "middeis", evening: "jûns", night: "nachts" }, wide: { am: "AM", pm: "PM", midnight: "middernacht", noon: "middei", morning: "moarns", afternoon: "middeis", evening: "jûns", night: "nachts" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/fy/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)e?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([fn]\.? ?K\.?)/, abbreviated: /^([fn]\. ?Kr\.?)/, wide: /^((foar|nei) Kristus)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^f/, /^n/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K[1234]/i, wide: /^[1234]e fearnsjier/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i, wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^des/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtwf]/i, short: /^(si|mo|ti|wo|to|fr|so)/i, abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i, wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^sn/i, /^mo/i, /^ti/i, /^wo/i, /^to/i, /^fr/i, /^sn/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|middernacht|middeis|moarns|middei|jûns|nachts)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^am/i, pm: /^pm/i, midnight: /^middernacht/i, noon: /^middei/i, morning: /moarns/i, afternoon: /^middeis/i, evening: /jûns/i, night: /nachts/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/gd.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, gd: () => gd });
            var _gd_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/gd/_lib/formatDistance.js"), _gd_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/gd/_lib/formatLong.js"), _gd_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/gd/_lib/formatRelative.js"), _gd_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/gd/_lib/localize.js"), _gd_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/gd/_lib/match.js");
            let gd = { code: "gd", formatDistance: _gd_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _gd_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _gd_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _gd_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _gd_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = gd;
        }, "./node_modules/date-fns/locale/gd/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "nas lugha na diog", other: "nas lugha na {{count}} diogan" }, xSeconds: { one: "1 diog", two: "2 dhiog", twenty: "20 diog", other: "{{count}} diogan" }, halfAMinute: "leth mhionaid", lessThanXMinutes: { one: "nas lugha na mionaid", other: "nas lugha na {{count}} mionaidean" }, xMinutes: { one: "1 mionaid", two: "2 mhionaid", twenty: "20 mionaid", other: "{{count}} mionaidean" }, aboutXHours: { one: "mu uair de thìde", other: "mu {{count}} uairean de thìde" }, xHours: { one: "1 uair de thìde", two: "2 uair de thìde", twenty: "20 uair de thìde", other: "{{count}} uairean de thìde" }, xDays: { one: "1 là", other: "{{count}} là" }, aboutXWeeks: { one: "mu 1 seachdain", other: "mu {{count}} seachdainean" }, xWeeks: { one: "1 seachdain", other: "{{count}} seachdainean" }, aboutXMonths: { one: "mu mhìos", other: "mu {{count}} mìosan" }, xMonths: { one: "1 mìos", other: "{{count}} mìosan" }, aboutXYears: { one: "mu bhliadhna", other: "mu {{count}} bliadhnaichean" }, xYears: { one: "1 bhliadhna", other: "{{count}} bliadhna" }, overXYears: { one: "còrr is bliadhna", other: "còrr is {{count}} bliadhnaichean" }, almostXYears: { one: "cha mhòr bliadhna", other: "cha mhòr {{count}} bliadhnaichean" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count && tokenValue.two ? tokenValue.two : 20 === count && tokenValue.twenty ? tokenValue.twenty : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "ann an " + result;
                else
                    return "o chionn " + result; return result; };
        }, "./node_modules/date-fns/locale/gd/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'aig' {{time}}", long: "{{date}} 'aig' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/gd/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'mu dheireadh' eeee 'aig' p", yesterday: "'an-dè aig' p", today: "'an-diugh aig' p", tomorrow: "'a-màireach aig' p", nextWeek: "eeee 'aig' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/gd/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1: return number + "d";
                        case 2: return number + "na";
                    } return 12 === rem100 ? number + "na" : number + "mh"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["R", "A"], abbreviated: ["RC", "AD"], wide: ["ro Chrìosta", "anno domini"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["C1", "C2", "C3", "C4"], wide: ["a' chiad chairteal", "an dàrna cairteal", "an treas cairteal", "an ceathramh cairteal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["F", "G", "M", "G", "C", "Ò", "I", "L", "S", "D", "S", "D"], abbreviated: ["Faoi", "Gear", "Màrt", "Gibl", "Cèit", "Ògmh", "Iuch", "Lùn", "Sult", "Dàmh", "Samh", "Dùbh"], wide: ["Am Faoilleach", "An Gearran", "Am Màrt", "An Giblean", "An Cèitean", "An t-Ògmhios", "An t-Iuchar", "An Lùnastal", "An t-Sultain", "An Dàmhair", "An t-Samhain", "An Dùbhlachd"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "L", "M", "C", "A", "H", "S"], short: ["Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa"], abbreviated: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"], wide: ["Didòmhnaich", "Diluain", "Dimàirt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "m", pm: "f", midnight: "m.o.", noon: "m.l.", morning: "madainn", afternoon: "feasgar", evening: "feasgar", night: "oidhche" }, abbreviated: { am: "M.", pm: "F.", midnight: "meadhan oidhche", noon: "meadhan là", morning: "madainn", afternoon: "feasgar", evening: "feasgar", night: "oidhche" }, wide: { am: "m.", pm: "f.", midnight: "meadhan oidhche", noon: "meadhan là", morning: "madainn", afternoon: "feasgar", evening: "feasgar", night: "oidhche" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "m", pm: "f", midnight: "m.o.", noon: "m.l.", morning: "sa mhadainn", afternoon: "feasgar", evening: "feasgar", night: "air an oidhche" }, abbreviated: { am: "M.", pm: "F.", midnight: "meadhan oidhche", noon: "meadhan là", morning: "sa mhadainn", afternoon: "feasgar", evening: "feasgar", night: "air an oidhche" }, wide: { am: "m.", pm: "f.", midnight: "meadhan oidhche", noon: "meadhan là", morning: "sa mhadainn", afternoon: "feasgar", evening: "feasgar", night: "air an oidhche" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/gd/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(d|na|tr|mh)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(r|a)/i, abbreviated: /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i, wide: /^(ro Chrìosta|ron aois choitchinn|anno domini|aois choitcheann)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^c[1234]/i, wide: /^[1234](cd|na|tr|mh)? cairteal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[fgmcòilsd]/i, abbreviated: /^(faoi|gear|màrt|gibl|cèit|ògmh|iuch|lùn|sult|dàmh|samh|dùbh)/i, wide: /^(am faoilleach|an gearran|am màrt|an giblean|an cèitean|an t-Ògmhios|an t-Iuchar|an lùnastal|an t-Sultain|an dàmhair|an t-Samhain|an dùbhlachd)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^f/i, /^g/i, /^m/i, /^g/i, /^c/i, /^ò/i, /^i/i, /^l/i, /^s/i, /^d/i, /^s/i, /^d/i], any: [/^fa/i, /^ge/i, /^mà/i, /^gi/i, /^c/i, /^ò/i, /^i/i, /^l/i, /^su/i, /^d/i, /^sa/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmcahs]/i, short: /^(dò|lu|mà|ci|ar|ha|sa)/i, abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i, wide: /^(didòmhnaich|diluain|dimàirt|diciadain|diardaoin|dihaoine|disathairne)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i], any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i, any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan là|(san|aig) (madainn|feasgar|feasgar|oidhche))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^m/i, pm: /^f/i, midnight: /^meadhan oidhche/i, noon: /^meadhan là/i, morning: /sa mhadainn/i, afternoon: /feasgar/i, evening: /feasgar/i, night: /air an oidhche/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/gl.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, gl: () => gl });
            var _gl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/gl/_lib/formatDistance.js"), _gl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/gl/_lib/formatLong.js"), _gl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/gl/_lib/formatRelative.js"), _gl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/gl/_lib/localize.js"), _gl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/gl/_lib/match.js");
            let gl = { code: "gl", formatDistance: _gl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _gl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _gl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _gl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _gl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = gl;
        }, "./node_modules/date-fns/locale/gl/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "menos dun segundo", other: "menos de {{count}} segundos" }, xSeconds: { one: "1 segundo", other: "{{count}} segundos" }, halfAMinute: "medio minuto", lessThanXMinutes: { one: "menos dun minuto", other: "menos de {{count}} minutos" }, xMinutes: { one: "1 minuto", other: "{{count}} minutos" }, aboutXHours: { one: "arredor dunha hora", other: "arredor de {{count}} horas" }, xHours: { one: "1 hora", other: "{{count}} horas" }, xDays: { one: "1 día", other: "{{count}} días" }, aboutXWeeks: { one: "arredor dunha semana", other: "arredor de {{count}} semanas" }, xWeeks: { one: "1 semana", other: "{{count}} semanas" }, aboutXMonths: { one: "arredor de 1 mes", other: "arredor de {{count}} meses" }, xMonths: { one: "1 mes", other: "{{count}} meses" }, aboutXYears: { one: "arredor dun ano", other: "arredor de {{count}} anos" }, xYears: { one: "1 ano", other: "{{count}} anos" }, overXYears: { one: "máis dun ano", other: "máis de {{count}} anos" }, almostXYears: { one: "case un ano", other: "case {{count}} anos" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "en " + result;
                else
                    return "hai " + result; return result; };
        }, "./node_modules/date-fns/locale/gl/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d 'de' MMMM y", long: "d 'de' MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'ás' {{time}}", long: "{{date}} 'ás' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/gl/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'o' eeee 'pasado á' LT", yesterday: "'onte á' p", today: "'hoxe á' p", tomorrow: "'mañá á' p", nextWeek: "eeee 'á' p", other: "P" }, formatRelativeLocalePlural = { lastWeek: "'o' eeee 'pasado ás' p", yesterday: "'onte ás' p", today: "'hoxe ás' p", tomorrow: "'mañá ás' p", nextWeek: "eeee 'ás' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => 1 !== date.getHours() ? formatRelativeLocalePlural[token] : formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/gl/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "º", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["AC", "DC"], abbreviated: ["AC", "DC"], wide: ["antes de cristo", "despois de cristo"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["xan", "feb", "mar", "abr", "mai", "xun", "xul", "ago", "set", "out", "nov", "dec"], wide: ["xaneiro", "febreiro", "marzo", "abril", "maio", "xuño", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["d", "l", "m", "m", "j", "v", "s"], short: ["do", "lu", "ma", "me", "xo", "ve", "sa"], abbreviated: ["dom", "lun", "mar", "mer", "xov", "ven", "sab"], wide: ["domingo", "luns", "martes", "mércores", "xoves", "venres", "sábado"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "mañá", afternoon: "tarde", evening: "tarde", night: "noite" }, abbreviated: { am: "AM", pm: "PM", midnight: "medianoite", noon: "mediodía", morning: "mañá", afternoon: "tarde", evening: "tardiña", night: "noite" }, wide: { am: "a.m.", pm: "p.m.", midnight: "medianoite", noon: "mediodía", morning: "mañá", afternoon: "tarde", evening: "tardiña", night: "noite" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "da mañá", afternoon: "da tarde", evening: "da tardiña", night: "da noite" }, abbreviated: { am: "AM", pm: "PM", midnight: "medianoite", noon: "mediodía", morning: "da mañá", afternoon: "da tarde", evening: "da tardiña", night: "da noite" }, wide: { am: "a.m.", pm: "p.m.", midnight: "medianoite", noon: "mediodía", morning: "da mañá", afternoon: "da tarde", evening: "da tardiña", night: "da noite" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/gl/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(º)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ac|dc|a|d)/i, abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i, wide: /^(antes de cristo|antes da era com[uú]n|despois de cristo|era com[uú]n)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ac/i, /^dc/i], wide: [/^(antes de cristo|antes da era com[uú]n)/i, /^(despois de cristo|era com[uú]n)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^[1234](º)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[xfmasond]/i, abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i, wide: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^x/i, /^f/i, /^m/i, /^a/i, /^m/i, /^x/i, /^x/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xun/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmxvs]/i, short: /^(do|lu|ma|me|xo|ve|sa)/i, abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i, wide: /^(domingo|luns|martes|m[eé]rcores|xoves|venres|s[áa]bado)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i], any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mn|md|(da|[aá]s) (mañ[aá]|tarde|noite))/i, any: /^([ap]\.?\s?m\.?|medianoite|mediod[ií]a|(da|[aá]s) (mañ[aá]|tarde|noite))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mn/i, noon: /^md/i, morning: /mañ[aá]/i, afternoon: /tarde/i, evening: /tardiña/i, night: /noite/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/gu.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, gu: () => gu });
            var _gu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/gu/_lib/formatDistance.js"), _gu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/gu/_lib/formatLong.js"), _gu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/gu/_lib/formatRelative.js"), _gu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/gu/_lib/localize.js"), _gu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/gu/_lib/match.js");
            let gu = { code: "gu", formatDistance: _gu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _gu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _gu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _gu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _gu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = gu;
        }, "./node_modules/date-fns/locale/gu/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "હમણાં", other: "​આશરે {{count}} સેકંડ" }, xSeconds: { one: "1 સેકંડ", other: "{{count}} સેકંડ" }, halfAMinute: "અડધી મિનિટ", lessThanXMinutes: { one: "આ મિનિટ", other: "​આશરે {{count}} મિનિટ" }, xMinutes: { one: "1 મિનિટ", other: "{{count}} મિનિટ" }, aboutXHours: { one: "​આશરે 1 કલાક", other: "​આશરે {{count}} કલાક" }, xHours: { one: "1 કલાક", other: "{{count}} કલાક" }, xDays: { one: "1 દિવસ", other: "{{count}} દિવસ" }, aboutXWeeks: { one: "આશરે 1 અઠવાડિયું", other: "આશરે {{count}} અઠવાડિયા" }, xWeeks: { one: "1 અઠવાડિયું", other: "{{count}} અઠવાડિયા" }, aboutXMonths: { one: "આશરે 1 મહિનો", other: "આશરે {{count}} મહિના" }, xMonths: { one: "1 મહિનો", other: "{{count}} મહિના" }, aboutXYears: { one: "આશરે 1 વર્ષ", other: "આશરે {{count}} વર્ષ" }, xYears: { one: "1 વર્ષ", other: "{{count}} વર્ષ" }, overXYears: { one: "1 વર્ષથી વધુ", other: "{{count}} વર્ષથી વધુ" }, almostXYears: { one: "લગભગ 1 વર્ષ", other: "લગભગ {{count}} વર્ષ" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "માં";
                else
                    return result + " પહેલાં"; return result; };
        }, "./node_modules/date-fns/locale/gu/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM, y", long: "d MMMM, y", medium: "d MMM, y", short: "d/M/yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "hh:mm:ss a zzzz", long: "hh:mm:ss a z", medium: "hh:mm:ss a", short: "hh:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/gu/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'પાછલા' eeee p", yesterday: "'ગઈકાલે' p", today: "'આજે' p", tomorrow: "'આવતીકાલે' p", nextWeek: "eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/gu/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ઈસપૂ", "ઈસ"], abbreviated: ["ઈ.સ.પૂર્વે", "ઈ.સ."], wide: ["ઈસવીસન પૂર્વે", "ઈસવીસન"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1લો ત્રિમાસ", "2જો ત્રિમાસ", "3જો ત્રિમાસ", "4થો ત્રિમાસ"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["જા", "ફે", "મા", "એ", "મે", "જૂ", "જુ", "ઓ", "સ", "ઓ", "ન", "ડિ"], abbreviated: ["જાન્યુ", "ફેબ્રુ", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઈ", "ઑગસ્ટ", "સપ્ટે", "ઓક્ટો", "નવે", "ડિસે"], wide: ["જાન્યુઆરી", "ફેબ્રુઆરી", "માર્ચ", "એપ્રિલ", "મે", "જૂન", "જુલાઇ", "ઓગસ્ટ", "સપ્ટેમ્બર", "ઓક્ટોબર", "નવેમ્બર", "ડિસેમ્બર"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"], short: ["ર", "સો", "મં", "બુ", "ગુ", "શુ", "શ"], abbreviated: ["રવિ", "સોમ", "મંગળ", "બુધ", "ગુરુ", "શુક્ર", "શનિ"], wide: ["રવિવાર", "સોમવાર", "મંગળવાર", "બુધવાર", "ગુરુવાર", "શુક્રવાર", "શનિવાર"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "મ.રાત્રિ", noon: "બ.", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" }, abbreviated: { am: "AM", pm: "PM", midnight: "​મધ્યરાત્રિ", noon: "બપોરે", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" }, wide: { am: "AM", pm: "PM", midnight: "​મધ્યરાત્રિ", noon: "બપોરે", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "મ.રાત્રિ", noon: "બપોરે", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" }, abbreviated: { am: "AM", pm: "PM", midnight: "મધ્યરાત્રિ", noon: "બપોરે", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" }, wide: { am: "AM", pm: "PM", midnight: "​મધ્યરાત્રિ", noon: "બપોરે", morning: "સવારે", afternoon: "બપોરે", evening: "સાંજે", night: "રાત્રે" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/gu/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(લ|જ|થ|ઠ્ઠ|મ)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ઈસપૂ|ઈસ)/i, abbreviated: /^(ઈ\.સ\.પૂર્વે|ઈ\.સ\.)/i, wide: /^(ઈસવીસન\sપૂર્વે|ઈસવીસન)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ઈસપૂ/i, /^ઈસ/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](લો|જો|થો)? ત્રિમાસ/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[જાફેમાએમેજૂજુઓસઓનડિ]/i, abbreviated: /^(જાન્યુ|ફેબ્રુ|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટે|ઓક્ટો|નવે|ડિસે)/i, wide: /^(જાન્યુઆરી|ફેબ્રુઆરી|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઇ|ઓગસ્ટ|સપ્ટેમ્બર|ઓક્ટોબર|નવેમ્બર|ડિસેમ્બર)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^જા/i, /^ફે/i, /^મા/i, /^એ/i, /^મે/i, /^જૂ/i, /^જુ/i, /^ઑગ/i, /^સ/i, /^ઓક્ટો/i, /^ન/i, /^ડિ/i], any: [/^જા/i, /^ફે/i, /^મા/i, /^એ/i, /^મે/i, /^જૂ/i, /^જુ/i, /^ઑગ/i, /^સ/i, /^ઓક્ટો/i, /^ન/i, /^ડિ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i, short: /^(ર|સો|મં|બુ|ગુ|શુ|શ)/i, abbreviated: /^(રવિ|સોમ|મંગળ|બુધ|ગુરુ|શુક્ર|શનિ)/i, wide: /^(રવિવાર|સોમવાર|મંગળવાર|બુધવાર|ગુરુવાર|શુક્રવાર|શનિવાર)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i], any: [/^ર/i, /^સો/i, /^મં/i, /^બુ/i, /^ગુ/i, /^શુ/i, /^શ/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|મ\.?|સ|બ|સાં|રા)/i, any: /^(a|p|મ\.?|સ|બ|સાં|રા)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^મ\.?/i, noon: /^બ/i, morning: /સ/i, afternoon: /બ/i, evening: /સાં/i, night: /રા/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/he.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, he: () => he });
            var _he_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/he/_lib/formatDistance.js"), _he_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/he/_lib/formatLong.js"), _he_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/he/_lib/formatRelative.js"), _he_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/he/_lib/localize.js"), _he_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/he/_lib/match.js");
            let he = { code: "he", formatDistance: _he_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _he_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _he_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _he_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _he_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = he;
        }, "./node_modules/date-fns/locale/he/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "פחות משנייה", two: "פחות משתי שניות", other: "פחות מ־{{count}} שניות" }, xSeconds: { one: "שנייה", two: "שתי שניות", other: "{{count}} שניות" }, halfAMinute: "חצי דקה", lessThanXMinutes: { one: "פחות מדקה", two: "פחות משתי דקות", other: "פחות מ־{{count}} דקות" }, xMinutes: { one: "דקה", two: "שתי דקות", other: "{{count}} דקות" }, aboutXHours: { one: "כשעה", two: "כשעתיים", other: "כ־{{count}} שעות" }, xHours: { one: "שעה", two: "שעתיים", other: "{{count}} שעות" }, xDays: { one: "יום", two: "יומיים", other: "{{count}} ימים" }, aboutXWeeks: { one: "כשבוע", two: "כשבועיים", other: "כ־{{count}} שבועות" }, xWeeks: { one: "שבוע", two: "שבועיים", other: "{{count}} שבועות" }, aboutXMonths: { one: "כחודש", two: "כחודשיים", other: "כ־{{count}} חודשים" }, xMonths: { one: "חודש", two: "חודשיים", other: "{{count}} חודשים" }, aboutXYears: { one: "כשנה", two: "כשנתיים", other: "כ־{{count}} שנים" }, xYears: { one: "שנה", two: "שנתיים", other: "{{count}} שנים" }, overXYears: { one: "יותר משנה", two: "יותר משנתיים", other: "יותר מ־{{count}} שנים" }, almostXYears: { one: "כמעט שנה", two: "כמעט שנתיים", other: "כמעט {{count}} שנים" } }, formatDistance = (token, count, options1) => { let result; if ("xDays" === token && options1?.addSuffix && count <= 2)
                return options1.comparison && options1.comparison > 0 ? 1 === count ? "מחר" : "מחרתיים" : 1 === count ? "אתמול" : "שלשום"; let tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count ? tokenValue.two : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "בעוד " + result;
                else
                    return "לפני " + result; return result; };
        }, "./node_modules/date-fns/locale/he/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d בMMMM y", long: "d בMMMM y", medium: "d בMMM y", short: "d.M.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'בשעה' {{time}}", long: "{{date}} 'בשעה' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/he/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'שעבר בשעה' p", yesterday: "'אתמול בשעה' p", today: "'היום בשעה' p", tomorrow: "'מחר בשעה' p", nextWeek: "eeee 'בשעה' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/he/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); if (number <= 0 || number > 10)
                    return String(number); let isFemale = ["year", "hour", "minute", "second"].indexOf(String(options1?.unit)) >= 0, index = number - 1; return isFemale ? ["ראשונה", "שנייה", "שלישית", "רביעית", "חמישית", "שישית", "שביעית", "שמינית", "תשיעית", "עשירית"][index] : ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שביעי", "שמיני", "תשיעי", "עשירי"][index]; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["לפנה״ס", "לספירה"], abbreviated: ["לפנה״ס", "לספירה"], wide: ["לפני הספירה", "לספירה"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["רבעון 1", "רבעון 2", "רבעון 3", "רבעון 4"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], abbreviated: ["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"], wide: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], short: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"], abbreviated: ["יום א׳", "יום ב׳", "יום ג׳", "יום ד׳", "יום ה׳", "יום ו׳", "שבת"], wide: ["יום ראשון", "יום שני", "יום שלישי", "יום רביעי", "יום חמישי", "יום שישי", "יום שבת"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בוקר", afternoon: "אחר הצהריים", evening: "ערב", night: "לילה" }, abbreviated: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בוקר", afternoon: "אחר הצהריים", evening: "ערב", night: "לילה" }, wide: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בוקר", afternoon: "אחר הצהריים", evening: "ערב", night: "לילה" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בבוקר", afternoon: "בצהריים", evening: "בערב", night: "בלילה" }, abbreviated: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בבוקר", afternoon: "אחר הצהריים", evening: "בערב", night: "בלילה" }, wide: { am: "לפנה״צ", pm: "אחה״צ", midnight: "חצות", noon: "צהריים", morning: "בבוקר", afternoon: "אחר הצהריים", evening: "בערב", night: "בלילה" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/he/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js"), _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js");
            let ordinalName = ["רא", "שנ", "של", "רב", "ח", "שי", "שב", "שמ", "ת", "ע"], match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^(\d+|(ראשון|שני|שלישי|רביעי|חמישי|שישי|שביעי|שמיני|תשיעי|עשירי|ראשונה|שנייה|שלישית|רביעית|חמישית|שישית|שביעית|שמינית|תשיעית|עשירית))/i, parsePattern: /^(\d+|רא|שנ|של|רב|ח|שי|שב|שמ|ת|ע)/i, valueCallback: value => { let number = parseInt(value, 10); return isNaN(number) ? ordinalName.indexOf(value) + 1 : number; } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^ל(ספירה|פנה״ס)/i, abbreviated: /^ל(ספירה|פנה״ס)/i, wide: /^ל(פני ה)?ספירה/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^לפ/i, /^לס/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^רבעון [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^\d+/i, abbreviated: /^(ינו|פבר|מרץ|אפר|מאי|יוני|יולי|אוג|ספט|אוק|נוב|דצמ)׳?/i, wide: /^(ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^1$/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i], any: [/^ינ/i, /^פ/i, /^מר/i, /^אפ/i, /^מא/i, /^יונ/i, /^יול/i, /^אוג/i, /^ס/i, /^אוק/i, /^נ/i, /^ד/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[אבגדהוש]׳/i, short: /^[אבגדהוש]׳/i, abbreviated: /^(שבת|יום (א|ב|ג|ד|ה|ו)׳)/i, wide: /^יום (ראשון|שני|שלישי|רביעי|חמישי|שישי|שבת)/i }, defaultMatchWidth: "wide", parsePatterns: { abbreviated: [/א׳$/i, /ב׳$/i, /ג׳$/i, /ד׳$/i, /ה׳$/i, /ו׳$/i, /^ש/i], wide: [/ן$/i, /ני$/i, /לישי$/i, /עי$/i, /מישי$/i, /שישי$/i, /ת$/i], any: [/^א/i, /^ב/i, /^ג/i, /^ד/i, /^ה/i, /^ו/i, /^ש/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(אחר ה|ב)?(חצות|צהריים|בוקר|ערב|לילה|אחה״צ|לפנה״צ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^לפ/i, pm: /^אחה/i, midnight: /^ח/i, noon: /^צ/i, morning: /בוקר/i, afternoon: /בצ|אחר/i, evening: /ערב/i, night: /לילה/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/hi.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, hi: () => hi });
            var _hi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/formatDistance.js"), _hi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/formatLong.js"), _hi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/formatRelative.js"), _hi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/localize.js"), _hi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/match.js");
            let hi = { code: "hi", formatDistance: _hi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _hi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _hi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _hi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _hi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = hi;
        }, "./node_modules/date-fns/locale/hi/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            var _localize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/localize.js");
            let formatDistanceLocale = { lessThanXSeconds: { one: "१ सेकंड से कम", other: "{{count}} सेकंड से कम" }, xSeconds: { one: "१ सेकंड", other: "{{count}} सेकंड" }, halfAMinute: "आधा मिनट", lessThanXMinutes: { one: "१ मिनट से कम", other: "{{count}} मिनट से कम" }, xMinutes: { one: "१ मिनट", other: "{{count}} मिनट" }, aboutXHours: { one: "लगभग १ घंटा", other: "लगभग {{count}} घंटे" }, xHours: { one: "१ घंटा", other: "{{count}} घंटे" }, xDays: { one: "१ दिन", other: "{{count}} दिन" }, aboutXWeeks: { one: "लगभग १ सप्ताह", other: "लगभग {{count}} सप्ताह" }, xWeeks: { one: "१ सप्ताह", other: "{{count}} सप्ताह" }, aboutXMonths: { one: "लगभग १ महीना", other: "लगभग {{count}} महीने" }, xMonths: { one: "१ महीना", other: "{{count}} महीने" }, aboutXYears: { one: "लगभग १ वर्ष", other: "लगभग {{count}} वर्ष" }, xYears: { one: "१ वर्ष", other: "{{count}} वर्ष" }, overXYears: { one: "१ वर्ष से अधिक", other: "{{count}} वर्ष से अधिक" }, almostXYears: { one: "लगभग १ वर्ष", other: "लगभग {{count}} वर्ष" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", (0, _localize_js__WEBPACK_IMPORTED_MODULE_0__.numberToLocale)(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "मे ";
                else
                    return result + " पहले"; return result; };
        }, "./node_modules/date-fns/locale/hi/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM, y", long: "do MMMM, y", medium: "d MMM, y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'को' {{time}}", long: "{{date}} 'को' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/hi/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'पिछले' eeee p", yesterday: "'कल' p", today: "'आज' p", tomorrow: "'कल' p", nextWeek: "eeee 'को' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/hi/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localeToNumber: () => localeToNumber, localize: () => localize, numberToLocale: () => numberToLocale });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let numberValues = { locale: { 1: "१", 2: "२", 3: "३", 4: "४", 5: "५", 6: "६", 7: "७", 8: "८", 9: "९", 0: "०" }, number: { "१": "1", "२": "2", "३": "3", "४": "4", "५": "5", "६": "6", "७": "7", "८": "8", "९": "9", "०": "0" } };
            function localeToNumber(locale) { return Number(locale.toString().replace(/[१२३४५६७८९०]/g, function (match) { return numberValues.number[match]; })); }
            function numberToLocale(enNumber) { return enNumber.toString().replace(/\d/g, function (match) { return numberValues.locale[match]; }); }
            let localize = { ordinalNumber: (dirtyNumber, _options) => numberToLocale(Number(dirtyNumber)), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ईसा-पूर्व", "ईस्वी"], abbreviated: ["ईसा-पूर्व", "ईस्वी"], wide: ["ईसा-पूर्व", "ईसवी सन"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ति1", "ति2", "ति3", "ति4"], wide: ["पहली तिमाही", "दूसरी तिमाही", "तीसरी तिमाही", "चौथी तिमाही"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ज", "फ़", "मा", "अ", "मई", "जू", "जु", "अग", "सि", "अक्टू", "न", "दि"], abbreviated: ["जन", "फ़र", "मार्च", "अप्रैल", "मई", "जून", "जुल", "अग", "सित", "अक्टू", "नव", "दिस"], wide: ["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितंबर", "अक्टूबर", "नवंबर", "दिसंबर"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["र", "सो", "मं", "बु", "गु", "शु", "श"], short: ["र", "सो", "मं", "बु", "गु", "शु", "श"], abbreviated: ["रवि", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"], wide: ["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" }, abbreviated: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" }, wide: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" }, abbreviated: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" }, wide: { am: "पूर्वाह्न", pm: "अपराह्न", midnight: "मध्यरात्रि", noon: "दोपहर", morning: "सुबह", afternoon: "दोपहर", evening: "शाम", night: "रात" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/hi/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js"), _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _localize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/hi/_lib/localize.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^[०१२३४५६७८९]+/i, parsePattern: /^[०१२३४५६७८९]+/i, valueCallback: _localize_js__WEBPACK_IMPORTED_MODULE_1__.localeToNumber }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__.buildMatchFn)({ matchPatterns: { narrow: /^(ईसा-पूर्व|ईस्वी)/i, abbreviated: /^(ईसा\.?\s?पूर्व\.?|ईसा\.?)/i, wide: /^(ईसा-पूर्व|ईसवी पूर्व|ईसवी सन|ईसवी)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ति[1234]/i, wide: /^[1234](पहली|दूसरी|तीसरी|चौथी)? तिमाही/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__.buildMatchFn)({ matchPatterns: { narrow: /^[जफ़माअप्मईजूनजुअगसिअक्तनदि]/i, abbreviated: /^(जन|फ़र|मार्च|अप्|मई|जून|जुल|अग|सित|अक्तू|नव|दिस)/i, wide: /^(जनवरी|फ़रवरी|मार्च|अप्रैल|मई|जून|जुलाई|अगस्त|सितंबर|अक्तूबर|नवंबर|दिसंबर)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ज/i, /^फ़/i, /^मा/i, /^अप्/i, /^मई/i, /^जू/i, /^जु/i, /^अग/i, /^सि/i, /^अक्तू/i, /^न/i, /^दि/i], any: [/^जन/i, /^फ़/i, /^मा/i, /^अप्/i, /^मई/i, /^जू/i, /^जु/i, /^अग/i, /^सि/i, /^अक्तू/i, /^नव/i, /^दिस/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__.buildMatchFn)({ matchPatterns: { narrow: /^[रविसोममंगलबुधगुरुशुक्रशनि]/i, short: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i, abbreviated: /^(रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि)/i, wide: /^(रविवार|सोमवार|मंगलवार|बुधवार|गुरुवार|शुक्रवार|शनिवार)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i], any: [/^रवि/i, /^सोम/i, /^मंगल/i, /^बुध/i, /^गुरु/i, /^शुक्र/i, /^शनि/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_2__.buildMatchFn)({ matchPatterns: { narrow: /^(पू|अ|म|द.\?|सु|दो|शा|रा)/i, any: /^(पूर्वाह्न|अपराह्न|म|द.\?|सु|दो|शा|रा)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^पूर्वाह्न/i, pm: /^अपराह्न/i, midnight: /^मध्य/i, noon: /^दो/i, morning: /सु/i, afternoon: /दो/i, evening: /शा/i, night: /रा/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/hr.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, hr: () => hr });
            var _hr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/hr/_lib/formatDistance.js"), _hr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/hr/_lib/formatLong.js"), _hr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/hr/_lib/formatRelative.js"), _hr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/hr/_lib/localize.js"), _hr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/hr/_lib/match.js");
            let hr = { code: "hr", formatDistance: _hr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _hr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _hr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _hr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _hr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = hr;
        }, "./node_modules/date-fns/locale/hr/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { standalone: "manje od 1 sekunde", withPrepositionAgo: "manje od 1 sekunde", withPrepositionIn: "manje od 1 sekundu" }, dual: "manje od {{count}} sekunde", other: "manje od {{count}} sekundi" }, xSeconds: { one: { standalone: "1 sekunda", withPrepositionAgo: "1 sekunde", withPrepositionIn: "1 sekundu" }, dual: "{{count}} sekunde", other: "{{count}} sekundi" }, halfAMinute: "pola minute", lessThanXMinutes: { one: { standalone: "manje od 1 minute", withPrepositionAgo: "manje od 1 minute", withPrepositionIn: "manje od 1 minutu" }, dual: "manje od {{count}} minute", other: "manje od {{count}} minuta" }, xMinutes: { one: { standalone: "1 minuta", withPrepositionAgo: "1 minute", withPrepositionIn: "1 minutu" }, dual: "{{count}} minute", other: "{{count}} minuta" }, aboutXHours: { one: { standalone: "oko 1 sat", withPrepositionAgo: "oko 1 sat", withPrepositionIn: "oko 1 sat" }, dual: "oko {{count}} sata", other: "oko {{count}} sati" }, xHours: { one: { standalone: "1 sat", withPrepositionAgo: "1 sat", withPrepositionIn: "1 sat" }, dual: "{{count}} sata", other: "{{count}} sati" }, xDays: { one: { standalone: "1 dan", withPrepositionAgo: "1 dan", withPrepositionIn: "1 dan" }, dual: "{{count}} dana", other: "{{count}} dana" }, aboutXWeeks: { one: { standalone: "oko 1 tjedan", withPrepositionAgo: "oko 1 tjedan", withPrepositionIn: "oko 1 tjedan" }, dual: "oko {{count}} tjedna", other: "oko {{count}} tjedana" }, xWeeks: { one: { standalone: "1 tjedan", withPrepositionAgo: "1 tjedan", withPrepositionIn: "1 tjedan" }, dual: "{{count}} tjedna", other: "{{count}} tjedana" }, aboutXMonths: { one: { standalone: "oko 1 mjesec", withPrepositionAgo: "oko 1 mjesec", withPrepositionIn: "oko 1 mjesec" }, dual: "oko {{count}} mjeseca", other: "oko {{count}} mjeseci" }, xMonths: { one: { standalone: "1 mjesec", withPrepositionAgo: "1 mjesec", withPrepositionIn: "1 mjesec" }, dual: "{{count}} mjeseca", other: "{{count}} mjeseci" }, aboutXYears: { one: { standalone: "oko 1 godinu", withPrepositionAgo: "oko 1 godinu", withPrepositionIn: "oko 1 godinu" }, dual: "oko {{count}} godine", other: "oko {{count}} godina" }, xYears: { one: { standalone: "1 godina", withPrepositionAgo: "1 godine", withPrepositionIn: "1 godinu" }, dual: "{{count}} godine", other: "{{count}} godina" }, overXYears: { one: { standalone: "preko 1 godinu", withPrepositionAgo: "preko 1 godinu", withPrepositionIn: "preko 1 godinu" }, dual: "preko {{count}} godine", other: "preko {{count}} godina" }, almostXYears: { one: { standalone: "gotovo 1 godinu", withPrepositionAgo: "gotovo 1 godinu", withPrepositionIn: "gotovo 1 godinu" }, dual: "gotovo {{count}} godine", other: "gotovo {{count}} godina" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? tokenValue.one.withPrepositionIn : tokenValue.one.withPrepositionAgo : tokenValue.one.standalone : count % 10 > 1 && count % 10 < 5 && "1" !== String(count).substr(-2, 1) ? tokenValue.dual.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "za " + result;
                else
                    return "prije " + result; return result; };
        }, "./node_modules/date-fns/locale/hr/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM y.", long: "d. MMMM y.", medium: "d. MMM y.", short: "dd. MM. y." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss (zzzz)", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'u' {{time}}", long: "{{date}} 'u' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/hr/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { switch (date.getDay()) {
                    case 0: return "'prošlu nedjelju u' p";
                    case 3: return "'prošlu srijedu u' p";
                    case 6: return "'prošlu subotu u' p";
                    default: return "'prošli' EEEE 'u' p";
                } }, yesterday: "'jučer u' p", today: "'danas u' p", tomorrow: "'sutra u' p", nextWeek: date => { switch (date.getDay()) {
                    case 0: return "'iduću nedjelju u' p";
                    case 3: return "'iduću srijedu u' p";
                    case 6: return "'iduću subotu u' p";
                    default: return "'prošli' EEEE 'u' p";
                } }, other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/hr/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pr.n.e.", "AD"], abbreviated: ["pr. Kr.", "po. Kr."], wide: ["Prije Krista", "Poslije Krista"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4."], abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["sij", "velj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], wide: ["siječanj", "veljača", "ožujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"] }, defaultWidth: "wide", formattingValues: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["sij", "velj", "ožu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], wide: ["siječnja", "veljače", "ožujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenog", "prosinca"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["N", "P", "U", "S", "Č", "P", "S"], short: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"], abbreviated: ["ned", "pon", "uto", "sri", "čet", "pet", "sub"], wide: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "popodne", evening: "navečer", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "popodne", evening: "navečer", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "poslije podne", evening: "navečer", night: "noću" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "popodne", evening: "navečer", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "popodne", evening: "navečer", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutro", afternoon: "poslije podne", evening: "navečer", night: "noću" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/hr/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(pr\.n\.e\.|AD)/i, abbreviated: /^(pr\.\s?Kr\.|po\.\s?Kr\.)/i, wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^pr/i, /^(po|nova)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\.\s?kv\.?/i, wide: /^[1234]\. kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(10|11|12|[123456789])\./i, abbreviated: /^(sij|velj|(ožu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i, wide: /^((siječanj|siječnja|sijecanj|sijecnja)|(veljača|veljače|veljaca|veljace)|(ožujak|ožujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/1/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i, /8/i, /9/i, /10/i, /11/i, /12/i], abbreviated: [/^sij/i, /^velj/i, /^(ožu|ozu)/i, /^tra/i, /^svi/i, /^lip/i, /^srp/i, /^kol/i, /^ruj/i, /^lis/i, /^stu/i, /^pro/i], wide: [/^sij/i, /^velj/i, /^(ožu|ozu)/i, /^tra/i, /^svi/i, /^lip/i, /^srp/i, /^kol/i, /^ruj/i, /^lis/i, /^stu/i, /^pro/i] }, defaultParseWidth: "wide" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npusčc]/i, short: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i, abbreviated: /^(ned|pon|uto|sri|(čet|cet)|pet|sub)/i, wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(četvrtak|cetvrtak)|petak|subota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|ponoc|ponoć|(po)?podne|navecer|navečer|noću|poslije podne|ujutro)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^pono/i, noon: /^pod/i, morning: /jutro/i, afternoon: /(poslije\s|po)+podne/i, evening: /(navece|naveče)/i, night: /(nocu|noću)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ht.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ht: () => ht });
            var _ht_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ht/_lib/formatDistance.js"), _ht_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ht/_lib/formatLong.js"), _ht_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ht/_lib/formatRelative.js"), _ht_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ht/_lib/localize.js"), _ht_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ht/_lib/match.js");
            let ht = { code: "ht", formatDistance: _ht_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ht_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ht_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ht_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ht_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = ht;
        }, "./node_modules/date-fns/locale/ht/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mwens pase yon segond", other: "mwens pase {{count}} segond" }, xSeconds: { one: "1 segond", other: "{{count}} segond" }, halfAMinute: "30 segond", lessThanXMinutes: { one: "mwens pase yon minit", other: "mwens pase {{count}} minit" }, xMinutes: { one: "1 minit", other: "{{count}} minit" }, aboutXHours: { one: "anviwon inè", other: "anviwon {{count}} è" }, xHours: { one: "1 lè", other: "{{count}} lè" }, xDays: { one: "1 jou", other: "{{count}} jou" }, aboutXWeeks: { one: "anviwon 1 semèn", other: "anviwon {{count}} semèn" }, xWeeks: { one: "1 semèn", other: "{{count}} semèn" }, aboutXMonths: { one: "anviwon 1 mwa", other: "anviwon {{count}} mwa" }, xMonths: { one: "1 mwa", other: "{{count}} mwa" }, aboutXYears: { one: "anviwon 1 an", other: "anviwon {{count}} an" }, xYears: { one: "1 an", other: "{{count}} an" }, overXYears: { one: "plis pase 1 an", other: "plis pase {{count}} an" }, almostXYears: { one: "prèske 1 an", other: "prèske {{count}} an" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "nan " + result;
                else
                    return "sa fè " + result; return result; };
        }, "./node_modules/date-fns/locale/ht/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'nan lè' {{time}}", long: "{{date}} 'nan lè' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ht/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'pase nan lè' p", yesterday: "'yè nan lè' p", today: "'jodi a' p", tomorrow: "'demen nan lè' p'", nextWeek: "eeee 'pwochen nan lè' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ht/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber); return 0 === number ? String(number) : number + (1 === number ? "ye" : "yèm"); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["av. J.-K", "ap. J.-K"], abbreviated: ["av. J.-K", "ap. J.-K"], wide: ["anvan Jezi Kris", "apre Jezi Kris"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["T1", "T2", "T3", "T4"], abbreviated: ["1ye trim.", "2yèm trim.", "3yèm trim.", "4yèm trim."], wide: ["1ye trimès", "2yèm trimès", "3yèm trimès", "4yèm trimès"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], abbreviated: ["janv.", "fevr.", "mas", "avr.", "me", "jen", "jiyè", "out", "sept.", "okt.", "nov.", "des."], wide: ["janvye", "fevrye", "mas", "avril", "me", "jen", "jiyè", "out", "septanm", "oktòb", "novanm", "desanm"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "L", "M", "M", "J", "V", "S"], short: ["di", "le", "ma", "mè", "je", "va", "sa"], abbreviated: ["dim.", "len.", "mad.", "mèk.", "jed.", "van.", "sam."], wide: ["dimanch", "lendi", "madi", "mèkredi", "jedi", "vandredi", "samdi"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "minwit", noon: "midi", morning: "mat.", afternoon: "ap.m.", evening: "swa", night: "mat." }, abbreviated: { am: "AM", pm: "PM", midnight: "minwit", noon: "midi", morning: "maten", afternoon: "aprèmidi", evening: "swa", night: "maten" }, wide: { am: "AM", pm: "PM", midnight: "minwit", noon: "midi", morning: "nan maten", afternoon: "nan aprèmidi", evening: "nan aswè", night: "nan maten" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ht/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ye|yèm)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(av\.J\.K|ap\.J\.K|ap\.J\.-K)/i, abbreviated: /^(av\.J\.-K|av\.J-K|apr\.J\.-K|apr\.J-K|ap\.J-K)/i, wide: /^(avan Jezi Kris|apre Jezi Kris)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^av/i, /^ap/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^t[1234]/i, wide: /^[1234](ye|yèm)? trimès/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(janv|fevr|mas|avr|me|jen|jiyè|out|sept|okt|nov|des)\.?/i, wide: /^(janvye|fevrye|mas|avril|me|jen|jiyè|out|septanm|oktòb|novanm|desanm)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^o/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^ma/i, /^av/i, /^me/i, /^je/i, /^ji/i, /^ou/i, /^s/i, /^ok/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[lmjvsd]/i, short: /^(di|le|ma|me|je|va|sa)/i, abbreviated: /^(dim|len|mad|mèk|jed|van|sam)\.?/i, wide: /^(dimanch|lendi|madi|mèkredi|jedi|vandredi|samdi)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i], any: [/^di/i, /^le/i, /^ma/i, /^mè/i, /^je/i, /^va/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|minwit|midi|mat\.?|ap\.?m\.?|swa)/i, any: /^([ap]\.?\s?m\.?|nan maten|nan aprèmidi|nan aswè)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^min/i, noon: /^mid/i, morning: /mat/i, afternoon: /ap/i, evening: /sw/i, night: /nwit/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/hu.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, hu: () => hu });
            var _hu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/hu/_lib/formatDistance.js"), _hu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/hu/_lib/formatLong.js"), _hu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/hu/_lib/formatRelative.js"), _hu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/hu/_lib/localize.js"), _hu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/hu/_lib/match.js");
            let hu = { code: "hu", formatDistance: _hu_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _hu_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _hu_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _hu_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _hu_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = hu;
        }, "./node_modules/date-fns/locale/hu/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let translations = { about: "körülbelül", over: "több mint", almost: "majdnem", lessthan: "kevesebb mint" }, withoutSuffixes = { xseconds: " másodperc", halfaminute: "fél perc", xminutes: " perc", xhours: " óra", xdays: " nap", xweeks: " hét", xmonths: " hónap", xyears: " év" }, withSuffixes = { xseconds: { "-1": " másodperccel ezelőtt", 1: " másodperc múlva", 0: " másodperce" }, halfaminute: { "-1": "fél perccel ezelőtt", 1: "fél perc múlva", 0: "fél perce" }, xminutes: { "-1": " perccel ezelőtt", 1: " perc múlva", 0: " perce" }, xhours: { "-1": " órával ezelőtt", 1: " óra múlva", 0: " órája" }, xdays: { "-1": " nappal ezelőtt", 1: " nap múlva", 0: " napja" }, xweeks: { "-1": " héttel ezelőtt", 1: " hét múlva", 0: " hete" }, xmonths: { "-1": " hónappal ezelőtt", 1: " hónap múlva", 0: " hónapja" }, xyears: { "-1": " évvel ezelőtt", 1: " év múlva", 0: " éve" } }, formatDistance = (token, count, options1) => { let adverb = token.match(/about|over|almost|lessthan/i), unit = adverb ? token.replace(adverb[0], "") : token, addSuffix = options1?.addSuffix === !0, key = unit.toLowerCase(), comparison = options1?.comparison || 0, translated = addSuffix ? withSuffixes[key][comparison] : withoutSuffixes[key], result = "halfaminute" === key ? translated : count + translated; return adverb && (result = translations[adverb[0].toLowerCase()] + " " + result), result; };
        }, "./node_modules/date-fns/locale/hu/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y. MMMM d., EEEE", long: "y. MMMM d.", medium: "y. MMM d.", short: "y. MM. dd." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/hu/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let accusativeWeekdays = ["vasárnap", "hétfőn", "kedden", "szerdán", "csütörtökön", "pénteken", "szombaton"];
            function week(isFuture) { return date => { let weekday = accusativeWeekdays[date.getDay()]; return `${isFuture ? "" : "'múlt' "}'${weekday}' p'-kor'`; }; }
            let formatRelativeLocale = { lastWeek: week(!1), yesterday: "'tegnap' p'-kor'", today: "'ma' p'-kor'", tomorrow: "'holnap' p'-kor'", nextWeek: week(!0), other: "P" }, formatRelative = (token, date) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/hu/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ie.", "isz."], abbreviated: ["i. e.", "i. sz."], wide: ["Krisztus előtt", "időszámításunk szerint"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4."], abbreviated: ["1. n.év", "2. n.év", "3. n.év", "4. n.év"], wide: ["1. negyedév", "2. negyedév", "3. negyedév", "4. negyedév"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1, formattingValues: { narrow: ["I.", "II.", "III.", "IV."], abbreviated: ["I. n.év", "II. n.év", "III. n.év", "IV. n.év"], wide: ["I. negyedév", "II. negyedév", "III. negyedév", "IV. negyedév"] }, defaultFormattingWidth: "wide" }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "Á", "M", "J", "J", "A", "Sz", "O", "N", "D"], abbreviated: ["jan.", "febr.", "márc.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."], wide: ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["V", "H", "K", "Sz", "Cs", "P", "Sz"], short: ["V", "H", "K", "Sze", "Cs", "P", "Szo"], abbreviated: ["V", "H", "K", "Sze", "Cs", "P", "Szo"], wide: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "de.", pm: "du.", midnight: "éjfél", noon: "dél", morning: "reggel", afternoon: "du.", evening: "este", night: "éjjel" }, abbreviated: { am: "de.", pm: "du.", midnight: "éjfél", noon: "dél", morning: "reggel", afternoon: "du.", evening: "este", night: "éjjel" }, wide: { am: "de.", pm: "du.", midnight: "éjfél", noon: "dél", morning: "reggel", afternoon: "délután", evening: "este", night: "éjjel" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/hu/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ie\.|isz\.)/i, abbreviated: /^(i\.\s?e\.?|b?\s?c\s?e|i\.\s?sz\.?)/i, wide: /^(Krisztus előtt|időszámításunk előtt|időszámításunk szerint|i\. sz\.)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/ie/i, /isz/i], abbreviated: [/^(i\.?\s?e\.?|b\s?ce)/i, /^(i\.?\s?sz\.?|c\s?e)/i], any: [/előtt/i, /(szerint|i. sz.)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]\.?/i, abbreviated: /^[1234]?\.?\s?n\.év/i, wide: /^([1234]|I|II|III|IV)?\.?\s?negyedév/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmaásond]|sz/i, abbreviated: /^(jan\.?|febr\.?|márc\.?|ápr\.?|máj\.?|jún\.?|júl\.?|aug\.?|szept\.?|okt\.?|nov\.?|dec\.?)/i, wide: /^(január|február|március|április|május|június|július|augusztus|szeptember|október|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a|á/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s|sz/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^már/i, /^áp/i, /^máj/i, /^jún/i, /^júl/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([vhkpc]|sz|cs|sz)/i, short: /^([vhkp]|sze|cs|szo)/i, abbreviated: /^([vhkp]|sze|cs|szo)/i, wide: /^(vasárnap|hétfő|kedd|szerda|csütörtök|péntek|szombat)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i], any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^((de|du)\.?|éjfél|délután|dél|reggel|este|éjjel)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^de\.?/i, pm: /^du\.?/i, midnight: /^éjf/i, noon: /^dé/i, morning: /reg/i, afternoon: /^délu\.?/i, evening: /es/i, night: /éjj/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/hy.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, hy: () => hy });
            var _hy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/hy/_lib/formatDistance.js"), _hy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/hy/_lib/formatLong.js"), _hy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/hy/_lib/formatRelative.js"), _hy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/hy/_lib/localize.js"), _hy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/hy/_lib/match.js");
            let hy = { code: "hy", formatDistance: _hy_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _hy_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _hy_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _hy_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _hy_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = hy;
        }, "./node_modules/date-fns/locale/hy/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "ավելի քիչ քան 1 վայրկյան", other: "ավելի քիչ քան {{count}} վայրկյան" }, xSeconds: { one: "1 վայրկյան", other: "{{count}} վայրկյան" }, halfAMinute: "կես րոպե", lessThanXMinutes: { one: "ավելի քիչ քան 1 րոպե", other: "ավելի քիչ քան {{count}} րոպե" }, xMinutes: { one: "1 րոպե", other: "{{count}} րոպե" }, aboutXHours: { one: "մոտ 1 ժամ", other: "մոտ {{count}} ժամ" }, xHours: { one: "1 ժամ", other: "{{count}} ժամ" }, xDays: { one: "1 օր", other: "{{count}} օր" }, aboutXWeeks: { one: "մոտ 1 շաբաթ", other: "մոտ {{count}} շաբաթ" }, xWeeks: { one: "1 շաբաթ", other: "{{count}} շաբաթ" }, aboutXMonths: { one: "մոտ 1 ամիս", other: "մոտ {{count}} ամիս" }, xMonths: { one: "1 ամիս", other: "{{count}} ամիս" }, aboutXYears: { one: "մոտ 1 տարի", other: "մոտ {{count}} տարի" }, xYears: { one: "1 տարի", other: "{{count}} տարի" }, overXYears: { one: "ավելի քան 1 տարի", other: "ավելի քան {{count}} տարի" }, almostXYears: { one: "համարյա 1 տարի", other: "համարյա {{count}} տարի" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " հետո";
                else
                    return result + " առաջ"; return result; };
        }, "./node_modules/date-fns/locale/hy/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "d MMMM, y, EEEE", long: "d MMMM, y", medium: "d MMM, y", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'ժ․'{{time}}", long: "{{date}} 'ժ․'{{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/hy/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'նախորդ' eeee p'֊ին'", yesterday: "'երեկ' p'֊ին'", today: "'այսօր' p'֊ին'", tomorrow: "'վաղը' p'֊ին'", nextWeek: "'հաջորդ' eeee p'֊ին'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/hy/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), rem100 = number % 100; return rem100 < 10 && rem100 % 10 == 1 ? number + "֊ին" : number + "֊րդ"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Ք", "Մ"], abbreviated: ["ՔԱ", "ՄԹ"], wide: ["Քրիստոսից առաջ", "Մեր թվարկության"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Ք1", "Ք2", "Ք3", "Ք4"], wide: ["1֊ին քառորդ", "2֊րդ քառորդ", "3֊րդ քառորդ", "4֊րդ քառորդ"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Հ", "Փ", "Մ", "Ա", "Մ", "Հ", "Հ", "Օ", "Ս", "Հ", "Ն", "Դ"], abbreviated: ["հուն", "փետ", "մար", "ապր", "մայ", "հուն", "հուլ", "օգս", "սեպ", "հոկ", "նոյ", "դեկ"], wide: ["հունվար", "փետրվար", "մարտ", "ապրիլ", "մայիս", "հունիս", "հուլիս", "օգոստոս", "սեպտեմբեր", "հոկտեմբեր", "նոյեմբեր", "դեկտեմբեր"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Կ", "Ե", "Ե", "Չ", "Հ", "Ո", "Շ"], short: ["կր", "եր", "եք", "չք", "հգ", "ուր", "շբ"], abbreviated: ["կիր", "երկ", "երք", "չոր", "հնգ", "ուրբ", "շաբ"], wide: ["կիրակի", "երկուշաբթի", "երեքշաբթի", "չորեքշաբթի", "հինգշաբթի", "ուրբաթ", "շաբաթ"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "կեսգշ", noon: "կեսօր", morning: "առավոտ", afternoon: "ցերեկ", evening: "երեկո", night: "գիշեր" }, abbreviated: { am: "AM", pm: "PM", midnight: "կեսգիշեր", noon: "կեսօր", morning: "առավոտ", afternoon: "ցերեկ", evening: "երեկո", night: "գիշեր" }, wide: { am: "a.m.", pm: "p.m.", midnight: "կեսգիշեր", noon: "կեսօր", morning: "առավոտ", afternoon: "ցերեկ", evening: "երեկո", night: "գիշեր" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "կեսգշ", noon: "կեսօր", morning: "առավոտը", afternoon: "ցերեկը", evening: "երեկոյան", night: "գիշերը" }, abbreviated: { am: "AM", pm: "PM", midnight: "կեսգիշերին", noon: "կեսօրին", morning: "առավոտը", afternoon: "ցերեկը", evening: "երեկոյան", night: "գիշերը" }, wide: { am: "a.m.", pm: "p.m.", midnight: "կեսգիշերին", noon: "կեսօրին", morning: "առավոտը", afternoon: "ցերեկը", evening: "երեկոյան", night: "գիշերը" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/hy/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)((-|֊)?(ին|րդ))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(Ք|Մ)/i, abbreviated: /^(Ք\.?\s?Ա\.?|Մ\.?\s?Թ\.?\s?Ա\.?|Մ\.?\s?Թ\.?|Ք\.?\s?Հ\.?)/i, wide: /^(քրիստոսից առաջ|մեր թվարկությունից առաջ|մեր թվարկության|քրիստոսից հետո)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ք/i, /^մ/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ք[1234]/i, wide: /^[1234]((-|֊)?(ին|րդ)) քառորդ/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[հփմաօսնդ]/i, abbreviated: /^(հուն|փետ|մար|ապր|մայ|հուն|հուլ|օգս|սեպ|հոկ|նոյ|դեկ)/i, wide: /^(հունվար|փետրվար|մարտ|ապրիլ|մայիս|հունիս|հուլիս|օգոստոս|սեպտեմբեր|հոկտեմբեր|նոյեմբեր|դեկտեմբեր)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^հ/i, /^փ/i, /^մ/i, /^ա/i, /^մ/i, /^հ/i, /^հ/i, /^օ/i, /^ս/i, /^հ/i, /^ն/i, /^դ/i], any: [/^հու/i, /^փ/i, /^մար/i, /^ա/i, /^մայ/i, /^հուն/i, /^հուլ/i, /^օ/i, /^ս/i, /^հոկ/i, /^ն/i, /^դ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[եչհոշկ]/i, short: /^(կր|եր|եք|չք|հգ|ուր|շբ)/i, abbreviated: /^(կիր|երկ|երք|չոր|հնգ|ուրբ|շաբ)/i, wide: /^(կիրակի|երկուշաբթի|երեքշաբթի|չորեքշաբթի|հինգշաբթի|ուրբաթ|շաբաթ)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^կ/i, /^ե/i, /^ե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i], short: [/^կ/i, /^եր/i, /^եք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i], abbreviated: [/^կ/i, /^երկ/i, /^երք/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i], wide: [/^կ/i, /^երկ/i, /^երե/i, /^չ/i, /^հ/i, /^(ո|Ո)/, /^շ/i] }, defaultParseWidth: "wide" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([ap]|կեսգշ|կեսօր|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i, any: /^([ap]\.?\s?m\.?|կեսգիշեր(ին)?|կեսօր(ին)?|(առավոտը?|ցերեկը?|երեկո(յան)?|գիշերը?))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /կեսգիշեր/i, noon: /կեսօր/i, morning: /առավոտ/i, afternoon: /ցերեկ/i, evening: /երեկո/i, night: /գիշեր/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/id.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, id: () => id });
            var _id_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/id/_lib/formatDistance.js"), _id_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/id/_lib/formatLong.js"), _id_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/id/_lib/formatRelative.js"), _id_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/id/_lib/localize.js"), _id_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/id/_lib/match.js");
            let id = { code: "id", formatDistance: _id_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _id_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _id_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _id_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _id_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = id;
        }, "./node_modules/date-fns/locale/id/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "kurang dari 1 detik", other: "kurang dari {{count}} detik" }, xSeconds: { one: "1 detik", other: "{{count}} detik" }, halfAMinute: "setengah menit", lessThanXMinutes: { one: "kurang dari 1 menit", other: "kurang dari {{count}} menit" }, xMinutes: { one: "1 menit", other: "{{count}} menit" }, aboutXHours: { one: "sekitar 1 jam", other: "sekitar {{count}} jam" }, xHours: { one: "1 jam", other: "{{count}} jam" }, xDays: { one: "1 hari", other: "{{count}} hari" }, aboutXWeeks: { one: "sekitar 1 minggu", other: "sekitar {{count}} minggu" }, xWeeks: { one: "1 minggu", other: "{{count}} minggu" }, aboutXMonths: { one: "sekitar 1 bulan", other: "sekitar {{count}} bulan" }, xMonths: { one: "1 bulan", other: "{{count}} bulan" }, aboutXYears: { one: "sekitar 1 tahun", other: "sekitar {{count}} tahun" }, xYears: { one: "1 tahun", other: "{{count}} tahun" }, overXYears: { one: "lebih dari 1 tahun", other: "lebih dari {{count}} tahun" }, almostXYears: { one: "hampir 1 tahun", other: "hampir {{count}} tahun" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "dalam waktu " + result;
                else
                    return result + " yang lalu"; return result; };
        }, "./node_modules/date-fns/locale/id/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "d/M/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH.mm.ss", long: "HH.mm.ss", medium: "HH.mm", short: "HH.mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'pukul' {{time}}", long: "{{date}} 'pukul' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/id/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'lalu pukul' p", yesterday: "'Kemarin pukul' p", today: "'Hari ini pukul' p", tomorrow: "'Besok pukul' p", nextWeek: "eeee 'pukul' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/id/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => "ke-" + Number(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["SM", "M"], abbreviated: ["SM", "M"], wide: ["Sebelum Masehi", "Masehi"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], wide: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["M", "S", "S", "R", "K", "J", "S"], short: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], abbreviated: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], wide: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" }, abbreviated: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" }, wide: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" }, abbreviated: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" }, wide: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "siang", evening: "sore", night: "malam" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/id/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^ke-(\d+)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(sm|m)/i, abbreviated: /^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i, wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^(m|e)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K-?\s[1234]/i, wide: /^Kuartal ke-?\s?[1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i, wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^ma/i, /^ap/i, /^me/i, /^jun/i, /^jul/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[srkjm]/i, short: /^(min|sen|sel|rab|kam|jum|sab)/i, abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i, wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i], any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i, any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^pm/i, midnight: /^tengah m/i, noon: /^tengah h/i, morning: /pagi/i, afternoon: /siang/i, evening: /sore/i, night: /malam/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/is.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, is: () => is });
            var _is_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/is/_lib/formatDistance.js"), _is_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/is/_lib/formatLong.js"), _is_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/is/_lib/formatRelative.js"), _is_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/is/_lib/localize.js"), _is_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/is/_lib/match.js");
            let is = { code: "is", formatDistance: _is_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _is_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _is_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _is_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _is_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = is;
        }, "./node_modules/date-fns/locale/is/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "minna en 1 sekúnda", other: "minna en {{count}} sekúndur" }, xSeconds: { one: "1 sekúnda", other: "{{count}} sekúndur" }, halfAMinute: "hálf mínúta", lessThanXMinutes: { one: "minna en 1 mínúta", other: "minna en {{count}} mínútur" }, xMinutes: { one: "1 mínúta", other: "{{count}} mínútur" }, aboutXHours: { one: "u.þ.b. 1 klukkustund", other: "u.þ.b. {{count}} klukkustundir" }, xHours: { one: "1 klukkustund", other: "{{count}} klukkustundir" }, xDays: { one: "1 dagur", other: "{{count}} dagar" }, aboutXWeeks: { one: "um viku", other: "um {{count}} vikur" }, xWeeks: { one: "1 viku", other: "{{count}} vikur" }, aboutXMonths: { one: "u.þ.b. 1 mánuður", other: "u.þ.b. {{count}} mánuðir" }, xMonths: { one: "1 mánuður", other: "{{count}} mánuðir" }, aboutXYears: { one: "u.þ.b. 1 ár", other: "u.þ.b. {{count}} ár" }, xYears: { one: "1 ár", other: "{{count}} ár" }, overXYears: { one: "meira en 1 ár", other: "meira en {{count}} ár" }, almostXYears: { one: "næstum 1 ár", other: "næstum {{count}} ár" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "í " + result;
                else
                    return result + " síðan"; return result; };
        }, "./node_modules/date-fns/locale/is/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y", long: "do MMMM y", medium: "do MMM y", short: "d.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "'kl'. HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kl.' {{time}}", long: "{{date}} 'kl.' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/is/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'síðasta' dddd 'kl.' p", yesterday: "'í gær kl.' p", today: "'í dag kl.' p", tomorrow: "'á morgun kl.' p", nextWeek: "dddd 'kl.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/is/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["f.Kr.", "e.Kr."], abbreviated: ["f.Kr.", "e.Kr."], wide: ["fyrir Krist", "eftir Krist"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1F", "2F", "3F", "4F"], wide: ["1. fjórðungur", "2. fjórðungur", "3. fjórðungur", "4. fjórðungur"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "Á", "S", "Ó", "N", "D"], abbreviated: ["jan.", "feb.", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "sept.", "okt.", "nóv.", "des."], wide: ["janúar", "febrúar", "mars", "apríl", "maí", "júní", "júlí", "ágúst", "september", "október", "nóvember", "desember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "Þ", "M", "F", "F", "L"], short: ["Su", "Má", "Þr", "Mi", "Fi", "Fö", "La"], abbreviated: ["sun.", "mán.", "þri.", "mið.", "fim.", "fös.", "lau."], wide: ["sunnudagur", "mánudagur", "þriðjudagur", "miðvikudagur", "fimmtudagur", "föstudagur", "laugardagur"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "f", pm: "e", midnight: "miðnætti", noon: "hádegi", morning: "morgunn", afternoon: "síðdegi", evening: "kvöld", night: "nótt" }, abbreviated: { am: "f.h.", pm: "e.h.", midnight: "miðnætti", noon: "hádegi", morning: "morgunn", afternoon: "síðdegi", evening: "kvöld", night: "nótt" }, wide: { am: "fyrir hádegi", pm: "eftir hádegi", midnight: "miðnætti", noon: "hádegi", morning: "morgunn", afternoon: "síðdegi", evening: "kvöld", night: "nótt" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "f", pm: "e", midnight: "á miðnætti", noon: "á hádegi", morning: "að morgni", afternoon: "síðdegis", evening: "um kvöld", night: "um nótt" }, abbreviated: { am: "f.h.", pm: "e.h.", midnight: "á miðnætti", noon: "á hádegi", morning: "að morgni", afternoon: "síðdegis", evening: "um kvöld", night: "um nótt" }, wide: { am: "fyrir hádegi", pm: "eftir hádegi", midnight: "á miðnætti", noon: "á hádegi", morning: "að morgni", afternoon: "síðdegis", evening: "um kvöld", night: "um nótt" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/is/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)?/i, parsePattern: /\d+(\.)?/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(f\.Kr\.|e\.Kr\.)/i, abbreviated: /^(f\.Kr\.|e\.Kr\.)/i, wide: /^(fyrir Krist|eftir Krist)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(f\.Kr\.)/i, /^(e\.Kr\.)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]\.?/i, abbreviated: /^q[1234]\.?/i, wide: /^[1234]\.? fjórðungur/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1\.?/i, /2\.?/i, /3\.?/i, /4\.?/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmásónd]/i, abbreviated: /^(jan\.|feb\.|mars\.|apríl\.|maí|júní|júlí|águst|sep\.|oct\.|nov\.|dec\.)/i, wide: /^(januar|febrúar|mars|apríl|maí|júní|júlí|águst|september|október|nóvember|desember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^á/i, /^s/i, /^ó/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maí/i, /^jún/i, /^júl/i, /^áu/i, /^s/i, /^ó/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtwf]/i, short: /^(su|má|þr|mi|fi|fö|la)/i, abbreviated: /^(sun|mán|þri|mið|fim|fös|lau)\.?/i, wide: /^(sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^þ/i, /^m/i, /^f/i, /^f/i, /^l/i], any: [/^su/i, /^má/i, /^þr/i, /^mi/i, /^fi/i, /^fö/i, /^la/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(f|e|síðdegis|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i, any: /^(fyrir hádegi|eftir hádegi|[ef]\.?h\.?|síðdegis|morgunn|(á|að|um) (morgni|kvöld|nótt|miðnætti))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^f/i, pm: /^e/i, midnight: /^mi/i, noon: /^há/i, morning: /morgunn/i, afternoon: /síðdegi/i, evening: /kvöld/i, night: /nótt/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/it-CH.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, itCH: () => itCH });
            var _it_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/formatDistance.js"), _it_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/formatRelative.js"), _it_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/localize.js"), _it_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/match.js"), _it_CH_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/it-CH/_lib/formatLong.js");
            let itCH = { code: "it-CH", formatDistance: _it_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _it_CH_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _it_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _it_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _it_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = itCH;
        }, "./node_modules/date-fns/locale/it-CH/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/it.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, it: () => it });
            var _it_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/formatDistance.js"), _it_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/formatLong.js"), _it_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/formatRelative.js"), _it_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/localize.js"), _it_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/it/_lib/match.js");
            let it = { code: "it", formatDistance: _it_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _it_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _it_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _it_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _it_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = it;
        }, "./node_modules/date-fns/locale/it/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "meno di un secondo", other: "meno di {{count}} secondi" }, xSeconds: { one: "un secondo", other: "{{count}} secondi" }, halfAMinute: "alcuni secondi", lessThanXMinutes: { one: "meno di un minuto", other: "meno di {{count}} minuti" }, xMinutes: { one: "un minuto", other: "{{count}} minuti" }, aboutXHours: { one: "circa un'ora", other: "circa {{count}} ore" }, xHours: { one: "un'ora", other: "{{count}} ore" }, xDays: { one: "un giorno", other: "{{count}} giorni" }, aboutXWeeks: { one: "circa una settimana", other: "circa {{count}} settimane" }, xWeeks: { one: "una settimana", other: "{{count}} settimane" }, aboutXMonths: { one: "circa un mese", other: "circa {{count}} mesi" }, xMonths: { one: "un mese", other: "{{count}} mesi" }, aboutXYears: { one: "circa un anno", other: "circa {{count}} anni" }, xYears: { one: "un anno", other: "{{count}} anni" }, overXYears: { one: "più di un anno", other: "più di {{count}} anni" }, almostXYears: { one: "quasi un anno", other: "quasi {{count}} anni" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "tra " + result;
                else
                    return result + " fa"; return result; };
        }, "./node_modules/date-fns/locale/it/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/it/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let weekdays = ["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"];
            function thisWeek(day) { return "'" + weekdays[day] + " alle' p"; }
            let formatRelativeLocale = { lastWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { return 0 === day ? "'domenica scorsa alle' p" : "'" + weekdays[day] + " scorso alle' p"; }(day); }, yesterday: "'ieri alle' p", today: "'oggi alle' p", tomorrow: "'domani alle' p", nextWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { return 0 === day ? "'domenica prossima alle' p" : "'" + weekdays[day] + " prossimo alle' p"; }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/it/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(Number(dirtyNumber)), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["aC", "dC"], abbreviated: ["a.C.", "d.C."], wide: ["avanti Cristo", "dopo Cristo"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], abbreviated: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], wide: ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "L", "M", "M", "G", "V", "S"], short: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"], abbreviated: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"], wide: ["domenica", "lunedì", "martedì", "mercoledì", "giovedì", "venerdì", "sabato"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "m.", pm: "p.", midnight: "mezzanotte", noon: "mezzogiorno", morning: "mattina", afternoon: "pomeriggio", evening: "sera", night: "notte" }, abbreviated: { am: "AM", pm: "PM", midnight: "mezzanotte", noon: "mezzogiorno", morning: "mattina", afternoon: "pomeriggio", evening: "sera", night: "notte" }, wide: { am: "AM", pm: "PM", midnight: "mezzanotte", noon: "mezzogiorno", morning: "mattina", afternoon: "pomeriggio", evening: "sera", night: "notte" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "m.", pm: "p.", midnight: "mezzanotte", noon: "mezzogiorno", morning: "di mattina", afternoon: "del pomeriggio", evening: "di sera", night: "di notte" }, abbreviated: { am: "AM", pm: "PM", midnight: "mezzanotte", noon: "mezzogiorno", morning: "di mattina", afternoon: "del pomeriggio", evening: "di sera", night: "di notte" }, wide: { am: "AM", pm: "PM", midnight: "mezzanotte", noon: "mezzogiorno", morning: "di mattina", afternoon: "del pomeriggio", evening: "di sera", night: "di notte" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/it/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(º)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(aC|dC)/i, abbreviated: /^(a\.?\s?C\.?|a\.?\s?e\.?\s?v\.?|d\.?\s?C\.?|e\.?\s?v\.?)/i, wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^a/i, /^(d|e)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^t[1234]/i, wide: /^[1234](º)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[gfmalsond]/i, abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i, wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^g/i, /^f/i, /^m/i, /^a/i, /^m/i, /^g/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ge/i, /^f/i, /^mar/i, /^ap/i, /^mag/i, /^gi/i, /^l/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmgvs]/i, short: /^(do|lu|ma|me|gi|ve|sa)/i, abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i, wide: /^(domenica|luned[i|ì]|marted[i|ì]|mercoled[i|ì]|gioved[i|ì]|venerd[i|ì]|sabato)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i], any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|m\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i, any: /^([ap]\.?\s?m\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mezza/i, noon: /^mezzo/i, morning: /mattina/i, afternoon: /pomeriggio/i, evening: /sera/i, night: /notte/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ja-Hira.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, jaHira: () => jaHira });
            var _ja_Hira_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira/_lib/formatDistance.js"), _ja_Hira_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira/_lib/formatLong.js"), _ja_Hira_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira/_lib/formatRelative.js"), _ja_Hira_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira/_lib/localize.js"), _ja_Hira_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ja-Hira/_lib/match.js");
            let jaHira = { code: "ja-Hira", formatDistance: _ja_Hira_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ja_Hira_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ja_Hira_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ja_Hira_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ja_Hira_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = jaHira;
        }, "./node_modules/date-fns/locale/ja-Hira/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "1びょうみまん", other: "{{count}}びょうみまん", oneWithSuffix: "やく1びょう", otherWithSuffix: "やく{{count}}びょう" }, xSeconds: { one: "1びょう", other: "{{count}}びょう" }, halfAMinute: "30びょう", lessThanXMinutes: { one: "1ぷんみまん", other: "{{count}}ふんみまん", oneWithSuffix: "やく1ぷん", otherWithSuffix: "やく{{count}}ふん" }, xMinutes: { one: "1ぷん", other: "{{count}}ふん" }, aboutXHours: { one: "やく1じかん", other: "やく{{count}}じかん" }, xHours: { one: "1じかん", other: "{{count}}じかん" }, xDays: { one: "1にち", other: "{{count}}にち" }, aboutXWeeks: { one: "やく1しゅうかん", other: "やく{{count}}しゅうかん" }, xWeeks: { one: "1しゅうかん", other: "{{count}}しゅうかん" }, aboutXMonths: { one: "やく1かげつ", other: "やく{{count}}かげつ" }, xMonths: { one: "1かげつ", other: "{{count}}かげつ" }, aboutXYears: { one: "やく1ねん", other: "やく{{count}}ねん" }, xYears: { one: "1ねん", other: "{{count}}ねん" }, overXYears: { one: "1ねんいじょう", other: "{{count}}ねんいじょう" }, almostXYears: { one: "1ねんちかく", other: "{{count}}ねんちかく" } }, formatDistance = (token, count, options1) => { let result; options1 = options1 || {}; let tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1.addSuffix && tokenValue.oneWithSuffix ? tokenValue.oneWithSuffix : tokenValue.one : options1.addSuffix && tokenValue.otherWithSuffix ? tokenValue.otherWithSuffix.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "あと";
                else
                    return result + "まえ"; return result; };
        }, "./node_modules/date-fns/locale/ja-Hira/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "yねんMがつdにちEEEE", long: "yねんMがつdにち", medium: "y/MM/dd", short: "y/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "Hじmmふんssびょう zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ja-Hira/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "せんしゅうのeeeeのp", yesterday: "きのうのp", today: "きょうのp", tomorrow: "あしたのp", nextWeek: "よくしゅうのeeeeのp", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ja-Hira/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (String(options1?.unit)) {
                    case "year": return `${number}ねん`;
                    case "quarter": return `だい${number}しはんき`;
                    case "month": return `${number}がつ`;
                    case "week": return `だい${number}しゅう`;
                    case "date": return `${number}にち`;
                    case "hour": return `${number}じ`;
                    case "minute": return `${number}ふん`;
                    case "second": return `${number}びょう`;
                    default: return `${number}`;
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["BC", "AC"], abbreviated: ["きげんぜん", "せいれき"], wide: ["きげんぜん", "せいれき"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["だい1しはんき", "だい2しはんき", "だい3しはんき", "だい4しはんき"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], abbreviated: ["1がつ", "2がつ", "3がつ", "4がつ", "5がつ", "6がつ", "7がつ", "8がつ", "9がつ", "10がつ", "11がつ", "12がつ"], wide: ["1がつ", "2がつ", "3がつ", "4がつ", "5がつ", "6がつ", "7がつ", "8がつ", "9がつ", "10がつ", "11がつ", "12がつ"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"], short: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"], abbreviated: ["にち", "げつ", "か", "すい", "もく", "きん", "ど"], wide: ["にちようび", "げつようび", "かようび", "すいようび", "もくようび", "きんようび", "どようび"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" }, abbreviated: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" }, wide: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" }, abbreviated: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" }, wide: { am: "ごぜん", pm: "ごご", midnight: "しんや", noon: "しょうご", morning: "あさ", afternoon: "ごご", evening: "よる", night: "しんや" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ja-Hira/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^だ?い?\d+(ねん|しはんき|がつ|しゅう|にち|じ|ふん|びょう)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(B\.?C\.?|A\.?D\.?)/i, abbreviated: /^(きげん[前後]|せいれき)/i, wide: /^(きげん[前後]|せいれき)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^B/i, /^A/i], any: [/^(きげんぜん)/i, /^(せいれき|きげんご)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^Q[1234]/i, wide: /^だい[1234一二三四１２３４]しはんき/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([123456789]|1[012])/, abbreviated: /^([123456789]|1[012])がつ/i, wide: /^([123456789]|1[012])がつ/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^1\D/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(にち|げつ|か|すい|もく|きん|ど)/, short: /^(にち|げつ|か|すい|もく|きん|ど)/, abbreviated: /^(にち|げつ|か|すい|もく|きん|ど)/, wide: /^(にち|げつ|か|すい|もく|きん|ど)ようび/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^にち/, /^げつ/, /^か/, /^すい/, /^もく/, /^きん/, /^ど/] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(AM|PM|ごぜん|ごご|しょうご|しんや|まよなか|よる|あさ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^(A|ごぜん)/i, pm: /^(P|ごご)/i, midnight: /^しんや|まよなか/i, noon: /^しょうご/i, morning: /^あさ/i, afternoon: /^ごご/i, evening: /^よる/i, night: /^しんや/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ja.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ja: () => ja });
            var _ja_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ja/_lib/formatDistance.js"), _ja_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ja/_lib/formatLong.js"), _ja_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ja/_lib/formatRelative.js"), _ja_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ja/_lib/localize.js"), _ja_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ja/_lib/match.js");
            let ja = { code: "ja", formatDistance: _ja_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ja_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ja_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ja_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ja_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ja;
        }, "./node_modules/date-fns/locale/ja/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "1秒未満", other: "{{count}}秒未満", oneWithSuffix: "約1秒", otherWithSuffix: "約{{count}}秒" }, xSeconds: { one: "1秒", other: "{{count}}秒" }, halfAMinute: "30秒", lessThanXMinutes: { one: "1分未満", other: "{{count}}分未満", oneWithSuffix: "約1分", otherWithSuffix: "約{{count}}分" }, xMinutes: { one: "1分", other: "{{count}}分" }, aboutXHours: { one: "約1時間", other: "約{{count}}時間" }, xHours: { one: "1時間", other: "{{count}}時間" }, xDays: { one: "1日", other: "{{count}}日" }, aboutXWeeks: { one: "約1週間", other: "約{{count}}週間" }, xWeeks: { one: "1週間", other: "{{count}}週間" }, aboutXMonths: { one: "約1か月", other: "約{{count}}か月" }, xMonths: { one: "1か月", other: "{{count}}か月" }, aboutXYears: { one: "約1年", other: "約{{count}}年" }, xYears: { one: "1年", other: "{{count}}年" }, overXYears: { one: "1年以上", other: "{{count}}年以上" }, almostXYears: { one: "1年近く", other: "{{count}}年近く" } }, formatDistance = (token, count, options1) => { let result; options1 = options1 || {}; let tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1.addSuffix && tokenValue.oneWithSuffix ? tokenValue.oneWithSuffix : tokenValue.one : options1.addSuffix && tokenValue.otherWithSuffix ? tokenValue.otherWithSuffix.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "後";
                else
                    return result + "前"; return result; };
        }, "./node_modules/date-fns/locale/ja/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y年M月d日EEEE", long: "y年M月d日", medium: "y/MM/dd", short: "y/MM/dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H時mm分ss秒 zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ja/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "先週のeeeeのp", yesterday: "昨日のp", today: "今日のp", tomorrow: "明日のp", nextWeek: "翌週のeeeeのp", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ja/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (String(options1?.unit)) {
                    case "year": return `${number}年`;
                    case "quarter": return `第${number}四半期`;
                    case "month": return `${number}月`;
                    case "week": return `第${number}週`;
                    case "date": return `${number}日`;
                    case "hour": return `${number}時`;
                    case "minute": return `${number}分`;
                    case "second": return `${number}秒`;
                    default: return `${number}`;
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["BC", "AC"], abbreviated: ["紀元前", "西暦"], wide: ["紀元前", "西暦"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["第1四半期", "第2四半期", "第3四半期", "第4四半期"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], abbreviated: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], wide: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["日", "月", "火", "水", "木", "金", "土"], short: ["日", "月", "火", "水", "木", "金", "土"], abbreviated: ["日", "月", "火", "水", "木", "金", "土"], wide: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" }, abbreviated: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" }, wide: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" }, abbreviated: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" }, wide: { am: "午前", pm: "午後", midnight: "深夜", noon: "正午", morning: "朝", afternoon: "午後", evening: "夜", night: "深夜" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ja/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js"), _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, _lib_buildMatchPatternFn_js__WEBPACK_IMPORTED_MODULE_0__.buildMatchPatternFn)({ matchPattern: /^第?\d+(年|四半期|月|週|日|時|分|秒)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(B\.?C\.?|A\.?D\.?)/i, abbreviated: /^(紀元[前後]|西暦)/i, wide: /^(紀元[前後]|西暦)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^B/i, /^A/i], any: [/^(紀元前)/i, /^(西暦|紀元後)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^Q[1234]/i, wide: /^第[1234一二三四１２３４]四半期/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|一|１)/i, /(2|二|２)/i, /(3|三|３)/i, /(4|四|４)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([123456789]|1[012])/, abbreviated: /^([123456789]|1[012])月/i, wide: /^([123456789]|1[012])月/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^1\D/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[日月火水木金土]/, short: /^[日月火水木金土]/, abbreviated: /^[日月火水木金土]/, wide: /^[日月火水木金土]曜日/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^日/, /^月/, /^火/, /^水/, /^木/, /^金/, /^土/] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(AM|PM|午前|午後|正午|深夜|真夜中|夜|朝)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^(A|午前)/i, pm: /^(P|午後)/i, midnight: /^深夜|真夜中/i, noon: /^正午/i, morning: /^朝/i, afternoon: /^午後/i, evening: /^夜/i, night: /^深夜/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ka.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ka: () => ka });
            var _ka_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ka/_lib/formatDistance.js"), _ka_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ka/_lib/formatLong.js"), _ka_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ka/_lib/formatRelative.js"), _ka_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ka/_lib/localize.js"), _ka_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ka/_lib/match.js");
            let ka = { code: "ka", formatDistance: _ka_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ka_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ka_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ka_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ka_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ka;
        }, "./node_modules/date-fns/locale/ka/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { past: "{{count}} წამზე ნაკლები ხნის წინ", present: "{{count}} წამზე ნაკლები", future: "{{count}} წამზე ნაკლებში" }, xSeconds: { past: "{{count}} წამის წინ", present: "{{count}} წამი", future: "{{count}} წამში" }, halfAMinute: { past: "ნახევარი წუთის წინ", present: "ნახევარი წუთი", future: "ნახევარი წუთში" }, lessThanXMinutes: { past: "{{count}} წუთზე ნაკლები ხნის წინ", present: "{{count}} წუთზე ნაკლები", future: "{{count}} წუთზე ნაკლებში" }, xMinutes: { past: "{{count}} წუთის წინ", present: "{{count}} წუთი", future: "{{count}} წუთში" }, aboutXHours: { past: "დაახლოებით {{count}} საათის წინ", present: "დაახლოებით {{count}} საათი", future: "დაახლოებით {{count}} საათში" }, xHours: { past: "{{count}} საათის წინ", present: "{{count}} საათი", future: "{{count}} საათში" }, xDays: { past: "{{count}} დღის წინ", present: "{{count}} დღე", future: "{{count}} დღეში" }, aboutXWeeks: { past: "დაახლოებით {{count}} კვირას წინ", present: "დაახლოებით {{count}} კვირა", future: "დაახლოებით {{count}} კვირაში" }, xWeeks: { past: "{{count}} კვირას კვირა", present: "{{count}} კვირა", future: "{{count}} კვირაში" }, aboutXMonths: { past: "დაახლოებით {{count}} თვის წინ", present: "დაახლოებით {{count}} თვე", future: "დაახლოებით {{count}} თვეში" }, xMonths: { past: "{{count}} თვის წინ", present: "{{count}} თვე", future: "{{count}} თვეში" }, aboutXYears: { past: "დაახლოებით {{count}} წლის წინ", present: "დაახლოებით {{count}} წელი", future: "დაახლოებით {{count}} წელში" }, xYears: { past: "{{count}} წლის წინ", present: "{{count}} წელი", future: "{{count}} წელში" }, overXYears: { past: "{{count}} წელზე მეტი ხნის წინ", present: "{{count}} წელზე მეტი", future: "{{count}} წელზე მეტი ხნის შემდეგ" }, almostXYears: { past: "თითქმის {{count}} წლის წინ", present: "თითქმის {{count}} წელი", future: "თითქმის {{count}} წელში" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; return "string" == typeof tokenValue ? tokenValue : options1?.addSuffix && options1.comparison && options1.comparison > 0 ? tokenValue.future.replace("{{count}}", String(count)) : options1?.addSuffix ? tokenValue.past.replace("{{count}}", String(count)) : tokenValue.present.replace("{{count}}", String(count)); };
        }, "./node_modules/date-fns/locale/ka/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM, y", long: "do, MMMM, y", medium: "d, MMM, y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}'-ზე'", long: "{{date}} {{time}}'-ზე'", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ka/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'წინა' eeee p'-ზე'", yesterday: "'გუშინ' p'-ზე'", today: "'დღეს' p'-ზე'", tomorrow: "'ხვალ' p'-ზე'", nextWeek: "'შემდეგი' eeee p'-ზე'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ka/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: dirtyNumber => { let number = Number(dirtyNumber); return 1 === number ? number + "-ლი" : number + "-ე"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ჩ.წ-მდე", "ჩ.წ"], abbreviated: ["ჩვ.წ-მდე", "ჩვ.წ"], wide: ["ჩვენს წელთაღრიცხვამდე", "ჩვენი წელთაღრიცხვით"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-ლი კვ", "2-ე კვ", "3-ე კვ", "4-ე კვ"], wide: ["1-ლი კვარტალი", "2-ე კვარტალი", "3-ე კვარტალი", "4-ე კვარტალი"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ია", "თე", "მა", "აპ", "მს", "ვნ", "ვლ", "აგ", "სე", "ოქ", "ნო", "დე"], abbreviated: ["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"], wide: ["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["კვ", "ორ", "სა", "ოთ", "ხუ", "პა", "შა"], short: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"], abbreviated: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"], wide: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "შუაღამე", noon: "შუადღე", morning: "დილა", afternoon: "საღამო", evening: "საღამო", night: "ღამე" }, abbreviated: { am: "AM", pm: "PM", midnight: "შუაღამე", noon: "შუადღე", morning: "დილა", afternoon: "საღამო", evening: "საღამო", night: "ღამე" }, wide: { am: "a.m.", pm: "p.m.", midnight: "შუაღამე", noon: "შუადღე", morning: "დილა", afternoon: "საღამო", evening: "საღამო", night: "ღამე" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "შუაღამით", noon: "შუადღისას", morning: "დილით", afternoon: "ნაშუადღევს", evening: "საღამოს", night: "ღამით" }, abbreviated: { am: "AM", pm: "PM", midnight: "შუაღამით", noon: "შუადღისას", morning: "დილით", afternoon: "ნაშუადღევს", evening: "საღამოს", night: "ღამით" }, wide: { am: "a.m.", pm: "p.m.", midnight: "შუაღამით", noon: "შუადღისას", morning: "დილით", afternoon: "ნაშუადღევს", evening: "საღამოს", night: "ღამით" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ka/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-ლი|-ე)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ჩვ?\.წ)/i, abbreviated: /^(ჩვ?\.წ)/i, wide: /^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე|ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(ჩვენს წელთაღრიცხვამდე|ქრისტეშობამდე)/i, /^(ჩვენი წელთაღრიცხვით|ქრისტეშობიდან)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]-(ლი|ე)? კვ/i, wide: /^[1234]-(ლი|ე)? კვარტალი/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(ია|თე|მა|აპ|მს|ვნ|ვლ|აგ|სე|ოქ|ნო|დე)/i }, defaultMatchWidth: "any", parsePatterns: { any: [/^ია/i, /^თ/i, /^მარ/i, /^აპ/i, /^მაი/i, /^ი?ვნ/i, /^ი?ვლ/i, /^აგ/i, /^ს/i, /^ო/i, /^ნ/i, /^დ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(კვ|ორ|სა|ოთ|ხუ|პა|შა)/i, short: /^(კვი|ორშ|სამ|ოთხ|ხუთ|პარ|შაბ)/i, wide: /^(კვირა|ორშაბათი|სამშაბათი|ოთხშაბათი|ხუთშაბათი|პარასკევი|შაბათი)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^კვ/i, /^ორ/i, /^სა/i, /^ოთ/i, /^ხუ/i, /^პა/i, /^შა/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^([ap]\.?\s?m\.?|შუაღ|დილ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^შუაღ/i, noon: /^შუადღ/i, morning: /^დილ/i, afternoon: /ნაშუადღევს/i, evening: /საღამო/i, night: /ღამ/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/kk.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, kk: () => kk });
            var _kk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/kk/_lib/formatDistance.js"), _kk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/kk/_lib/formatLong.js"), _kk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/kk/_lib/formatRelative.js"), _kk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/kk/_lib/localize.js"), _kk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/kk/_lib/match.js");
            let kk = { code: "kk", formatDistance: _kk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _kk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _kk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _kk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _kk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = kk;
        }, "./node_modules/date-fns/locale/kk/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { regular: { one: "1 секундтан аз", singularNominative: "{{count}} секундтан аз", singularGenitive: "{{count}} секундтан аз", pluralGenitive: "{{count}} секундтан аз" }, future: { one: "бір секундтан кейін", singularNominative: "{{count}} секундтан кейін", singularGenitive: "{{count}} секундтан кейін", pluralGenitive: "{{count}} секундтан кейін" } }, xSeconds: { regular: { singularNominative: "{{count}} секунд", singularGenitive: "{{count}} секунд", pluralGenitive: "{{count}} секунд" }, past: { singularNominative: "{{count}} секунд бұрын", singularGenitive: "{{count}} секунд бұрын", pluralGenitive: "{{count}} секунд бұрын" }, future: { singularNominative: "{{count}} секундтан кейін", singularGenitive: "{{count}} секундтан кейін", pluralGenitive: "{{count}} секундтан кейін" } }, halfAMinute: options1 => { if (options1?.addSuffix)
                    if (options1.comparison && options1.comparison > 0)
                        return "жарты минут ішінде";
                    else
                        return "жарты минут бұрын"; return "жарты минут"; }, lessThanXMinutes: { regular: { one: "1 минуттан аз", singularNominative: "{{count}} минуттан аз", singularGenitive: "{{count}} минуттан аз", pluralGenitive: "{{count}} минуттан аз" }, future: { one: "минуттан кем ", singularNominative: "{{count}} минуттан кем", singularGenitive: "{{count}} минуттан кем", pluralGenitive: "{{count}} минуттан кем" } }, xMinutes: { regular: { singularNominative: "{{count}} минут", singularGenitive: "{{count}} минут", pluralGenitive: "{{count}} минут" }, past: { singularNominative: "{{count}} минут бұрын", singularGenitive: "{{count}} минут бұрын", pluralGenitive: "{{count}} минут бұрын" }, future: { singularNominative: "{{count}} минуттан кейін", singularGenitive: "{{count}} минуттан кейін", pluralGenitive: "{{count}} минуттан кейін" } }, aboutXHours: { regular: { singularNominative: "шамамен {{count}} сағат", singularGenitive: "шамамен {{count}} сағат", pluralGenitive: "шамамен {{count}} сағат" }, future: { singularNominative: "шамамен {{count}} сағаттан кейін", singularGenitive: "шамамен {{count}} сағаттан кейін", pluralGenitive: "шамамен {{count}} сағаттан кейін" } }, xHours: { regular: { singularNominative: "{{count}} сағат", singularGenitive: "{{count}} сағат", pluralGenitive: "{{count}} сағат" } }, xDays: { regular: { singularNominative: "{{count}} күн", singularGenitive: "{{count}} күн", pluralGenitive: "{{count}} күн" }, future: { singularNominative: "{{count}} күннен кейін", singularGenitive: "{{count}} күннен кейін", pluralGenitive: "{{count}} күннен кейін" } }, aboutXWeeks: { type: "weeks", one: "шамамен 1 апта", other: "шамамен {{count}} апта" }, xWeeks: { type: "weeks", one: "1 апта", other: "{{count}} апта" }, aboutXMonths: { regular: { singularNominative: "шамамен {{count}} ай", singularGenitive: "шамамен {{count}} ай", pluralGenitive: "шамамен {{count}} ай" }, future: { singularNominative: "шамамен {{count}} айдан кейін", singularGenitive: "шамамен {{count}} айдан кейін", pluralGenitive: "шамамен {{count}} айдан кейін" } }, xMonths: { regular: { singularNominative: "{{count}} ай", singularGenitive: "{{count}} ай", pluralGenitive: "{{count}} ай" } }, aboutXYears: { regular: { singularNominative: "шамамен {{count}} жыл", singularGenitive: "шамамен {{count}} жыл", pluralGenitive: "шамамен {{count}} жыл" }, future: { singularNominative: "шамамен {{count}} жылдан кейін", singularGenitive: "шамамен {{count}} жылдан кейін", pluralGenitive: "шамамен {{count}} жылдан кейін" } }, xYears: { regular: { singularNominative: "{{count}} жыл", singularGenitive: "{{count}} жыл", pluralGenitive: "{{count}} жыл" }, future: { singularNominative: "{{count}} жылдан кейін", singularGenitive: "{{count}} жылдан кейін", pluralGenitive: "{{count}} жылдан кейін" } }, overXYears: { regular: { singularNominative: "{{count}} жылдан астам", singularGenitive: "{{count}} жылдан астам", pluralGenitive: "{{count}} жылдан астам" }, future: { singularNominative: "{{count}} жылдан астам", singularGenitive: "{{count}} жылдан астам", pluralGenitive: "{{count}} жылдан астам" } }, almostXYears: { regular: { singularNominative: "{{count}} жылға жақын", singularGenitive: "{{count}} жылға жақын", pluralGenitive: "{{count}} жылға жақын" }, future: { singularNominative: "{{count}} жылдан кейін", singularGenitive: "{{count}} жылдан кейін", pluralGenitive: "{{count}} жылдан кейін" } } };
            function declension(scheme, count) { if (scheme.one && 1 === count)
                return scheme.one; let rem10 = count % 10, rem100 = count % 100; return 1 === rem10 && 11 !== rem100 ? scheme.singularNominative.replace("{{count}}", String(count)) : rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20) ? scheme.singularGenitive.replace("{{count}}", String(count)) : scheme.pluralGenitive.replace("{{count}}", String(count)); }
            let formatDistance = (token, count, options1) => { let tokenValue = formatDistanceLocale[token]; if ("function" == typeof tokenValue)
                return tokenValue(options1); if ("weeks" === tokenValue.type)
                return 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)); if (!options1?.addSuffix)
                return declension(tokenValue.regular, count); if (options1.comparison && options1.comparison > 0)
                if (tokenValue.future)
                    return declension(tokenValue.future, count);
                else
                    return declension(tokenValue.regular, count) + " кейін"; return tokenValue.past ? declension(tokenValue.past, count) : declension(tokenValue.regular, count) + " бұрын"; };
        }, "./node_modules/date-fns/locale/kk/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y 'ж.'", long: "do MMMM y 'ж.'", medium: "d MMM y 'ж.'", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/kk/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let accusativeWeekdays = ["жексенбіде", "дүйсенбіде", "сейсенбіде", "сәрсенбіде", "бейсенбіде", "жұмада", "сенбіде"];
            function thisWeek(day) { return "'" + accusativeWeekdays[day] + " сағат' p'-де'"; }
            let formatRelativeLocale = { lastWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : "'өткен " + accusativeWeekdays[day] + " сағат' p'-де'"; }, yesterday: "'кеше сағат' p'-де'", today: "'бүгін сағат' p'-де'", tomorrow: "'ертең сағат' p'-де'", nextWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : "'келесі " + accusativeWeekdays[day] + " сағат' p'-де'"; }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/kk/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let suffixes = { 0: "-ші", 1: "-ші", 2: "-ші", 3: "-ші", 4: "-ші", 5: "-ші", 6: "-шы", 7: "-ші", 8: "-ші", 9: "-шы", 10: "-шы", 20: "-шы", 30: "-шы", 40: "-шы", 50: "-ші", 60: "-шы", 70: "-ші", 80: "-ші", 90: "-шы", 100: "-ші" }, localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), b = number >= 100 ? 100 : null, suffix = suffixes[number] || suffixes[number % 10] || b && suffixes[b] || ""; return number + suffix; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["б.з.д.", "б.з."], abbreviated: ["б.з.д.", "б.з."], wide: ["біздің заманымызға дейін", "біздің заманымыз"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-ші тоқ.", "2-ші тоқ.", "3-ші тоқ.", "4-ші тоқ."], wide: ["1-ші тоқсан", "2-ші тоқсан", "3-ші тоқсан", "4-ші тоқсан"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"], abbreviated: ["қаң", "ақп", "нау", "сәу", "мам", "мау", "шіл", "там", "қыр", "қаз", "қар", "жел"], wide: ["қаңтар", "ақпан", "наурыз", "сәуір", "мамыр", "маусым", "шілде", "тамыз", "қыркүйек", "қазан", "қараша", "желтоқсан"] }, defaultWidth: "wide", formattingValues: { narrow: ["Қ", "А", "Н", "С", "М", "М", "Ш", "Т", "Қ", "Қ", "Қ", "Ж"], abbreviated: ["қаң", "ақп", "нау", "сәу", "мам", "мау", "шіл", "там", "қыр", "қаз", "қар", "жел"], wide: ["қаңтар", "ақпан", "наурыз", "сәуір", "мамыр", "маусым", "шілде", "тамыз", "қыркүйек", "қазан", "қараша", "желтоқсан"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Ж", "Д", "С", "С", "Б", "Ж", "С"], short: ["жс", "дс", "сс", "ср", "бс", "жм", "сб"], abbreviated: ["жс", "дс", "сс", "ср", "бс", "жм", "сб"], wide: ["жексенбі", "дүйсенбі", "сейсенбі", "сәрсенбі", "бейсенбі", "жұма", "сенбі"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ТД", pm: "ТК", midnight: "түн ортасы", noon: "түс", morning: "таң", afternoon: "күндіз", evening: "кеш", night: "түн" }, wide: { am: "ТД", pm: "ТК", midnight: "түн ортасы", noon: "түс", morning: "таң", afternoon: "күндіз", evening: "кеш", night: "түн" } }, defaultWidth: "any", formattingValues: { narrow: { am: "ТД", pm: "ТК", midnight: "түн ортасында", noon: "түс", morning: "таң", afternoon: "күн", evening: "кеш", night: "түн" }, wide: { am: "ТД", pm: "ТК", midnight: "түн ортасында", noon: "түсте", morning: "таңертең", afternoon: "күндіз", evening: "кеште", night: "түнде" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/kk/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(ші|шы))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((б )?з\.?\s?д\.?)/i, abbreviated: /^((б )?з\.?\s?д\.?)/i, wide: /^(біздің заманымызға дейін|біздің заманымыз|біздің заманымыздан)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^б/i, /^з/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?ші)? тоқ.?/i, wide: /^[1234](-?ші)? тоқсан/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(қ|а|н|с|м|мау|ш|т|қыр|қаз|қар|ж)/i, abbreviated: /^(қаң|ақп|нау|сәу|мам|мау|шіл|там|қыр|қаз|қар|жел)/i, wide: /^(қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^қ/i, /^а/i, /^н/i, /^с/i, /^м/i, /^м/i, /^ш/i, /^т/i, /^қ/i, /^қ/i, /^қ/i, /^ж/i], abbreviated: [/^қаң/i, /^ақп/i, /^нау/i, /^сәу/i, /^мам/i, /^мау/i, /^шіл/i, /^там/i, /^қыр/i, /^қаз/i, /^қар/i, /^жел/i], any: [/^қ/i, /^а/i, /^н/i, /^с/i, /^м/i, /^м/i, /^ш/i, /^т/i, /^қ/i, /^қ/i, /^қ/i, /^ж/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ж|д|с|с|б|ж|с)/i, short: /^(жс|дс|сс|ср|бс|жм|сб)/i, wide: /^(жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ж/i, /^д/i, /^с/i, /^с/i, /^б/i, /^ж/i, /^с/i], short: [/^жс/i, /^дс/i, /^сс/i, /^ср/i, /^бс/i, /^жм/i, /^сб/i], any: [/^ж[ек]/i, /^д[үй]/i, /^сe[й]/i, /^сә[р]/i, /^б[ей]/i, /^ж[ұм]/i, /^се[н]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i, wide: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i, any: /^Т\.?\s?[ДК]\.?|түн ортасында|((түсте|таңертең|таңда|таңертең|таңмен|таң|күндіз|күн|кеште|кеш|түнде|түн)\.?)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^ТД/i, pm: /^ТК/i, midnight: /^түн орта/i, noon: /^күндіз/i, morning: /таң/i, afternoon: /түс/i, evening: /кеш/i, night: /түн/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/km.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, km: () => km });
            var _km_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/km/_lib/formatDistance.js"), _km_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/km/_lib/formatLong.js"), _km_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/km/_lib/formatRelative.js"), _km_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/km/_lib/localize.js"), _km_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/km/_lib/match.js");
            let km = { code: "km", formatDistance: _km_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _km_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _km_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _km_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _km_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = km;
        }, "./node_modules/date-fns/locale/km/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: "តិចជាង {{count}} វិនាទី", xSeconds: "{{count}} វិនាទី", halfAMinute: "កន្លះនាទី", lessThanXMinutes: "តិចជាង {{count}} នាទី", xMinutes: "{{count}} នាទី", aboutXHours: "ប្រហែល {{count}} ម៉ោង", xHours: "{{count}} ម៉ោង", xDays: "{{count}} ថ្ងៃ", aboutXWeeks: "ប្រហែល {{count}} សប្តាហ៍", xWeeks: "{{count}} សប្តាហ៍", aboutXMonths: "ប្រហែល {{count}} ខែ", xMonths: "{{count}} ខែ", aboutXYears: "ប្រហែល {{count}} ឆ្នាំ", xYears: "{{count}} ឆ្នាំ", overXYears: "ជាង {{count}} ឆ្នាំ", almostXYears: "ជិត {{count}} ឆ្នាំ" }, formatDistance = (token, count, options1) => { let result = formatDistanceLocale[token]; if ("number" == typeof count && (result = result.replace("{{count}}", count.toString())), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "ក្នុងរយៈពេល " + result;
                else
                    return result + "មុន"; return result; };
        }, "./node_modules/date-fns/locale/km/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE do MMMM y", long: "do MMMM y", medium: "d MMM y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a", long: "h:mm:ss a", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'ម៉ោង' {{time}}", long: "{{date}} 'ម៉ោង' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/km/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​មុនម៉ោង' p", yesterday: "'ម្សិលមិញនៅម៉ោង' p", today: "'ថ្ងៃនេះម៉ោង' p", tomorrow: "'ថ្ងៃស្អែកម៉ោង' p", nextWeek: "'ថ្ងៃ'eeee'ស​ប្តា​ហ៍​ក្រោយម៉ោង' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/km/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _) => Number(dirtyNumber).toString(), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ម.គស", "គស"], abbreviated: ["មុនគ.ស", "គ.ស"], wide: ["មុនគ្រិស្តសករាជ", "នៃគ្រិស្តសករាជ"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["ត្រីមាសទី 1", "ត្រីមាសទី 2", "ត្រីមាសទី 3", "ត្រីមាសទី 4"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ម.ក", "ក.ម", "មិ", "ម.ស", "ឧ.ស", "ម.ថ", "ក.ដ", "សី", "កញ", "តុ", "វិ", "ធ"], abbreviated: ["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"], wide: ["មករា", "កុម្ភៈ", "មីនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"], short: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"], abbreviated: ["អា", "ច", "អ", "ព", "ព្រ", "សុ", "ស"], wide: ["អាទិត្យ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" }, abbreviated: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" }, wide: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" }, abbreviated: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" }, wide: { am: "ព្រឹក", pm: "ល្ងាច", midnight: "​ពេលកណ្ដាលអធ្រាត្រ", noon: "ពេលថ្ងៃត្រង់", morning: "ពេលព្រឹក", afternoon: "ពេលរសៀល", evening: "ពេលល្ងាច", night: "ពេលយប់" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/km/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ម\.)?គស/i, abbreviated: /^(មុន)?គ\.ស/i, wide: /^(មុន|នៃ)គ្រិស្តសករាជ/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(ម|មុន)គ\.?ស/i, /^(នៃ)?គ\.?ស/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^(ត្រីមាស)(ទី)?\s?[1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ម\.ក|ក\.ម|មិ|ម\.ស|ឧ\.ស|ម\.ថ|ក\.ដ|សី|កញ|តុ|វិ|ធ)/i, abbreviated: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i, wide: /^(មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ម\.ក/i, /^ក\.ម/i, /^មិ/i, /^ម\.ស/i, /^ឧ\.ស/i, /^ម\.ថ/i, /^ក\.ដ/i, /^សី/i, /^កញ/i, /^តុ/i, /^វិ/i, /^ធ/i], any: [/^មក/i, /^កុ/i, /^មីន/i, /^មេ/i, /^ឧស/i, /^មិថ/i, /^កក/i, /^សី/i, /^កញ/i, /^តុ/i, /^វិច/i, /^ធ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i, short: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i, abbreviated: /^(អា|ច|អ|ព|ព្រ|សុ|ស)/i, wide: /^(អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^ស/i], any: [/^អា/i, /^ច/i, /^អ/i, /^ព/i, /^ព្រ/i, /^សុ/i, /^សៅ/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i, any: /^(ព្រឹក|ល្ងាច|ពេលព្រឹក|ពេលថ្ងៃត្រង់|ពេលល្ងាច|ពេលរសៀល|ពេលយប់|ពេលកណ្ដាលអធ្រាត្រ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ព្រឹក/i, pm: /^ល្ងាច/i, midnight: /^ពេលកណ្ដាលអធ្រាត្រ/i, noon: /^ពេលថ្ងៃត្រង់/i, morning: /ពេលព្រឹក/i, afternoon: /ពេលរសៀល/i, evening: /ពេលល្ងាច/i, night: /ពេលយប់/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/kn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, kn: () => kn });
            var _kn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/kn/_lib/formatDistance.js"), _kn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/kn/_lib/formatLong.js"), _kn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/kn/_lib/formatRelative.js"), _kn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/kn/_lib/localize.js"), _kn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/kn/_lib/match.js");
            let kn = { code: "kn", formatDistance: _kn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _kn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _kn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _kn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _kn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = kn;
        }, "./node_modules/date-fns/locale/kn/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { default: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ", future: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ", past: "1 ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ" }, other: { default: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ", future: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ", past: "{{count}} ಸೆಕೆಂಡ್‌ಗಿಂತ ಕಡಿಮೆ" } }, xSeconds: { one: { default: "1 ಸೆಕೆಂಡ್", future: "1 ಸೆಕೆಂಡ್‌ನಲ್ಲಿ", past: "1 ಸೆಕೆಂಡ್ ಹಿಂದೆ" }, other: { default: "{{count}} ಸೆಕೆಂಡುಗಳು", future: "{{count}} ಸೆಕೆಂಡ್‌ಗಳಲ್ಲಿ", past: "{{count}} ಸೆಕೆಂಡ್ ಹಿಂದೆ" } }, halfAMinute: { other: { default: "ಅರ್ಧ ನಿಮಿಷ", future: "ಅರ್ಧ ನಿಮಿಷದಲ್ಲಿ", past: "ಅರ್ಧ ನಿಮಿಷದ ಹಿಂದೆ" } }, lessThanXMinutes: { one: { default: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ", future: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ", past: "1 ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ" }, other: { default: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ", future: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ", past: "{{count}} ನಿಮಿಷಕ್ಕಿಂತ ಕಡಿಮೆ" } }, xMinutes: { one: { default: "1 ನಿಮಿಷ", future: "1 ನಿಮಿಷದಲ್ಲಿ", past: "1 ನಿಮಿಷದ ಹಿಂದೆ" }, other: { default: "{{count}} ನಿಮಿಷಗಳು", future: "{{count}} ನಿಮಿಷಗಳಲ್ಲಿ", past: "{{count}} ನಿಮಿಷಗಳ ಹಿಂದೆ" } }, aboutXHours: { one: { default: "ಸುಮಾರು 1 ಗಂಟೆ", future: "ಸುಮಾರು 1 ಗಂಟೆಯಲ್ಲಿ", past: "ಸುಮಾರು 1 ಗಂಟೆ ಹಿಂದೆ" }, other: { default: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳು", future: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳಲ್ಲಿ", past: "ಸುಮಾರು {{count}} ಗಂಟೆಗಳ ಹಿಂದೆ" } }, xHours: { one: { default: "1 ಗಂಟೆ", future: "1 ಗಂಟೆಯಲ್ಲಿ", past: "1 ಗಂಟೆ ಹಿಂದೆ" }, other: { default: "{{count}} ಗಂಟೆಗಳು", future: "{{count}} ಗಂಟೆಗಳಲ್ಲಿ", past: "{{count}} ಗಂಟೆಗಳ ಹಿಂದೆ" } }, xDays: { one: { default: "1 ದಿನ", future: "1 ದಿನದಲ್ಲಿ", past: "1 ದಿನದ ಹಿಂದೆ" }, other: { default: "{{count}} ದಿನಗಳು", future: "{{count}} ದಿನಗಳಲ್ಲಿ", past: "{{count}} ದಿನಗಳ ಹಿಂದೆ" } }, aboutXMonths: { one: { default: "ಸುಮಾರು 1 ತಿಂಗಳು", future: "ಸುಮಾರು 1 ತಿಂಗಳಲ್ಲಿ", past: "ಸುಮಾರು 1 ತಿಂಗಳ ಹಿಂದೆ" }, other: { default: "ಸುಮಾರು {{count}} ತಿಂಗಳು", future: "ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳಲ್ಲಿ", past: "ಸುಮಾರು {{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ" } }, xMonths: { one: { default: "1 ತಿಂಗಳು", future: "1 ತಿಂಗಳಲ್ಲಿ", past: "1 ತಿಂಗಳ ಹಿಂದೆ" }, other: { default: "{{count}} ತಿಂಗಳು", future: "{{count}} ತಿಂಗಳುಗಳಲ್ಲಿ", past: "{{count}} ತಿಂಗಳುಗಳ ಹಿಂದೆ" } }, aboutXYears: { one: { default: "ಸುಮಾರು 1 ವರ್ಷ", future: "ಸುಮಾರು 1 ವರ್ಷದಲ್ಲಿ", past: "ಸುಮಾರು 1 ವರ್ಷದ ಹಿಂದೆ" }, other: { default: "ಸುಮಾರು {{count}} ವರ್ಷಗಳು", future: "ಸುಮಾರು {{count}} ವರ್ಷಗಳಲ್ಲಿ", past: "ಸುಮಾರು {{count}} ವರ್ಷಗಳ ಹಿಂದೆ" } }, xYears: { one: { default: "1 ವರ್ಷ", future: "1 ವರ್ಷದಲ್ಲಿ", past: "1 ವರ್ಷದ ಹಿಂದೆ" }, other: { default: "{{count}} ವರ್ಷಗಳು", future: "{{count}} ವರ್ಷಗಳಲ್ಲಿ", past: "{{count}} ವರ್ಷಗಳ ಹಿಂದೆ" } }, overXYears: { one: { default: "1 ವರ್ಷದ ಮೇಲೆ", future: "1 ವರ್ಷದ ಮೇಲೆ", past: "1 ವರ್ಷದ ಮೇಲೆ" }, other: { default: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ", future: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ", past: "{{count}} ವರ್ಷಗಳ ಮೇಲೆ" } }, almostXYears: { one: { default: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ", future: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ", past: "ಬಹುತೇಕ 1 ವರ್ಷದಲ್ಲಿ" }, other: { default: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ", future: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ", past: "ಬಹುತೇಕ {{count}} ವರ್ಷಗಳಲ್ಲಿ" } } };
            function getResultByTense(parentToken, options1) { if (options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return parentToken.future;
                else
                    return parentToken.past; return parentToken.default; }
            let formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; return (tokenValue.one && 1 === count ? getResultByTense(tokenValue.one, options1) : getResultByTense(tokenValue.other, options1)).replace("{{count}}", String(count)); };
        }, "./node_modules/date-fns/locale/kn/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM d, y", long: "MMMM d, y", medium: "MMM d, y", short: "d/M/yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "hh:mm:ss a zzzz", long: "hh:mm:ss a z", medium: "hh:mm:ss a", short: "hh:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/kn/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ಕಳೆದ' eeee p 'ಕ್ಕೆ'", yesterday: "'ನಿನ್ನೆ' p 'ಕ್ಕೆ'", today: "'ಇಂದು' p 'ಕ್ಕೆ'", tomorrow: "'ನಾಳೆ' p 'ಕ್ಕೆ'", nextWeek: "eeee p 'ಕ್ಕೆ'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/kn/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "ನೇ", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"], abbreviated: ["ಕ್ರಿ.ಪೂ", "ಕ್ರಿ.ಶ"], wide: ["ಕ್ರಿಸ್ತ ಪೂರ್ವ", "ಕ್ರಿಸ್ತ ಶಕ"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["ತ್ರೈ 1", "ತ್ರೈ 2", "ತ್ರೈ 3", "ತ್ರೈ 4"], wide: ["1ನೇ ತ್ರೈಮಾಸಿಕ", "2ನೇ ತ್ರೈಮಾಸಿಕ", "3ನೇ ತ್ರೈಮಾಸಿಕ", "4ನೇ ತ್ರೈಮಾಸಿಕ"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ಜ", "ಫೆ", "ಮಾ", "ಏ", "ಮೇ", "ಜೂ", "ಜು", "ಆ", "ಸೆ", "ಅ", "ನ", "ಡಿ"], abbreviated: ["ಜನ", "ಫೆಬ್ರ", "ಮಾರ್ಚ್", "ಏಪ್ರಿ", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗ", "ಸೆಪ್ಟೆಂ", "ಅಕ್ಟೋ", "ನವೆಂ", "ಡಿಸೆಂ"], wide: ["ಜನವರಿ", "ಫೆಬ್ರವರಿ", "ಮಾರ್ಚ್", "ಏಪ್ರಿಲ್", "ಮೇ", "ಜೂನ್", "ಜುಲೈ", "ಆಗಸ್ಟ್", "ಸೆಪ್ಟೆಂಬರ್", "ಅಕ್ಟೋಬರ್", "ನವೆಂಬರ್", "ಡಿಸೆಂಬರ್"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ಭಾ", "ಸೋ", "ಮಂ", "ಬು", "ಗು", "ಶು", "ಶ"], short: ["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"], abbreviated: ["ಭಾನು", "ಸೋಮ", "ಮಂಗಳ", "ಬುಧ", "ಗುರು", "ಶುಕ್ರ", "ಶನಿ"], wide: ["ಭಾನುವಾರ", "ಸೋಮವಾರ", "ಮಂಗಳವಾರ", "ಬುಧವಾರ", "ಗುರುವಾರ", "ಶುಕ್ರವಾರ", "ಶನಿವಾರ"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ಪೂರ್ವಾಹ್ನ", pm: "ಅಪರಾಹ್ನ", midnight: "ಮಧ್ಯರಾತ್ರಿ", noon: "ಮಧ್ಯಾಹ್ನ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾಹ್ನ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" }, abbreviated: { am: "ಪೂರ್ವಾಹ್ನ", pm: "ಅಪರಾಹ್ನ", midnight: "ಮಧ್ಯರಾತ್ರಿ", noon: "ಮಧ್ಯಾನ್ಹ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾನ್ಹ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" }, wide: { am: "ಪೂರ್ವಾಹ್ನ", pm: "ಅಪರಾಹ್ನ", midnight: "ಮಧ್ಯರಾತ್ರಿ", noon: "ಮಧ್ಯಾನ್ಹ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾನ್ಹ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ಪೂ", pm: "ಅ", midnight: "ಮಧ್ಯರಾತ್ರಿ", noon: "ಮಧ್ಯಾನ್ಹ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾನ್ಹ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" }, abbreviated: { am: "ಪೂರ್ವಾಹ್ನ", pm: "ಅಪರಾಹ್ನ", midnight: "ಮಧ್ಯ ರಾತ್ರಿ", noon: "ಮಧ್ಯಾನ್ಹ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾನ್ಹ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" }, wide: { am: "ಪೂರ್ವಾಹ್ನ", pm: "ಅಪರಾಹ್ನ", midnight: "ಮಧ್ಯ ರಾತ್ರಿ", noon: "ಮಧ್ಯಾನ್ಹ", morning: "ಬೆಳಗ್ಗೆ", afternoon: "ಮಧ್ಯಾನ್ಹ", evening: "ಸಂಜೆ", night: "ರಾತ್ರಿ" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/kn/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(ನೇ|ನೆ)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ)/i, abbreviated: /^(ಕ್ರಿ\.?\s?ಪೂ\.?|ಕ್ರಿ\.?\s?ಶ\.?|ಪ್ರ\.?\s?ಶ\.?)/i, wide: /^(ಕ್ರಿಸ್ತ ಪೂರ್ವ|ಕ್ರಿಸ್ತ ಶಕ|ಪ್ರಸಕ್ತ ಶಕ)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ಪೂ/i, /^(ಶ|ಪ್ರ)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^ತ್ರೈ[1234]|ತ್ರೈ [1234]| [1234]ತ್ರೈ/i, wide: /^[1234](ನೇ)? ತ್ರೈಮಾಸಿಕ/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ಜೂ|ಜು|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಆ|ಸೆ|ಅ|ನ|ಡಿ)/i, abbreviated: /^(ಜನ|ಫೆಬ್ರ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗ|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ)/i, wide: /^(ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ಜ$/i, /^ಫೆ/i, /^ಮಾ/i, /^ಏ/i, /^ಮೇ/i, /^ಜೂ/i, /^ಜು$/i, /^ಆ/i, /^ಸೆ/i, /^ಅ/i, /^ನ/i, /^ಡಿ/i], any: [/^ಜನ/i, /^ಫೆ/i, /^ಮಾ/i, /^ಏ/i, /^ಮೇ/i, /^ಜೂನ್/i, /^ಜುಲೈ/i, /^ಆ/i, /^ಸೆ/i, /^ಅ/i, /^ನ/i, /^ಡಿ/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ಭಾ|ಸೋ|ಮ|ಬು|ಗು|ಶು|ಶ)/i, short: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i, abbreviated: /^(ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ)/i, wide: /^(ಭಾನುವಾರ|ಸೋಮವಾರ|ಮಂಗಳವಾರ|ಬುಧವಾರ|ಗುರುವಾರ|ಶುಕ್ರವಾರ|ಶನಿವಾರ)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i], any: [/^ಭಾ/i, /^ಸೋ/i, /^ಮ/i, /^ಬು/i, /^ಗು/i, /^ಶು/i, /^ಶ/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ಪೂ|ಅ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i, any: /^(ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|ಮಧ್ಯರಾತ್ರಿ|ಮಧ್ಯಾನ್ಹ|ಬೆಳಗ್ಗೆ|ಸಂಜೆ|ರಾತ್ರಿ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ಪೂ/i, pm: /^ಅ/i, midnight: /ಮಧ್ಯರಾತ್ರಿ/i, noon: /ಮಧ್ಯಾನ್ಹ/i, morning: /ಬೆಳಗ್ಗೆ/i, afternoon: /ಮಧ್ಯಾನ್ಹ/i, evening: /ಸಂಜೆ/i, night: /ರಾತ್ರಿ/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ko.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ko: () => ko });
            var _ko_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ko/_lib/formatDistance.js"), _ko_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ko/_lib/formatLong.js"), _ko_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ko/_lib/formatRelative.js"), _ko_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ko/_lib/localize.js"), _ko_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ko/_lib/match.js");
            let ko = { code: "ko", formatDistance: _ko_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ko_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ko_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ko_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ko_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ko;
        }, "./node_modules/date-fns/locale/ko/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "1초 미만", other: "{{count}}초 미만" }, xSeconds: { one: "1초", other: "{{count}}초" }, halfAMinute: "30초", lessThanXMinutes: { one: "1분 미만", other: "{{count}}분 미만" }, xMinutes: { one: "1분", other: "{{count}}분" }, aboutXHours: { one: "약 1시간", other: "약 {{count}}시간" }, xHours: { one: "1시간", other: "{{count}}시간" }, xDays: { one: "1일", other: "{{count}}일" }, aboutXWeeks: { one: "약 1주", other: "약 {{count}}주" }, xWeeks: { one: "1주", other: "{{count}}주" }, aboutXMonths: { one: "약 1개월", other: "약 {{count}}개월" }, xMonths: { one: "1개월", other: "{{count}}개월" }, aboutXYears: { one: "약 1년", other: "약 {{count}}년" }, xYears: { one: "1년", other: "{{count}}년" }, overXYears: { one: "1년 이상", other: "{{count}}년 이상" }, almostXYears: { one: "거의 1년", other: "거의 {{count}}년" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " 후";
                else
                    return result + " 전"; return result; };
        }, "./node_modules/date-fns/locale/ko/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y년 M월 d일 EEEE", long: "y년 M월 d일", medium: "y.MM.dd", short: "y.MM.dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "a H시 mm분 ss초 zzzz", long: "a H:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ko/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'지난' eeee p", yesterday: "'어제' p", today: "'오늘' p", tomorrow: "'내일' p", nextWeek: "'다음' eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ko/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (String(options1?.unit)) {
                    case "minute":
                    case "second": return String(number);
                    case "date": return number + "일";
                    default: return number + "번째";
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["BC", "AD"], abbreviated: ["BC", "AD"], wide: ["기원전", "서기"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1분기", "2분기", "3분기", "4분기"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], abbreviated: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"], wide: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["일", "월", "화", "수", "목", "금", "토"], short: ["일", "월", "화", "수", "목", "금", "토"], abbreviated: ["일", "월", "화", "수", "목", "금", "토"], wide: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" }, abbreviated: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" }, wide: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" }, abbreviated: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" }, wide: { am: "오전", pm: "오후", midnight: "자정", noon: "정오", morning: "아침", afternoon: "오후", evening: "저녁", night: "밤" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ko/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(일|번째)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(기원전|서기)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(bc|기원전)/i, /^(ad|서기)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234]사?분기/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(1[012]|[123456789])/, abbreviated: /^(1[012]|[123456789])월/i, wide: /^(1[012]|[123456789])월/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^1월?$/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[일월화수목금토]/, short: /^[일월화수목금토]/, abbreviated: /^[일월화수목금토]/, wide: /^[일월화수목금토]요일/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^일/, /^월/, /^화/, /^수/, /^목/, /^금/, /^토/] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|오전|오후|자정|정오|아침|저녁|밤)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^(am|오전)/i, pm: /^(pm|오후)/i, midnight: /^자정/i, noon: /^정오/i, morning: /^아침/i, afternoon: /^오후/i, evening: /^저녁/i, night: /^밤/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/lb.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, lb: () => lb });
            var _lb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/lb/_lib/formatDistance.js"), _lb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/lb/_lib/formatLong.js"), _lb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/lb/_lib/formatRelative.js"), _lb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/lb/_lib/localize.js"), _lb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/lb/_lib/match.js");
            let lb = { code: "lb", formatDistance: _lb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _lb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _lb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _lb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _lb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = lb;
        }, "./node_modules/date-fns/locale/lb/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { standalone: { one: "manner wéi eng Sekonn", other: "manner wéi {{count}} Sekonnen" }, withPreposition: { one: "manner wéi enger Sekonn", other: "manner wéi {{count}} Sekonnen" } }, xSeconds: { standalone: { one: "eng Sekonn", other: "{{count}} Sekonnen" }, withPreposition: { one: "enger Sekonn", other: "{{count}} Sekonnen" } }, halfAMinute: { standalone: "eng hallef Minutt", withPreposition: "enger hallwer Minutt" }, lessThanXMinutes: { standalone: { one: "manner wéi eng Minutt", other: "manner wéi {{count}} Minutten" }, withPreposition: { one: "manner wéi enger Minutt", other: "manner wéi {{count}} Minutten" } }, xMinutes: { standalone: { one: "eng Minutt", other: "{{count}} Minutten" }, withPreposition: { one: "enger Minutt", other: "{{count}} Minutten" } }, aboutXHours: { standalone: { one: "ongeféier eng Stonn", other: "ongeféier {{count}} Stonnen" }, withPreposition: { one: "ongeféier enger Stonn", other: "ongeféier {{count}} Stonnen" } }, xHours: { standalone: { one: "eng Stonn", other: "{{count}} Stonnen" }, withPreposition: { one: "enger Stonn", other: "{{count}} Stonnen" } }, xDays: { standalone: { one: "een Dag", other: "{{count}} Deeg" }, withPreposition: { one: "engem Dag", other: "{{count}} Deeg" } }, aboutXWeeks: { standalone: { one: "ongeféier eng Woch", other: "ongeféier {{count}} Wochen" }, withPreposition: { one: "ongeféier enger Woche", other: "ongeféier {{count}} Wochen" } }, xWeeks: { standalone: { one: "eng Woch", other: "{{count}} Wochen" }, withPreposition: { one: "enger Woch", other: "{{count}} Wochen" } }, aboutXMonths: { standalone: { one: "ongeféier ee Mount", other: "ongeféier {{count}} Méint" }, withPreposition: { one: "ongeféier engem Mount", other: "ongeféier {{count}} Méint" } }, xMonths: { standalone: { one: "ee Mount", other: "{{count}} Méint" }, withPreposition: { one: "engem Mount", other: "{{count}} Méint" } }, aboutXYears: { standalone: { one: "ongeféier ee Joer", other: "ongeféier {{count}} Joer" }, withPreposition: { one: "ongeféier engem Joer", other: "ongeféier {{count}} Joer" } }, xYears: { standalone: { one: "ee Joer", other: "{{count}} Joer" }, withPreposition: { one: "engem Joer", other: "{{count}} Joer" } }, overXYears: { standalone: { one: "méi wéi ee Joer", other: "méi wéi {{count}} Joer" }, withPreposition: { one: "méi wéi engem Joer", other: "méi wéi {{count}} Joer" } }, almostXYears: { standalone: { one: "bal ee Joer", other: "bal {{count}} Joer" }, withPreposition: { one: "bal engem Joer", other: "bal {{count}} Joer" } } }, EXCEPTION_CONSONANTS = ["d", "h", "n", "t", "z"], VOWELS = ["a,", "e", "i", "o", "u"], DIGITS_SPOKEN_N_NEEDED = [0, 1, 2, 3, 8, 9], FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED = [40, 50, 60, 70];
            function isFinalNNeeded(nextWords) { let firstLetter = nextWords.charAt(0).toLowerCase(); if (-1 != VOWELS.indexOf(firstLetter) || -1 != EXCEPTION_CONSONANTS.indexOf(firstLetter))
                return !0; let firstWord = nextWords.split(" ")[0], number = parseInt(firstWord); return !isNaN(number) && -1 != DIGITS_SPOKEN_N_NEEDED.indexOf(number % 10) && -1 == FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED.indexOf(parseInt(firstWord.substring(0, 2))); }
            let formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token], usageGroup = options1?.addSuffix ? tokenValue.withPreposition : tokenValue.standalone; if (result = "string" == typeof usageGroup ? usageGroup : 1 === count ? usageGroup.one : usageGroup.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "a" + (isFinalNNeeded(result) ? "n" : "") + " " + result;
                else
                    return "viru" + (isFinalNNeeded(result) ? "n" : "") + " " + result; return result; };
        }, "./node_modules/date-fns/locale/lb/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y", long: "do MMMM y", medium: "do MMM y", short: "dd.MM.yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'um' {{time}}", long: "{{date}} 'um' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/lb/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { let day = date.getDay(), result = "'läschte"; return (2 === day || 4 === day) && (result += "n"), result += "' eeee 'um' p"; }, yesterday: "'gëschter um' p", today: "'haut um' p", tomorrow: "'moien um' p", nextWeek: "eeee 'um' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/lb/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["v.Chr.", "n.Chr."], abbreviated: ["v.Chr.", "n.Chr."], wide: ["viru Christus", "no Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mäe", "Abr", "Mee", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], wide: ["Januar", "Februar", "Mäerz", "Abrëll", "Mee", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "D", "M", "D", "F", "S"], short: ["So", "Mé", "Dë", "Më", "Do", "Fr", "Sa"], abbreviated: ["So.", "Mé.", "Dë.", "Më.", "Do.", "Fr.", "Sa."], wide: ["Sonndeg", "Méindeg", "Dënschdeg", "Mëttwoch", "Donneschdeg", "Freideg", "Samschdeg"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "mo.", pm: "nomë.", midnight: "Mëtternuecht", noon: "Mëtteg", morning: "Moien", afternoon: "Nomëtteg", evening: "Owend", night: "Nuecht" }, abbreviated: { am: "moies", pm: "nomëttes", midnight: "Mëtternuecht", noon: "Mëtteg", morning: "Moien", afternoon: "Nomëtteg", evening: "Owend", night: "Nuecht" }, wide: { am: "moies", pm: "nomëttes", midnight: "Mëtternuecht", noon: "Mëtteg", morning: "Moien", afternoon: "Nomëtteg", evening: "Owend", night: "Nuecht" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "mo.", pm: "nom.", midnight: "Mëtternuecht", noon: "mëttes", morning: "moies", afternoon: "nomëttes", evening: "owes", night: "nuets" }, abbreviated: { am: "moies", pm: "nomëttes", midnight: "Mëtternuecht", noon: "mëttes", morning: "moies", afternoon: "nomëttes", evening: "owes", night: "nuets" }, wide: { am: "moies", pm: "nomëttes", midnight: "Mëtternuecht", noon: "mëttes", morning: "moies", afternoon: "nomëttes", evening: "owes", night: "nuets" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/lb/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i, abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i, wide: /^(viru Christus|virun eiser Zäitrechnung|no Christus|eiser Zäitrechnung)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^v/i, /^n/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](\.)? Quartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mäe|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i, wide: /^(januar|februar|mäerz|abrëll|mee|juni|juli|august|september|oktober|november|dezember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mä/i, /^ab/i, /^me/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smdf]/i, short: /^(so|mé|dë|më|do|fr|sa)/i, abbreviated: /^(son?|méi?|dën?|mët?|don?|fre?|sam?)\.?/i, wide: /^(sonndeg|méindeg|dënschdeg|mëttwoch|donneschdeg|freideg|samschdeg)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^so/i, /^mé/i, /^dë/i, /^më/i, /^do/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(mo\.?|nomë\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i, abbreviated: /^(moi\.?|nomët\.?|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i, wide: /^(moies|nomëttes|Mëtternuecht|mëttes|moies|nomëttes|owes|nuets)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^m/i, pm: /^n/i, midnight: /^Mëtter/i, noon: /^mëttes/i, morning: /moies/i, afternoon: /nomëttes/i, evening: /owes/i, night: /nuets/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/lt.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, lt: () => lt });
            var _lt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/lt/_lib/formatDistance.js"), _lt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/lt/_lib/formatLong.js"), _lt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/lt/_lib/formatRelative.js"), _lt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/lt/_lib/localize.js"), _lt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/lt/_lib/match.js");
            let lt = { code: "lt", formatDistance: _lt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _lt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _lt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _lt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _lt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = lt;
        }, "./node_modules/date-fns/locale/lt/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let translations = { xseconds_other: "sekundė_sekundžių_sekundes", xminutes_one: "minutė_minutės_minutę", xminutes_other: "minutės_minučių_minutes", xhours_one: "valanda_valandos_valandą", xhours_other: "valandos_valandų_valandas", xdays_one: "diena_dienos_dieną", xdays_other: "dienos_dienų_dienas", xweeks_one: "savaitė_savaitės_savaitę", xweeks_other: "savaitės_savaičių_savaites", xmonths_one: "mėnuo_mėnesio_mėnesį", xmonths_other: "mėnesiai_mėnesių_mėnesius", xyears_one: "metai_metų_metus", xyears_other: "metai_metų_metus", about: "apie", over: "daugiau nei", almost: "beveik", lessthan: "mažiau nei" }, translateSeconds = (_number, addSuffix, _key, isFuture) => addSuffix ? isFuture ? "kelių sekundžių" : "kelias sekundes" : "kelios sekundės", translateSingular = (_number, addSuffix, key, isFuture) => addSuffix ? isFuture ? forms(key)[1] : forms(key)[2] : forms(key)[0], translate = (number, addSuffix, key, isFuture) => { let result = number + " "; return 1 === number ? result + translateSingular(number, addSuffix, key, isFuture) : addSuffix ? isFuture ? result + forms(key)[1] : result + (special(number) ? forms(key)[1] : forms(key)[2]) : result + (special(number) ? forms(key)[1] : forms(key)[0]); };
            function special(number) { return number % 10 == 0 || number > 10 && number < 20; }
            function forms(key) { return translations[key].split("_"); }
            let formatDistanceLocale = { lessThanXSeconds: { one: translateSeconds, other: translate }, xSeconds: { one: translateSeconds, other: translate }, halfAMinute: "pusė minutės", lessThanXMinutes: { one: translateSingular, other: translate }, xMinutes: { one: translateSingular, other: translate }, aboutXHours: { one: translateSingular, other: translate }, xHours: { one: translateSingular, other: translate }, xDays: { one: translateSingular, other: translate }, aboutXWeeks: { one: translateSingular, other: translate }, xWeeks: { one: translateSingular, other: translate }, aboutXMonths: { one: translateSingular, other: translate }, xMonths: { one: translateSingular, other: translate }, aboutXYears: { one: translateSingular, other: translate }, xYears: { one: translateSingular, other: translate }, overXYears: { one: translateSingular, other: translate }, almostXYears: { one: translateSingular, other: translate } }, formatDistance = (token, count, options1) => { let result, adverb = token.match(/about|over|almost|lessthan/i), unit = adverb ? token.replace(adverb[0], "") : token, isFuture = options1?.comparison !== void 0 && options1.comparison > 0, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one(count, options1?.addSuffix === !0, unit.toLowerCase() + "_one", isFuture) : tokenValue.other(count, options1?.addSuffix === !0, unit.toLowerCase() + "_other", isFuture), adverb && (result = translations[adverb[0].toLowerCase()] + " " + result), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "po " + result;
                else
                    return "prieš " + result; return result; };
        }, "./node_modules/date-fns/locale/lt/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y 'm'. MMMM d 'd'., EEEE", long: "y 'm'. MMMM d 'd'.", medium: "y-MM-dd", short: "y-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/lt/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'Praėjusį' eeee p", yesterday: "'Vakar' p", today: "'Šiandien' p", tomorrow: "'Rytoj' p", nextWeek: "eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/lt/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "-oji", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pr. Kr.", "po Kr."], abbreviated: ["pr. Kr.", "po Kr."], wide: ["prieš Kristų", "po Kristaus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["I ketv.", "II ketv.", "III ketv.", "IV ketv."], wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"] }, defaultWidth: "wide", formattingValues: { narrow: ["1", "2", "3", "4"], abbreviated: ["I k.", "II k.", "III k.", "IV k."], wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"] }, defaultFormattingWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], abbreviated: ["saus.", "vas.", "kov.", "bal.", "geg.", "birž.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], wide: ["sausis", "vasaris", "kovas", "balandis", "gegužė", "birželis", "liepa", "rugpjūtis", "rugsėjis", "spalis", "lapkritis", "gruodis"] }, defaultWidth: "wide", formattingValues: { narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], abbreviated: ["saus.", "vas.", "kov.", "bal.", "geg.", "birž.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], wide: ["sausio", "vasario", "kovo", "balandžio", "gegužės", "birželio", "liepos", "rugpjūčio", "rugsėjo", "spalio", "lapkričio", "gruodžio"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "P", "A", "T", "K", "P", "Š"], short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Št"], abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "št"], wide: ["sekmadienis", "pirmadienis", "antradienis", "trečiadienis", "ketvirtadienis", "penktadienis", "šeštadienis"] }, defaultWidth: "wide", formattingValues: { narrow: ["S", "P", "A", "T", "K", "P", "Š"], short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Št"], abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "št"], wide: ["sekmadienį", "pirmadienį", "antradienį", "trečiadienį", "ketvirtadienį", "penktadienį", "šeštadienį"] }, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "pr. p.", pm: "pop.", midnight: "vidurnaktis", noon: "vidurdienis", morning: "rytas", afternoon: "diena", evening: "vakaras", night: "naktis" }, abbreviated: { am: "priešpiet", pm: "popiet", midnight: "vidurnaktis", noon: "vidurdienis", morning: "rytas", afternoon: "diena", evening: "vakaras", night: "naktis" }, wide: { am: "priešpiet", pm: "popiet", midnight: "vidurnaktis", noon: "vidurdienis", morning: "rytas", afternoon: "diena", evening: "vakaras", night: "naktis" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "pr. p.", pm: "pop.", midnight: "vidurnaktis", noon: "perpiet", morning: "rytas", afternoon: "popietė", evening: "vakaras", night: "naktis" }, abbreviated: { am: "priešpiet", pm: "popiet", midnight: "vidurnaktis", noon: "perpiet", morning: "rytas", afternoon: "popietė", evening: "vakaras", night: "naktis" }, wide: { am: "priešpiet", pm: "popiet", midnight: "vidurnaktis", noon: "perpiet", morning: "rytas", afternoon: "popietė", evening: "vakaras", night: "naktis" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/lt/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-oji)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^p(r|o)\.?\s?(kr\.?|me)/i, abbreviated: /^(pr\.\s?(kr\.|m\.\s?e\.)|po\s?kr\.|mūsų eroje)/i, wide: /^(prieš Kristų|prieš mūsų erą|po Kristaus|mūsų eroje)/i }, defaultMatchWidth: "wide", parsePatterns: { wide: [/prieš/i, /(po|mūsų)/i], any: [/^pr/i, /^(po|m)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([1234])/i, abbreviated: /^(I|II|III|IV)\s?ketv?\.?/i, wide: /^(I|II|III|IV)\s?ketvirtis/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/1/i, /2/i, /3/i, /4/i], any: [/I$/i, /II$/i, /III/i, /IV/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[svkbglr]/i, abbreviated: /^(saus\.|vas\.|kov\.|bal\.|geg\.|birž\.|liep\.|rugp\.|rugs\.|spal\.|lapkr\.|gruod\.)/i, wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|balandž?i(s|o)|gegužės?|birželi(s|o)|liep(a|os)|rugpjū(t|č)i(s|o)|rugsėj(is|o)|spali(s|o)|lapkri(t|č)i(s|o)|gruodž?i(s|o))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^v/i, /^k/i, /^b/i, /^g/i, /^b/i, /^l/i, /^r/i, /^r/i, /^s/i, /^l/i, /^g/i], any: [/^saus/i, /^vas/i, /^kov/i, /^bal/i, /^geg/i, /^birž/i, /^liep/i, /^rugp/i, /^rugs/i, /^spal/i, /^lapkr/i, /^gruod/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[spatkš]/i, short: /^(sk|pr|an|tr|kt|pn|št)/i, abbreviated: /^(sk|pr|an|tr|kt|pn|št)/i, wide: /^(sekmadien(is|į)|pirmadien(is|į)|antradien(is|į)|trečiadien(is|į)|ketvirtadien(is|į)|penktadien(is|į)|šeštadien(is|į))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^š/i], wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^še/i], any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^št/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(pr.\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i, any: /^(priešpiet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietė)|vakaras|naktis)/i }, defaultMatchWidth: "any", parsePatterns: { narrow: { am: /^pr/i, pm: /^pop./i, midnight: /^vidurnaktis/i, noon: /^(vidurdienis|perp)/i, morning: /rytas/i, afternoon: /(die|popietė)/i, evening: /vakaras/i, night: /naktis/i }, any: { am: /^pr/i, pm: /^popiet$/i, midnight: /^vidurnaktis/i, noon: /^(vidurdienis|perp)/i, morning: /rytas/i, afternoon: /(die|popietė)/i, evening: /vakaras/i, night: /naktis/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/lv.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, lv: () => lv });
            var _lv_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/lv/_lib/formatDistance.js"), _lv_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/lv/_lib/formatLong.js"), _lv_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/lv/_lib/formatRelative.js"), _lv_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/lv/_lib/localize.js"), _lv_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/lv/_lib/match.js");
            let lv = { code: "lv", formatDistance: _lv_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _lv_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _lv_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _lv_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _lv_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = lv;
        }, "./node_modules/date-fns/locale/lv/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function buildLocalizeTokenFn(schema) { return (count, options1) => { if (1 === count)
                if (options1?.addSuffix)
                    return schema.one[0].replace("{{time}}", schema.one[2]);
                else
                    return schema.one[0].replace("{{time}}", schema.one[1]); {
                let rem = count % 10 == 1 && count % 100 != 11;
                return options1?.addSuffix ? schema.other[0].replace("{{time}}", rem ? schema.other[3] : schema.other[4]).replace("{{count}}", String(count)) : schema.other[0].replace("{{time}}", rem ? schema.other[1] : schema.other[2]).replace("{{count}}", String(count));
            } }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: buildLocalizeTokenFn({ one: ["mazāk par {{time}}", "sekundi", "sekundi"], other: ["mazāk nekā {{count}} {{time}}", "sekunde", "sekundes", "sekundes", "sekundēm"] }), xSeconds: buildLocalizeTokenFn({ one: ["1 {{time}}", "sekunde", "sekundes"], other: ["{{count}} {{time}}", "sekunde", "sekundes", "sekundes", "sekundēm"] }), halfAMinute: (_count, options1) => options1?.addSuffix ? "pusminūtes" : "pusminūte", lessThanXMinutes: buildLocalizeTokenFn({ one: ["mazāk par {{time}}", "minūti", "minūti"], other: ["mazāk nekā {{count}} {{time}}", "minūte", "minūtes", "minūtes", "minūtēm"] }), xMinutes: buildLocalizeTokenFn({ one: ["1 {{time}}", "minūte", "minūtes"], other: ["{{count}} {{time}}", "minūte", "minūtes", "minūtes", "minūtēm"] }), aboutXHours: buildLocalizeTokenFn({ one: ["apmēram 1 {{time}}", "stunda", "stundas"], other: ["apmēram {{count}} {{time}}", "stunda", "stundas", "stundas", "stundām"] }), xHours: buildLocalizeTokenFn({ one: ["1 {{time}}", "stunda", "stundas"], other: ["{{count}} {{time}}", "stunda", "stundas", "stundas", "stundām"] }), xDays: buildLocalizeTokenFn({ one: ["1 {{time}}", "diena", "dienas"], other: ["{{count}} {{time}}", "diena", "dienas", "dienas", "dienām"] }), aboutXWeeks: buildLocalizeTokenFn({ one: ["apmēram 1 {{time}}", "nedēļa", "nedēļas"], other: ["apmēram {{count}} {{time}}", "nedēļa", "nedēļu", "nedēļas", "nedēļām"] }), xWeeks: buildLocalizeTokenFn({ one: ["1 {{time}}", "nedēļa", "nedēļas"], other: ["{{count}} {{time}}", "nedēļa", "nedēļu", "nedēļas", "nedēļām"] }), aboutXMonths: buildLocalizeTokenFn({ one: ["apmēram 1 {{time}}", "mēnesis", "mēneša"], other: ["apmēram {{count}} {{time}}", "mēnesis", "mēneši", "mēneša", "mēnešiem"] }), xMonths: buildLocalizeTokenFn({ one: ["1 {{time}}", "mēnesis", "mēneša"], other: ["{{count}} {{time}}", "mēnesis", "mēneši", "mēneša", "mēnešiem"] }), aboutXYears: buildLocalizeTokenFn({ one: ["apmēram 1 {{time}}", "gads", "gada"], other: ["apmēram {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"] }), xYears: buildLocalizeTokenFn({ one: ["1 {{time}}", "gads", "gada"], other: ["{{count}} {{time}}", "gads", "gadi", "gada", "gadiem"] }), overXYears: buildLocalizeTokenFn({ one: ["ilgāk par 1 {{time}}", "gadu", "gadu"], other: ["vairāk nekā {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"] }), almostXYears: buildLocalizeTokenFn({ one: ["gandrīz 1 {{time}}", "gads", "gada"], other: ["vairāk nekā {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"] }) }, formatDistance = (token, count, options1) => { let result = formatDistanceLocale[token](count, options1); if (options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "pēc " + result;
                else
                    return "pirms " + result; return result; };
        }, "./node_modules/date-fns/locale/lv/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, y. 'gada' d. MMMM", long: "y. 'gada' d. MMMM", medium: "dd.MM.y.", short: "dd.MM.y." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'plkst.' {{time}}", long: "{{date}} 'plkst.' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/lv/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let weekdays = ["svētdienā", "pirmdienā", "otrdienā", "trešdienā", "ceturtdienā", "piektdienā", "sestdienā"], formatRelativeLocale = { lastWeek: (date, baseDate, options1) => (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? "eeee 'plkst.' p" : "'Pagājušā " + weekdays[date.getDay()] + " plkst.' p", yesterday: "'Vakar plkst.' p", today: "'Šodien plkst.' p", tomorrow: "'Rīt plkst.' p", nextWeek: (date, baseDate, options1) => (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? "eeee 'plkst.' p" : "'Nākamajā " + weekdays[date.getDay()] + " plkst.' p", other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/lv/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["p.m.ē", "m.ē"], abbreviated: ["p. m. ē.", "m. ē."], wide: ["pirms mūsu ēras", "mūsu ērā"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."], wide: ["pirmais ceturksnis", "otrais ceturksnis", "trešais ceturksnis", "ceturtais ceturksnis"] }, defaultWidth: "wide", formattingValues: { narrow: ["1", "2", "3", "4"], abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."], wide: ["pirmajā ceturksnī", "otrajā ceturksnī", "trešajā ceturksnī", "ceturtajā ceturksnī"] }, defaultFormattingWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["janv.", "febr.", "marts", "apr.", "maijs", "jūn.", "jūl.", "aug.", "sept.", "okt.", "nov.", "dec."], wide: ["janvāris", "februāris", "marts", "aprīlis", "maijs", "jūnijs", "jūlijs", "augusts", "septembris", "oktobris", "novembris", "decembris"] }, defaultWidth: "wide", formattingValues: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["janv.", "febr.", "martā", "apr.", "maijs", "jūn.", "jūl.", "aug.", "sept.", "okt.", "nov.", "dec."], wide: ["janvārī", "februārī", "martā", "aprīlī", "maijā", "jūnijā", "jūlijā", "augustā", "septembrī", "oktobrī", "novembrī", "decembrī"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "P", "O", "T", "C", "P", "S"], short: ["Sv", "P", "O", "T", "C", "Pk", "S"], abbreviated: ["svētd.", "pirmd.", "otrd.", "trešd.", "ceturtd.", "piektd.", "sestd."], wide: ["svētdiena", "pirmdiena", "otrdiena", "trešdiena", "ceturtdiena", "piektdiena", "sestdiena"] }, defaultWidth: "wide", formattingValues: { narrow: ["S", "P", "O", "T", "C", "P", "S"], short: ["Sv", "P", "O", "T", "C", "Pk", "S"], abbreviated: ["svētd.", "pirmd.", "otrd.", "trešd.", "ceturtd.", "piektd.", "sestd."], wide: ["svētdienā", "pirmdienā", "otrdienā", "trešdienā", "ceturtdienā", "piektdienā", "sestdienā"] }, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "pusn.", noon: "pusd.", morning: "rīts", afternoon: "diena", evening: "vakars", night: "nakts" }, abbreviated: { am: "am", pm: "pm", midnight: "pusn.", noon: "pusd.", morning: "rīts", afternoon: "pēcpusd.", evening: "vakars", night: "nakts" }, wide: { am: "am", pm: "pm", midnight: "pusnakts", noon: "pusdienlaiks", morning: "rīts", afternoon: "pēcpusdiena", evening: "vakars", night: "nakts" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "am", pm: "pm", midnight: "pusn.", noon: "pusd.", morning: "rītā", afternoon: "dienā", evening: "vakarā", night: "naktī" }, abbreviated: { am: "am", pm: "pm", midnight: "pusn.", noon: "pusd.", morning: "rītā", afternoon: "pēcpusd.", evening: "vakarā", night: "naktī" }, wide: { am: "am", pm: "pm", midnight: "pusnaktī", noon: "pusdienlaikā", morning: "rītā", afternoon: "pēcpusdienā", evening: "vakarā", night: "naktī" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/lv/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(p\.m\.ē|m\.ē)/i, abbreviated: /^(p\. m\. ē\.|m\. ē\.)/i, wide: /^(pirms mūsu ēras|mūsu ērā)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^p/i, /^m/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](\. cet\.)/i, wide: /^(pirma(is|jā)|otra(is|jā)|treša(is|jā)|ceturta(is|jā)) ceturksn(is|ī)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^1/i, /^2/i, /^3/i, /^4/i], abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i], wide: [/^p/i, /^o/i, /^t/i, /^c/i] }, defaultParseWidth: "wide", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(janv\.|febr\.|marts|apr\.|maijs|jūn\.|jūl\.|aug\.|sept\.|okt\.|nov\.|dec\.)/i, wide: /^(janvār(is|ī)|februār(is|ī)|mart[sā]|aprīl(is|ī)|maij[sā]|jūnij[sā]|jūlij[sā]|august[sā]|septembr(is|ī)|oktobr(is|ī)|novembr(is|ī)|decembr(is|ī))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jūn/i, /^jūl/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[spotc]/i, short: /^(sv|pi|o|t|c|pk|s)/i, abbreviated: /^(svētd\.|pirmd\.|otrd.\|trešd\.|ceturtd\.|piektd\.|sestd\.)/i, wide: /^(svētdien(a|ā)|pirmdien(a|ā)|otrdien(a|ā)|trešdien(a|ā)|ceturtdien(a|ā)|piektdien(a|ā)|sestdien(a|ā))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i], any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|dien(a|ā)|vakar(s|ā)|nakt(s|ī))/, abbreviated: /^(am|pm|pusn\.|pusd\.|rīt(s|ā)|pēcpusd\.|vakar(s|ā)|nakt(s|ī))/, wide: /^(am|pm|pusnakt(s|ī)|pusdienlaik(s|ā)|rīt(s|ā)|pēcpusdien(a|ā)|vakar(s|ā)|nakt(s|ī))/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^am/i, pm: /^pm/i, midnight: /^pusn/i, noon: /^pusd/i, morning: /^r/i, afternoon: /^(d|pēc)/i, evening: /^v/i, night: /^n/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/mk.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, mk: () => mk });
            var _mk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/mk/_lib/formatDistance.js"), _mk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/mk/_lib/formatLong.js"), _mk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/mk/_lib/formatRelative.js"), _mk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/mk/_lib/localize.js"), _mk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/mk/_lib/match.js");
            let mk = { code: "mk", formatDistance: _mk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _mk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _mk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _mk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _mk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = mk;
        }, "./node_modules/date-fns/locale/mk/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "помалку од секунда", other: "помалку од {{count}} секунди" }, xSeconds: { one: "1 секунда", other: "{{count}} секунди" }, halfAMinute: "половина минута", lessThanXMinutes: { one: "помалку од минута", other: "помалку од {{count}} минути" }, xMinutes: { one: "1 минута", other: "{{count}} минути" }, aboutXHours: { one: "околу 1 час", other: "околу {{count}} часа" }, xHours: { one: "1 час", other: "{{count}} часа" }, xDays: { one: "1 ден", other: "{{count}} дена" }, aboutXWeeks: { one: "околу 1 недела", other: "околу {{count}} месеци" }, xWeeks: { one: "1 недела", other: "{{count}} недели" }, aboutXMonths: { one: "околу 1 месец", other: "околу {{count}} недели" }, xMonths: { one: "1 месец", other: "{{count}} месеци" }, aboutXYears: { one: "околу 1 година", other: "околу {{count}} години" }, xYears: { one: "1 година", other: "{{count}} години" }, overXYears: { one: "повеќе од 1 година", other: "повеќе од {{count}} години" }, almostXYears: { one: "безмалку 1 година", other: "безмалку {{count}} години" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "за " + result;
                else
                    return "пред " + result; return result; };
        }, "./node_modules/date-fns/locale/mk/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, dd MMMM yyyy", long: "dd MMMM yyyy", medium: "dd MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}} {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/mk/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let weekdays = ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"];
            function thisWeek(day) { let weekday = weekdays[day]; switch (day) {
                case 0:
                case 3:
                case 6: return "'ова " + weekday + " вo' p";
                case 1:
                case 2:
                case 4:
                case 5: return "'овој " + weekday + " вo' p";
            } }
            let formatRelativeLocale = { lastWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = weekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 6: return "'минатата " + weekday + " во' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5: return "'минатиот " + weekday + " во' p";
                } }(day); }, yesterday: "'вчера во' p", today: "'денес во' p", tomorrow: "'утре во' p", nextWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = weekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 6: return "'следната " + weekday + " вo' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5: return "'следниот " + weekday + " вo' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/mk/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1: return number + "-ви";
                        case 2: return number + "-ри";
                        case 7:
                        case 8: return number + "-ми";
                    } return number + "-ти"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["пр.н.е.", "н.е."], abbreviated: ["пред н. е.", "н. е."], wide: ["пред нашата ера", "нашата ера"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-ви кв.", "2-ри кв.", "3-ти кв.", "4-ти кв."], wide: ["1-ви квартал", "2-ри квартал", "3-ти квартал", "4-ти квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { abbreviated: ["јан", "фев", "мар", "апр", "мај", "јун", "јул", "авг", "септ", "окт", "ноем", "дек"], wide: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "В", "С", "Ч", "П", "С"], short: ["не", "по", "вт", "ср", "че", "пе", "са"], abbreviated: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"], wide: ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { wide: { am: "претпладне", pm: "попладне", midnight: "полноќ", noon: "напладне", morning: "наутро", afternoon: "попладне", evening: "навечер", night: "ноќе" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/mk/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?[врмт][и])?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((пр)?н\.?\s?е\.?)/i, abbreviated: /^((пр)?н\.?\s?е\.?)/i, wide: /^(пред нашата ера|нашата ера)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^п/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[врт]?и?)? кв.?/i, wide: /^[1234](-?[врт]?и?)? квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { abbreviated: /^(јан|фев|мар|апр|мај|јун|јул|авг|сеп|окт|ноем|дек)/i, wide: /^(јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ја/i, /^Ф/i, /^мар/i, /^ап/i, /^мај/i, /^јун/i, /^јул/i, /^ав/i, /^се/i, /^окт/i, /^но/i, /^де/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[нпвсч]/i, short: /^(не|по|вт|ср|че|пе|са)/i, abbreviated: /^(нед|пон|вто|сре|чет|пет|саб)/i, wide: /^(недела|понеделник|вторник|среда|четврток|петок|сабота)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^н[ед]/i, /^п[он]/i, /^вт/i, /^ср/i, /^ч[ет]/i, /^п[ет]/i, /^с[аб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(претп|попл|полноќ|утро|пладне|вечер|ноќ)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /претпладне/i, pm: /попладне/i, midnight: /полноќ/i, noon: /напладне/i, morning: /наутро/i, afternoon: /попладне/i, evening: /навечер/i, night: /ноќе/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/mn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, mn: () => mn });
            var _mn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/mn/_lib/formatDistance.js"), _mn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/mn/_lib/formatLong.js"), _mn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/mn/_lib/formatRelative.js"), _mn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/mn/_lib/localize.js"), _mn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/mn/_lib/match.js");
            let mn = { code: "mn", formatDistance: _mn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _mn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _mn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _mn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _mn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = mn;
        }, "./node_modules/date-fns/locale/mn/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "секунд хүрэхгүй", other: "{{count}} секунд хүрэхгүй" }, xSeconds: { one: "1 секунд", other: "{{count}} секунд" }, halfAMinute: "хагас минут", lessThanXMinutes: { one: "минут хүрэхгүй", other: "{{count}} минут хүрэхгүй" }, xMinutes: { one: "1 минут", other: "{{count}} минут" }, aboutXHours: { one: "ойролцоогоор 1 цаг", other: "ойролцоогоор {{count}} цаг" }, xHours: { one: "1 цаг", other: "{{count}} цаг" }, xDays: { one: "1 өдөр", other: "{{count}} өдөр" }, aboutXWeeks: { one: "ойролцоогоор 1 долоо хоног", other: "ойролцоогоор {{count}} долоо хоног" }, xWeeks: { one: "1 долоо хоног", other: "{{count}} долоо хоног" }, aboutXMonths: { one: "ойролцоогоор 1 сар", other: "ойролцоогоор {{count}} сар" }, xMonths: { one: "1 сар", other: "{{count}} сар" }, aboutXYears: { one: "ойролцоогоор 1 жил", other: "ойролцоогоор {{count}} жил" }, xYears: { one: "1 жил", other: "{{count}} жил" }, overXYears: { one: "1 жил гаран", other: "{{count}} жил гаран" }, almostXYears: { one: "бараг 1 жил", other: "бараг {{count}} жил" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix) {
                let words = result.split(" "), lastword = words.pop();
                switch (result = words.join(" "), lastword) {
                    case "секунд":
                        result += " секундийн";
                        break;
                    case "минут":
                        result += " минутын";
                        break;
                    case "цаг":
                        result += " цагийн";
                        break;
                    case "өдөр":
                        result += " өдрийн";
                        break;
                    case "сар":
                        result += " сарын";
                        break;
                    case "жил":
                        result += " жилийн";
                        break;
                    case "хоног":
                        result += " хоногийн";
                        break;
                    case "гаран":
                        result += " гараны";
                        break;
                    case "хүрэхгүй":
                        result += " хүрэхгүй хугацааны";
                        break;
                    default: result += lastword + "-н";
                }
                return options1.comparison && options1.comparison > 0 ? result + " дараа" : result + " өмнө";
            } return result; };
        }, "./node_modules/date-fns/locale/mn/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y 'оны' MMMM'ын' d, EEEE 'гараг'", long: "y 'оны' MMMM'ын' d", medium: "y 'оны' MMM'ын' d", short: "y.MM.dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/mn/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'өнгөрсөн' eeee 'гарагийн' p 'цагт'", yesterday: "'өчигдөр' p 'цагт'", today: "'өнөөдөр' p 'цагт'", tomorrow: "'маргааш' p 'цагт'", nextWeek: "'ирэх' eeee 'гарагийн' p 'цагт'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/mn/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["НТӨ", "НТ"], abbreviated: ["НТӨ", "НТ"], wide: ["нийтийн тооллын өмнөх", "нийтийн тооллын"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["I", "II", "III", "IV"], abbreviated: ["I улирал", "II улирал", "III улирал", "IV улирал"], wide: ["1-р улирал", "2-р улирал", "3-р улирал", "4-р улирал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"], abbreviated: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], wide: ["Нэгдүгээр сар", "Хоёрдугаар сар", "Гуравдугаар сар", "Дөрөвдүгээр сар", "Тавдугаар сар", "Зургаадугаар сар", "Долоодугаар сар", "Наймдугаар сар", "Есдүгээр сар", "Аравдугаар сар", "Арваннэгдүгээр сар", "Арван хоёрдугаар сар"] }, defaultWidth: "wide", formattingValues: { narrow: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"], abbreviated: ["1-р сар", "2-р сар", "3-р сар", "4-р сар", "5-р сар", "6-р сар", "7-р сар", "8-р сар", "9-р сар", "10-р сар", "11-р сар", "12-р сар"], wide: ["нэгдүгээр сар", "хоёрдугаар сар", "гуравдугаар сар", "дөрөвдүгээр сар", "тавдугаар сар", "зургаадугаар сар", "долоодугаар сар", "наймдугаар сар", "есдүгээр сар", "аравдугаар сар", "арваннэгдүгээр сар", "арван хоёрдугаар сар"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "Д", "М", "Л", "П", "Б", "Б"], short: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], abbreviated: ["Ням", "Дав", "Мяг", "Лха", "Пүр", "Баа", "Бям"], wide: ["Ням", "Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба"] }, defaultWidth: "wide", formattingValues: { narrow: ["Н", "Д", "М", "Л", "П", "Б", "Б"], short: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"], abbreviated: ["Ням", "Дав", "Мяг", "Лха", "Пүр", "Баа", "Бям"], wide: ["ням", "даваа", "мягмар", "лхагва", "пүрэв", "баасан", "бямба"] }, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ү.ө.", pm: "ү.х.", midnight: "шөнө дунд", noon: "үд дунд", morning: "өглөө", afternoon: "өдөр", evening: "орой", night: "шөнө" }, abbreviated: { am: "ү.ө.", pm: "ү.х.", midnight: "шөнө дунд", noon: "үд дунд", morning: "өглөө", afternoon: "өдөр", evening: "орой", night: "шөнө" }, wide: { am: "ү.ө.", pm: "ү.х.", midnight: "шөнө дунд", noon: "үд дунд", morning: "өглөө", afternoon: "өдөр", evening: "орой", night: "шөнө" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/mn/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /\d+/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(нтө|нт)/i, abbreviated: /^(нтө|нт)/i, wide: /^(нийтийн тооллын өмнө|нийтийн тооллын)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(нтө|нийтийн тооллын өмнө)/i, /^(нт|нийтийн тооллын)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(iv|iii|ii|i)/i, abbreviated: /^(iv|iii|ii|i) улирал/i, wide: /^[1-4]-р улирал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(i(\s|$)|1)/i, /^(ii(\s|$)|2)/i, /^(iii(\s|$)|3)/i, /^(iv(\s|$)|4)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i, abbreviated: /^(1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар)/i, wide: /^(нэгдүгээр сар|хоёрдугаар сар|гуравдугаар сар|дөрөвдүгээр сар|тавдугаар сар|зургаадугаар сар|долоодугаар сар|наймдугаар сар|есдүгээр сар|аравдугаар сар|арван нэгдүгээр сар|арван хоёрдугаар сар)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^i$/i, /^ii$/i, /^iii$/i, /^iv$/i, /^v$/i, /^vi$/i, /^vii$/i, /^viii$/i, /^ix$/i, /^x$/i, /^xi$/i, /^xii$/i], any: [/^(1|нэгдүгээр)/i, /^(2|хоёрдугаар)/i, /^(3|гуравдугаар)/i, /^(4|дөрөвдүгээр)/i, /^(5|тавдугаар)/i, /^(6|зургаадугаар)/i, /^(7|долоодугаар)/i, /^(8|наймдугаар)/i, /^(9|есдүгээр)/i, /^(10|аравдугаар)/i, /^(11|арван нэгдүгээр)/i, /^(12|арван хоёрдугаар)/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ндмлпбб]/i, short: /^(ня|да|мя|лх|пү|ба|бя)/i, abbreviated: /^(ням|дав|мяг|лха|пүр|баа|бям)/i, wide: /^(ням|даваа|мягмар|лхагва|пүрэв|баасан|бямба)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^д/i, /^м/i, /^л/i, /^п/i, /^б/i, /^б/i], any: [/^ня/i, /^да/i, /^мя/i, /^лх/i, /^пү/i, /^ба/i, /^бя/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i, any: /^(ү\.ө\.|ү\.х\.|шөнө дунд|үд дунд|өглөө|өдөр|орой|шөнө)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ү\.ө\./i, pm: /^ү\.х\./i, midnight: /^шөнө дунд/i, noon: /^үд дунд/i, morning: /өглөө/i, afternoon: /өдөр/i, evening: /орой/i, night: /шөнө/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ms.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ms: () => ms });
            var _ms_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ms/_lib/formatDistance.js"), _ms_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ms/_lib/formatLong.js"), _ms_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ms/_lib/formatRelative.js"), _ms_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ms/_lib/localize.js"), _ms_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ms/_lib/match.js");
            let ms = { code: "ms", formatDistance: _ms_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ms_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ms_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ms_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ms_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ms;
        }, "./node_modules/date-fns/locale/ms/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "kurang dari 1 saat", other: "kurang dari {{count}} saat" }, xSeconds: { one: "1 saat", other: "{{count}} saat" }, halfAMinute: "setengah minit", lessThanXMinutes: { one: "kurang dari 1 minit", other: "kurang dari {{count}} minit" }, xMinutes: { one: "1 minit", other: "{{count}} minit" }, aboutXHours: { one: "sekitar 1 jam", other: "sekitar {{count}} jam" }, xHours: { one: "1 jam", other: "{{count}} jam" }, xDays: { one: "1 hari", other: "{{count}} hari" }, aboutXWeeks: { one: "sekitar 1 minggu", other: "sekitar {{count}} minggu" }, xWeeks: { one: "1 minggu", other: "{{count}} minggu" }, aboutXMonths: { one: "sekitar 1 bulan", other: "sekitar {{count}} bulan" }, xMonths: { one: "1 bulan", other: "{{count}} bulan" }, aboutXYears: { one: "sekitar 1 tahun", other: "sekitar {{count}} tahun" }, xYears: { one: "1 tahun", other: "{{count}} tahun" }, overXYears: { one: "lebih dari 1 tahun", other: "lebih dari {{count}} tahun" }, almostXYears: { one: "hampir 1 tahun", other: "hampir {{count}} tahun" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "dalam masa " + result;
                else
                    return result + " yang lalu"; return result; };
        }, "./node_modules/date-fns/locale/ms/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "d/M/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH.mm.ss", long: "HH.mm.ss", medium: "HH.mm", short: "HH.mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'pukul' {{time}}", long: "{{date}} 'pukul' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ms/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'lepas pada jam' p", yesterday: "'Semalam pada jam' p", today: "'Hari ini pada jam' p", tomorrow: "'Esok pada jam' p", nextWeek: "eeee 'pada jam' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ms/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => "ke-" + Number(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["SM", "M"], abbreviated: ["SM", "M"], wide: ["Sebelum Masihi", "Masihi"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["S1", "S2", "S3", "S4"], wide: ["Suku pertama", "Suku kedua", "Suku ketiga", "Suku keempat"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], abbreviated: ["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], wide: ["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["A", "I", "S", "R", "K", "J", "S"], short: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], abbreviated: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], wide: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "tgh malam", noon: "tgh hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" }, abbreviated: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" }, wide: { am: "a.m.", pm: "p.m.", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "am", pm: "pm", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" }, abbreviated: { am: "AM", pm: "PM", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" }, wide: { am: "a.m.", pm: "p.m.", midnight: "tengah malam", noon: "tengah hari", morning: "pagi", afternoon: "tengah hari", evening: "petang", night: "malam" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ms/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^ke-(\d+)?/i, parsePattern: /petama|\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(sm|m)/i, abbreviated: /^(s\.?\s?m\.?|m\.?)/i, wide: /^(sebelum masihi|masihi)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^(m)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^S[1234]/i, wide: /Suku (pertama|kedua|ketiga|keempat)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i, wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^o/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^ma/i, /^ap/i, /^me/i, /^jun/i, /^jul/i, /^og/i, /^s/i, /^ok/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[aisrkj]/i, short: /^(ahd|isn|sel|rab|kha|jum|sab)/i, abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i, wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i], any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i, any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|pagi|petang|malam)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^pm/i, midnight: /^tengah m/i, noon: /^tengah h/i, morning: /pa/i, afternoon: /tengah h/i, evening: /pe/i, night: /m/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/mt.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, mt: () => mt });
            var _mt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/mt/_lib/formatDistance.js"), _mt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/mt/_lib/formatLong.js"), _mt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/mt/_lib/formatRelative.js"), _mt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/mt/_lib/localize.js"), _mt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/mt/_lib/match.js");
            let mt = { code: "mt", formatDistance: _mt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _mt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _mt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _mt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _mt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = mt;
        }, "./node_modules/date-fns/locale/mt/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "inqas minn sekonda", other: "inqas minn {{count}} sekondi" }, xSeconds: { one: "sekonda", other: "{{count}} sekondi" }, halfAMinute: "nofs minuta", lessThanXMinutes: { one: "inqas minn minuta", other: "inqas minn {{count}} minuti" }, xMinutes: { one: "minuta", other: "{{count}} minuti" }, aboutXHours: { one: "madwar siegħa", other: "madwar {{count}} siegħat" }, xHours: { one: "siegħa", other: "{{count}} siegħat" }, xDays: { one: "ġurnata", other: "{{count}} ġranet" }, aboutXWeeks: { one: "madwar ġimgħa", other: "madwar {{count}} ġimgħat" }, xWeeks: { one: "ġimgħa", other: "{{count}} ġimgħat" }, aboutXMonths: { one: "madwar xahar", other: "madwar {{count}} xhur" }, xMonths: { one: "xahar", other: "{{count}} xhur" }, aboutXYears: { one: "madwar sena", two: "madwar sentejn", other: "madwar {{count}} snin" }, xYears: { one: "sena", two: "sentejn", other: "{{count}} snin" }, overXYears: { one: "aktar minn sena", two: "aktar minn sentejn", other: "aktar minn {{count}} snin" }, almostXYears: { one: "kważi sena", two: "kważi sentejn", other: "kważi {{count}} snin" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : 2 === count && tokenValue.two ? tokenValue.two : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "f'" + result;
                else
                    return result + " ilu"; return result; };
        }, "./node_modules/date-fns/locale/mt/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/mt/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'li għadda' 'fil-'p", yesterday: "'Il-bieraħ fil-'p", today: "'Illum fil-'p", tomorrow: "'Għada fil-'p", nextWeek: "eeee 'fil-'p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/mt/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "º", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Q", "W"], abbreviated: ["QK", "WK"], wide: ["qabel Kristu", "wara Kristu"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1. kwart", "2. kwart", "3. kwart", "4. kwart"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "Ġ", "L", "A", "S", "O", "N", "D"], abbreviated: ["Jan", "Fra", "Mar", "Apr", "Mej", "Ġun", "Lul", "Aww", "Set", "Ott", "Nov", "Diċ"], wide: ["Jannar", "Frar", "Marzu", "April", "Mejju", "Ġunju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Diċembru"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Ħ", "T", "T", "E", "Ħ", "Ġ", "S"], short: ["Ħa", "Tn", "Tl", "Er", "Ħa", "Ġi", "Si"], abbreviated: ["Ħad", "Tne", "Tli", "Erb", "Ħam", "Ġim", "Sib"], wide: ["Il-Ħadd", "It-Tnejn", "It-Tlieta", "L-Erbgħa", "Il-Ħamis", "Il-Ġimgħa", "Is-Sibt"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "nofsillejl", noon: "nofsinhar", morning: "għodwa", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "lejl" }, abbreviated: { am: "AM", pm: "PM", midnight: "nofsillejl", noon: "nofsinhar", morning: "għodwa", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "lejl" }, wide: { am: "a.m.", pm: "p.m.", midnight: "nofsillejl", noon: "nofsinhar", morning: "għodwa", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "lejl" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "f'nofsillejl", noon: "f'nofsinhar", morning: "filgħodu", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "billejl" }, abbreviated: { am: "AM", pm: "PM", midnight: "f'nofsillejl", noon: "f'nofsinhar", morning: "filgħodu", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "billejl" }, wide: { am: "a.m.", pm: "p.m.", midnight: "f'nofsillejl", noon: "f'nofsinhar", morning: "filgħodu", afternoon: "wara nofsinhar", evening: "filgħaxija", night: "billejl" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/mt/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(º)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(q|w)/i, abbreviated: /^(q\.?\s?k\.?|b\.?\s?c\.?\s?e\.?|w\.?\s?k\.?)/i, wide: /^(qabel kristu|before common era|wara kristu|common era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(q|b)/i, /^(w|c)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^k[1234]/i, wide: /^[1234](\.)? kwart/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmaglsond]/i, abbreviated: /^(jan|fra|mar|apr|mej|ġun|lul|aww|set|ott|nov|diċ)/i, wide: /^(jannar|frar|marzu|april|mejju|ġunju|lulju|awwissu|settembru|ottubru|novembru|diċembru)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^ġ/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mej/i, /^ġ/i, /^l/i, /^aw/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ħteġs]/i, short: /^(ħa|tn|tl|er|ħa|ġi|si)/i, abbreviated: /^(ħad|tne|tli|erb|ħam|ġim|sib)/i, wide: /^(il-ħadd|it-tnejn|it-tlieta|l-erbgħa|il-ħamis|il-ġimgħa|is-sibt)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ħ/i, /^t/i, /^t/i, /^e/i, /^ħ/i, /^ġ/i, /^s/i], any: [/^(il-)?ħad/i, /^(it-)?tn/i, /^(it-)?tl/i, /^(l-)?er/i, /^(il-)?ham/i, /^(il-)?ġi/i, /^(is-)?si/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i, any: /^([ap]\.?\s?m\.?|f'nofsillejl|f'nofsinhar|(ta') (għodwa|wara nofsinhar|filgħaxija|lejl))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^f'nofsillejl/i, noon: /^f'nofsinhar/i, morning: /għodwa/i, afternoon: /wara(\s.*)nofsinhar/i, evening: /filgħaxija/i, night: /lejl/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/nb.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nb: () => nb });
            var _nb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/nb/_lib/formatDistance.js"), _nb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/nb/_lib/formatLong.js"), _nb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/nb/_lib/formatRelative.js"), _nb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/nb/_lib/localize.js"), _nb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/nb/_lib/match.js");
            let nb = { code: "nb", formatDistance: _nb_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _nb_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _nb_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _nb_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _nb_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = nb;
        }, "./node_modules/date-fns/locale/nb/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mindre enn ett sekund", other: "mindre enn {{count}} sekunder" }, xSeconds: { one: "ett sekund", other: "{{count}} sekunder" }, halfAMinute: "et halvt minutt", lessThanXMinutes: { one: "mindre enn ett minutt", other: "mindre enn {{count}} minutter" }, xMinutes: { one: "ett minutt", other: "{{count}} minutter" }, aboutXHours: { one: "omtrent en time", other: "omtrent {{count}} timer" }, xHours: { one: "en time", other: "{{count}} timer" }, xDays: { one: "en dag", other: "{{count}} dager" }, aboutXWeeks: { one: "omtrent en uke", other: "omtrent {{count}} uker" }, xWeeks: { one: "en uke", other: "{{count}} uker" }, aboutXMonths: { one: "omtrent en måned", other: "omtrent {{count}} måneder" }, xMonths: { one: "en måned", other: "{{count}} måneder" }, aboutXYears: { one: "omtrent ett år", other: "omtrent {{count}} år" }, xYears: { one: "ett år", other: "{{count}} år" }, overXYears: { one: "over ett år", other: "over {{count}} år" }, almostXYears: { one: "nesten ett år", other: "nesten {{count}} år" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "om " + result;
                else
                    return result + " siden"; return result; };
        }, "./node_modules/date-fns/locale/nb/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d. MMMM y", long: "d. MMMM y", medium: "d. MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "'kl'. HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kl.' {{time}}", long: "{{date}} 'kl.' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/nb/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'forrige' eeee 'kl.' p", yesterday: "'i går kl.' p", today: "'i dag kl.' p", tomorrow: "'i morgen kl.' p", nextWeek: "EEEE 'kl.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/nb/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["f.Kr.", "e.Kr."], abbreviated: ["f.Kr.", "e.Kr."], wide: ["før Kristus", "etter Kristus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."], wide: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "T", "O", "T", "F", "L"], short: ["sø", "ma", "ti", "on", "to", "fr", "lø"], abbreviated: ["søn", "man", "tir", "ons", "tor", "fre", "lør"], wide: ["søndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "lørdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på etterm.", evening: "på kvelden", night: "på natten" }, abbreviated: { am: "a.m.", pm: "p.m.", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på etterm.", evening: "på kvelden", night: "på natten" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnatt", noon: "middag", morning: "på morgenen", afternoon: "på ettermiddagen", evening: "på kvelden", night: "på natten" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/nb/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i, abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i, wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^f/i, /^e/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](\.)? kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i, wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtofl]/i, short: /^(sø|ma|ti|on|to|fr|lø)/i, abbreviated: /^(søn|man|tir|ons|tor|fre|lør)/i, wide: /^(søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i, any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgenen|ettermiddagen|kvelden|natten))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a(\.?\s?m\.?)?$/i, pm: /^p(\.?\s?m\.?)?$/i, midnight: /^midn/i, noon: /^midd/i, morning: /morgen/i, afternoon: /ettermiddag/i, evening: /kveld/i, night: /natt/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/nl-BE.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nlBE: () => nlBE });
            var _nl_BE_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE/_lib/formatDistance.js"), _nl_BE_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE/_lib/formatLong.js"), _nl_BE_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE/_lib/formatRelative.js"), _nl_BE_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE/_lib/localize.js"), _nl_BE_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/nl-BE/_lib/match.js");
            let nlBE = { code: "nl-BE", formatDistance: _nl_BE_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _nl_BE_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _nl_BE_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _nl_BE_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _nl_BE_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = nlBE;
        }, "./node_modules/date-fns/locale/nl-BE/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "minder dan een seconde", other: "minder dan {{count}} seconden" }, xSeconds: { one: "1 seconde", other: "{{count}} seconden" }, halfAMinute: "een halve minuut", lessThanXMinutes: { one: "minder dan een minuut", other: "minder dan {{count}} minuten" }, xMinutes: { one: "een minuut", other: "{{count}} minuten" }, aboutXHours: { one: "ongeveer 1 uur", other: "ongeveer {{count}} uur" }, xHours: { one: "1 uur", other: "{{count}} uur" }, xDays: { one: "1 dag", other: "{{count}} dagen" }, aboutXWeeks: { one: "ongeveer 1 week", other: "ongeveer {{count}} weken" }, xWeeks: { one: "1 week", other: "{{count}} weken" }, aboutXMonths: { one: "ongeveer 1 maand", other: "ongeveer {{count}} maanden" }, xMonths: { one: "1 maand", other: "{{count}} maanden" }, aboutXYears: { one: "ongeveer 1 jaar", other: "ongeveer {{count}} jaar" }, xYears: { one: "1 jaar", other: "{{count}} jaar" }, overXYears: { one: "meer dan 1 jaar", other: "meer dan {{count}} jaar" }, almostXYears: { one: "bijna 1 jaar", other: "bijna {{count}} jaar" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "over " + result;
                else
                    return result + " geleden"; return result; };
        }, "./node_modules/date-fns/locale/nl-BE/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'om' {{time}}", long: "{{date}} 'om' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/nl-BE/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'vorige' eeee 'om' p", yesterday: "'gisteren om' p", today: "'vandaag om' p", tomorrow: "'morgen om' p", nextWeek: "eeee 'om' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/nl-BE/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "e", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["v.C.", "n.C."], abbreviated: ["v.Chr.", "n.Chr."], wide: ["voor Christus", "na Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], wide: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Z", "M", "D", "W", "D", "V", "Z"], short: ["zo", "ma", "di", "wo", "do", "vr", "za"], abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"], wide: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middag", morning: "'s ochtends", afternoon: "'s namiddags", evening: "'s avonds", night: "'s nachts" }, abbreviated: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middag", morning: "'s ochtends", afternoon: "'s namiddags", evening: "'s avonds", night: "'s nachts" }, wide: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middag", morning: "'s ochtends", afternoon: "'s namiddags", evening: "'s avonds", night: "'s nachts" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/nl-BE/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)e?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([vn]\.? ?C\.?)/, abbreviated: /^([vn]\. ?Chr\.?)/, wide: /^((voor|na) Christus)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^v/, /^n/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K[1234]/i, wide: /^[1234]e kwartaal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i, wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mei/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[zmdwv]/i, short: /^(zo|ma|di|wo|do|vr|za)/i, abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i, wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i], any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^am/i, pm: /^pm/i, midnight: /^middernacht/i, noon: /^het middaguur/i, morning: /ochtend/i, afternoon: /middag/i, evening: /avond/i, night: /nacht/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/nl.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nl: () => nl });
            var _nl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/nl/_lib/formatDistance.js"), _nl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/nl/_lib/formatLong.js"), _nl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/nl/_lib/formatRelative.js"), _nl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/nl/_lib/localize.js"), _nl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/nl/_lib/match.js");
            let nl = { code: "nl", formatDistance: _nl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _nl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _nl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _nl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _nl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = nl;
        }, "./node_modules/date-fns/locale/nl/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "minder dan een seconde", other: "minder dan {{count}} seconden" }, xSeconds: { one: "1 seconde", other: "{{count}} seconden" }, halfAMinute: "een halve minuut", lessThanXMinutes: { one: "minder dan een minuut", other: "minder dan {{count}} minuten" }, xMinutes: { one: "een minuut", other: "{{count}} minuten" }, aboutXHours: { one: "ongeveer 1 uur", other: "ongeveer {{count}} uur" }, xHours: { one: "1 uur", other: "{{count}} uur" }, xDays: { one: "1 dag", other: "{{count}} dagen" }, aboutXWeeks: { one: "ongeveer 1 week", other: "ongeveer {{count}} weken" }, xWeeks: { one: "1 week", other: "{{count}} weken" }, aboutXMonths: { one: "ongeveer 1 maand", other: "ongeveer {{count}} maanden" }, xMonths: { one: "1 maand", other: "{{count}} maanden" }, aboutXYears: { one: "ongeveer 1 jaar", other: "ongeveer {{count}} jaar" }, xYears: { one: "1 jaar", other: "{{count}} jaar" }, overXYears: { one: "meer dan 1 jaar", other: "meer dan {{count}} jaar" }, almostXYears: { one: "bijna 1 jaar", other: "bijna {{count}} jaar" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "over " + result;
                else
                    return result + " geleden"; return result; };
        }, "./node_modules/date-fns/locale/nl/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "dd-MM-y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'om' {{time}}", long: "{{date}} 'om' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/nl/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'afgelopen' eeee 'om' p", yesterday: "'gisteren om' p", today: "'vandaag om' p", tomorrow: "'morgen om' p", nextWeek: "eeee 'om' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/nl/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "e", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["v.C.", "n.C."], abbreviated: ["v.Chr.", "n.Chr."], wide: ["voor Christus", "na Christus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["K1", "K2", "K3", "K4"], wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], wide: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Z", "M", "D", "W", "D", "V", "Z"], short: ["zo", "ma", "di", "wo", "do", "vr", "za"], abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"], wide: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middaguur", morning: "'s ochtends", afternoon: "'s middags", evening: "'s avonds", night: "'s nachts" }, abbreviated: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middaguur", morning: "'s ochtends", afternoon: "'s middags", evening: "'s avonds", night: "'s nachts" }, wide: { am: "AM", pm: "PM", midnight: "middernacht", noon: "het middaguur", morning: "'s ochtends", afternoon: "'s middags", evening: "'s avonds", night: "'s nachts" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/nl/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)e?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([vn]\.? ?C\.?)/, abbreviated: /^([vn]\. ?Chr\.?)/, wide: /^((voor|na) Christus)/ }, defaultMatchWidth: "wide", parsePatterns: { any: [/^v/, /^n/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^K[1234]/i, wide: /^[1234]e kwartaal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i, wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mei/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[zmdwv]/i, short: /^(zo|ma|di|wo|do|vr|za)/i, abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i, wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i], any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^am/i, pm: /^pm/i, midnight: /^middernacht/i, noon: /^het middaguur/i, morning: /ochtend/i, afternoon: /middag/i, evening: /avond/i, night: /nacht/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/nn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nn: () => nn });
            var _nn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/nn/_lib/formatDistance.js"), _nn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/nn/_lib/formatLong.js"), _nn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/nn/_lib/formatRelative.js"), _nn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/nn/_lib/localize.js"), _nn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/nn/_lib/match.js");
            let nn = { code: "nn", formatDistance: _nn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _nn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _nn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _nn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _nn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = nn;
        }, "./node_modules/date-fns/locale/nn/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mindre enn eitt sekund", other: "mindre enn {{count}} sekund" }, xSeconds: { one: "eitt sekund", other: "{{count}} sekund" }, halfAMinute: "eit halvt minutt", lessThanXMinutes: { one: "mindre enn eitt minutt", other: "mindre enn {{count}} minutt" }, xMinutes: { one: "eitt minutt", other: "{{count}} minutt" }, aboutXHours: { one: "omtrent ein time", other: "omtrent {{count}} timar" }, xHours: { one: "ein time", other: "{{count}} timar" }, xDays: { one: "ein dag", other: "{{count}} dagar" }, aboutXWeeks: { one: "omtrent ei veke", other: "omtrent {{count}} veker" }, xWeeks: { one: "ei veke", other: "{{count}} veker" }, aboutXMonths: { one: "omtrent ein månad", other: "omtrent {{count}} månader" }, xMonths: { one: "ein månad", other: "{{count}} månader" }, aboutXYears: { one: "omtrent eitt år", other: "omtrent {{count}} år" }, xYears: { one: "eitt år", other: "{{count}} år" }, overXYears: { one: "over eitt år", other: "over {{count}} år" }, almostXYears: { one: "nesten eitt år", other: "nesten {{count}} år" } }, wordMapping = ["null", "ein", "to", "tre", "fire", "fem", "seks", "sju", "åtte", "ni", "ti", "elleve", "tolv"], formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count < 13 ? wordMapping[count] : String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "om " + result;
                else
                    return result + " sidan"; return result; };
        }, "./node_modules/date-fns/locale/nn/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d. MMMM y", long: "d. MMMM y", medium: "d. MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "'kl'. HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kl.' {{time}}", long: "{{date}} 'kl.' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/nn/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'førre' eeee 'kl.' p", yesterday: "'i går kl.' p", today: "'i dag kl.' p", tomorrow: "'i morgon kl.' p", nextWeek: "EEEE 'kl.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/nn/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["f.Kr.", "e.Kr."], abbreviated: ["f.Kr.", "e.Kr."], wide: ["før Kristus", "etter Kristus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."], wide: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "T", "O", "T", "F", "L"], short: ["su", "må", "ty", "on", "to", "fr", "lau"], abbreviated: ["sun", "mån", "tys", "ons", "tor", "fre", "laur"], wide: ["sundag", "måndag", "tysdag", "onsdag", "torsdag", "fredag", "laurdag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på etterm.", evening: "på kvelden", night: "på natta" }, abbreviated: { am: "a.m.", pm: "p.m.", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på etterm.", evening: "på kvelden", night: "på natta" }, wide: { am: "a.m.", pm: "p.m.", midnight: "midnatt", noon: "middag", morning: "på morgonen", afternoon: "på ettermiddagen", evening: "på kvelden", night: "på natta" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/nn/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i, abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i, wide: /^(før Kristus|før vår tid|etter Kristus|vår tid)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^f/i, /^e/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](\.)? kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i, wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtofl]/i, short: /^(su|må|ty|on|to|fr|la)/i, abbreviated: /^(sun|mån|tys|ons|tor|fre|laur)/i, wide: /^(sundag|måndag|tysdag|onsdag|torsdag|fredag|laurdag)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i, any: /^([ap]\.?\s?m\.?|midnatt|middag|(på) (morgonen|ettermiddagen|kvelden|natta))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a(\.?\s?m\.?)?$/i, pm: /^p(\.?\s?m\.?)?$/i, midnight: /^midn/i, noon: /^midd/i, morning: /morgon/i, afternoon: /ettermiddag/i, evening: /kveld/i, night: /natt/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/oc.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, oc: () => oc });
            var _oc_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/oc/_lib/formatDistance.js"), _oc_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/oc/_lib/formatLong.js"), _oc_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/oc/_lib/formatRelative.js"), _oc_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/oc/_lib/localize.js"), _oc_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/oc/_lib/match.js");
            let oc = { code: "oc", formatDistance: _oc_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _oc_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _oc_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _oc_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _oc_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = oc;
        }, "./node_modules/date-fns/locale/oc/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mens d’una segonda", other: "mens de {{count}} segondas" }, xSeconds: { one: "1 segonda", other: "{{count}} segondas" }, halfAMinute: "30 segondas", lessThanXMinutes: { one: "mens d’una minuta", other: "mens de {{count}} minutas" }, xMinutes: { one: "1 minuta", other: "{{count}} minutas" }, aboutXHours: { one: "environ 1 ora", other: "environ {{count}} oras" }, xHours: { one: "1 ora", other: "{{count}} oras" }, xDays: { one: "1 jorn", other: "{{count}} jorns" }, aboutXWeeks: { one: "environ 1 setmana", other: "environ {{count}} setmanas" }, xWeeks: { one: "1 setmana", other: "{{count}} setmanas" }, aboutXMonths: { one: "environ 1 mes", other: "environ {{count}} meses" }, xMonths: { one: "1 mes", other: "{{count}} meses" }, aboutXYears: { one: "environ 1 an", other: "environ {{count}} ans" }, xYears: { one: "1 an", other: "{{count}} ans" }, overXYears: { one: "mai d’un an", other: "mai de {{count}} ans" }, almostXYears: { one: "gaireben un an", other: "gaireben {{count}} ans" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "d’aquí " + result;
                else
                    return "fa " + result; return result; };
        }, "./node_modules/date-fns/locale/oc/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d 'de' MMMM y", long: "d 'de' MMMM y", medium: "d MMM y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'a' {{time}}", long: "{{date}} 'a' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/oc/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'passat a' p", yesterday: "'ièr a' p", today: "'uèi a' p", tomorrow: "'deman a' p", nextWeek: "eeee 'a' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/oc/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let ordinal, number = Number(dirtyNumber), unit = options1?.unit; switch (number) {
                    case 1:
                        ordinal = "èr";
                        break;
                    case 2:
                        ordinal = "nd";
                        break;
                    default: ordinal = "en";
                } return ("year" === unit || "week" === unit || "hour" === unit || "minute" === unit || "second" === unit) && (ordinal += "a"), number + ordinal; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ab. J.C.", "apr. J.C."], abbreviated: ["ab. J.C.", "apr. J.C."], wide: ["abans Jèsus-Crist", "après Jèsus-Crist"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["T1", "T2", "T3", "T4"], abbreviated: ["1èr trim.", "2nd trim.", "3en trim.", "4en trim."], wide: ["1èr trimèstre", "2nd trimèstre", "3en trimèstre", "4en trimèstre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["GN", "FB", "MÇ", "AB", "MA", "JN", "JL", "AG", "ST", "OC", "NV", "DC"], abbreviated: ["gen.", "febr.", "març", "abr.", "mai", "junh", "jul.", "ag.", "set.", "oct.", "nov.", "dec."], wide: ["genièr", "febrièr", "març", "abril", "mai", "junh", "julhet", "agost", "setembre", "octòbre", "novembre", "decembre"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."], short: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."], abbreviated: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."], wide: ["dimenge", "diluns", "dimars", "dimècres", "dijòus", "divendres", "dissabte"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "mièjanuèch", noon: "miègjorn", morning: "matin", afternoon: "aprèp-miègjorn", evening: "vèspre", night: "nuèch" }, abbreviated: { am: "a.m.", pm: "p.m.", midnight: "mièjanuèch", noon: "miègjorn", morning: "matin", afternoon: "aprèp-miègjorn", evening: "vèspre", night: "nuèch" }, wide: { am: "a.m.", pm: "p.m.", midnight: "mièjanuèch", noon: "miègjorn", morning: "matin", afternoon: "aprèp-miègjorn", evening: "vèspre", night: "nuèch" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "am", pm: "pm", midnight: "mièjanuèch", noon: "miègjorn", morning: "del matin", afternoon: "de l’aprèp-miègjorn", evening: "del ser", night: "de la nuèch" }, abbreviated: { am: "AM", pm: "PM", midnight: "mièjanuèch", noon: "miègjorn", morning: "del matin", afternoon: "de l’aprèp-miègjorn", evening: "del ser", night: "de la nuèch" }, wide: { am: "ante meridiem", pm: "post meridiem", midnight: "mièjanuèch", noon: "miègjorn", morning: "del matin", afternoon: "de l’aprèp-miègjorn", evening: "del ser", night: "de la nuèch" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/oc/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(èr|nd|en)?[a]?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ab\.J\.C|apr\.J\.C|apr\.J\.-C)/i, abbreviated: /^(ab\.J\.-C|ab\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i, wide: /^(abans Jèsus-Crist|après Jèsus-Crist)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ab/i, /^ap/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^T[1234]/i, abbreviated: /^[1234](èr|nd|en)? trim\.?/i, wide: /^[1234](èr|nd|en)? trimèstre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(GN|FB|MÇ|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i, abbreviated: /^(gen|febr|març|abr|mai|junh|jul|ag|set|oct|nov|dec)\.?/i, wide: /^(genièr|febrièr|març|abril|mai|junh|julhet|agost|setembre|octòbre|novembre|decembre)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^g/i, /^f/i, /^ma[r?]|MÇ/i, /^ab/i, /^ma[i?]/i, /^ju[n?]|JN/i, /^ju[l?]|JL/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^d[glmcjvs]\.?/i, short: /^d[glmcjvs]\.?/i, abbreviated: /^d[glmcjvs]\.?/i, wide: /^(dimenge|diluns|dimars|dimècres|dijòus|divendres|dissabte)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i], short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i], abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i], any: [/^dg|dime/i, /^dl|dil/i, /^dm|dima/i, /^dc|dimè/i, /^dj|dij/i, /^dv|div/i, /^ds|dis/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /(^(a\.?m|p\.?m))|(ante meridiem|post meridiem)|((del |de la |de l’)(matin|aprèp-miègjorn|vèspre|ser|nuèch))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /(^a)|ante meridiem/i, pm: /(^p)|post meridiem/i, midnight: /^mièj/i, noon: /^mièg/i, morning: /matin/i, afternoon: /aprèp-miègjorn/i, evening: /vèspre|ser/i, night: /nuèch/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/pl.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, pl: () => pl });
            var _pl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/pl/_lib/formatDistance.js"), _pl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/pl/_lib/formatLong.js"), _pl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/pl/_lib/formatRelative.js"), _pl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/pl/_lib/localize.js"), _pl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/pl/_lib/match.js");
            let pl = { code: "pl", formatDistance: _pl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _pl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _pl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _pl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _pl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = pl;
        }, "./node_modules/date-fns/locale/pl/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { regular: "mniej niż sekunda", past: "mniej niż sekundę", future: "mniej niż sekundę" }, twoFour: "mniej niż {{count}} sekundy", other: "mniej niż {{count}} sekund" }, xSeconds: { one: { regular: "sekunda", past: "sekundę", future: "sekundę" }, twoFour: "{{count}} sekundy", other: "{{count}} sekund" }, halfAMinute: { one: "pół minuty", twoFour: "pół minuty", other: "pół minuty" }, lessThanXMinutes: { one: { regular: "mniej niż minuta", past: "mniej niż minutę", future: "mniej niż minutę" }, twoFour: "mniej niż {{count}} minuty", other: "mniej niż {{count}} minut" }, xMinutes: { one: { regular: "minuta", past: "minutę", future: "minutę" }, twoFour: "{{count}} minuty", other: "{{count}} minut" }, aboutXHours: { one: { regular: "około godziny", past: "około godziny", future: "około godzinę" }, twoFour: "około {{count}} godziny", other: "około {{count}} godzin" }, xHours: { one: { regular: "godzina", past: "godzinę", future: "godzinę" }, twoFour: "{{count}} godziny", other: "{{count}} godzin" }, xDays: { one: { regular: "dzień", past: "dzień", future: "1 dzień" }, twoFour: "{{count}} dni", other: "{{count}} dni" }, aboutXWeeks: { one: "około tygodnia", twoFour: "około {{count}} tygodni", other: "około {{count}} tygodni" }, xWeeks: { one: "tydzień", twoFour: "{{count}} tygodnie", other: "{{count}} tygodni" }, aboutXMonths: { one: "około miesiąc", twoFour: "około {{count}} miesiące", other: "około {{count}} miesięcy" }, xMonths: { one: "miesiąc", twoFour: "{{count}} miesiące", other: "{{count}} miesięcy" }, aboutXYears: { one: "około rok", twoFour: "około {{count}} lata", other: "około {{count}} lat" }, xYears: { one: "rok", twoFour: "{{count}} lata", other: "{{count}} lat" }, overXYears: { one: "ponad rok", twoFour: "ponad {{count}} lata", other: "ponad {{count}} lat" }, almostXYears: { one: "prawie rok", twoFour: "prawie {{count}} lata", other: "prawie {{count}} lat" } };
            function declension(scheme, count, time) { let group = function (scheme, count) { if (1 === count)
                return scheme.one; let rem100 = count % 100; if (rem100 <= 20 && rem100 > 10)
                return scheme.other; let rem10 = rem100 % 10; return rem10 >= 2 && rem10 <= 4 ? scheme.twoFour : scheme.other; }(scheme, count); return ("string" == typeof group ? group : group[time]).replace("{{count}}", String(count)); }
            let formatDistance = (token, count, options1) => { let scheme = formatDistanceLocale[token]; return options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? "za " + declension(scheme, count, "future") : declension(scheme, count, "past") + " temu" : declension(scheme, count, "regular"); };
        }, "./node_modules/date-fns/locale/pl/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y", long: "do MMMM y", medium: "do MMM y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/pl/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let adjectivesLastWeek = { masculine: "ostatni", feminine: "ostatnia" }, adjectivesThisWeek = { masculine: "ten", feminine: "ta" }, adjectivesNextWeek = { masculine: "następny", feminine: "następna" }, dayGrammaticalGender = { 0: "feminine", 1: "masculine", 2: "masculine", 3: "feminine", 4: "masculine", 5: "masculine", 6: "feminine" };
            function dayAndTimeWithAdjective(token, date, baseDate, options1) { let adjectives; if ((0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1))
                adjectives = adjectivesThisWeek;
            else if ("lastWeek" === token)
                adjectives = adjectivesLastWeek;
            else if ("nextWeek" === token)
                adjectives = adjectivesNextWeek;
            else
                throw Error(`Cannot determine adjectives for token ${token}`); let adjective = adjectives[dayGrammaticalGender[date.getDay()]]; return `'${adjective}' eeee 'o' p`; }
            let formatRelativeLocale = { lastWeek: dayAndTimeWithAdjective, yesterday: "'wczoraj o' p", today: "'dzisiaj o' p", tomorrow: "'jutro o' p", nextWeek: dayAndTimeWithAdjective, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(token, date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/pl/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["p.n.e.", "n.e."], abbreviated: ["p.n.e.", "n.e."], wide: ["przed naszą erą", "naszej ery"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["I kw.", "II kw.", "III kw.", "IV kw."], wide: ["I kwartał", "II kwartał", "III kwartał", "IV kwartał"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"], abbreviated: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], wide: ["styczeń", "luty", "marzec", "kwiecień", "maj", "czerwiec", "lipiec", "sierpień", "wrzesień", "październik", "listopad", "grudzień"] }, defaultWidth: "wide", formattingValues: { narrow: ["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], abbreviated: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "paź", "lis", "gru"], wide: ["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "września", "października", "listopada", "grudnia"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["N", "P", "W", "Ś", "C", "P", "S"], short: ["nie", "pon", "wto", "śro", "czw", "pią", "sob"], abbreviated: ["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."], wide: ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"] }, defaultWidth: "wide", formattingValues: { narrow: ["n", "p", "w", "ś", "c", "p", "s"], short: ["nie", "pon", "wto", "śro", "czw", "pią", "sob"], abbreviated: ["niedz.", "pon.", "wt.", "śr.", "czw.", "pt.", "sob."], wide: ["niedziela", "poniedziałek", "wtorek", "środa", "czwartek", "piątek", "sobota"] }, defaultFormattingWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "półn.", noon: "poł", morning: "rano", afternoon: "popoł.", evening: "wiecz.", night: "noc" }, abbreviated: { am: "AM", pm: "PM", midnight: "północ", noon: "południe", morning: "rano", afternoon: "popołudnie", evening: "wieczór", night: "noc" }, wide: { am: "AM", pm: "PM", midnight: "północ", noon: "południe", morning: "rano", afternoon: "popołudnie", evening: "wieczór", night: "noc" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "o półn.", noon: "w poł.", morning: "rano", afternoon: "po poł.", evening: "wiecz.", night: "w nocy" }, abbreviated: { am: "AM", pm: "PM", midnight: "o północy", noon: "w południe", morning: "rano", afternoon: "po południu", evening: "wieczorem", night: "w nocy" }, wide: { am: "AM", pm: "PM", midnight: "o północy", noon: "w południe", morning: "rano", afternoon: "po południu", evening: "wieczorem", night: "w nocy" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/pl/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i, abbreviated: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i, wide: /^(przed\s*nasz(ą|a)\s*er(ą|a)|naszej\s*ery)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^p/i, /^n/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^(I|II|III|IV)\s*kw\.?/i, wide: /^(I|II|III|IV)\s*kwarta(ł|l)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/1/i, /2/i, /3/i, /4/i], any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[slmkcwpg]/i, abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(ź|z)|lis|gru)/i, wide: /^(stycznia|stycze(ń|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(ń|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(ń|n)|wrze(ś|s)nia|wrzesie(ń|n)|pa(ź|z)dziernika|pa(ź|z)dziernik|listopada|listopad|grudnia|grudzie(ń|n))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^l/i, /^m/i, /^k/i, /^m/i, /^c/i, /^l/i, /^s/i, /^w/i, /^p/i, /^l/i, /^g/i], any: [/^st/i, /^lu/i, /^mar/i, /^k/i, /^maj/i, /^c/i, /^lip/i, /^si/i, /^w/i, /^p/i, /^lis/i, /^g/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npwścs]/i, short: /^(nie|pon|wto|(ś|s)ro|czw|pi(ą|a)|sob)/i, abbreviated: /^(niedz|pon|wt|(ś|s)r|czw|pt|sob)\.?/i, wide: /^(niedziela|poniedzia(ł|l)ek|wtorek|(ś|s)roda|czwartek|pi(ą|a)tek|sobota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^n/i, /^p/i, /^w/i, /^ś/i, /^c/i, /^p/i, /^s/i], abbreviated: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pt/i, /^so/i], any: [/^n/i, /^po/i, /^w/i, /^(ś|s)r/i, /^c/i, /^pi/i, /^so/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(^a$|^p$|pó(ł|l)n\.?|o\s*pó(ł|l)n\.?|po(ł|l)\.?|w\s*po(ł|l)\.?|po\s*po(ł|l)\.?|rano|wiecz\.?|noc|w\s*nocy)/i, any: /^(am|pm|pó(ł|l)noc|o\s*pó(ł|l)nocy|po(ł|l)udnie|w\s*po(ł|l)udnie|popo(ł|l)udnie|po\s*po(ł|l)udniu|rano|wieczór|wieczorem|noc|w\s*nocy)/i }, defaultMatchWidth: "any", parsePatterns: { narrow: { am: /^a$/i, pm: /^p$/i, midnight: /pó(ł|l)n/i, noon: /po(ł|l)/i, morning: /rano/i, afternoon: /po\s*po(ł|l)/i, evening: /wiecz/i, night: /noc/i }, any: { am: /^am/i, pm: /^pm/i, midnight: /pó(ł|l)n/i, noon: /po(ł|l)/i, morning: /rano/i, afternoon: /po\s*po(ł|l)/i, evening: /wiecz/i, night: /noc/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/pt-BR.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ptBR: () => ptBR });
            var _pt_BR_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR/_lib/formatDistance.js"), _pt_BR_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR/_lib/formatLong.js"), _pt_BR_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR/_lib/formatRelative.js"), _pt_BR_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR/_lib/localize.js"), _pt_BR_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/pt-BR/_lib/match.js");
            let ptBR = { code: "pt-BR", formatDistance: _pt_BR_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _pt_BR_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _pt_BR_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _pt_BR_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _pt_BR_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ptBR;
        }, "./node_modules/date-fns/locale/pt-BR/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "menos de um segundo", other: "menos de {{count}} segundos" }, xSeconds: { one: "1 segundo", other: "{{count}} segundos" }, halfAMinute: "meio minuto", lessThanXMinutes: { one: "menos de um minuto", other: "menos de {{count}} minutos" }, xMinutes: { one: "1 minuto", other: "{{count}} minutos" }, aboutXHours: { one: "cerca de 1 hora", other: "cerca de {{count}} horas" }, xHours: { one: "1 hora", other: "{{count}} horas" }, xDays: { one: "1 dia", other: "{{count}} dias" }, aboutXWeeks: { one: "cerca de 1 semana", other: "cerca de {{count}} semanas" }, xWeeks: { one: "1 semana", other: "{{count}} semanas" }, aboutXMonths: { one: "cerca de 1 mês", other: "cerca de {{count}} meses" }, xMonths: { one: "1 mês", other: "{{count}} meses" }, aboutXYears: { one: "cerca de 1 ano", other: "cerca de {{count}} anos" }, xYears: { one: "1 ano", other: "{{count}} anos" }, overXYears: { one: "mais de 1 ano", other: "mais de {{count}} anos" }, almostXYears: { one: "quase 1 ano", other: "quase {{count}} anos" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "em " + result;
                else
                    return "há " + result; return result; };
        }, "./node_modules/date-fns/locale/pt-BR/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d 'de' MMMM 'de' y", long: "d 'de' MMMM 'de' y", medium: "d MMM y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'às' {{time}}", long: "{{date}} 'às' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/pt-BR/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { let weekday = date.getDay(); return "'" + (0 === weekday || 6 === weekday ? "último" : "última") + "' eeee 'às' p"; }, yesterday: "'ontem às' p", today: "'hoje às' p", tomorrow: "'amanhã às' p", nextWeek: "eeee 'às' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/pt-BR/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); return options1?.unit === "week" ? number + "ª" : number + "º"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["AC", "DC"], abbreviated: ["AC", "DC"], wide: ["antes de cristo", "depois de cristo"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], wide: ["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "S", "T", "Q", "Q", "S", "S"], short: ["dom", "seg", "ter", "qua", "qui", "sex", "sab"], abbreviated: ["domingo", "segunda", "terça", "quarta", "quinta", "sexta", "sábado"], wide: ["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "manhã", afternoon: "tarde", evening: "tarde", night: "noite" }, abbreviated: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "manhã", afternoon: "tarde", evening: "tarde", night: "noite" }, wide: { am: "a.m.", pm: "p.m.", midnight: "meia-noite", noon: "meio-dia", morning: "manhã", afternoon: "tarde", evening: "tarde", night: "noite" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "md", morning: "da manhã", afternoon: "da tarde", evening: "da tarde", night: "da noite" }, abbreviated: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "da manhã", afternoon: "da tarde", evening: "da tarde", night: "da noite" }, wide: { am: "a.m.", pm: "p.m.", midnight: "meia-noite", noon: "meio-dia", morning: "da manhã", afternoon: "da tarde", evening: "da tarde", night: "da noite" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/pt-BR/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)[ºªo]?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ac|dc|a|d)/i, abbreviated: /^(a\.?\s?c\.?|d\.?\s?c\.?)/i, wide: /^(antes de cristo|depois de cristo)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ac/i, /^dc/i], wide: [/^antes de cristo/i, /^depois de cristo/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^[1234](º)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmajsond]/i, abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i, wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^fev/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dez/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(dom|[23456]ª?|s[aá]b)/i, short: /^(dom|[23456]ª?|s[aá]b)/i, abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá]b)/i, wide: /^(domingo|(segunda|ter[cç]a|quarta|quinta|sexta)([- ]feira)?|s[aá]bado)/i }, defaultMatchWidth: "wide", parsePatterns: { short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i], narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá]/i], any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá]b/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i, any: /^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mn|^meia[-\s]noite/i, noon: /^md|^meio[-\s]dia/i, morning: /manhã/i, afternoon: /tarde/i, evening: /tarde/i, night: /noite/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/pt.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, pt: () => pt });
            var _pt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/pt/_lib/formatDistance.js"), _pt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/pt/_lib/formatLong.js"), _pt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/pt/_lib/formatRelative.js"), _pt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/pt/_lib/localize.js"), _pt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/pt/_lib/match.js");
            let pt = { code: "pt", formatDistance: _pt_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _pt_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _pt_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _pt_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _pt_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = pt;
        }, "./node_modules/date-fns/locale/pt/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "menos de um segundo", other: "menos de {{count}} segundos" }, xSeconds: { one: "1 segundo", other: "{{count}} segundos" }, halfAMinute: "meio minuto", lessThanXMinutes: { one: "menos de um minuto", other: "menos de {{count}} minutos" }, xMinutes: { one: "1 minuto", other: "{{count}} minutos" }, aboutXHours: { one: "aproximadamente 1 hora", other: "aproximadamente {{count}} horas" }, xHours: { one: "1 hora", other: "{{count}} horas" }, xDays: { one: "1 dia", other: "{{count}} dias" }, aboutXWeeks: { one: "aproximadamente 1 semana", other: "aproximadamente {{count}} semanas" }, xWeeks: { one: "1 semana", other: "{{count}} semanas" }, aboutXMonths: { one: "aproximadamente 1 mês", other: "aproximadamente {{count}} meses" }, xMonths: { one: "1 mês", other: "{{count}} meses" }, aboutXYears: { one: "aproximadamente 1 ano", other: "aproximadamente {{count}} anos" }, xYears: { one: "1 ano", other: "{{count}} anos" }, overXYears: { one: "mais de 1 ano", other: "mais de {{count}} anos" }, almostXYears: { one: "quase 1 ano", other: "quase {{count}} anos" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "daqui a " + result;
                else
                    return "há " + result; return result; };
        }, "./node_modules/date-fns/locale/pt/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d 'de' MMMM 'de' y", long: "d 'de' MMMM 'de' y", medium: "d 'de' MMM 'de' y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'às' {{time}}", long: "{{date}} 'às' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/pt/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { let weekday = date.getDay(); return "'" + (0 === weekday || 6 === weekday ? "último" : "última") + "' eeee 'às' p"; }, yesterday: "'ontem às' p", today: "'hoje às' p", tomorrow: "'amanhã às' p", nextWeek: "eeee 'às' p", other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/pt/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "º", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["aC", "dC"], abbreviated: ["a.C.", "d.C."], wide: ["antes de Cristo", "depois de Cristo"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["1º trimestre", "2º trimestre", "3º trimestre", "4º trimestre"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], wide: ["janeiro", "fevereiro", "março", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["d", "s", "t", "q", "q", "s", "s"], short: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"], abbreviated: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"], wide: ["domingo", "segunda-feira", "terça-feira", "quarta-feira", "quinta-feira", "sexta-feira", "sábado"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "manhã", afternoon: "tarde", evening: "noite", night: "madrugada" }, abbreviated: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "manhã", afternoon: "tarde", evening: "noite", night: "madrugada" }, wide: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "manhã", afternoon: "tarde", evening: "noite", night: "madrugada" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "da manhã", afternoon: "da tarde", evening: "da noite", night: "da madrugada" }, abbreviated: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "da manhã", afternoon: "da tarde", evening: "da noite", night: "da madrugada" }, wide: { am: "AM", pm: "PM", midnight: "meia-noite", noon: "meio-dia", morning: "da manhã", afternoon: "da tarde", evening: "da noite", night: "da madrugada" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/pt/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(º|ª)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ac|dc|a|d)/i, abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i, wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ac/i, /^dc/i], wide: [/^(antes de cristo|antes da era comum)/i, /^(depois de cristo|era comum)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^[1234](º|ª)? trimestre/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i, wide: /^(janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ab/i, /^mai/i, /^jun/i, /^jul/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dstq]/i, short: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i, abbreviated: /^(dom|seg|ter|qua|qui|sex|s[áa]b)/i, wide: /^(domingo|segunda-?\s?feira|terça-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[áa]bado)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i], any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[áa]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i, any: /^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^meia/i, noon: /^meio/i, morning: /manh[ãa]/i, afternoon: /tarde/i, evening: /noite/i, night: /madrugada/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ro.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ro: () => ro });
            var _ro_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ro/_lib/formatDistance.js"), _ro_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ro/_lib/formatLong.js"), _ro_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ro/_lib/formatRelative.js"), _ro_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ro/_lib/localize.js"), _ro_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ro/_lib/match.js");
            let ro = { code: "ro", formatDistance: _ro_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ro_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ro_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ro_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ro_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ro;
        }, "./node_modules/date-fns/locale/ro/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mai puțin de o secundă", other: "mai puțin de {{count}} secunde" }, xSeconds: { one: "1 secundă", other: "{{count}} secunde" }, halfAMinute: "jumătate de minut", lessThanXMinutes: { one: "mai puțin de un minut", other: "mai puțin de {{count}} minute" }, xMinutes: { one: "1 minut", other: "{{count}} minute" }, aboutXHours: { one: "circa 1 oră", other: "circa {{count}} ore" }, xHours: { one: "1 oră", other: "{{count}} ore" }, xDays: { one: "1 zi", other: "{{count}} zile" }, aboutXWeeks: { one: "circa o săptămână", other: "circa {{count}} săptămâni" }, xWeeks: { one: "1 săptămână", other: "{{count}} săptămâni" }, aboutXMonths: { one: "circa 1 lună", other: "circa {{count}} luni" }, xMonths: { one: "1 lună", other: "{{count}} luni" }, aboutXYears: { one: "circa 1 an", other: "circa {{count}} ani" }, xYears: { one: "1 an", other: "{{count}} ani" }, overXYears: { one: "peste 1 an", other: "peste {{count}} ani" }, almostXYears: { one: "aproape 1 an", other: "aproape {{count}} ani" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "în " + result;
                else
                    return result + " în urmă"; return result; };
        }, "./node_modules/date-fns/locale/ro/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM yyyy", long: "d MMMM yyyy", medium: "d MMM yyyy", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'la' {{time}}", long: "{{date}} 'la' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ro/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'trecută la' p", yesterday: "'ieri la' p", today: "'astăzi la' p", tomorrow: "'mâine la' p", nextWeek: "eeee 'viitoare la' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ro/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Î", "D"], abbreviated: ["Î.d.C.", "D.C."], wide: ["Înainte de Cristos", "După Cristos"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["T1", "T2", "T3", "T4"], wide: ["primul trimestru", "al doilea trimestru", "al treilea trimestru", "al patrulea trimestru"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], abbreviated: ["ian", "feb", "mar", "apr", "mai", "iun", "iul", "aug", "sep", "oct", "noi", "dec"], wide: ["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["d", "l", "m", "m", "j", "v", "s"], short: ["du", "lu", "ma", "mi", "jo", "vi", "sâ"], abbreviated: ["dum", "lun", "mar", "mie", "joi", "vin", "sâm"], wide: ["duminică", "luni", "marți", "miercuri", "joi", "vineri", "sâmbătă"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "ami", morning: "dim", afternoon: "da", evening: "s", night: "n" }, abbreviated: { am: "AM", pm: "PM", midnight: "miezul nopții", noon: "amiază", morning: "dimineață", afternoon: "după-amiază", evening: "seară", night: "noapte" }, wide: { am: "a.m.", pm: "p.m.", midnight: "miezul nopții", noon: "amiază", morning: "dimineață", afternoon: "după-amiază", evening: "seară", night: "noapte" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "mn", noon: "amiază", morning: "dimineață", afternoon: "după-amiază", evening: "seară", night: "noapte" }, abbreviated: { am: "AM", pm: "PM", midnight: "miezul nopții", noon: "amiază", morning: "dimineață", afternoon: "după-amiază", evening: "seară", night: "noapte" }, wide: { am: "a.m.", pm: "p.m.", midnight: "miezul nopții", noon: "amiază", morning: "dimineață", afternoon: "după-amiază", evening: "seară", night: "noapte" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ro/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(Î|D)/i, abbreviated: /^(Î\.?\s?d\.?\s?C\.?|Î\.?\s?e\.?\s?n\.?|D\.?\s?C\.?|e\.?\s?n\.?)/i, wide: /^(Înainte de Cristos|Înaintea erei noastre|După Cristos|Era noastră)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^ÎC/i, /^DC/i], wide: [/^(Înainte de Cristos|Înaintea erei noastre)/i, /^(După Cristos|Era noastră)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^T[1234]/i, wide: /^trimestrul [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ifmaasond]/i, abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i, wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^i/i, /^f/i, /^m/i, /^a/i, /^m/i, /^i/i, /^i/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ia/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^iun/i, /^iul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dlmjvs]/i, short: /^(d|l|ma|mi|j|v|s)/i, abbreviated: /^(dum|lun|mar|mie|jo|vi|sâ)/i, wide: /^(duminica|luni|marţi|miercuri|joi|vineri|sâmbătă)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i], any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|mn|a|(dimineaţa|după-amiaza|seara|noaptea))/i, any: /^([ap]\.?\s?m\.?|miezul nopții|amiaza|(dimineaţa|după-amiaza|seara|noaptea))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^mn/i, noon: /amiaza/i, morning: /dimineaţa/i, afternoon: /după-amiaza/i, evening: /seara/i, night: /noaptea/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ru.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ru: () => ru });
            var _ru_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ru/_lib/formatDistance.js"), _ru_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ru/_lib/formatLong.js"), _ru_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ru/_lib/formatRelative.js"), _ru_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ru/_lib/localize.js"), _ru_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ru/_lib/match.js");
            let ru = { code: "ru", formatDistance: _ru_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ru_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ru_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ru_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ru_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ru;
        }, "./node_modules/date-fns/locale/ru/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function declension(scheme, count) { if (void 0 !== scheme.one && 1 === count)
                return scheme.one; let rem10 = count % 10, rem100 = count % 100; return 1 === rem10 && 11 !== rem100 ? scheme.singularNominative.replace("{{count}}", String(count)) : rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20) ? scheme.singularGenitive.replace("{{count}}", String(count)) : scheme.pluralGenitive.replace("{{count}}", String(count)); }
            function buildLocalizeTokenFn(scheme) { return (count, options1) => { if (!options1?.addSuffix)
                return declension(scheme.regular, count); if (options1.comparison && options1.comparison > 0)
                if (scheme.future)
                    return declension(scheme.future, count);
                else
                    return "через " + declension(scheme.regular, count); return scheme.past ? declension(scheme.past, count) : declension(scheme.regular, count) + " назад"; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: buildLocalizeTokenFn({ regular: { one: "меньше секунды", singularNominative: "меньше {{count}} секунды", singularGenitive: "меньше {{count}} секунд", pluralGenitive: "меньше {{count}} секунд" }, future: { one: "меньше, чем через секунду", singularNominative: "меньше, чем через {{count}} секунду", singularGenitive: "меньше, чем через {{count}} секунды", pluralGenitive: "меньше, чем через {{count}} секунд" } }), xSeconds: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} секунда", singularGenitive: "{{count}} секунды", pluralGenitive: "{{count}} секунд" }, past: { singularNominative: "{{count}} секунду назад", singularGenitive: "{{count}} секунды назад", pluralGenitive: "{{count}} секунд назад" }, future: { singularNominative: "через {{count}} секунду", singularGenitive: "через {{count}} секунды", pluralGenitive: "через {{count}} секунд" } }), halfAMinute: (_count, options1) => { if (options1?.addSuffix)
                    if (options1.comparison && options1.comparison > 0)
                        return "через полминуты";
                    else
                        return "полминуты назад"; return "полминуты"; }, lessThanXMinutes: buildLocalizeTokenFn({ regular: { one: "меньше минуты", singularNominative: "меньше {{count}} минуты", singularGenitive: "меньше {{count}} минут", pluralGenitive: "меньше {{count}} минут" }, future: { one: "меньше, чем через минуту", singularNominative: "меньше, чем через {{count}} минуту", singularGenitive: "меньше, чем через {{count}} минуты", pluralGenitive: "меньше, чем через {{count}} минут" } }), xMinutes: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} минута", singularGenitive: "{{count}} минуты", pluralGenitive: "{{count}} минут" }, past: { singularNominative: "{{count}} минуту назад", singularGenitive: "{{count}} минуты назад", pluralGenitive: "{{count}} минут назад" }, future: { singularNominative: "через {{count}} минуту", singularGenitive: "через {{count}} минуты", pluralGenitive: "через {{count}} минут" } }), aboutXHours: buildLocalizeTokenFn({ regular: { singularNominative: "около {{count}} часа", singularGenitive: "около {{count}} часов", pluralGenitive: "около {{count}} часов" }, future: { singularNominative: "приблизительно через {{count}} час", singularGenitive: "приблизительно через {{count}} часа", pluralGenitive: "приблизительно через {{count}} часов" } }), xHours: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} час", singularGenitive: "{{count}} часа", pluralGenitive: "{{count}} часов" } }), xDays: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} день", singularGenitive: "{{count}} дня", pluralGenitive: "{{count}} дней" } }), aboutXWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "около {{count}} недели", singularGenitive: "около {{count}} недель", pluralGenitive: "около {{count}} недель" }, future: { singularNominative: "приблизительно через {{count}} неделю", singularGenitive: "приблизительно через {{count}} недели", pluralGenitive: "приблизительно через {{count}} недель" } }), xWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} неделя", singularGenitive: "{{count}} недели", pluralGenitive: "{{count}} недель" } }), aboutXMonths: buildLocalizeTokenFn({ regular: { singularNominative: "около {{count}} месяца", singularGenitive: "около {{count}} месяцев", pluralGenitive: "около {{count}} месяцев" }, future: { singularNominative: "приблизительно через {{count}} месяц", singularGenitive: "приблизительно через {{count}} месяца", pluralGenitive: "приблизительно через {{count}} месяцев" } }), xMonths: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} месяц", singularGenitive: "{{count}} месяца", pluralGenitive: "{{count}} месяцев" } }), aboutXYears: buildLocalizeTokenFn({ regular: { singularNominative: "около {{count}} года", singularGenitive: "около {{count}} лет", pluralGenitive: "около {{count}} лет" }, future: { singularNominative: "приблизительно через {{count}} год", singularGenitive: "приблизительно через {{count}} года", pluralGenitive: "приблизительно через {{count}} лет" } }), xYears: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} год", singularGenitive: "{{count}} года", pluralGenitive: "{{count}} лет" } }), overXYears: buildLocalizeTokenFn({ regular: { singularNominative: "больше {{count}} года", singularGenitive: "больше {{count}} лет", pluralGenitive: "больше {{count}} лет" }, future: { singularNominative: "больше, чем через {{count}} год", singularGenitive: "больше, чем через {{count}} года", pluralGenitive: "больше, чем через {{count}} лет" } }), almostXYears: buildLocalizeTokenFn({ regular: { singularNominative: "почти {{count}} год", singularGenitive: "почти {{count}} года", pluralGenitive: "почти {{count}} лет" }, future: { singularNominative: "почти через {{count}} год", singularGenitive: "почти через {{count}} года", pluralGenitive: "почти через {{count}} лет" } }) }, formatDistance = (token, count, options1) => formatDistanceLocale[token](count, options1);
        }, "./node_modules/date-fns/locale/ru/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM y 'г.'", long: "d MMMM y 'г.'", medium: "d MMM y 'г.'", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ru/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let accusativeWeekdays = ["воскресенье", "понедельник", "вторник", "среду", "четверг", "пятницу", "субботу"];
            function thisWeek(day) { let weekday = accusativeWeekdays[day]; return 2 === day ? "'во " + weekday + " в' p" : "'в " + weekday + " в' p"; }
            let formatRelativeLocale = { lastWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0: return "'в прошлое " + weekday + " в' p";
                    case 1:
                    case 2:
                    case 4: return "'в прошлый " + weekday + " в' p";
                    case 3:
                    case 5:
                    case 6: return "'в прошлую " + weekday + " в' p";
                } }(day); }, yesterday: "'вчера в' p", today: "'сегодня в' p", tomorrow: "'завтра в' p", nextWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0: return "'в следующее " + weekday + " в' p";
                    case 1:
                    case 2:
                    case 4: return "'в следующий " + weekday + " в' p";
                    case 3:
                    case 5:
                    case 6: return "'в следующую " + weekday + " в' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/ru/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber), unit = options1?.unit; return number + ("date" === unit ? "-е" : "week" === unit || "minute" === unit || "second" === unit ? "-я" : "-й"); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["до н.э.", "н.э."], abbreviated: ["до н. э.", "н. э."], wide: ["до нашей эры", "нашей эры"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."], wide: ["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], abbreviated: ["янв.", "фев.", "март", "апр.", "май", "июнь", "июль", "авг.", "сент.", "окт.", "нояб.", "дек."], wide: ["январь", "февраль", "март", "апрель", "май", "июнь", "июль", "август", "сентябрь", "октябрь", "ноябрь", "декабрь"] }, defaultWidth: "wide", formattingValues: { narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], abbreviated: ["янв.", "фев.", "мар.", "апр.", "мая", "июн.", "июл.", "авг.", "сент.", "окт.", "нояб.", "дек."], wide: ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["В", "П", "В", "С", "Ч", "П", "С"], short: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"], abbreviated: ["вск", "пнд", "втр", "срд", "чтв", "птн", "суб"], wide: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ДП", pm: "ПП", midnight: "полн.", noon: "полд.", morning: "утро", afternoon: "день", evening: "веч.", night: "ночь" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "полн.", noon: "полд.", morning: "утро", afternoon: "день", evening: "веч.", night: "ночь" }, wide: { am: "ДП", pm: "ПП", midnight: "полночь", noon: "полдень", morning: "утро", afternoon: "день", evening: "вечер", night: "ночь" } }, defaultWidth: "any", formattingValues: { narrow: { am: "ДП", pm: "ПП", midnight: "полн.", noon: "полд.", morning: "утра", afternoon: "дня", evening: "веч.", night: "ночи" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "полн.", noon: "полд.", morning: "утра", afternoon: "дня", evening: "веч.", night: "ночи" }, wide: { am: "ДП", pm: "ПП", midnight: "полночь", noon: "полдень", morning: "утра", afternoon: "дня", evening: "вечера", night: "ночи" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ru/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((до )?н\.?\s?э\.?)/i, abbreviated: /^((до )?н\.?\s?э\.?)/i, wide: /^(до нашей эры|нашей эры|наша эра)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^д/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i, wide: /^[1234](-?[ыои]?й?)? квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[яфмаисонд]/i, abbreviated: /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\.?/i, wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^я/i, /^ф/i, /^м/i, /^а/i, /^м/i, /^и/i, /^и/i, /^а/i, /^с/i, /^о/i, /^н/i, /^я/i], any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^ав/i, /^с/i, /^о/i, /^н/i, /^д/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[впсч]/i, short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\.?/i, abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i, wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i, abbreviated: /^([дп]п|полн\.?|полд\.?|утр[оа]|день|дня|веч\.?|ноч[ьи])/i, wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^дп/i, pm: /^пп/i, midnight: /^полн/i, noon: /^полд/i, morning: /^у/i, afternoon: /^д[ен]/i, evening: /^в/i, night: /^н/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/se.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, se: () => se });
            var _se_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/se/_lib/formatDistance.js"), _se_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/se/_lib/formatLong.js"), _se_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/se/_lib/formatRelative.js"), _se_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/se/_lib/localize.js"), _se_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/se/_lib/match.js");
            let se = { code: "se", formatDistance: _se_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _se_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _se_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _se_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _se_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = se;
        }, "./node_modules/date-fns/locale/se/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "unnit go ovtta sekundda", other: "unnit go {{count}} sekundda" }, xSeconds: { one: "sekundda", other: "{{count}} sekundda" }, halfAMinute: "bealle minuhta", lessThanXMinutes: { one: "unnit go bealle minuhta", other: "unnit go {{count}} minuhta" }, xMinutes: { one: "minuhta", other: "{{count}} minuhta" }, aboutXHours: { one: "sullii ovtta diimmu", other: "sullii {{count}} diimmu" }, xHours: { one: "diimmu", other: "{{count}} diimmu" }, xDays: { one: "beaivvi", other: "{{count}} beaivvi" }, aboutXWeeks: { one: "sullii ovtta vahku", other: "sullii {{count}} vahku" }, xWeeks: { one: "vahku", other: "{{count}} vahku" }, aboutXMonths: { one: "sullii ovtta mánu", other: "sullii {{count}} mánu" }, xMonths: { one: "mánu", other: "{{count}} mánu" }, aboutXYears: { one: "sullii ovtta jagi", other: "sullii {{count}} jagi" }, xYears: { one: "jagi", other: "{{count}} jagi" }, overXYears: { one: "guhkit go jagi", other: "guhkit go {{count}} jagi" }, almostXYears: { one: "measta jagi", other: "measta {{count}} jagi" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "geahčen " + result;
                else
                    return result + " áigi"; return result; };
        }, "./node_modules/date-fns/locale/se/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE MMMM d. 'b.' y", long: "MMMM d. 'b.' y", medium: "MMM d. 'b.' y", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "'dii.' HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'dii.' {{time}}", long: "{{date}} 'dii.' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/se/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ovddit' eeee 'dii.' p", yesterday: "'ikte dii.' p", today: "'odne dii.' p", tomorrow: "'ihtin dii.' p", nextWeek: "EEEE 'dii.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/se/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["o.Kr.", "m.Kr."], abbreviated: ["o.Kr.", "m.Kr."], wide: ["ovdal Kristusa", "maŋŋel Kristusa"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. kvartála", "2. kvartála", "3. kvartála", "4. kvartála"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["O", "G", "N", "C", "M", "G", "S", "B", "Č", "G", "S", "J"], abbreviated: ["ođđa", "guov", "njuk", "cuo", "mies", "geas", "suoi", "borg", "čakč", "golg", "skáb", "juov"], wide: ["ođđajagemánnu", "guovvamánnu", "njukčamánnu", "cuoŋománnu", "miessemánnu", "geassemánnu", "suoidnemánnu", "borgemánnu", "čakčamánnu", "golggotmánnu", "skábmamánnu", "juovlamánnu"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "V", "M", "G", "D", "B", "L"], short: ["sotn", "vuos", "maŋ", "gask", "duor", "bear", "láv"], abbreviated: ["sotn", "vuos", "maŋ", "gask", "duor", "bear", "láv"], wide: ["sotnabeaivi", "vuossárga", "maŋŋebárga", "gaskavahkku", "duorastat", "bearjadat", "lávvardat"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "gaskaidja", noon: "gaskabeaivi", morning: "iđđes", afternoon: "maŋŋel gaska.", evening: "eahkes", night: "ihkku" }, abbreviated: { am: "a.m.", pm: "p.m.", midnight: "gaskaidja", noon: "gaskabeaivvi", morning: "iđđes", afternoon: "maŋŋel gaskabea.", evening: "eahkes", night: "ihkku" }, wide: { am: "a.m.", pm: "p.m.", midnight: "gaskaidja", noon: "gaskabeavvi", morning: "iđđes", afternoon: "maŋŋel gaskabeaivvi", evening: "eahkes", night: "ihkku" } }, defaultWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/se/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i, abbreviated: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i, wide: /^(ovdal Kristusa|ovdal min áiggi|maŋŋel Kristusa|min áigi)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^o/i, /^m/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](\.)? kvartála/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ogncmsbčj]/i, abbreviated: /^(ođđa|guov|njuk|cuo|mies|geas|suoi|borg|čakč|golg|skáb|juov)\.?/i, wide: /^(ođđajagemánnu|guovvamánnu|njukčamánnu|cuoŋománnu|miessemánnu|geassemánnu|suoidnemánnu|borgemánnu|čakčamánnu|golggotmánnu|skábmamánnu|juovlamánnu)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^o/i, /^g/i, /^n/i, /^c/i, /^m/i, /^g/i, /^s/i, /^b/i, /^č/i, /^g/i, /^s/i, /^j/i], any: [/^o/i, /^gu/i, /^n/i, /^c/i, /^m/i, /^ge/i, /^su/i, /^b/i, /^č/i, /^go/i, /^sk/i, /^j/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[svmgdbl]/i, short: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i, abbreviated: /^(sotn|vuos|maŋ|gask|duor|bear|láv)/i, wide: /^(sotnabeaivi|vuossárga|maŋŋebárga|gaskavahkku|duorastat|bearjadat|lávvardat)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^v/i, /^m/i, /^g/i, /^d/i, /^b/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku)|[ap])/i, any: /^([ap]\.?\s?m\.?|gaskaidja|gaskabeaivvi|(på) (iđđes|maŋŋel gaskabeaivvi|eahkes|ihkku))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a(\.?\s?m\.?)?$/i, pm: /^p(\.?\s?m\.?)?$/i, midnight: /^gaskai/i, noon: /^gaskab/i, morning: /iđđes/i, afternoon: /maŋŋel gaskabeaivvi/i, evening: /eahkes/i, night: /ihkku/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sk.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, sk: () => sk });
            var _sk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sk/_lib/formatDistance.js"), _sk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sk/_lib/formatLong.js"), _sk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sk/_lib/formatRelative.js"), _sk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sk/_lib/localize.js"), _sk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sk/_lib/match.js");
            let sk = { code: "sk", formatDistance: _sk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = sk;
        }, "./node_modules/date-fns/locale/sk/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function declension(scheme, count, time) { return (1 === count && scheme.one ? scheme.one : count >= 2 && count <= 4 && scheme.twoFour ? scheme.twoFour : scheme.other)[time].replace("{{count}}", String(count)); }
            function prefixPreposition(preposition) { let translation = ""; return "almost" === preposition && (translation = "takmer"), "about" === preposition && (translation = "približne"), translation.length > 0 ? translation + " " : ""; }
            function suffixPreposition(preposition) { let translation = ""; return "lessThan" === preposition && (translation = "menej než"), "over" === preposition && (translation = "viac než"), translation.length > 0 ? translation + " " : ""; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { xSeconds: { one: { present: "sekunda", past: "sekundou", future: "sekundu" }, twoFour: { present: "{{count}} sekundy", past: "{{count}} sekundami", future: "{{count}} sekundy" }, other: { present: "{{count}} sekúnd", past: "{{count}} sekundami", future: "{{count}} sekúnd" } }, halfAMinute: { other: { present: "pol minúty", past: "pol minútou", future: "pol minúty" } }, xMinutes: { one: { present: "minúta", past: "minútou", future: "minútu" }, twoFour: { present: "{{count}} minúty", past: "{{count}} minútami", future: "{{count}} minúty" }, other: { present: "{{count}} minút", past: "{{count}} minútami", future: "{{count}} minút" } }, xHours: { one: { present: "hodina", past: "hodinou", future: "hodinu" }, twoFour: { present: "{{count}} hodiny", past: "{{count}} hodinami", future: "{{count}} hodiny" }, other: { present: "{{count}} hodín", past: "{{count}} hodinami", future: "{{count}} hodín" } }, xDays: { one: { present: "deň", past: "dňom", future: "deň" }, twoFour: { present: "{{count}} dni", past: "{{count}} dňami", future: "{{count}} dni" }, other: { present: "{{count}} dní", past: "{{count}} dňami", future: "{{count}} dní" } }, xWeeks: { one: { present: "týždeň", past: "týždňom", future: "týždeň" }, twoFour: { present: "{{count}} týždne", past: "{{count}} týždňami", future: "{{count}} týždne" }, other: { present: "{{count}} týždňov", past: "{{count}} týždňami", future: "{{count}} týždňov" } }, xMonths: { one: { present: "mesiac", past: "mesiacom", future: "mesiac" }, twoFour: { present: "{{count}} mesiace", past: "{{count}} mesiacmi", future: "{{count}} mesiace" }, other: { present: "{{count}} mesiacov", past: "{{count}} mesiacmi", future: "{{count}} mesiacov" } }, xYears: { one: { present: "rok", past: "rokom", future: "rok" }, twoFour: { present: "{{count}} roky", past: "{{count}} rokmi", future: "{{count}} roky" }, other: { present: "{{count}} rokov", past: "{{count}} rokmi", future: "{{count}} rokov" } } }, formatDistance = (token, count, options1) => { let preposition = ["lessThan", "about", "over", "almost"].filter(function (preposition) { return !!token.match(RegExp("^" + preposition)); })[0] || "", scheme = formatDistanceLocale[function (string) { return string.charAt(0).toLowerCase() + string.slice(1); }(token.substring(preposition.length))]; return options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? prefixPreposition(preposition) + "o " + suffixPreposition(preposition) + declension(scheme, count, "future") : prefixPreposition(preposition) + "pred " + suffixPreposition(preposition) + declension(scheme, count, "past") : prefixPreposition(preposition) + suffixPreposition(preposition) + declension(scheme, count, "present"); };
        }, "./node_modules/date-fns/locale/sk/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d. MMMM y", long: "d. MMMM y", medium: "d. M. y", short: "d. M. y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}}, {{time}}", long: "{{date}}, {{time}}", medium: "{{date}}, {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sk/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            let accusativeWeekdays = ["nedeľu", "pondelok", "utorok", "stredu", "štvrtok", "piatok", "sobotu"];
            function thisWeek(day) { let weekday = accusativeWeekdays[day]; return 4 === day ? "'vo' eeee 'o' p" : "'v " + weekday + " o' p"; }
            let formatRelativeLocale = { lastWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 6: return "'minulú " + weekday + " o' p";
                    default: return "'minulý' eeee 'o' p";
                } }(day); }, yesterday: "'včera o' p", today: "'dnes o' p", tomorrow: "'zajtra o' p", nextWeek: (date, baseDate, options1) => { let day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 4:
                    case 6: return "'budúcu " + weekday + " o' p";
                    default: return "'budúci' eeee 'o' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/sk/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pred Kr.", "po Kr."], abbreviated: ["pred Kr.", "po Kr."], wide: ["pred Kristom", "po Kristovi"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1. štvrťrok", "2. štvrťrok", "3. štvrťrok", "4. štvrťrok"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"], wide: ["január", "február", "marec", "apríl", "máj", "jún", "júl", "august", "september", "október", "november", "december"] }, defaultWidth: "wide", formattingValues: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan", "feb", "mar", "apr", "máj", "jún", "júl", "aug", "sep", "okt", "nov", "dec"], wide: ["januára", "februára", "marca", "apríla", "mája", "júna", "júla", "augusta", "septembra", "októbra", "novembra", "decembra"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["n", "p", "u", "s", "š", "p", "s"], short: ["ne", "po", "ut", "st", "št", "pi", "so"], abbreviated: ["ne", "po", "ut", "st", "št", "pi", "so"], wide: ["nedeľa", "pondelok", "utorok", "streda", "štvrtok", "piatok", "sobota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "poln.", noon: "pol.", morning: "ráno", afternoon: "pop.", evening: "več.", night: "noc" }, abbreviated: { am: "AM", pm: "PM", midnight: "poln.", noon: "pol.", morning: "ráno", afternoon: "popol.", evening: "večer", night: "noc" }, wide: { am: "AM", pm: "PM", midnight: "polnoc", noon: "poludnie", morning: "ráno", afternoon: "popoludnie", evening: "večer", night: "noc" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "o poln.", noon: "nap.", morning: "ráno", afternoon: "pop.", evening: "več.", night: "v n." }, abbreviated: { am: "AM", pm: "PM", midnight: "o poln.", noon: "napol.", morning: "ráno", afternoon: "popol.", evening: "večer", night: "v noci" }, wide: { am: "AM", pm: "PM", midnight: "o polnoci", noon: "napoludnie", morning: "ráno", afternoon: "popoludní", evening: "večer", night: "v noci" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sk/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\.?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i, abbreviated: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i, wide: /^(pred Kristom|pred na[šs][íi]m letopo[čc]tom|po Kristovi|n[áa][šs]ho letopo[čc]tu)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^pr/i, /^(po|n)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234]\. [šs]tvr[ťt]rok/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar|apr|m[áa]j|j[úu]n|j[úu]l|aug|sep|okt|nov|dec)/i, wide: /^(janu[áa]ra?|febru[áa]ra?|(marec|marca)|apr[íi]la?|m[áa]ja?|j[úu]na?|j[úu]la?|augusta?|(september|septembra)|(okt[óo]ber|okt[óo]bra)|(november|novembra)|(december|decembra))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^m[áa]j/i, /^j[úu]n/i, /^j[úu]l/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npusšp]/i, short: /^(ne|po|ut|st|št|pi|so)/i, abbreviated: /^(ne|po|ut|st|št|pi|so)/i, wide: /^(nede[ľl]a|pondelok|utorok|streda|[šs]tvrtok|piatok|sobota])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^š/i, /^p/i, /^s/i], any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(št|stv)/i, /^pi/i, /^so/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(am|pm|(o )?poln\.?|(nap\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]\.?|(v n\.?|noc))/i, abbreviated: /^(am|pm|(o )?poln\.?|(napol\.?|pol\.?)|r[áa]no|pop\.?|ve[čc]er|(v )?noci?)/i, any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[áa]no|popoludn(ie|í|i)|ve[čc]er|(v )?noci?)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^am/i, pm: /^pm/i, midnight: /poln/i, noon: /^(nap|(na)?pol(\.|u))/i, morning: /^r[áa]no/i, afternoon: /^pop/i, evening: /^ve[čc]/i, night: /^(noc|v n\.)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sl.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, sl: () => sl });
            var _sl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sl/_lib/formatDistance.js"), _sl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sl/_lib/formatLong.js"), _sl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sl/_lib/formatRelative.js"), _sl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sl/_lib/localize.js"), _sl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sl/_lib/match.js");
            let sl = { code: "sl", formatDistance: _sl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = sl;
        }, "./node_modules/date-fns/locale/sl/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { present: { one: "manj kot {{count}} sekunda", two: "manj kot {{count}} sekundi", few: "manj kot {{count}} sekunde", other: "manj kot {{count}} sekund" }, past: { one: "manj kot {{count}} sekundo", two: "manj kot {{count}} sekundama", few: "manj kot {{count}} sekundami", other: "manj kot {{count}} sekundami" }, future: { one: "manj kot {{count}} sekundo", two: "manj kot {{count}} sekundi", few: "manj kot {{count}} sekunde", other: "manj kot {{count}} sekund" } }, xSeconds: { present: { one: "{{count}} sekunda", two: "{{count}} sekundi", few: "{{count}} sekunde", other: "{{count}} sekund" }, past: { one: "{{count}} sekundo", two: "{{count}} sekundama", few: "{{count}} sekundami", other: "{{count}} sekundami" }, future: { one: "{{count}} sekundo", two: "{{count}} sekundi", few: "{{count}} sekunde", other: "{{count}} sekund" } }, halfAMinute: "pol minute", lessThanXMinutes: { present: { one: "manj kot {{count}} minuta", two: "manj kot {{count}} minuti", few: "manj kot {{count}} minute", other: "manj kot {{count}} minut" }, past: { one: "manj kot {{count}} minuto", two: "manj kot {{count}} minutama", few: "manj kot {{count}} minutami", other: "manj kot {{count}} minutami" }, future: { one: "manj kot {{count}} minuto", two: "manj kot {{count}} minuti", few: "manj kot {{count}} minute", other: "manj kot {{count}} minut" } }, xMinutes: { present: { one: "{{count}} minuta", two: "{{count}} minuti", few: "{{count}} minute", other: "{{count}} minut" }, past: { one: "{{count}} minuto", two: "{{count}} minutama", few: "{{count}} minutami", other: "{{count}} minutami" }, future: { one: "{{count}} minuto", two: "{{count}} minuti", few: "{{count}} minute", other: "{{count}} minut" } }, aboutXHours: { present: { one: "približno {{count}} ura", two: "približno {{count}} uri", few: "približno {{count}} ure", other: "približno {{count}} ur" }, past: { one: "približno {{count}} uro", two: "približno {{count}} urama", few: "približno {{count}} urami", other: "približno {{count}} urami" }, future: { one: "približno {{count}} uro", two: "približno {{count}} uri", few: "približno {{count}} ure", other: "približno {{count}} ur" } }, xHours: { present: { one: "{{count}} ura", two: "{{count}} uri", few: "{{count}} ure", other: "{{count}} ur" }, past: { one: "{{count}} uro", two: "{{count}} urama", few: "{{count}} urami", other: "{{count}} urami" }, future: { one: "{{count}} uro", two: "{{count}} uri", few: "{{count}} ure", other: "{{count}} ur" } }, xDays: { present: { one: "{{count}} dan", two: "{{count}} dni", few: "{{count}} dni", other: "{{count}} dni" }, past: { one: "{{count}} dnem", two: "{{count}} dnevoma", few: "{{count}} dnevi", other: "{{count}} dnevi" }, future: { one: "{{count}} dan", two: "{{count}} dni", few: "{{count}} dni", other: "{{count}} dni" } }, aboutXWeeks: { one: "približno {{count}} teden", two: "približno {{count}} tedna", few: "približno {{count}} tedne", other: "približno {{count}} tednov" }, xWeeks: { one: "{{count}} teden", two: "{{count}} tedna", few: "{{count}} tedne", other: "{{count}} tednov" }, aboutXMonths: { present: { one: "približno {{count}} mesec", two: "približno {{count}} meseca", few: "približno {{count}} mesece", other: "približno {{count}} mesecev" }, past: { one: "približno {{count}} mesecem", two: "približno {{count}} mesecema", few: "približno {{count}} meseci", other: "približno {{count}} meseci" }, future: { one: "približno {{count}} mesec", two: "približno {{count}} meseca", few: "približno {{count}} mesece", other: "približno {{count}} mesecev" } }, xMonths: { present: { one: "{{count}} mesec", two: "{{count}} meseca", few: "{{count}} meseci", other: "{{count}} mesecev" }, past: { one: "{{count}} mesecem", two: "{{count}} mesecema", few: "{{count}} meseci", other: "{{count}} meseci" }, future: { one: "{{count}} mesec", two: "{{count}} meseca", few: "{{count}} mesece", other: "{{count}} mesecev" } }, aboutXYears: { present: { one: "približno {{count}} leto", two: "približno {{count}} leti", few: "približno {{count}} leta", other: "približno {{count}} let" }, past: { one: "približno {{count}} letom", two: "približno {{count}} letoma", few: "približno {{count}} leti", other: "približno {{count}} leti" }, future: { one: "približno {{count}} leto", two: "približno {{count}} leti", few: "približno {{count}} leta", other: "približno {{count}} let" } }, xYears: { present: { one: "{{count}} leto", two: "{{count}} leti", few: "{{count}} leta", other: "{{count}} let" }, past: { one: "{{count}} letom", two: "{{count}} letoma", few: "{{count}} leti", other: "{{count}} leti" }, future: { one: "{{count}} leto", two: "{{count}} leti", few: "{{count}} leta", other: "{{count}} let" } }, overXYears: { present: { one: "več kot {{count}} leto", two: "več kot {{count}} leti", few: "več kot {{count}} leta", other: "več kot {{count}} let" }, past: { one: "več kot {{count}} letom", two: "več kot {{count}} letoma", few: "več kot {{count}} leti", other: "več kot {{count}} leti" }, future: { one: "več kot {{count}} leto", two: "več kot {{count}} leti", few: "več kot {{count}} leta", other: "več kot {{count}} let" } }, almostXYears: { present: { one: "skoraj {{count}} leto", two: "skoraj {{count}} leti", few: "skoraj {{count}} leta", other: "skoraj {{count}} let" }, past: { one: "skoraj {{count}} letom", two: "skoraj {{count}} letoma", few: "skoraj {{count}} leti", other: "skoraj {{count}} leti" }, future: { one: "skoraj {{count}} leto", two: "skoraj {{count}} leti", few: "skoraj {{count}} leta", other: "skoraj {{count}} let" } } }, formatDistance = (token, count, options1) => { let result = "", tense = "present"; options1?.addSuffix && (options1.comparison && options1.comparison > 0 ? (tense = "future", result = "čez ") : (tense = "past", result = "pred ")); let tokenValue = formatDistanceLocale[token]; if ("string" == typeof tokenValue)
                result += tokenValue;
            else {
                let form = function (count) { switch (count % 100) {
                    case 1: return "one";
                    case 2: return "two";
                    case 3:
                    case 4: return "few";
                    default: return "other";
                } }(count);
                void 0 !== tokenValue.one ? result += tokenValue[form].replace("{{count}}", String(count)) : result += tokenValue[tense][form].replace("{{count}}", String(count));
            } return result; };
        }, "./node_modules/date-fns/locale/sl/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, dd. MMMM y", long: "dd. MMMM y", medium: "d. MMM y", short: "d. MM. yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sl/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { switch (date.getDay()) {
                    case 0: return "'prejšnjo nedeljo ob' p";
                    case 3: return "'prejšnjo sredo ob' p";
                    case 6: return "'prejšnjo soboto ob' p";
                    default: return "'prejšnji' EEEE 'ob' p";
                } }, yesterday: "'včeraj ob' p", today: "'danes ob' p", tomorrow: "'jutri ob' p", nextWeek: date => { switch (date.getDay()) {
                    case 0: return "'naslednjo nedeljo ob' p";
                    case 3: return "'naslednjo sredo ob' p";
                    case 6: return "'naslednjo soboto ob' p";
                    default: return "'naslednji' EEEE 'ob' p";
                } }, other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/sl/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pr. n. št.", "po n. št."], abbreviated: ["pr. n. št.", "po n. št."], wide: ["pred našim štetjem", "po našem štetju"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1. čet.", "2. čet.", "3. čet.", "4. čet."], wide: ["1. četrtletje", "2. četrtletje", "3. četrtletje", "4. četrtletje"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], abbreviated: ["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], wide: ["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["n", "p", "t", "s", "č", "p", "s"], short: ["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."], abbreviated: ["ned.", "pon.", "tor.", "sre.", "čet.", "pet.", "sob."], wide: ["nedelja", "ponedeljek", "torek", "sreda", "četrtek", "petek", "sobota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "d", pm: "p", midnight: "24.00", noon: "12.00", morning: "j", afternoon: "p", evening: "v", night: "n" }, abbreviated: { am: "dop.", pm: "pop.", midnight: "poln.", noon: "pold.", morning: "jut.", afternoon: "pop.", evening: "več.", night: "noč" }, wide: { am: "dop.", pm: "pop.", midnight: "polnoč", noon: "poldne", morning: "jutro", afternoon: "popoldne", evening: "večer", night: "noč" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "d", pm: "p", midnight: "24.00", noon: "12.00", morning: "zj", afternoon: "p", evening: "zv", night: "po" }, abbreviated: { am: "dop.", pm: "pop.", midnight: "opoln.", noon: "opold.", morning: "zjut.", afternoon: "pop.", evening: "zveč.", night: "ponoči" }, wide: { am: "dop.", pm: "pop.", midnight: "opolnoči", noon: "opoldne", morning: "zjutraj", afternoon: "popoldan", evening: "zvečer", night: "ponoči" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sl/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { abbreviated: /^(pr\. n\. št\.|po n\. št\.)/i, wide: /^(pred Kristusom|pred na[sš]im [sš]tetjem|po Kristusu|po na[sš]em [sš]tetju|na[sš]ega [sš]tetja)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^pr/i, /^(po|na[sš]em)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\.\s?[čc]et\.?/i, wide: /^[1234]\. [čc]etrtletje/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan\.|feb\.|mar\.|apr\.|maj|jun\.|jul\.|avg\.|sep\.|okt\.|nov\.|dec\.)/i, wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], abbreviated: [/^ja/i, /^fe/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i], wide: [/^ja/i, /^fe/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "wide" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[nptsčc]/i, short: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i, abbreviated: /^(ned\.|pon\.|tor\.|sre\.|[cč]et\.|pet\.|sob\.)/i, wide: /^(nedelja|ponedeljek|torek|sreda|[cč]etrtek|petek|sobota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[cč]/i, /^p/i, /^s/i], any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[cč]/i, /^pe/i, /^so/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(d|po?|z?v|n|z?j|24\.00|12\.00)/i, any: /^(dop\.|pop\.|o?poln(\.|o[cč]i?)|o?pold(\.|ne)|z?ve[cč](\.|er)|(po)?no[cč]i?|popold(ne|an)|jut(\.|ro)|zjut(\.|raj))/i }, defaultMatchWidth: "any", parsePatterns: { narrow: { am: /^d/i, pm: /^p/i, midnight: /^24/i, noon: /^12/i, morning: /^(z?j)/i, afternoon: /^p/i, evening: /^(z?v)/i, night: /^(n|po)/i }, any: { am: /^dop\./i, pm: /^pop\./i, midnight: /^o?poln/i, noon: /^o?pold/i, morning: /j/i, afternoon: /^pop\./i, evening: /^z?ve/i, night: /(po)?no/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sq.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, sq: () => sq });
            var _sq_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sq/_lib/formatDistance.js"), _sq_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sq/_lib/formatLong.js"), _sq_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sq/_lib/formatRelative.js"), _sq_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sq/_lib/localize.js"), _sq_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sq/_lib/match.js");
            let sq = { code: "sq", formatDistance: _sq_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sq_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sq_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sq_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sq_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = sq;
        }, "./node_modules/date-fns/locale/sq/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "më pak se një sekondë", other: "më pak se {{count}} sekonda" }, xSeconds: { one: "1 sekondë", other: "{{count}} sekonda" }, halfAMinute: "gjysëm minuti", lessThanXMinutes: { one: "më pak se një minute", other: "më pak se {{count}} minuta" }, xMinutes: { one: "1 minutë", other: "{{count}} minuta" }, aboutXHours: { one: "rreth 1 orë", other: "rreth {{count}} orë" }, xHours: { one: "1 orë", other: "{{count}} orë" }, xDays: { one: "1 ditë", other: "{{count}} ditë" }, aboutXWeeks: { one: "rreth 1 javë", other: "rreth {{count}} javë" }, xWeeks: { one: "1 javë", other: "{{count}} javë" }, aboutXMonths: { one: "rreth 1 muaj", other: "rreth {{count}} muaj" }, xMonths: { one: "1 muaj", other: "{{count}} muaj" }, aboutXYears: { one: "rreth 1 vit", other: "rreth {{count}} vite" }, xYears: { one: "1 vit", other: "{{count}} vite" }, overXYears: { one: "mbi 1 vit", other: "mbi {{count}} vite" }, almostXYears: { one: "pothuajse 1 vit", other: "pothuajse {{count}} vite" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "në " + result;
                else
                    return result + " më parë"; return result; };
        }, "./node_modules/date-fns/locale/sq/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'në' {{time}}", long: "{{date}} 'në' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sq/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'të' eeee 'e shkuar në' p", yesterday: "'dje në' p", today: "'sot në' p", tomorrow: "'nesër në' p", nextWeek: "eeee 'at' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/sq/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); return options1?.unit === "hour" ? String(number) : 1 === number ? number + "-rë" : 4 === number ? number + "t" : number + "-të"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["P", "M"], abbreviated: ["PK", "MK"], wide: ["Para Krishtit", "Mbas Krishtit"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["4-mujori I", "4-mujori II", "4-mujori III", "4-mujori IV"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], abbreviated: ["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gus", "Sht", "Tet", "Nën", "Dhj"], wide: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", "Dhjetor"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["D", "H", "M", "M", "E", "P", "S"], short: ["Di", "Hë", "Ma", "Më", "En", "Pr", "Sh"], abbreviated: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Sht"], wide: ["Dielë", "Hënë", "Martë", "Mërkurë", "Enjte", "Premte", "Shtunë"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "p", pm: "m", midnight: "m", noon: "d", morning: "mëngjes", afternoon: "dite", evening: "mbrëmje", night: "natë" }, abbreviated: { am: "PD", pm: "MD", midnight: "mesnëtë", noon: "drek", morning: "mëngjes", afternoon: "mbasdite", evening: "mbrëmje", night: "natë" }, wide: { am: "p.d.", pm: "m.d.", midnight: "mesnëtë", noon: "drek", morning: "mëngjes", afternoon: "mbasdite", evening: "mbrëmje", night: "natë" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "p", pm: "m", midnight: "m", noon: "d", morning: "në mëngjes", afternoon: "në mbasdite", evening: "në mbrëmje", night: "në mesnatë" }, abbreviated: { am: "PD", pm: "MD", midnight: "mesnatë", noon: "drek", morning: "në mëngjes", afternoon: "në mbasdite", evening: "në mbrëmje", night: "në mesnatë" }, wide: { am: "p.d.", pm: "m.d.", midnight: "mesnatë", noon: "drek", morning: "në mëngjes", afternoon: "në mbasdite", evening: "në mbrëmje", night: "në mesnatë" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sq/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-rë|-të|t|)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(p|m)/i, abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i, wide: /^(para krishtit|mbas krishtit)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(p|m)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234]-mujori (i{1,3}|iv)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jsmpqkftnd]/i, abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|nën|dhj)/i, wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|nëntor|dhjetor)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^s/i, /^m/i, /^p/i, /^m/i, /^q/i, /^k/i, /^g/i, /^s/i, /^t/i, /^n/i, /^d/i], any: [/^ja/i, /^shk/i, /^mar/i, /^pri/i, /^maj/i, /^qer/i, /^kor/i, /^gu/i, /^sht/i, /^tet/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[dhmeps]/i, short: /^(di|hë|ma|më|en|pr|sh)/i, abbreviated: /^(die|hën|mar|mër|enj|pre|sht)/i, wide: /^(dielë|hënë|martë|mërkurë|enjte|premte|shtunë)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i], any: [/^d/i, /^h/i, /^ma/i, /^më/i, /^e/i, /^p/i, /^s/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(p|m|me|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i, any: /^([pm]\.?\s?d\.?|drek|në (mëngjes|mbasdite|mbrëmje|mesnatë))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^p/i, pm: /^m/i, midnight: /^me/i, noon: /^dr/i, morning: /mëngjes/i, afternoon: /mbasdite/i, evening: /mbrëmje/i, night: /natë/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sr-Latn.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, srLatn: () => srLatn });
            var _sr_Latn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn/_lib/formatDistance.js"), _sr_Latn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn/_lib/formatLong.js"), _sr_Latn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn/_lib/formatRelative.js"), _sr_Latn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn/_lib/localize.js"), _sr_Latn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sr-Latn/_lib/match.js");
            let srLatn = { code: "sr-Latn", formatDistance: _sr_Latn_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sr_Latn_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sr_Latn_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sr_Latn_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sr_Latn_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = srLatn;
        }, "./node_modules/date-fns/locale/sr-Latn/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { standalone: "manje od 1 sekunde", withPrepositionAgo: "manje od 1 sekunde", withPrepositionIn: "manje od 1 sekundu" }, dual: "manje od {{count}} sekunde", other: "manje od {{count}} sekundi" }, xSeconds: { one: { standalone: "1 sekunda", withPrepositionAgo: "1 sekunde", withPrepositionIn: "1 sekundu" }, dual: "{{count}} sekunde", other: "{{count}} sekundi" }, halfAMinute: "pola minute", lessThanXMinutes: { one: { standalone: "manje od 1 minute", withPrepositionAgo: "manje od 1 minute", withPrepositionIn: "manje od 1 minutu" }, dual: "manje od {{count}} minute", other: "manje od {{count}} minuta" }, xMinutes: { one: { standalone: "1 minuta", withPrepositionAgo: "1 minute", withPrepositionIn: "1 minutu" }, dual: "{{count}} minute", other: "{{count}} minuta" }, aboutXHours: { one: { standalone: "oko 1 sat", withPrepositionAgo: "oko 1 sat", withPrepositionIn: "oko 1 sat" }, dual: "oko {{count}} sata", other: "oko {{count}} sati" }, xHours: { one: { standalone: "1 sat", withPrepositionAgo: "1 sat", withPrepositionIn: "1 sat" }, dual: "{{count}} sata", other: "{{count}} sati" }, xDays: { one: { standalone: "1 dan", withPrepositionAgo: "1 dan", withPrepositionIn: "1 dan" }, dual: "{{count}} dana", other: "{{count}} dana" }, aboutXWeeks: { one: { standalone: "oko 1 nedelju", withPrepositionAgo: "oko 1 nedelju", withPrepositionIn: "oko 1 nedelju" }, dual: "oko {{count}} nedelje", other: "oko {{count}} nedelje" }, xWeeks: { one: { standalone: "1 nedelju", withPrepositionAgo: "1 nedelju", withPrepositionIn: "1 nedelju" }, dual: "{{count}} nedelje", other: "{{count}} nedelje" }, aboutXMonths: { one: { standalone: "oko 1 mesec", withPrepositionAgo: "oko 1 mesec", withPrepositionIn: "oko 1 mesec" }, dual: "oko {{count}} meseca", other: "oko {{count}} meseci" }, xMonths: { one: { standalone: "1 mesec", withPrepositionAgo: "1 mesec", withPrepositionIn: "1 mesec" }, dual: "{{count}} meseca", other: "{{count}} meseci" }, aboutXYears: { one: { standalone: "oko 1 godinu", withPrepositionAgo: "oko 1 godinu", withPrepositionIn: "oko 1 godinu" }, dual: "oko {{count}} godine", other: "oko {{count}} godina" }, xYears: { one: { standalone: "1 godina", withPrepositionAgo: "1 godine", withPrepositionIn: "1 godinu" }, dual: "{{count}} godine", other: "{{count}} godina" }, overXYears: { one: { standalone: "preko 1 godinu", withPrepositionAgo: "preko 1 godinu", withPrepositionIn: "preko 1 godinu" }, dual: "preko {{count}} godine", other: "preko {{count}} godina" }, almostXYears: { one: { standalone: "gotovo 1 godinu", withPrepositionAgo: "gotovo 1 godinu", withPrepositionIn: "gotovo 1 godinu" }, dual: "gotovo {{count}} godine", other: "gotovo {{count}} godina" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? tokenValue.one.withPrepositionIn : tokenValue.one.withPrepositionAgo : tokenValue.one.standalone : count % 10 > 1 && count % 10 < 5 && "1" !== String(count).substr(-2, 1) ? tokenValue.dual.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "za " + result;
                else
                    return "pre " + result; return result; };
        }, "./node_modules/date-fns/locale/sr-Latn/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM yyyy.", long: "d. MMMM yyyy.", medium: "d. MMM yy.", short: "dd. MM. yy." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss (zzzz)", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'u' {{time}}", long: "{{date}} 'u' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sr-Latn/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { switch (date.getDay()) {
                    case 0: return "'prošle nedelje u' p";
                    case 3: return "'prošle srede u' p";
                    case 6: return "'prošle subote u' p";
                    default: return "'prošli' EEEE 'u' p";
                } }, yesterday: "'juče u' p", today: "'danas u' p", tomorrow: "'sutra u' p", nextWeek: date => { switch (date.getDay()) {
                    case 0: return "'sledeće nedelje u' p";
                    case 3: return "'sledeću sredu u' p";
                    case 6: return "'sledeću subotu u' p";
                    default: return "'sledeći' EEEE 'u' p";
                } }, other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/sr-Latn/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["pr.n.e.", "AD"], abbreviated: ["pr. Hr.", "po. Hr."], wide: ["Pre Hrista", "Posle Hrista"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4."], abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."], wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], wide: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"] }, defaultWidth: "wide", formattingValues: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], wide: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["N", "P", "U", "S", "Č", "P", "S"], short: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"], abbreviated: ["ned", "pon", "uto", "sre", "čet", "pet", "sub"], wide: ["nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "posle podne", evening: "uveče", night: "noću" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, abbreviated: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "popodne", evening: "uveče", night: "noću" }, wide: { am: "AM", pm: "PM", midnight: "ponoć", noon: "podne", morning: "ujutru", afternoon: "posle podne", evening: "uveče", night: "noću" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sr-Latn/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(pr\.n\.e\.|AD)/i, abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i, wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^pr/i, /^(po|nova)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\.\s?kv\.?/i, wide: /^[1234]\. kvartal/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(10|11|12|[123456789])\./i, abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i, wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^avg/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[npusčc]/i, short: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i, abbreviated: /^(ned|pon|uto|sre|(čet|cet)|pet|sub)/i, wide: /^(nedelja|ponedeljak|utorak|sreda|(četvrtak|cetvrtak)|petak|subota)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i], any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(am|pm|ponoc|ponoć|(po)?podne|uvece|uveče|noću|posle podne|ujutru)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^pono/i, noon: /^pod/i, morning: /jutro/i, afternoon: /(posle\s|po)+podne/i, evening: /(uvece|uveče)/i, night: /(nocu|noću)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sr.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, sr: () => sr });
            var _sr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sr/_lib/formatDistance.js"), _sr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sr/_lib/formatLong.js"), _sr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sr/_lib/formatRelative.js"), _sr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sr/_lib/localize.js"), _sr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sr/_lib/match.js");
            let sr = { code: "sr", formatDistance: _sr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = sr;
        }, "./node_modules/date-fns/locale/sr/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { standalone: "мање од 1 секунде", withPrepositionAgo: "мање од 1 секунде", withPrepositionIn: "мање од 1 секунду" }, dual: "мање од {{count}} секунде", other: "мање од {{count}} секунди" }, xSeconds: { one: { standalone: "1 секунда", withPrepositionAgo: "1 секунде", withPrepositionIn: "1 секунду" }, dual: "{{count}} секунде", other: "{{count}} секунди" }, halfAMinute: "пола минуте", lessThanXMinutes: { one: { standalone: "мање од 1 минуте", withPrepositionAgo: "мање од 1 минуте", withPrepositionIn: "мање од 1 минуту" }, dual: "мање од {{count}} минуте", other: "мање од {{count}} минута" }, xMinutes: { one: { standalone: "1 минута", withPrepositionAgo: "1 минуте", withPrepositionIn: "1 минуту" }, dual: "{{count}} минуте", other: "{{count}} минута" }, aboutXHours: { one: { standalone: "око 1 сат", withPrepositionAgo: "око 1 сат", withPrepositionIn: "око 1 сат" }, dual: "око {{count}} сата", other: "око {{count}} сати" }, xHours: { one: { standalone: "1 сат", withPrepositionAgo: "1 сат", withPrepositionIn: "1 сат" }, dual: "{{count}} сата", other: "{{count}} сати" }, xDays: { one: { standalone: "1 дан", withPrepositionAgo: "1 дан", withPrepositionIn: "1 дан" }, dual: "{{count}} дана", other: "{{count}} дана" }, aboutXWeeks: { one: { standalone: "око 1 недељу", withPrepositionAgo: "око 1 недељу", withPrepositionIn: "око 1 недељу" }, dual: "око {{count}} недеље", other: "око {{count}} недеље" }, xWeeks: { one: { standalone: "1 недељу", withPrepositionAgo: "1 недељу", withPrepositionIn: "1 недељу" }, dual: "{{count}} недеље", other: "{{count}} недеље" }, aboutXMonths: { one: { standalone: "око 1 месец", withPrepositionAgo: "око 1 месец", withPrepositionIn: "око 1 месец" }, dual: "око {{count}} месеца", other: "око {{count}} месеци" }, xMonths: { one: { standalone: "1 месец", withPrepositionAgo: "1 месец", withPrepositionIn: "1 месец" }, dual: "{{count}} месеца", other: "{{count}} месеци" }, aboutXYears: { one: { standalone: "око 1 годину", withPrepositionAgo: "око 1 годину", withPrepositionIn: "око 1 годину" }, dual: "око {{count}} године", other: "око {{count}} година" }, xYears: { one: { standalone: "1 година", withPrepositionAgo: "1 године", withPrepositionIn: "1 годину" }, dual: "{{count}} године", other: "{{count}} година" }, overXYears: { one: { standalone: "преко 1 годину", withPrepositionAgo: "преко 1 годину", withPrepositionIn: "преко 1 годину" }, dual: "преко {{count}} године", other: "преко {{count}} година" }, almostXYears: { one: { standalone: "готово 1 годину", withPrepositionAgo: "готово 1 годину", withPrepositionIn: "готово 1 годину" }, dual: "готово {{count}} године", other: "готово {{count}} година" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? tokenValue.one.withPrepositionIn : tokenValue.one.withPrepositionAgo : tokenValue.one.standalone : count % 10 > 1 && count % 10 < 5 && "1" !== String(count).substr(-2, 1) ? tokenValue.dual.replace("{{count}}", String(count)) : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "за " + result;
                else
                    return "пре " + result; return result; };
        }, "./node_modules/date-fns/locale/sr/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d. MMMM yyyy.", long: "d. MMMM yyyy.", medium: "d. MMM yy.", short: "dd. MM. yy." }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss (zzzz)", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'у' {{time}}", long: "{{date}} 'у' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sr/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: date => { switch (date.getDay()) {
                    case 0: return "'прошле недеље у' p";
                    case 3: return "'прошле среде у' p";
                    case 6: return "'прошле суботе у' p";
                    default: return "'прошли' EEEE 'у' p";
                } }, yesterday: "'јуче у' p", today: "'данас у' p", tomorrow: "'сутра у' p", nextWeek: date => { switch (date.getDay()) {
                    case 0: return "'следеће недеље у' p";
                    case 3: return "'следећу среду у' p";
                    case 6: return "'следећу суботу у' p";
                    default: return "'следећи' EEEE 'у' p";
                } }, other: "P" }, formatRelative = (token, date, _baseDate, _options) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date) : format; };
        }, "./node_modules/date-fns/locale/sr/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["пр.н.е.", "АД"], abbreviated: ["пр. Хр.", "по. Хр."], wide: ["Пре Христа", "После Христа"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4."], abbreviated: ["1. кв.", "2. кв.", "3. кв.", "4. кв."], wide: ["1. квартал", "2. квартал", "3. квартал", "4. квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"], wide: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"] }, defaultWidth: "wide", formattingValues: { narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], abbreviated: ["јан", "феб", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "нов", "дец"], wide: ["јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "У", "С", "Ч", "П", "С"], short: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"], abbreviated: ["нед", "пон", "уто", "сре", "чет", "пет", "суб"], wide: ["недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "AM", pm: "PM", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "поподне", evening: "увече", night: "ноћу" }, abbreviated: { am: "AM", pm: "PM", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "поподне", evening: "увече", night: "ноћу" }, wide: { am: "AM", pm: "PM", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "после подне", evening: "увече", night: "ноћу" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "АМ", pm: "ПМ", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "поподне", evening: "увече", night: "ноћу" }, abbreviated: { am: "АМ", pm: "ПМ", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "поподне", evening: "увече", night: "ноћу" }, wide: { am: "AM", pm: "PM", midnight: "поноћ", noon: "подне", morning: "ујутру", afternoon: "после подне", evening: "увече", night: "ноћу" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sr/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)\./i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(пр\.н\.е\.|АД)/i, abbreviated: /^(пр\.\s?Хр\.|по\.\s?Хр\.)/i, wide: /^(Пре Христа|пре нове ере|После Христа|нова ера)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^пр/i, /^(по|нова)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]\.\s?кв\.?/i, wide: /^[1234]\. квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(10|11|12|[123456789])\./i, abbreviated: /^(јан|феб|мар|апр|мај|јун|јул|авг|сеп|окт|нов|дец)/i, wide: /^((јануар|јануара)|(фебруар|фебруара)|(март|марта)|(април|априла)|(мја|маја)|(јун|јуна)|(јул|јула)|(август|августа)|(септембар|септембра)|(октобар|октобра)|(новембар|новембра)|(децембар|децембра))/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i], any: [/^ја/i, /^ф/i, /^мар/i, /^ап/i, /^мај/i, /^јун/i, /^јул/i, /^авг/i, /^с/i, /^о/i, /^н/i, /^д/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[пусчн]/i, short: /^(нед|пон|уто|сре|чет|пет|суб)/i, abbreviated: /^(нед|пон|уто|сре|чет|пет|суб)/i, wide: /^(недеља|понедељак|уторак|среда|четвртак|петак|субота)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^п/i, /^у/i, /^с/i, /^ч/i, /^п/i, /^с/i, /^н/i], any: [/^нед/i, /^пон/i, /^уто/i, /^сре/i, /^чет/i, /^пет/i, /^суб/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(ам|пм|поноћ|(по)?подне|увече|ноћу|после подне|ујутру)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^поно/i, noon: /^под/i, morning: /ујутру/i, afternoon: /(после\s|по)+подне/i, evening: /(увече)/i, night: /(ноћу)/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/sv.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, sv: () => sv });
            var _sv_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/sv/_lib/formatDistance.js"), _sv_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/sv/_lib/formatLong.js"), _sv_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/sv/_lib/formatRelative.js"), _sv_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/sv/_lib/localize.js"), _sv_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/sv/_lib/match.js");
            let sv = { code: "sv", formatDistance: _sv_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _sv_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _sv_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _sv_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _sv_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = sv;
        }, "./node_modules/date-fns/locale/sv/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "mindre än en sekund", other: "mindre än {{count}} sekunder" }, xSeconds: { one: "en sekund", other: "{{count}} sekunder" }, halfAMinute: "en halv minut", lessThanXMinutes: { one: "mindre än en minut", other: "mindre än {{count}} minuter" }, xMinutes: { one: "en minut", other: "{{count}} minuter" }, aboutXHours: { one: "ungefär en timme", other: "ungefär {{count}} timmar" }, xHours: { one: "en timme", other: "{{count}} timmar" }, xDays: { one: "en dag", other: "{{count}} dagar" }, aboutXWeeks: { one: "ungefär en vecka", other: "ungefär {{count}} veckor" }, xWeeks: { one: "en vecka", other: "{{count}} veckor" }, aboutXMonths: { one: "ungefär en månad", other: "ungefär {{count}} månader" }, xMonths: { one: "en månad", other: "{{count}} månader" }, aboutXYears: { one: "ungefär ett år", other: "ungefär {{count}} år" }, xYears: { one: "ett år", other: "{{count}} år" }, overXYears: { one: "över ett år", other: "över {{count}} år" }, almostXYears: { one: "nästan ett år", other: "nästan {{count}} år" } }, wordMapping = ["noll", "en", "två", "tre", "fyra", "fem", "sex", "sju", "åtta", "nio", "tio", "elva", "tolv"], formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count < 13 ? wordMapping[count] : String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return "om " + result;
                else
                    return result + " sedan"; return result; };
        }, "./node_modules/date-fns/locale/sv/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE d MMMM y", long: "d MMMM y", medium: "d MMM y", short: "y-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "'kl'. HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'kl.' {{time}}", long: "{{date}} 'kl.' {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/sv/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'i' EEEE's kl.' p", yesterday: "'igår kl.' p", today: "'idag kl.' p", tomorrow: "'imorgon kl.' p", nextWeek: "EEEE 'kl.' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/sv/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => { let number = Number(dirtyNumber), rem100 = number % 100; if (rem100 > 20 || rem100 < 10)
                    switch (rem100 % 10) {
                        case 1:
                        case 2: return number + ":a";
                    } return number + ":e"; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["f.Kr.", "e.Kr."], abbreviated: ["f.Kr.", "e.Kr."], wide: ["före Kristus", "efter Kristus"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], abbreviated: ["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."], wide: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["S", "M", "T", "O", "T", "F", "L"], short: ["sö", "må", "ti", "on", "to", "fr", "lö"], abbreviated: ["sön", "mån", "tis", "ons", "tors", "fre", "lör"], wide: ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "fm", pm: "em", midnight: "midnatt", noon: "middag", morning: "morg.", afternoon: "efterm.", evening: "kväll", night: "natt" }, abbreviated: { am: "f.m.", pm: "e.m.", midnight: "midnatt", noon: "middag", morning: "morgon", afternoon: "efterm.", evening: "kväll", night: "natt" }, wide: { am: "förmiddag", pm: "eftermiddag", midnight: "midnatt", noon: "middag", morning: "morgon", afternoon: "eftermiddag", evening: "kväll", night: "natt" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "fm", pm: "em", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på efterm.", evening: "på kvällen", night: "på natten" }, abbreviated: { am: "fm", pm: "em", midnight: "midnatt", noon: "middag", morning: "på morg.", afternoon: "på efterm.", evening: "på kvällen", night: "på natten" }, wide: { am: "fm", pm: "em", midnight: "midnatt", noon: "middag", morning: "på morgonen", afternoon: "på eftermiddagen", evening: "på kvällen", night: "på natten" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/sv/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(:a|:e)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i, abbreviated: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i, wide: /^(före Kristus|före vår tid|efter Kristus|vår tid)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^f/i, /^[ev]/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](:a|:e)? kvartalet/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[jfmasond]/i, abbreviated: /^(jan|feb|mar[s]?|apr|maj|jun[i]?|jul[i]?|aug|sep|okt|nov|dec)\.?/i, wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[smtofl]/i, short: /^(sö|må|ti|on|to|fr|lö)/i, abbreviated: /^(sön|mån|tis|ons|tors|fre|lör)/i, wide: /^(söndag|måndag|tisdag|onsdag|torsdag|fredag|lördag)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^([fe]\.?\s?m\.?|midn(att)?|midd(ag)?|(på) (morgonen|eftermiddagen|kvällen|natten))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^f/i, pm: /^e/i, midnight: /^midn/i, noon: /^midd/i, morning: /morgon/i, afternoon: /eftermiddag/i, evening: /kväll/i, night: /natt/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ta.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ta: () => ta });
            var _ta_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ta/_lib/formatDistance.js"), _ta_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ta/_lib/formatLong.js"), _ta_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ta/_lib/formatRelative.js"), _ta_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ta/_lib/localize.js"), _ta_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ta/_lib/match.js");
            let ta = { code: "ta", formatDistance: _ta_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ta_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ta_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ta_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ta_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = ta;
        }, "./node_modules/date-fns/locale/ta/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: { default: "ஒரு வினாடிக்கு குறைவாக", in: "ஒரு வினாடிக்குள்", ago: "ஒரு வினாடிக்கு முன்பு" }, other: { default: "{{count}} வினாடிகளுக்கு குறைவாக", in: "{{count}} வினாடிகளுக்குள்", ago: "{{count}} வினாடிகளுக்கு முன்பு" } }, xSeconds: { one: { default: "1 வினாடி", in: "1 வினாடியில்", ago: "1 வினாடி முன்பு" }, other: { default: "{{count}} விநாடிகள்", in: "{{count}} வினாடிகளில்", ago: "{{count}} விநாடிகளுக்கு முன்பு" } }, halfAMinute: { default: "அரை நிமிடம்", in: "அரை நிமிடத்தில்", ago: "அரை நிமிடம் முன்பு" }, lessThanXMinutes: { one: { default: "ஒரு நிமிடத்திற்கும் குறைவாக", in: "ஒரு நிமிடத்திற்குள்", ago: "ஒரு நிமிடத்திற்கு முன்பு" }, other: { default: "{{count}} நிமிடங்களுக்கும் குறைவாக", in: "{{count}} நிமிடங்களுக்குள்", ago: "{{count}} நிமிடங்களுக்கு முன்பு" } }, xMinutes: { one: { default: "1 நிமிடம்", in: "1 நிமிடத்தில்", ago: "1 நிமிடம் முன்பு" }, other: { default: "{{count}} நிமிடங்கள்", in: "{{count}} நிமிடங்களில்", ago: "{{count}} நிமிடங்களுக்கு முன்பு" } }, aboutXHours: { one: { default: "சுமார் 1 மணி நேரம்", in: "சுமார் 1 மணி நேரத்தில்", ago: "சுமார் 1 மணி நேரத்திற்கு முன்பு" }, other: { default: "சுமார் {{count}} மணி நேரம்", in: "சுமார் {{count}} மணி நேரத்திற்கு முன்பு", ago: "சுமார் {{count}} மணி நேரத்தில்" } }, xHours: { one: { default: "1 மணி நேரம்", in: "1 மணி நேரத்தில்", ago: "1 மணி நேரத்திற்கு முன்பு" }, other: { default: "{{count}} மணி நேரம்", in: "{{count}} மணி நேரத்தில்", ago: "{{count}} மணி நேரத்திற்கு முன்பு" } }, xDays: { one: { default: "1 நாள்", in: "1 நாளில்", ago: "1 நாள் முன்பு" }, other: { default: "{{count}} நாட்கள்", in: "{{count}} நாட்களில்", ago: "{{count}} நாட்களுக்கு முன்பு" } }, aboutXWeeks: { one: { default: "சுமார் 1 வாரம்", in: "சுமார் 1 வாரத்தில்", ago: "சுமார் 1 வாரம் முன்பு" }, other: { default: "சுமார் {{count}} வாரங்கள்", in: "சுமார் {{count}} வாரங்களில்", ago: "சுமார் {{count}} வாரங்களுக்கு முன்பு" } }, xWeeks: { one: { default: "1 வாரம்", in: "1 வாரத்தில்", ago: "1 வாரம் முன்பு" }, other: { default: "{{count}} வாரங்கள்", in: "{{count}} வாரங்களில்", ago: "{{count}} வாரங்களுக்கு முன்பு" } }, aboutXMonths: { one: { default: "சுமார் 1 மாதம்", in: "சுமார் 1 மாதத்தில்", ago: "சுமார் 1 மாதத்திற்கு முன்பு" }, other: { default: "சுமார் {{count}} மாதங்கள்", in: "சுமார் {{count}} மாதங்களில்", ago: "சுமார் {{count}} மாதங்களுக்கு முன்பு" } }, xMonths: { one: { default: "1 மாதம்", in: "1 மாதத்தில்", ago: "1 மாதம் முன்பு" }, other: { default: "{{count}} மாதங்கள்", in: "{{count}} மாதங்களில்", ago: "{{count}} மாதங்களுக்கு முன்பு" } }, aboutXYears: { one: { default: "சுமார் 1 வருடம்", in: "சுமார் 1 ஆண்டில்", ago: "சுமார் 1 வருடம் முன்பு" }, other: { default: "சுமார் {{count}} ஆண்டுகள்", in: "சுமார் {{count}} ஆண்டுகளில்", ago: "சுமார் {{count}} ஆண்டுகளுக்கு முன்பு" } }, xYears: { one: { default: "1 வருடம்", in: "1 ஆண்டில்", ago: "1 வருடம் முன்பு" }, other: { default: "{{count}} ஆண்டுகள்", in: "{{count}} ஆண்டுகளில்", ago: "{{count}} ஆண்டுகளுக்கு முன்பு" } }, overXYears: { one: { default: "1 வருடத்திற்கு மேல்", in: "1 வருடத்திற்கும் மேலாக", ago: "1 வருடம் முன்பு" }, other: { default: "{{count}} ஆண்டுகளுக்கும் மேலாக", in: "{{count}} ஆண்டுகளில்", ago: "{{count}} ஆண்டுகளுக்கு முன்பு" } }, almostXYears: { one: { default: "கிட்டத்தட்ட 1 வருடம்", in: "கிட்டத்தட்ட 1 ஆண்டில்", ago: "கிட்டத்தட்ட 1 வருடம் முன்பு" }, other: { default: "கிட்டத்தட்ட {{count}} ஆண்டுகள்", in: "கிட்டத்தட்ட {{count}} ஆண்டுகளில்", ago: "கிட்டத்தட்ட {{count}} ஆண்டுகளுக்கு முன்பு" } } }, formatDistance = (token, count, options1) => { let tense = options1?.addSuffix ? options1.comparison && options1.comparison > 0 ? "in" : "ago" : "default", tokenValue = formatDistanceLocale[token]; return void 0 === tokenValue.one ? tokenValue[tense] : 1 === count ? tokenValue.one[tense] : tokenValue.other[tense].replace("{{count}}", String(count)); };
        }, "./node_modules/date-fns/locale/ta/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, d MMMM, y", long: "d MMMM, y", medium: "d MMM, y", short: "d/M/yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "a h:mm:ss zzzz", long: "a h:mm:ss z", medium: "a h:mm:ss", short: "a h:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ta/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'கடந்த' eeee p 'மணிக்கு'", yesterday: "'நேற்று ' p 'மணிக்கு'", today: "'இன்று ' p 'மணிக்கு'", tomorrow: "'நாளை ' p 'மணிக்கு'", nextWeek: "eeee p 'மணிக்கு'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ta/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["கி.மு.", "கி.பி."], abbreviated: ["கி.மு.", "கி.பி."], wide: ["கிறிஸ்துவுக்கு முன்", "அன்னோ டோமினி"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["காலா.1", "காலா.2", "காலா.3", "காலா.4"], wide: ["ஒன்றாம் காலாண்டு", "இரண்டாம் காலாண்டு", "மூன்றாம் காலாண்டு", "நான்காம் காலாண்டு"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ஜ", "பி", "மா", "ஏ", "மே", "ஜூ", "ஜூ", "ஆ", "செ", "அ", "ந", "டி"], abbreviated: ["ஜன.", "பிப்.", "மார்.", "ஏப்.", "மே", "ஜூன்", "ஜூலை", "ஆக.", "செப்.", "அக்.", "நவ.", "டிச."], wide: ["ஜனவரி", "பிப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்ட்", "செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"], short: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"], abbreviated: ["ஞாயி.", "திங்.", "செவ்.", "புத.", "வியா.", "வெள்.", "சனி"], wide: ["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "மு.ப", pm: "பி.ப", midnight: "நள்.", noon: "நண்.", morning: "கா.", afternoon: "மதி.", evening: "மா.", night: "இர." }, abbreviated: { am: "முற்பகல்", pm: "பிற்பகல்", midnight: "நள்ளிரவு", noon: "நண்பகல்", morning: "காலை", afternoon: "மதியம்", evening: "மாலை", night: "இரவு" }, wide: { am: "முற்பகல்", pm: "பிற்பகல்", midnight: "நள்ளிரவு", noon: "நண்பகல்", morning: "காலை", afternoon: "மதியம்", evening: "மாலை", night: "இரவு" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "மு.ப", pm: "பி.ப", midnight: "நள்.", noon: "நண்.", morning: "கா.", afternoon: "மதி.", evening: "மா.", night: "இர." }, abbreviated: { am: "முற்பகல்", pm: "பிற்பகல்", midnight: "நள்ளிரவு", noon: "நண்பகல்", morning: "காலை", afternoon: "மதியம்", evening: "மாலை", night: "இரவு" }, wide: { am: "முற்பகல்", pm: "பிற்பகல்", midnight: "நள்ளிரவு", noon: "நண்பகல்", morning: "காலை", afternoon: "மதியம்", evening: "மாலை", night: "இரவு" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ta/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(வது)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(கி.மு.|கி.பி.)/i, abbreviated: /^(கி\.?\s?மு\.?|கி\.?\s?பி\.?)/, wide: /^(கிறிஸ்துவுக்கு\sமுன்|அன்னோ\sடோமினி)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/கி\.?\s?மு\.?/, /கி\.?\s?பி\.?/] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^காலா.[1234]/i, wide: /^(ஒன்றாம்|இரண்டாம்|மூன்றாம்|நான்காம்) காலாண்டு/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/1/i, /2/i, /3/i, /4/i], any: [/(1|காலா.1|ஒன்றாம்)/i, /(2|காலா.2|இரண்டாம்)/i, /(3|காலா.3|மூன்றாம்)/i, /(4|காலா.4|நான்காம்)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ஜ|பி|மா|ஏ|மே|ஜூ|ஆ|செ|அ|ந|டி)$/i, abbreviated: /^(ஜன.|பிப்.|மார்.|ஏப்.|மே|ஜூன்|ஜூலை|ஆக.|செப்.|அக்.|நவ.|டிச.)/i, wide: /^(ஜனவரி|பிப்ரவரி|மார்ச்|ஏப்ரல்|மே|ஜூன்|ஜூலை|ஆகஸ்ட்|செப்டம்பர்|அக்டோபர்|நவம்பர்|டிசம்பர்)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ஜ$/i, /^பி/i, /^மா/i, /^ஏ/i, /^மே/i, /^ஜூ/i, /^ஜூ/i, /^ஆ/i, /^செ/i, /^அ/i, /^ந/i, /^டி/i], any: [/^ஜன/i, /^பி/i, /^மா/i, /^ஏ/i, /^மே/i, /^ஜூன்/i, /^ஜூலை/i, /^ஆ/i, /^செ/i, /^அ/i, /^ந/i, /^டி/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i, short: /^(ஞா|தி|செ|பு|வி|வெ|ச)/i, abbreviated: /^(ஞாயி.|திங்.|செவ்.|புத.|வியா.|வெள்.|சனி)/i, wide: /^(ஞாயிறு|திங்கள்|செவ்வாய்|புதன்|வியாழன்|வெள்ளி|சனி)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i], any: [/^ஞா/i, /^தி/i, /^செ/i, /^பு/i, /^வி/i, /^வெ/i, /^ச/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(மு.ப|பி.ப|நள்|நண்|காலை|மதியம்|மாலை|இரவு)/i, any: /^(மு.ப|பி.ப|முற்பகல்|பிற்பகல்|நள்ளிரவு|நண்பகல்|காலை|மதியம்|மாலை|இரவு)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^மு/i, pm: /^பி/i, midnight: /^நள்/i, noon: /^நண்/i, morning: /காலை/i, afternoon: /மதியம்/i, evening: /மாலை/i, night: /இரவு/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/te.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, te: () => te });
            var _te_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/te/_lib/formatDistance.js"), _te_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/te/_lib/formatLong.js"), _te_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/te/_lib/formatRelative.js"), _te_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/te/_lib/localize.js"), _te_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/te/_lib/match.js");
            let te = { code: "te", formatDistance: _te_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _te_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _te_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _te_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _te_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = te;
        }, "./node_modules/date-fns/locale/te/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { standalone: { one: "సెకను కన్నా తక్కువ", other: "{{count}} సెకన్ల కన్నా తక్కువ" }, withPreposition: { one: "సెకను", other: "{{count}} సెకన్ల" } }, xSeconds: { standalone: { one: "ఒక సెకను", other: "{{count}} సెకన్ల" }, withPreposition: { one: "ఒక సెకను", other: "{{count}} సెకన్ల" } }, halfAMinute: { standalone: "అర నిమిషం", withPreposition: "అర నిమిషం" }, lessThanXMinutes: { standalone: { one: "ఒక నిమిషం కన్నా తక్కువ", other: "{{count}} నిమిషాల కన్నా తక్కువ" }, withPreposition: { one: "ఒక నిమిషం", other: "{{count}} నిమిషాల" } }, xMinutes: { standalone: { one: "ఒక నిమిషం", other: "{{count}} నిమిషాలు" }, withPreposition: { one: "ఒక నిమిషం", other: "{{count}} నిమిషాల" } }, aboutXHours: { standalone: { one: "సుమారు ఒక గంట", other: "సుమారు {{count}} గంటలు" }, withPreposition: { one: "సుమారు ఒక గంట", other: "సుమారు {{count}} గంటల" } }, xHours: { standalone: { one: "ఒక గంట", other: "{{count}} గంటలు" }, withPreposition: { one: "ఒక గంట", other: "{{count}} గంటల" } }, xDays: { standalone: { one: "ఒక రోజు", other: "{{count}} రోజులు" }, withPreposition: { one: "ఒక రోజు", other: "{{count}} రోజుల" } }, aboutXWeeks: { standalone: { one: "సుమారు ఒక వారం", other: "సుమారు {{count}} వారాలు" }, withPreposition: { one: "సుమారు ఒక వారం", other: "సుమారు {{count}} వారాలల" } }, xWeeks: { standalone: { one: "ఒక వారం", other: "{{count}} వారాలు" }, withPreposition: { one: "ఒక వారం", other: "{{count}} వారాలల" } }, aboutXMonths: { standalone: { one: "సుమారు ఒక నెల", other: "సుమారు {{count}} నెలలు" }, withPreposition: { one: "సుమారు ఒక నెల", other: "సుమారు {{count}} నెలల" } }, xMonths: { standalone: { one: "ఒక నెల", other: "{{count}} నెలలు" }, withPreposition: { one: "ఒక నెల", other: "{{count}} నెలల" } }, aboutXYears: { standalone: { one: "సుమారు ఒక సంవత్సరం", other: "సుమారు {{count}} సంవత్సరాలు" }, withPreposition: { one: "సుమారు ఒక సంవత్సరం", other: "సుమారు {{count}} సంవత్సరాల" } }, xYears: { standalone: { one: "ఒక సంవత్సరం", other: "{{count}} సంవత్సరాలు" }, withPreposition: { one: "ఒక సంవత్సరం", other: "{{count}} సంవత్సరాల" } }, overXYears: { standalone: { one: "ఒక సంవత్సరం పైగా", other: "{{count}} సంవత్సరాలకు పైగా" }, withPreposition: { one: "ఒక సంవత్సరం", other: "{{count}} సంవత్సరాల" } }, almostXYears: { standalone: { one: "దాదాపు ఒక సంవత్సరం", other: "దాదాపు {{count}} సంవత్సరాలు" }, withPreposition: { one: "దాదాపు ఒక సంవత్సరం", other: "దాదాపు {{count}} సంవత్సరాల" } } }, formatDistance = (token, count, options1) => { let result, tokenValue = options1?.addSuffix ? formatDistanceLocale[token].withPreposition : formatDistanceLocale[token].standalone; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "లో";
                else
                    return result + " క్రితం"; return result; };
        }, "./node_modules/date-fns/locale/te/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "d, MMMM y, EEEE", long: "d MMMM, y", medium: "d MMM, y", short: "dd-MM-yy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}'కి'", long: "{{date}} {{time}}'కి'", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/te/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'గత' eeee p", yesterday: "'నిన్న' p", today: "'ఈ రోజు' p", tomorrow: "'రేపు' p", nextWeek: "'తదుపరి' eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/te/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + "వ", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["క్రీ.పూ.", "క్రీ.శ."], abbreviated: ["క్రీ.పూ.", "క్రీ.శ."], wide: ["క్రీస్తు పూర్వం", "క్రీస్తుశకం"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["త్రై1", "త్రై2", "త్రై3", "త్రై4"], wide: ["1వ త్రైమాసికం", "2వ త్రైమాసికం", "3వ త్రైమాసికం", "4వ త్రైమాసికం"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["జ", "ఫి", "మా", "ఏ", "మే", "జూ", "జు", "ఆ", "సె", "అ", "న", "డి"], abbreviated: ["జన", "ఫిబ్ర", "మార్చి", "ఏప్రి", "మే", "జూన్", "జులై", "ఆగ", "సెప్టెం", "అక్టో", "నవం", "డిసెం"], wide: ["జనవరి", "ఫిబ్రవరి", "మార్చి", "ఏప్రిల్", "మే", "జూన్", "జులై", "ఆగస్టు", "సెప్టెంబర్", "అక్టోబర్", "నవంబర్", "డిసెంబర్"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ఆ", "సో", "మ", "బు", "గు", "శు", "శ"], short: ["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"], abbreviated: ["ఆది", "సోమ", "మంగళ", "బుధ", "గురు", "శుక్ర", "శని"], wide: ["ఆదివారం", "సోమవారం", "మంగళవారం", "బుధవారం", "గురువారం", "శుక్రవారం", "శనివారం"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" }, abbreviated: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" }, wide: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" }, abbreviated: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" }, wide: { am: "పూర్వాహ్నం", pm: "అపరాహ్నం", midnight: "అర్ధరాత్రి", noon: "మిట్టమధ్యాహ్నం", morning: "ఉదయం", afternoon: "మధ్యాహ్నం", evening: "సాయంత్రం", night: "రాత్రి" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/te/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(వ)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(క్రీ\.పూ\.|క్రీ\.శ\.)/i, abbreviated: /^(క్రీ\.?\s?పూ\.?|ప్ర\.?\s?శ\.?\s?పూ\.?|క్రీ\.?\s?శ\.?|సా\.?\s?శ\.?)/i, wide: /^(క్రీస్తు పూర్వం|ప్రస్తుత శకానికి పూర్వం|క్రీస్తు శకం|ప్రస్తుత శకం)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(పూ|శ)/i, /^సా/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^త్రై[1234]/i, wide: /^[1234](వ)? త్రైమాసికం/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(జూ|జు|జ|ఫి|మా|ఏ|మే|ఆ|సె|అ|న|డి)/i, abbreviated: /^(జన|ఫిబ్ర|మార్చి|ఏప్రి|మే|జూన్|జులై|ఆగ|సెప్|అక్టో|నవ|డిసె)/i, wide: /^(జనవరి|ఫిబ్రవరి|మార్చి|ఏప్రిల్|మే|జూన్|జులై|ఆగస్టు|సెప్టెంబర్|అక్టోబర్|నవంబర్|డిసెంబర్)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^జ/i, /^ఫి/i, /^మా/i, /^ఏ/i, /^మే/i, /^జూ/i, /^జు/i, /^ఆ/i, /^సె/i, /^అ/i, /^న/i, /^డి/i], any: [/^జన/i, /^ఫి/i, /^మా/i, /^ఏ/i, /^మే/i, /^జూన్/i, /^జులై/i, /^ఆగ/i, /^సె/i, /^అ/i, /^న/i, /^డి/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ఆ|సో|మ|బు|గు|శు|శ)/i, short: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i, abbreviated: /^(ఆది|సోమ|మం|బుధ|గురు|శుక్ర|శని)/i, wide: /^(ఆదివారం|సోమవారం|మంగళవారం|బుధవారం|గురువారం|శుక్రవారం|శనివారం)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ఆ/i, /^సో/i, /^మ/i, /^బు/i, /^గు/i, /^శు/i, /^శ/i], any: [/^ఆది/i, /^సోమ/i, /^మం/i, /^బుధ/i, /^గురు/i, /^శుక్ర/i, /^శని/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i, any: /^(పూర్వాహ్నం|అపరాహ్నం|అర్ధరాత్రి|మిట్టమధ్యాహ్నం|ఉదయం|మధ్యాహ్నం|సాయంత్రం|రాత్రి)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^పూర్వాహ్నం/i, pm: /^అపరాహ్నం/i, midnight: /^అర్ధ/i, noon: /^మిట్ట/i, morning: /ఉదయం/i, afternoon: /మధ్యాహ్నం/i, evening: /సాయంత్రం/i, night: /రాత్రి/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/th.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, th: () => th });
            var _th_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/th/_lib/formatDistance.js"), _th_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/th/_lib/formatLong.js"), _th_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/th/_lib/formatRelative.js"), _th_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/th/_lib/localize.js"), _th_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/th/_lib/match.js");
            let th = { code: "th", formatDistance: _th_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _th_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _th_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _th_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _th_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = th;
        }, "./node_modules/date-fns/locale/th/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "น้อยกว่า 1 วินาที", other: "น้อยกว่า {{count}} วินาที" }, xSeconds: { one: "1 วินาที", other: "{{count}} วินาที" }, halfAMinute: "ครึ่งนาที", lessThanXMinutes: { one: "น้อยกว่า 1 นาที", other: "น้อยกว่า {{count}} นาที" }, xMinutes: { one: "1 นาที", other: "{{count}} นาที" }, aboutXHours: { one: "ประมาณ 1 ชั่วโมง", other: "ประมาณ {{count}} ชั่วโมง" }, xHours: { one: "1 ชั่วโมง", other: "{{count}} ชั่วโมง" }, xDays: { one: "1 วัน", other: "{{count}} วัน" }, aboutXWeeks: { one: "ประมาณ 1 สัปดาห์", other: "ประมาณ {{count}} สัปดาห์" }, xWeeks: { one: "1 สัปดาห์", other: "{{count}} สัปดาห์" }, aboutXMonths: { one: "ประมาณ 1 เดือน", other: "ประมาณ {{count}} เดือน" }, xMonths: { one: "1 เดือน", other: "{{count}} เดือน" }, aboutXYears: { one: "ประมาณ 1 ปี", other: "ประมาณ {{count}} ปี" }, xYears: { one: "1 ปี", other: "{{count}} ปี" }, overXYears: { one: "มากกว่า 1 ปี", other: "มากกว่า {{count}} ปี" }, almostXYears: { one: "เกือบ 1 ปี", other: "เกือบ {{count}} ปี" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (!options1.comparison || !(options1.comparison > 0))
                    return result + "ที่ผ่านมา";
                else if ("halfAMinute" === token)
                    return "ใน" + result;
                else
                    return "ใน " + result; return result; };
        }, "./node_modules/date-fns/locale/th/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "วันEEEEที่ do MMMM y", long: "do MMMM y", medium: "d MMM y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss น. zzzz", long: "H:mm:ss น. z", medium: "H:mm:ss น.", short: "H:mm น." }, defaultWidth: "medium" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'เวลา' {{time}}", long: "{{date}} 'เวลา' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/th/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee'ที่แล้วเวลา' p", yesterday: "'เมื่อวานนี้เวลา' p", today: "'วันนี้เวลา' p", tomorrow: "'พรุ่งนี้เวลา' p", nextWeek: "eeee 'เวลา' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/th/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["B", "คศ"], abbreviated: ["BC", "ค.ศ."], wide: ["ปีก่อนคริสตกาล", "คริสต์ศักราช"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["ไตรมาสแรก", "ไตรมาสที่สอง", "ไตรมาสที่สาม", "ไตรมาสที่สี่"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], abbreviated: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."], wide: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], short: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], abbreviated: ["อา.", "จ.", "อ.", "พ.", "พฤ.", "ศ.", "ส."], wide: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัสบดี", "ศุกร์", "เสาร์"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "เช้า", afternoon: "บ่าย", evening: "เย็น", night: "กลางคืน" }, abbreviated: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "เช้า", afternoon: "บ่าย", evening: "เย็น", night: "กลางคืน" }, wide: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "เช้า", afternoon: "บ่าย", evening: "เย็น", night: "กลางคืน" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "ตอนเช้า", afternoon: "ตอนกลางวัน", evening: "ตอนเย็น", night: "ตอนกลางคืน" }, abbreviated: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "ตอนเช้า", afternoon: "ตอนกลางวัน", evening: "ตอนเย็น", night: "ตอนกลางคืน" }, wide: { am: "ก่อนเที่ยง", pm: "หลังเที่ยง", midnight: "เที่ยงคืน", noon: "เที่ยง", morning: "ตอนเช้า", afternoon: "ตอนกลางวัน", evening: "ตอนเย็น", night: "ตอนกลางคืน" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/th/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^\d+/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([bB]|[aA]|คศ)/i, abbreviated: /^([bB]\.?\s?[cC]\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?|ค\.?ศ\.?)/i, wide: /^(ก่อนคริสตกาล|คริสต์ศักราช|คริสตกาล)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^[bB]/i, /^(^[aA]|ค\.?ศ\.?|คริสตกาล|คริสต์ศักราช|)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^ไตรมาส(ที่)? ?[1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|แรก|หนึ่ง)/i, /(2|สอง)/i, /(3|สาม)/i, /(4|สี่)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?)/i, abbreviated: /^(ม\.?ค\.?|ก\.?พ\.?|มี\.?ค\.?|เม\.?ย\.?|พ\.?ค\.?|มิ\.?ย\.?|ก\.?ค\.?|ส\.?ค\.?|ก\.?ย\.?|ต\.?ค\.?|พ\.?ย\.?|ธ\.?ค\.?')/i, wide: /^(มกราคม|กุมภาพันธ์|มีนาคม|เมษายน|พฤษภาคม|มิถุนายน|กรกฎาคม|สิงหาคม|กันยายน|ตุลาคม|พฤศจิกายน|ธันวาคม)/i }, defaultMatchWidth: "wide", parsePatterns: { wide: [/^มก/i, /^กุม/i, /^มี/i, /^เม/i, /^พฤษ/i, /^มิ/i, /^กรก/i, /^ส/i, /^กัน/i, /^ต/i, /^พฤศ/i, /^ธ/i], any: [/^ม\.?ค\.?/i, /^ก\.?พ\.?/i, /^มี\.?ค\.?/i, /^เม\.?ย\.?/i, /^พ\.?ค\.?/i, /^มิ\.?ย\.?/i, /^ก\.?ค\.?/i, /^ส\.?ค\.?/i, /^ก\.?ย\.?/i, /^ต\.?ค\.?/i, /^พ\.?ย\.?/i, /^ธ\.?ค\.?/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i, short: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i, abbreviated: /^(อา\.?|จ\.?|อ\.?|พฤ\.?|พ\.?|ศ\.?|ส\.?)/i, wide: /^(อาทิตย์|จันทร์|อังคาร|พุธ|พฤหัสบดี|ศุกร์|เสาร์)/i }, defaultMatchWidth: "wide", parsePatterns: { wide: [/^อา/i, /^จั/i, /^อั/i, /^พุธ/i, /^พฤ/i, /^ศ/i, /^เส/i], any: [/^อา/i, /^จ/i, /^อ/i, /^พ(?!ฤ)/i, /^พฤ/i, /^ศ/i, /^ส/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(ก่อนเที่ยง|หลังเที่ยง|เที่ยงคืน|เที่ยง|(ตอน.*?)?.*(เที่ยง|เช้า|บ่าย|เย็น|กลางคืน))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ก่อนเที่ยง/i, pm: /^หลังเที่ยง/i, midnight: /^เที่ยงคืน/i, noon: /^เที่ยง/i, morning: /เช้า/i, afternoon: /บ่าย/i, evening: /เย็น/i, night: /กลางคืน/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/tr.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, tr: () => tr });
            var _tr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/tr/_lib/formatDistance.js"), _tr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/tr/_lib/formatLong.js"), _tr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/tr/_lib/formatRelative.js"), _tr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/tr/_lib/localize.js"), _tr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/tr/_lib/match.js");
            let tr = { code: "tr", formatDistance: _tr_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _tr_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _tr_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _tr_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _tr_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = tr;
        }, "./node_modules/date-fns/locale/tr/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "bir saniyeden az", other: "{{count}} saniyeden az" }, xSeconds: { one: "1 saniye", other: "{{count}} saniye" }, halfAMinute: "yarım dakika", lessThanXMinutes: { one: "bir dakikadan az", other: "{{count}} dakikadan az" }, xMinutes: { one: "1 dakika", other: "{{count}} dakika" }, aboutXHours: { one: "yaklaşık 1 saat", other: "yaklaşık {{count}} saat" }, xHours: { one: "1 saat", other: "{{count}} saat" }, xDays: { one: "1 gün", other: "{{count}} gün" }, aboutXWeeks: { one: "yaklaşık 1 hafta", other: "yaklaşık {{count}} hafta" }, xWeeks: { one: "1 hafta", other: "{{count}} hafta" }, aboutXMonths: { one: "yaklaşık 1 ay", other: "yaklaşık {{count}} ay" }, xMonths: { one: "1 ay", other: "{{count}} ay" }, aboutXYears: { one: "yaklaşık 1 yıl", other: "yaklaşık {{count}} yıl" }, xYears: { one: "1 yıl", other: "{{count}} yıl" }, overXYears: { one: "1 yıldan fazla", other: "{{count}} yıldan fazla" }, almostXYears: { one: "neredeyse 1 yıl", other: "neredeyse {{count}} yıl" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", count.toString()), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " sonra";
                else
                    return result + " önce"; return result; };
        }, "./node_modules/date-fns/locale/tr/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "d MMMM y EEEE", long: "d MMMM y", medium: "d MMM y", short: "dd.MM.yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'saat' {{time}}", long: "{{date}} 'saat' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/tr/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'geçen hafta' eeee 'saat' p", yesterday: "'dün saat' p", today: "'bugün saat' p", tomorrow: "'yarın saat' p", nextWeek: "eeee 'saat' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/tr/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => Number(dirtyNumber) + ".", era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["MÖ", "MS"], abbreviated: ["MÖ", "MS"], wide: ["Milattan Önce", "Milattan Sonra"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1Ç", "2Ç", "3Ç", "4Ç"], wide: ["İlk çeyrek", "İkinci Çeyrek", "Üçüncü çeyrek", "Son çeyrek"] }, defaultWidth: "wide", argumentCallback: quarter => Number(quarter) - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["O", "Ş", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], abbreviated: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"], wide: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["P", "P", "S", "Ç", "P", "C", "C"], short: ["Pz", "Pt", "Sa", "Ça", "Pe", "Cu", "Ct"], abbreviated: ["Paz", "Pzt", "Sal", "Çar", "Per", "Cum", "Cts"], wide: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "öö", pm: "ös", midnight: "gy", noon: "ö", morning: "sa", afternoon: "ös", evening: "ak", night: "ge" }, abbreviated: { am: "ÖÖ", pm: "ÖS", midnight: "gece yarısı", noon: "öğle", morning: "sabah", afternoon: "öğleden sonra", evening: "akşam", night: "gece" }, wide: { am: "Ö.Ö.", pm: "Ö.S.", midnight: "gece yarısı", noon: "öğle", morning: "sabah", afternoon: "öğleden sonra", evening: "akşam", night: "gece" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "öö", pm: "ös", midnight: "gy", noon: "ö", morning: "sa", afternoon: "ös", evening: "ak", night: "ge" }, abbreviated: { am: "ÖÖ", pm: "ÖS", midnight: "gece yarısı", noon: "öğlen", morning: "sabahleyin", afternoon: "öğleden sonra", evening: "akşamleyin", night: "geceleyin" }, wide: { am: "ö.ö.", pm: "ö.s.", midnight: "gece yarısı", noon: "öğlen", morning: "sabahleyin", afternoon: "öğleden sonra", evening: "akşamleyin", night: "geceleyin" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/tr/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(\.)?/i, parsePattern: /\d+/i, valueCallback: function (value) { return parseInt(value, 10); } }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(mö|ms)/i, abbreviated: /^(mö|ms)/i, wide: /^(milattan önce|milattan sonra)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(^mö|^milattan önce)/i, /(^ms|^milattan sonra)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]ç/i, wide: /^((i|İ)lk|(i|İ)kinci|üçüncü|son) çeyrek/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i], abbreviated: [/1ç/i, /2ç/i, /3ç/i, /4ç/i], wide: [/^(i|İ)lk çeyrek/i, /(i|İ)kinci çeyrek/i, /üçüncü çeyrek/i, /son çeyrek/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[oşmnhtaek]/i, abbreviated: /^(oca|şub|mar|nis|may|haz|tem|ağu|eyl|eki|kas|ara)/i, wide: /^(ocak|şubat|mart|nisan|mayıs|haziran|temmuz|ağustos|eylül|ekim|kasım|aralık)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^o/i, /^ş/i, /^m/i, /^n/i, /^m/i, /^h/i, /^t/i, /^a/i, /^e/i, /^e/i, /^k/i, /^a/i], any: [/^o/i, /^ş/i, /^mar/i, /^n/i, /^may/i, /^h/i, /^t/i, /^ağ/i, /^ey/i, /^ek/i, /^k/i, /^ar/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[psçc]/i, short: /^(pz|pt|sa|ça|pe|cu|ct)/i, abbreviated: /^(paz|pzt|sal|çar|per|cum|cts)/i, wide: /^(pazar(?!tesi)|pazartesi|salı|çarşamba|perşembe|cuma(?!rtesi)|cumartesi)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^p/i, /^p/i, /^s/i, /^ç/i, /^p/i, /^c/i, /^c/i], any: [/^pz/i, /^pt/i, /^sa/i, /^ça/i, /^pe/i, /^cu/i, /^ct/i], wide: [/^pazar(?!tesi)/i, /^pazartesi/i, /^salı/i, /^çarşamba/i, /^perşembe/i, /^cuma(?!rtesi)/i, /^cumartesi/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(öö|ös|gy|ö|sa|ös|ak|ge)/i, any: /^(ö\.?\s?[ös]\.?|öğleden sonra|gece yarısı|öğle|(sabah|öğ|akşam|gece)(leyin))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ö\.?ö\.?/i, pm: /^ö\.?s\.?/i, midnight: /^(gy|gece yarısı)/i, noon: /^öğ/i, morning: /^sa/i, afternoon: /^öğleden sonra/i, evening: /^ak/i, night: /^ge/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/ug.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, ug: () => ug });
            var _ug_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/ug/_lib/formatDistance.js"), _ug_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/ug/_lib/formatLong.js"), _ug_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/ug/_lib/formatRelative.js"), _ug_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/ug/_lib/localize.js"), _ug_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/ug/_lib/match.js");
            let ug = { code: "ug", formatDistance: _ug_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _ug_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _ug_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _ug_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _ug_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = ug;
        }, "./node_modules/date-fns/locale/ug/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "بىر سىكۇنت ئىچىدە", other: "سىكۇنت ئىچىدە {{count}}" }, xSeconds: { one: "بىر سىكۇنت", other: "سىكۇنت {{count}}" }, halfAMinute: "يىرىم مىنۇت", lessThanXMinutes: { one: "بىر مىنۇت ئىچىدە", other: "مىنۇت ئىچىدە {{count}}" }, xMinutes: { one: "بىر مىنۇت", other: "مىنۇت {{count}}" }, aboutXHours: { one: "تەخمىنەن بىر سائەت", other: "سائەت {{count}} تەخمىنەن" }, xHours: { one: "بىر سائەت", other: "سائەت {{count}}" }, xDays: { one: "بىر كۈن", other: "كۈن {{count}}" }, aboutXWeeks: { one: "تەخمىنەن بىرھەپتە", other: "ھەپتە {{count}} تەخمىنەن" }, xWeeks: { one: "بىرھەپتە", other: "ھەپتە {{count}}" }, aboutXMonths: { one: "تەخمىنەن بىر ئاي", other: "ئاي {{count}} تەخمىنەن" }, xMonths: { one: "بىر ئاي", other: "ئاي {{count}}" }, aboutXYears: { one: "تەخمىنەن بىر يىل", other: "يىل {{count}} تەخمىنەن" }, xYears: { one: "بىر يىل", other: "يىل {{count}}" }, overXYears: { one: "بىر يىلدىن ئارتۇق", other: "يىلدىن ئارتۇق {{count}}" }, almostXYears: { one: "ئاساسەن بىر يىل", other: "يىل {{count}} ئاساسەن" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if ((result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix) && (!options1.comparison || !(options1.comparison > 0)))
                return result + " بولدى"; return result; };
        }, "./node_modules/date-fns/locale/ug/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, MMMM do, y", long: "MMMM do, y", medium: "MMM d, y", short: "MM/dd/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss a zzzz", long: "h:mm:ss a z", medium: "h:mm:ss a", short: "h:mm a" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'دە' {{time}}", long: "{{date}} 'دە' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/ug/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ئ‍ۆتكەن' eeee 'دە' p", yesterday: "'تۈنۈگۈن دە' p", today: "'بۈگۈن دە' p", tomorrow: "'ئەتە دە' p", nextWeek: "eeee 'دە' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/ug/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ب", "ك"], abbreviated: ["ب", "ك"], wide: ["مىيلادىدىن بۇرۇن", "مىيلادىدىن كىيىن"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1", "2", "3", "4"], wide: ["بىرىنجى چارەك", "ئىككىنجى چارەك", "ئۈچىنجى چارەك", "تۆتىنجى چارەك"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "ف", "م", "ا", "م", "ى", "ى", "ا", "س", "ۆ", "ن", "د"], abbreviated: ["يانۋار", "فېۋىرال", "مارت", "ئاپرىل", "ماي", "ئىيۇن", "ئىيول", "ئاۋغۇست", "سىنتەبىر", "ئۆكتەبىر", "نويابىر", "دىكابىر"], wide: ["يانۋار", "فېۋىرال", "مارت", "ئاپرىل", "ماي", "ئىيۇن", "ئىيول", "ئاۋغۇست", "سىنتەبىر", "ئۆكتەبىر", "نويابىر", "دىكابىر"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["ي", "د", "س", "چ", "پ", "ج", "ش"], short: ["ي", "د", "س", "چ", "پ", "ج", "ش"], abbreviated: ["يەكشەنبە", "دۈشەنبە", "سەيشەنبە", "چارشەنبە", "پەيشەنبە", "جۈمە", "شەنبە"], wide: ["يەكشەنبە", "دۈشەنبە", "سەيشەنبە", "چارشەنبە", "پەيشەنبە", "جۈمە", "شەنبە"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەن", afternoon: "چۈشتىن كىيىن", evening: "ئاخشىم", night: "كىچە" }, abbreviated: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەن", afternoon: "چۈشتىن كىيىن", evening: "ئاخشىم", night: "كىچە" }, wide: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەن", afternoon: "چۈشتىن كىيىن", evening: "ئاخشىم", night: "كىچە" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەندە", afternoon: "چۈشتىن كىيىن", evening: "ئاخشامدا", night: "كىچىدە" }, abbreviated: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەندە", afternoon: "چۈشتىن كىيىن", evening: "ئاخشامدا", night: "كىچىدە" }, wide: { am: "ئە", pm: "چ", midnight: "ك", noon: "چ", morning: "ئەتىگەندە", afternoon: "چۈشتىن كىيىن", evening: "ئاخشامدا", night: "كىچىدە" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/ug/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(th|st|nd|rd)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ب|ك)/i, wide: /^(مىيلادىدىن بۇرۇن|مىيلادىدىن كىيىن)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^بۇرۇن/i, /^كىيىن/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^چ[1234]/i, wide: /^چارەك [1234]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[يفمئامئ‍ئاسۆند]/i, abbreviated: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i, wide: /^(يانۋار|فېۋىرال|مارت|ئاپرىل|ماي|ئىيۇن|ئىيول|ئاۋغۇست|سىنتەبىر|ئۆكتەبىر|نويابىر|دىكابىر)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/i, /^ف/i, /^م/i, /^ا/i, /^م/i, /^ى‍/i, /^ى‍/i, /^ا‍/i, /^س/i, /^ۆ/i, /^ن/i, /^د/i], any: [/^يان/i, /^فېۋ/i, /^مار/i, /^ئاپ/i, /^ماي/i, /^ئىيۇن/i, /^ئىيول/i, /^ئاۋ/i, /^سىن/i, /^ئۆك/i, /^نوي/i, /^دىك/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[دسچپجشي]/i, short: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i, abbreviated: /^(يە|دۈ|سە|چا|پە|جۈ|شە)/i, wide: /^(يەكشەنبە|دۈشەنبە|سەيشەنبە|چارشەنبە|پەيشەنبە|جۈمە|شەنبە)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i], any: [/^ي/i, /^د/i, /^س/i, /^چ/i, /^پ/i, /^ج/i, /^ش/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i, any: /^(ئە|چ|ك|چ|(دە|ئەتىگەن) ( ئە‍|چۈشتىن كىيىن|ئاخشىم|كىچە))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^ئە/i, pm: /^چ/i, midnight: /^ك/i, noon: /^چ/i, morning: /ئەتىگەن/i, afternoon: /چۈشتىن كىيىن/i, evening: /ئاخشىم/i, night: /كىچە/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uk.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, uk: () => uk });
            var _uk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/uk/_lib/formatDistance.js"), _uk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/uk/_lib/formatLong.js"), _uk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/uk/_lib/formatRelative.js"), _uk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/uk/_lib/localize.js"), _uk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/uk/_lib/match.js");
            let uk = { code: "uk", formatDistance: _uk_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _uk_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _uk_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _uk_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _uk_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = uk;
        }, "./node_modules/date-fns/locale/uk/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function declension(scheme, count) { if (void 0 !== scheme.one && 1 === count)
                return scheme.one; let rem10 = count % 10, rem100 = count % 100; return 1 === rem10 && 11 !== rem100 ? scheme.singularNominative.replace("{{count}}", String(count)) : rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20) ? scheme.singularGenitive.replace("{{count}}", String(count)) : scheme.pluralGenitive.replace("{{count}}", String(count)); }
            function buildLocalizeTokenFn(scheme) { return (count, options1) => { if (!options1 || !options1.addSuffix)
                return declension(scheme.regular, count); if (options1.comparison && options1.comparison > 0)
                if (scheme.future)
                    return declension(scheme.future, count);
                else
                    return "за " + declension(scheme.regular, count); return scheme.past ? declension(scheme.past, count) : declension(scheme.regular, count) + " тому"; }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: buildLocalizeTokenFn({ regular: { one: "менше секунди", singularNominative: "менше {{count}} секунди", singularGenitive: "менше {{count}} секунд", pluralGenitive: "менше {{count}} секунд" }, future: { one: "менше, ніж за секунду", singularNominative: "менше, ніж за {{count}} секунду", singularGenitive: "менше, ніж за {{count}} секунди", pluralGenitive: "менше, ніж за {{count}} секунд" } }), xSeconds: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} секунда", singularGenitive: "{{count}} секунди", pluralGenitive: "{{count}} секунд" }, past: { singularNominative: "{{count}} секунду тому", singularGenitive: "{{count}} секунди тому", pluralGenitive: "{{count}} секунд тому" }, future: { singularNominative: "за {{count}} секунду", singularGenitive: "за {{count}} секунди", pluralGenitive: "за {{count}} секунд" } }), halfAMinute: (_, options1) => { if (options1 && options1.addSuffix)
                    if (options1.comparison && options1.comparison > 0)
                        return "за півхвилини";
                    else
                        return "півхвилини тому"; return "півхвилини"; }, lessThanXMinutes: buildLocalizeTokenFn({ regular: { one: "менше хвилини", singularNominative: "менше {{count}} хвилини", singularGenitive: "менше {{count}} хвилин", pluralGenitive: "менше {{count}} хвилин" }, future: { one: "менше, ніж за хвилину", singularNominative: "менше, ніж за {{count}} хвилину", singularGenitive: "менше, ніж за {{count}} хвилини", pluralGenitive: "менше, ніж за {{count}} хвилин" } }), xMinutes: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} хвилина", singularGenitive: "{{count}} хвилини", pluralGenitive: "{{count}} хвилин" }, past: { singularNominative: "{{count}} хвилину тому", singularGenitive: "{{count}} хвилини тому", pluralGenitive: "{{count}} хвилин тому" }, future: { singularNominative: "за {{count}} хвилину", singularGenitive: "за {{count}} хвилини", pluralGenitive: "за {{count}} хвилин" } }), aboutXHours: buildLocalizeTokenFn({ regular: { singularNominative: "близько {{count}} години", singularGenitive: "близько {{count}} годин", pluralGenitive: "близько {{count}} годин" }, future: { singularNominative: "приблизно за {{count}} годину", singularGenitive: "приблизно за {{count}} години", pluralGenitive: "приблизно за {{count}} годин" } }), xHours: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} годину", singularGenitive: "{{count}} години", pluralGenitive: "{{count}} годин" } }), xDays: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} день", singularGenitive: "{{count}} днi", pluralGenitive: "{{count}} днів" } }), aboutXWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "близько {{count}} тижня", singularGenitive: "близько {{count}} тижнів", pluralGenitive: "близько {{count}} тижнів" }, future: { singularNominative: "приблизно за {{count}} тиждень", singularGenitive: "приблизно за {{count}} тижні", pluralGenitive: "приблизно за {{count}} тижнів" } }), xWeeks: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} тиждень", singularGenitive: "{{count}} тижні", pluralGenitive: "{{count}} тижнів" } }), aboutXMonths: buildLocalizeTokenFn({ regular: { singularNominative: "близько {{count}} місяця", singularGenitive: "близько {{count}} місяців", pluralGenitive: "близько {{count}} місяців" }, future: { singularNominative: "приблизно за {{count}} місяць", singularGenitive: "приблизно за {{count}} місяці", pluralGenitive: "приблизно за {{count}} місяців" } }), xMonths: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} місяць", singularGenitive: "{{count}} місяці", pluralGenitive: "{{count}} місяців" } }), aboutXYears: buildLocalizeTokenFn({ regular: { singularNominative: "близько {{count}} року", singularGenitive: "близько {{count}} років", pluralGenitive: "близько {{count}} років" }, future: { singularNominative: "приблизно за {{count}} рік", singularGenitive: "приблизно за {{count}} роки", pluralGenitive: "приблизно за {{count}} років" } }), xYears: buildLocalizeTokenFn({ regular: { singularNominative: "{{count}} рік", singularGenitive: "{{count}} роки", pluralGenitive: "{{count}} років" } }), overXYears: buildLocalizeTokenFn({ regular: { singularNominative: "більше {{count}} року", singularGenitive: "більше {{count}} років", pluralGenitive: "більше {{count}} років" }, future: { singularNominative: "більше, ніж за {{count}} рік", singularGenitive: "більше, ніж за {{count}} роки", pluralGenitive: "більше, ніж за {{count}} років" } }), almostXYears: buildLocalizeTokenFn({ regular: { singularNominative: "майже {{count}} рік", singularGenitive: "майже {{count}} роки", pluralGenitive: "майже {{count}} років" }, future: { singularNominative: "майже за {{count}} рік", singularGenitive: "майже за {{count}} роки", pluralGenitive: "майже за {{count}} років" } }) }, formatDistance = (token, count, options1) => (options1 = options1 || {}, formatDistanceLocale[token](count, options1));
        }, "./node_modules/date-fns/locale/uk/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM y 'р.'", long: "do MMMM y 'р.'", medium: "d MMM y 'р.'", short: "dd.MM.y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} 'о' {{time}}", long: "{{date}} 'о' {{time}}", medium: "{{date}}, {{time}}", short: "{{date}}, {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/uk/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            let accusativeWeekdays = ["неділю", "понеділок", "вівторок", "середу", "четвер", "п’ятницю", "суботу"];
            function thisWeek(day) { return "'у " + accusativeWeekdays[day] + " о' p"; }
            let formatRelativeLocale = { lastWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у минулу " + weekday + " о' p";
                    case 1:
                    case 2:
                    case 4: return "'у минулий " + weekday + " о' p";
                } }(day); }, yesterday: "'вчора о' p", today: "'сьогодні о' p", tomorrow: "'завтра о' p", nextWeek: (dirtyDate, baseDate, options1) => { let date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(dirtyDate), day = date.getDay(); return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_1__.isSameWeek)(date, baseDate, options1) ? thisWeek(day) : function (day) { let weekday = accusativeWeekdays[day]; switch (day) {
                    case 0:
                    case 3:
                    case 5:
                    case 6: return "'у наступну " + weekday + " о' p";
                    case 1:
                    case 2:
                    case 4: return "'у наступний " + weekday + " о' p";
                } }(day); }, other: "P" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/uk/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let suffix, unit = String(options1?.unit), number = Number(dirtyNumber); return suffix = "date" === unit ? 3 === number || 23 === number ? "-є" : "-е" : "minute" === unit || "second" === unit || "hour" === unit ? "-а" : "-й", number + suffix; }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["до н.е.", "н.е."], abbreviated: ["до н. е.", "н. е."], wide: ["до нашої ери", "нашої ери"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-й кв.", "2-й кв.", "3-й кв.", "4-й кв."], wide: ["1-й квартал", "2-й квартал", "3-й квартал", "4-й квартал"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"], abbreviated: ["січ.", "лют.", "берез.", "квіт.", "трав.", "черв.", "лип.", "серп.", "верес.", "жовт.", "листоп.", "груд."], wide: ["січень", "лютий", "березень", "квітень", "травень", "червень", "липень", "серпень", "вересень", "жовтень", "листопад", "грудень"] }, defaultWidth: "wide", formattingValues: { narrow: ["С", "Л", "Б", "К", "Т", "Ч", "Л", "С", "В", "Ж", "Л", "Г"], abbreviated: ["січ.", "лют.", "берез.", "квіт.", "трав.", "черв.", "лип.", "серп.", "верес.", "жовт.", "листоп.", "груд."], wide: ["січня", "лютого", "березня", "квітня", "травня", "червня", "липня", "серпня", "вересня", "жовтня", "листопада", "грудня"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Н", "П", "В", "С", "Ч", "П", "С"], short: ["нд", "пн", "вт", "ср", "чт", "пт", "сб"], abbreviated: ["нед", "пон", "вів", "сер", "чтв", "птн", "суб"], wide: ["неділя", "понеділок", "вівторок", "середа", "четвер", "п’ятниця", "субота"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "ДП", pm: "ПП", midnight: "півн.", noon: "пол.", morning: "ранок", afternoon: "день", evening: "веч.", night: "ніч" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "півн.", noon: "пол.", morning: "ранок", afternoon: "день", evening: "веч.", night: "ніч" }, wide: { am: "ДП", pm: "ПП", midnight: "північ", noon: "полудень", morning: "ранок", afternoon: "день", evening: "вечір", night: "ніч" } }, defaultWidth: "any", formattingValues: { narrow: { am: "ДП", pm: "ПП", midnight: "півн.", noon: "пол.", morning: "ранку", afternoon: "дня", evening: "веч.", night: "ночі" }, abbreviated: { am: "ДП", pm: "ПП", midnight: "півн.", noon: "пол.", morning: "ранку", afternoon: "дня", evening: "веч.", night: "ночі" }, wide: { am: "ДП", pm: "ПП", midnight: "північ", noon: "полудень", morning: "ранку", afternoon: "дня", evening: "веч.", night: "ночі" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/uk/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(-?(е|й|є|а|я))?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^((до )?н\.?\s?е\.?)/i, abbreviated: /^((до )?н\.?\s?е\.?)/i, wide: /^(до нашої ери|нашої ери|наша ера)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^д/i, /^н/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234](-?[иі]?й?)? кв.?/i, wide: /^[1234](-?[иі]?й?)? квартал/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[слбктчвжг]/i, abbreviated: /^(січ|лют|бер(ез)?|квіт|трав|черв|лип|серп|вер(ес)?|жовт|лис(топ)?|груд)\.?/i, wide: /^(січень|січня|лютий|лютого|березень|березня|квітень|квітня|травень|травня|червня|червень|липень|липня|серпень|серпня|вересень|вересня|жовтень|жовтня|листопад[а]?|грудень|грудня)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^с/i, /^л/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^л/i, /^с/i, /^в/i, /^ж/i, /^л/i, /^г/i], any: [/^сі/i, /^лю/i, /^б/i, /^к/i, /^т/i, /^ч/i, /^лип/i, /^се/i, /^в/i, /^ж/i, /^лис/i, /^г/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[нпвсч]/i, short: /^(нд|пн|вт|ср|чт|пт|сб)\.?/i, abbreviated: /^(нед|пон|вів|сер|че?тв|птн?|суб)\.?/i, wide: /^(неділ[яі]|понеділ[ок][ка]|вівтор[ок][ка]|серед[аи]|четвер(га)?|п\W*?ятниц[яі]|субот[аи])/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^н/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i], any: [/^н/i, /^п[он]/i, /^в/i, /^с[ер]/i, /^ч/i, /^п\W*?[ят]/i, /^с[уб]/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i, abbreviated: /^([дп]п|півн\.?|пол\.?|ранок|ранку|день|дня|веч\.?|ніч|ночі)/i, wide: /^([дп]п|північ|полудень|ранок|ранку|день|дня|вечір|вечора|ніч|ночі)/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^дп/i, pm: /^пп/i, midnight: /^півн/i, noon: /^пол/i, morning: /^р/i, afternoon: /^д[ен]/i, evening: /^в/i, night: /^н/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uz-Cyrl.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, uzCyrl: () => uzCyrl });
            var _uz_Cyrl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl/_lib/formatDistance.js"), _uz_Cyrl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl/_lib/formatLong.js"), _uz_Cyrl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl/_lib/formatRelative.js"), _uz_Cyrl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl/_lib/localize.js"), _uz_Cyrl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/uz-Cyrl/_lib/match.js");
            let uzCyrl = { code: "uz-Cyrl", formatDistance: _uz_Cyrl_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _uz_Cyrl_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _uz_Cyrl_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _uz_Cyrl_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _uz_Cyrl_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = uzCyrl;
        }, "./node_modules/date-fns/locale/uz-Cyrl/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "1 сониядан кам", other: "{{count}} сониядан кам" }, xSeconds: { one: "1 сония", other: "{{count}} сония" }, halfAMinute: "ярим дақиқа", lessThanXMinutes: { one: "1 дақиқадан кам", other: "{{count}} дақиқадан кам" }, xMinutes: { one: "1 дақиқа", other: "{{count}} дақиқа" }, aboutXHours: { one: "тахминан 1 соат", other: "тахминан {{count}} соат" }, xHours: { one: "1 соат", other: "{{count}} соат" }, xDays: { one: "1 кун", other: "{{count}} кун" }, aboutXWeeks: { one: "тахминан 1 хафта", other: "тахминан {{count}} хафта" }, xWeeks: { one: "1 хафта", other: "{{count}} хафта" }, aboutXMonths: { one: "тахминан 1 ой", other: "тахминан {{count}} ой" }, xMonths: { one: "1 ой", other: "{{count}} ой" }, aboutXYears: { one: "тахминан 1 йил", other: "тахминан {{count}} йил" }, xYears: { one: "1 йил", other: "{{count}} йил" }, overXYears: { one: "1 йилдан кўп", other: "{{count}} йилдан кўп" }, almostXYears: { one: "деярли 1 йил", other: "деярли {{count}} йил" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "дан кейин";
                else
                    return result + " олдин"; return result; };
        }, "./node_modules/date-fns/locale/uz-Cyrl/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM, y", long: "do MMMM, y", medium: "d MMM, y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "H:mm:ss zzzz", long: "H:mm:ss z", medium: "H:mm:ss", short: "H:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uz-Cyrl/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'ўтган' eeee p 'да'", yesterday: "'кеча' p 'да'", today: "'бугун' p 'да'", tomorrow: "'эртага' p 'да'", nextWeek: "eeee p 'да'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/uz-Cyrl/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["М.А", "М"], abbreviated: ["М.А", "М"], wide: ["Милоддан Аввалги", "Милодий"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["1-чор.", "2-чор.", "3-чор.", "4-чор."], wide: ["1-чорак", "2-чорак", "3-чорак", "4-чорак"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Я", "Ф", "М", "А", "М", "И", "И", "А", "С", "О", "Н", "Д"], abbreviated: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"], wide: ["январ", "феврал", "март", "апрел", "май", "июн", "июл", "август", "сентабр", "октабр", "ноябр", "декабр"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Я", "Д", "С", "Ч", "П", "Ж", "Ш"], short: ["як", "ду", "се", "чо", "па", "жу", "ша"], abbreviated: ["якш", "душ", "сеш", "чор", "пай", "жум", "шан"], wide: ["якшанба", "душанба", "сешанба", "чоршанба", "пайшанба", "жума", "шанба"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { any: { am: "П.О.", pm: "П.К.", midnight: "ярим тун", noon: "пешин", morning: "эрталаб", afternoon: "пешиндан кейин", evening: "кечаси", night: "тун" } }, defaultWidth: "any", formattingValues: { any: { am: "П.О.", pm: "П.К.", midnight: "ярим тун", noon: "пешин", morning: "эрталаб", afternoon: "пешиндан кейин", evening: "кечаси", night: "тун" } }, defaultFormattingWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uz-Cyrl/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(чи)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(м\.а|м\.)/i, abbreviated: /^(м\.а|м\.)/i, wide: /^(милоддан аввал|милоддан кейин)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^м/i, /^а/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^[1234]-чор./i, wide: /^[1234]-чорак/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[яфмамииасонд]/i, abbreviated: /^(янв|фев|мар|апр|май|июн|июл|авг|сен|окт|ноя|дек)/i, wide: /^(январ|феврал|март|апрел|май|июн|июл|август|сентабр|октабр|ноябр|декабр)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^я/i, /^ф/i, /^м/i, /^а/i, /^м/i, /^и/i, /^и/i, /^а/i, /^с/i, /^о/i, /^н/i, /^д/i], any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^май/i, /^июн/i, /^июл/i, /^ав/i, /^с/i, /^о/i, /^н/i, /^д/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ядсчпжш]/i, short: /^(як|ду|се|чо|па|жу|ша)/i, abbreviated: /^(якш|душ|сеш|чор|пай|жум|шан)/i, wide: /^(якшанба|душанба|сешанба|чоршанба|пайшанба|жума|шанба)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^я/i, /^д/i, /^с/i, /^ч/i, /^п/i, /^ж/i, /^ш/i], any: [/^як/i, /^ду/i, /^се/i, /^чор/i, /^пай/i, /^жу/i, /^шан/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(п\.о\.|п\.к\.|ярим тун|пешиндан кейин|(эрталаб|пешиндан кейин|кечаси|тун))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^п\.о\./i, pm: /^п\.к\./i, midnight: /^ярим тун/i, noon: /^пешиндан кейин/i, morning: /эрталаб/i, afternoon: /пешиндан кейин/i, evening: /кечаси/i, night: /тун/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uz.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, uz: () => uz });
            var _uz_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/uz/_lib/formatDistance.js"), _uz_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/uz/_lib/formatLong.js"), _uz_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/uz/_lib/formatRelative.js"), _uz_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/uz/_lib/localize.js"), _uz_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/uz/_lib/match.js");
            let uz = { code: "uz", formatDistance: _uz_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _uz_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _uz_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _uz_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _uz_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = uz;
        }, "./node_modules/date-fns/locale/uz/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "sekunddan kam", other: "{{count}} sekunddan kam" }, xSeconds: { one: "1 sekund", other: "{{count}} sekund" }, halfAMinute: "yarim minut", lessThanXMinutes: { one: "bir minutdan kam", other: "{{count}} minutdan kam" }, xMinutes: { one: "1 minut", other: "{{count}} minut" }, aboutXHours: { one: "tahminan 1 soat", other: "tahminan {{count}} soat" }, xHours: { one: "1 soat", other: "{{count}} soat" }, xDays: { one: "1 kun", other: "{{count}} kun" }, aboutXWeeks: { one: "tahminan 1 hafta", other: "tahminan {{count}} hafta" }, xWeeks: { one: "1 hafta", other: "{{count}} hafta" }, aboutXMonths: { one: "tahminan 1 oy", other: "tahminan {{count}} oy" }, xMonths: { one: "1 oy", other: "{{count}} oy" }, aboutXYears: { one: "tahminan 1 yil", other: "tahminan {{count}} yil" }, xYears: { one: "1 yil", other: "{{count}} yil" }, overXYears: { one: "1 yildan ko'p", other: "{{count}} yildan ko'p" }, almostXYears: { one: "deyarli 1 yil", other: "deyarli {{count}} yil" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " dan keyin";
                else
                    return result + " oldin"; return result; };
        }, "./node_modules/date-fns/locale/uz/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, do MMMM, y", long: "do MMMM, y", medium: "d MMM, y", short: "dd/MM/yyyy" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "h:mm:ss zzzz", long: "h:mm:ss z", medium: "h:mm:ss", short: "h:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { any: "{{date}}, {{time}}" }, defaultWidth: "any" }) };
        }, "./node_modules/date-fns/locale/uz/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'oldingi' eeee p 'da'", yesterday: "'kecha' p 'da'", today: "'bugun' p 'da'", tomorrow: "'ertaga' p 'da'", nextWeek: "eeee p 'da'", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/uz/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, _options) => String(dirtyNumber), era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["M.A", "M."], abbreviated: ["M.A", "M."], wide: ["Miloddan Avvalgi", "Milodiy"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["CH.1", "CH.2", "CH.3", "CH.4"], wide: ["1-chi chorak", "2-chi chorak", "3-chi chorak", "4-chi chorak"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], abbreviated: ["Yan", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noy", "Dek"], wide: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["Y", "D", "S", "CH", "P", "J", "SH"], short: ["Ya", "Du", "Se", "Cho", "Pa", "Ju", "Sha"], abbreviated: ["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], wide: ["Yakshanba", "Dushanba", "Seshanba", "Chorshanba", "Payshanba", "Juma", "Shanba"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "a", pm: "p", midnight: "y.t", noon: "p.", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" }, abbreviated: { am: "AM", pm: "PM", midnight: "yarim tun", noon: "peshin", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" }, wide: { am: "a.m.", pm: "p.m.", midnight: "yarim tun", noon: "peshin", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "a", pm: "p", midnight: "y.t", noon: "p.", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" }, abbreviated: { am: "AM", pm: "PM", midnight: "yarim tun", noon: "peshin", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" }, wide: { am: "a.m.", pm: "p.m.", midnight: "yarim tun", noon: "peshin", morning: "ertalab", afternoon: "tushdan keyin", evening: "kechqurun", night: "tun" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/uz/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)(chi)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(m\.a|m\.)/i, abbreviated: /^(m\.a\.?\s?m\.?)/i, wide: /^(miloddan avval|miloddan keyin)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^b/i, /^(a|c)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^q[1234]/i, wide: /^[1234](chi)? chorak/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/1/i, /2/i, /3/i, /4/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[yfmasond]/i, abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i, wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^y/i, /^f/i, /^m/i, /^a/i, /^m/i, /^i/i, /^i/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i], any: [/^ya/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^iyun/i, /^iyul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[ydschj]/i, short: /^(ya|du|se|cho|pa|ju|sha)/i, abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i, wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i], any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|y\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i, any: /^([ap]\.?\s?m\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^a/i, pm: /^p/i, midnight: /^y\.t/i, noon: /^pe/i, morning: /ertalab/i, afternoon: /tushdan keyin/i, evening: /kechqurun/i, night: /tun/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/vi.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, vi: () => vi });
            var _vi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/vi/_lib/formatDistance.js"), _vi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/vi/_lib/formatLong.js"), _vi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/vi/_lib/formatRelative.js"), _vi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/vi/_lib/localize.js"), _vi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/vi/_lib/match.js");
            let vi = { code: "vi", formatDistance: _vi_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _vi_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _vi_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _vi_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _vi_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = vi;
        }, "./node_modules/date-fns/locale/vi/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "dưới 1 giây", other: "dưới {{count}} giây" }, xSeconds: { one: "1 giây", other: "{{count}} giây" }, halfAMinute: "nửa phút", lessThanXMinutes: { one: "dưới 1 phút", other: "dưới {{count}} phút" }, xMinutes: { one: "1 phút", other: "{{count}} phút" }, aboutXHours: { one: "khoảng 1 giờ", other: "khoảng {{count}} giờ" }, xHours: { one: "1 giờ", other: "{{count}} giờ" }, xDays: { one: "1 ngày", other: "{{count}} ngày" }, aboutXWeeks: { one: "khoảng 1 tuần", other: "khoảng {{count}} tuần" }, xWeeks: { one: "1 tuần", other: "{{count}} tuần" }, aboutXMonths: { one: "khoảng 1 tháng", other: "khoảng {{count}} tháng" }, xMonths: { one: "1 tháng", other: "{{count}} tháng" }, aboutXYears: { one: "khoảng 1 năm", other: "khoảng {{count}} năm" }, xYears: { one: "1 năm", other: "{{count}} năm" }, overXYears: { one: "hơn 1 năm", other: "hơn {{count}} năm" }, almostXYears: { one: "gần 1 năm", other: "gần {{count}} năm" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + " nữa";
                else
                    return result + " trước"; return result; };
        }, "./node_modules/date-fns/locale/vi/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "EEEE, 'ngày' d MMMM 'năm' y", long: "'ngày' d MMMM 'năm' y", medium: "d MMM 'năm' y", short: "dd/MM/y" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "HH:mm:ss zzzz", long: "HH:mm:ss z", medium: "HH:mm:ss", short: "HH:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/vi/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "eeee 'tuần trước vào lúc' p", yesterday: "'hôm qua vào lúc' p", today: "'hôm nay vào lúc' p", tomorrow: "'ngày mai vào lúc' p", nextWeek: "eeee 'tới vào lúc' p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/vi/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber), unit = options1?.unit; if ("quarter" === unit)
                    switch (number) {
                        case 1: return "I";
                        case 2: return "II";
                        case 3: return "III";
                        case 4: return "IV";
                    }
                else if ("day" === unit)
                    switch (number) {
                        case 1: return "thứ 2";
                        case 2: return "thứ 3";
                        case 3: return "thứ 4";
                        case 4: return "thứ 5";
                        case 5: return "thứ 6";
                        case 6: return "thứ 7";
                        case 7: return "chủ nhật";
                    }
                else if ("week" === unit)
                    if (1 === number)
                        return "thứ nhất";
                    else
                        return "thứ " + number;
                else if ("dayOfYear" === unit)
                    if (1 === number)
                        return "đầu tiên";
                    else
                        return "thứ " + number; return String(number); }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["TCN", "SCN"], abbreviated: ["trước CN", "sau CN"], wide: ["trước Công Nguyên", "sau Công Nguyên"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["Quý 1", "Quý 2", "Quý 3", "Quý 4"] }, defaultWidth: "wide", formattingValues: { narrow: ["1", "2", "3", "4"], abbreviated: ["Q1", "Q2", "Q3", "Q4"], wide: ["quý I", "quý II", "quý III", "quý IV"] }, defaultFormattingWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], abbreviated: ["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], wide: ["Tháng Một", "Tháng Hai", "Tháng Ba", "Tháng Tư", "Tháng Năm", "Tháng Sáu", "Tháng Bảy", "Tháng Tám", "Tháng Chín", "Tháng Mười", "Tháng Mười Một", "Tháng Mười Hai"] }, defaultWidth: "wide", formattingValues: { narrow: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"], abbreviated: ["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], wide: ["tháng 01", "tháng 02", "tháng 03", "tháng 04", "tháng 05", "tháng 06", "tháng 07", "tháng 08", "tháng 09", "tháng 10", "tháng 11", "tháng 12"] }, defaultFormattingWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"], short: ["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], abbreviated: ["CN", "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7"], wide: ["Chủ Nhật", "Thứ Hai", "Thứ Ba", "Thứ Tư", "Thứ Năm", "Thứ Sáu", "Thứ Bảy"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "am", pm: "pm", midnight: "nửa đêm", noon: "tr", morning: "sg", afternoon: "ch", evening: "tối", night: "đêm" }, abbreviated: { am: "AM", pm: "PM", midnight: "nửa đêm", noon: "trưa", morning: "sáng", afternoon: "chiều", evening: "tối", night: "đêm" }, wide: { am: "SA", pm: "CH", midnight: "nửa đêm", noon: "trưa", morning: "sáng", afternoon: "chiều", evening: "tối", night: "đêm" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "am", pm: "pm", midnight: "nửa đêm", noon: "tr", morning: "sg", afternoon: "ch", evening: "tối", night: "đêm" }, abbreviated: { am: "AM", pm: "PM", midnight: "nửa đêm", noon: "trưa", morning: "sáng", afternoon: "chiều", evening: "tối", night: "đêm" }, wide: { am: "SA", pm: "CH", midnight: "nửa đêm", noon: "giữa trưa", morning: "vào buổi sáng", afternoon: "vào buổi chiều", evening: "vào buổi tối", night: "vào ban đêm" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/vi/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(\d+)/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(tcn|scn)/i, abbreviated: /^(trước CN|sau CN)/i, wide: /^(trước Công Nguyên|sau Công Nguyên)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^t/i, /^s/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^([1234]|i{1,3}v?)/i, abbreviated: /^q([1234]|i{1,3}v?)/i, wide: /^quý ([1234]|i{1,3}v?)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(0?[2-9]|10|11|12|0?1)/i, abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i, wide: /^tháng ?(Một|Hai|Ba|Tư|Năm|Sáu|Bảy|Tám|Chín|Mười|Mười ?Một|Mười ?Hai|0?[1-9](?!\d)|10|11|12)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/0?1$/i, /0?2/i, /3/, /4/, /5/, /6/, /7/, /8/, /9/, /10/, /11/, /12/], abbreviated: [/^thg[ _]?0?1(?!\d)/i, /^thg[ _]?0?2/i, /^thg[ _]?0?3/i, /^thg[ _]?0?4/i, /^thg[ _]?0?5/i, /^thg[ _]?0?6/i, /^thg[ _]?0?7/i, /^thg[ _]?0?8/i, /^thg[ _]?0?9/i, /^thg[ _]?10/i, /^thg[ _]?11/i, /^thg[ _]?12/i], wide: [/^tháng ?(Một|0?1(?!\d))/i, /^tháng ?(Hai|0?2)/i, /^tháng ?(Ba|0?3)/i, /^tháng ?(Tư|0?4)/i, /^tháng ?(Năm|0?5)/i, /^tháng ?(Sáu|0?6)/i, /^tháng ?(Bảy|0?7)/i, /^tháng ?(Tám|0?8)/i, /^tháng ?(Chín|0?9)/i, /^tháng ?(Mười|10)/i, /^tháng ?(Mười ?Một|11)/i, /^tháng ?(Mười ?Hai|12)/i] }, defaultParseWidth: "wide" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i, short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i, abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i, wide: /^(Chủ ?Nhật|Chúa ?Nhật|thứ ?Hai|thứ ?Ba|thứ ?Tư|thứ ?Năm|thứ ?Sáu|thứ ?Bảy)/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i], short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i], abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i], wide: [/(Chủ|Chúa) ?Nhật/i, /Hai/i, /Ba/i, /Tư/i, /Năm/i, /Sáu/i, /Bảy/i] }, defaultParseWidth: "wide" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(a|p|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i, abbreviated: /^(am|pm|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i, wide: /^(ch[^i]*|sa|nửa đêm|trưa|(giờ) (sáng|chiều|tối|đêm))/i }, defaultMatchWidth: "wide", parsePatterns: { any: { am: /^(a|sa)/i, pm: /^(p|ch[^i]*)/i, midnight: /nửa đêm/i, noon: /trưa/i, morning: /sáng/i, afternoon: /chiều/i, evening: /tối/i, night: /^đêm/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/zh-CN.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, zhCN: () => zhCN });
            var _zh_CN_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN/_lib/formatDistance.js"), _zh_CN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN/_lib/formatLong.js"), _zh_CN_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN/_lib/formatRelative.js"), _zh_CN_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN/_lib/localize.js"), _zh_CN_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/zh-CN/_lib/match.js");
            let zhCN = { code: "zh-CN", formatDistance: _zh_CN_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _zh_CN_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _zh_CN_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _zh_CN_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _zh_CN_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = zhCN;
        }, "./node_modules/date-fns/locale/zh-CN/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "不到 1 秒", other: "不到 {{count}} 秒" }, xSeconds: { one: "1 秒", other: "{{count}} 秒" }, halfAMinute: "半分钟", lessThanXMinutes: { one: "不到 1 分钟", other: "不到 {{count}} 分钟" }, xMinutes: { one: "1 分钟", other: "{{count}} 分钟" }, xHours: { one: "1 小时", other: "{{count}} 小时" }, aboutXHours: { one: "大约 1 小时", other: "大约 {{count}} 小时" }, xDays: { one: "1 天", other: "{{count}} 天" }, aboutXWeeks: { one: "大约 1 个星期", other: "大约 {{count}} 个星期" }, xWeeks: { one: "1 个星期", other: "{{count}} 个星期" }, aboutXMonths: { one: "大约 1 个月", other: "大约 {{count}} 个月" }, xMonths: { one: "1 个月", other: "{{count}} 个月" }, aboutXYears: { one: "大约 1 年", other: "大约 {{count}} 年" }, xYears: { one: "1 年", other: "{{count}} 年" }, overXYears: { one: "超过 1 年", other: "超过 {{count}} 年" }, almostXYears: { one: "将近 1 年", other: "将近 {{count}} 年" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "内";
                else
                    return result + "前"; return result; };
        }, "./node_modules/date-fns/locale/zh-CN/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y'年'M'月'd'日' EEEE", long: "y'年'M'月'd'日'", medium: "yyyy-MM-dd", short: "yy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "zzzz a h:mm:ss", long: "z a h:mm:ss", medium: "a h:mm:ss", short: "a h:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/zh-CN/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            var _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/isSameWeek.js");
            function checkWeek(date, baseDate, options1) { let baseFormat = "eeee p"; return (0, _isSameWeek_js__WEBPACK_IMPORTED_MODULE_0__.isSameWeek)(date, baseDate, options1) ? baseFormat : date.getTime() > baseDate.getTime() ? "'下个'" + baseFormat : "'上个'" + baseFormat; }
            let formatRelativeLocale = { lastWeek: checkWeek, yesterday: "'昨天' p", today: "'今天' p", tomorrow: "'明天' p", nextWeek: checkWeek, other: "PP p" }, formatRelative = (token, date, baseDate, options1) => { let format = formatRelativeLocale[token]; return "function" == typeof format ? format(date, baseDate, options1) : format; };
        }, "./node_modules/date-fns/locale/zh-CN/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (options1?.unit) {
                    case "date": return number.toString() + "日";
                    case "hour": return number.toString() + "时";
                    case "minute": return number.toString() + "分";
                    case "second": return number.toString() + "秒";
                    default: return "第 " + number.toString();
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["前", "公元"], abbreviated: ["前", "公元"], wide: ["公元前", "公元"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["第一季", "第二季", "第三季", "第四季"], wide: ["第一季度", "第二季度", "第三季度", "第四季度"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], abbreviated: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], wide: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["日", "一", "二", "三", "四", "五", "六"], short: ["日", "一", "二", "三", "四", "五", "六"], abbreviated: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"], wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "上", pm: "下", midnight: "凌晨", noon: "午", morning: "早", afternoon: "下午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜间" }, wide: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜间" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "上", pm: "下", midnight: "凌晨", noon: "午", morning: "早", afternoon: "下午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜间" }, wide: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜间" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/zh-CN/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(第\s*)?\d+(日|时|分|秒)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(前)/i, abbreviated: /^(前)/i, wide: /^(公元前|公元)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(前)/i, /^(公元)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^第[一二三四]刻/i, wide: /^第[一二三四]刻钟/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i, abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i, wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^一/i, /^二/i, /^三/i, /^四/i, /^五/i, /^六/i, /^七/i, /^八/i, /^九/i, /^十(?!(一|二))/i, /^十一/i, /^十二/i], any: [/^一|1/i, /^二|2/i, /^三|3/i, /^四|4/i, /^五|5/i, /^六|6/i, /^七|7/i, /^八|8/i, /^九|9/i, /^十(?!(一|二))|10/i, /^十一|11/i, /^十二|12/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[一二三四五六日]/i, short: /^[一二三四五六日]/i, abbreviated: /^周[一二三四五六日]/i, wide: /^星期[一二三四五六日]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^上午?/i, pm: /^下午?/i, midnight: /^午夜/i, noon: /^[中正]午/i, morning: /^早上/i, afternoon: /^下午/i, evening: /^晚上?/i, night: /^凌晨/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/zh-HK.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, zhHK: () => zhHK });
            var _zh_HK_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK/_lib/formatDistance.js"), _zh_HK_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK/_lib/formatLong.js"), _zh_HK_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK/_lib/formatRelative.js"), _zh_HK_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK/_lib/localize.js"), _zh_HK_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/zh-HK/_lib/match.js");
            let zhHK = { code: "zh-HK", formatDistance: _zh_HK_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _zh_HK_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _zh_HK_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _zh_HK_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _zh_HK_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 0, firstWeekContainsDate: 1 } }, __WEBPACK_DEFAULT_EXPORT__ = zhHK;
        }, "./node_modules/date-fns/locale/zh-HK/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "少於 1 秒", other: "少於 {{count}} 秒" }, xSeconds: { one: "1 秒", other: "{{count}} 秒" }, halfAMinute: "半分鐘", lessThanXMinutes: { one: "少於 1 分鐘", other: "少於 {{count}} 分鐘" }, xMinutes: { one: "1 分鐘", other: "{{count}} 分鐘" }, xHours: { one: "1 小時", other: "{{count}} 小時" }, aboutXHours: { one: "大約 1 小時", other: "大約 {{count}} 小時" }, xDays: { one: "1 天", other: "{{count}} 天" }, aboutXWeeks: { one: "大約 1 個星期", other: "大約 {{count}} 個星期" }, xWeeks: { one: "1 個星期", other: "{{count}} 個星期" }, aboutXMonths: { one: "大約 1 個月", other: "大約 {{count}} 個月" }, xMonths: { one: "1 個月", other: "{{count}} 個月" }, aboutXYears: { one: "大約 1 年", other: "大約 {{count}} 年" }, xYears: { one: "1 年", other: "{{count}} 年" }, overXYears: { one: "超過 1 年", other: "超過 {{count}} 年" }, almostXYears: { one: "將近 1 年", other: "將近 {{count}} 年" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "內";
                else
                    return result + "前"; return result; };
        }, "./node_modules/date-fns/locale/zh-HK/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y'年'M'月'd'日' EEEE", long: "y'年'M'月'd'日'", medium: "yyyy-MM-dd", short: "yy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "zzzz a h:mm:ss", long: "z a h:mm:ss", medium: "a h:mm:ss", short: "a h:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/zh-HK/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'上個'eeee p", yesterday: "'昨天' p", today: "'今天' p", tomorrow: "'明天' p", nextWeek: "'下個'eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/zh-HK/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (options1?.unit) {
                    case "date": return number + "日";
                    case "hour": return number + "時";
                    case "minute": return number + "分";
                    case "second": return number + "秒";
                    default: return "第 " + number;
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["前", "公元"], abbreviated: ["前", "公元"], wide: ["公元前", "公元"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["第一季", "第二季", "第三季", "第四季"], wide: ["第一季度", "第二季度", "第三季度", "第四季度"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], abbreviated: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], wide: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["日", "一", "二", "三", "四", "五", "六"], short: ["日", "一", "二", "三", "四", "五", "六"], abbreviated: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"], wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "上", pm: "下", midnight: "午夜", noon: "晌", morning: "早", afternoon: "午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "午夜", noon: "中午", morning: "上午", afternoon: "下午", evening: "晚上", night: "夜晚" }, wide: { am: "上午", pm: "下午", midnight: "午夜", noon: "中午", morning: "上午", afternoon: "下午", evening: "晚上", night: "夜晚" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "上", pm: "下", midnight: "午夜", noon: "晌", morning: "早", afternoon: "午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "午夜", noon: "中午", morning: "上午", afternoon: "下午", evening: "晚上", night: "夜晚" }, wide: { am: "上午", pm: "下午", midnight: "午夜", noon: "中午", morning: "上午", afternoon: "下午", evening: "晚上", night: "夜晚" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/zh-HK/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(第\s*)?\d+(日|時|分|秒)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(前)/i, abbreviated: /^(前)/i, wide: /^(公元前|公元)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(前)/i, /^(公元)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^第[一二三四]季/i, wide: /^第[一二三四]季度/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i, abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i, wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^一/i, /^二/i, /^三/i, /^四/i, /^五/i, /^六/i, /^七/i, /^八/i, /^九/i, /^十(?!(一|二))/i, /^十一/i, /^十二/i], any: [/^一|1/i, /^二|2/i, /^三|3/i, /^四|4/i, /^五|5/i, /^六|6/i, /^七|7/i, /^八|8/i, /^九|9/i, /^十(?!(一|二))|10/i, /^十一|11/i, /^十二|12/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[一二三四五六日]/i, short: /^[一二三四五六日]/i, abbreviated: /^週[一二三四五六日]/i, wide: /^星期[一二三四五六日]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^上午?/i, pm: /^下午?/i, midnight: /^午夜/i, noon: /^[中正]午/i, morning: /^早上/i, afternoon: /^下午/i, evening: /^晚上?/i, night: /^凌晨/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/locale/zh-TW.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, zhTW: () => zhTW });
            var _zh_TW_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW/_lib/formatDistance.js"), _zh_TW_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW/_lib/formatLong.js"), _zh_TW_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW/_lib/formatRelative.js"), _zh_TW_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW/_lib/localize.js"), _zh_TW_lib_match_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/zh-TW/_lib/match.js");
            let zhTW = { code: "zh-TW", formatDistance: _zh_TW_lib_formatDistance_js__WEBPACK_IMPORTED_MODULE_0__.formatDistance, formatLong: _zh_TW_lib_formatLong_js__WEBPACK_IMPORTED_MODULE_1__.formatLong, formatRelative: _zh_TW_lib_formatRelative_js__WEBPACK_IMPORTED_MODULE_2__.formatRelative, localize: _zh_TW_lib_localize_js__WEBPACK_IMPORTED_MODULE_3__.localize, match: _zh_TW_lib_match_js__WEBPACK_IMPORTED_MODULE_4__.match, options: { weekStartsOn: 1, firstWeekContainsDate: 4 } }, __WEBPACK_DEFAULT_EXPORT__ = zhTW;
        }, "./node_modules/date-fns/locale/zh-TW/_lib/formatDistance.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatDistance: () => formatDistance });
            let formatDistanceLocale = { lessThanXSeconds: { one: "少於 1 秒", other: "少於 {{count}} 秒" }, xSeconds: { one: "1 秒", other: "{{count}} 秒" }, halfAMinute: "半分鐘", lessThanXMinutes: { one: "少於 1 分鐘", other: "少於 {{count}} 分鐘" }, xMinutes: { one: "1 分鐘", other: "{{count}} 分鐘" }, xHours: { one: "1 小時", other: "{{count}} 小時" }, aboutXHours: { one: "大約 1 小時", other: "大約 {{count}} 小時" }, xDays: { one: "1 天", other: "{{count}} 天" }, aboutXWeeks: { one: "大約 1 個星期", other: "大約 {{count}} 個星期" }, xWeeks: { one: "1 個星期", other: "{{count}} 個星期" }, aboutXMonths: { one: "大約 1 個月", other: "大約 {{count}} 個月" }, xMonths: { one: "1 個月", other: "{{count}} 個月" }, aboutXYears: { one: "大約 1 年", other: "大約 {{count}} 年" }, xYears: { one: "1 年", other: "{{count}} 年" }, overXYears: { one: "超過 1 年", other: "超過 {{count}} 年" }, almostXYears: { one: "將近 1 年", other: "將近 {{count}} 年" } }, formatDistance = (token, count, options1) => { let result, tokenValue = formatDistanceLocale[token]; if (result = "string" == typeof tokenValue ? tokenValue : 1 === count ? tokenValue.one : tokenValue.other.replace("{{count}}", String(count)), options1?.addSuffix)
                if (options1.comparison && options1.comparison > 0)
                    return result + "內";
                else
                    return result + "前"; return result; };
        }, "./node_modules/date-fns/locale/zh-TW/_lib/formatLong.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatLong: () => formatLong });
            var _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildFormatLongFn.js");
            let formatLong = { date: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "y'年'M'月'd'日' EEEE", long: "y'年'M'月'd'日'", medium: "yyyy-MM-dd", short: "yy-MM-dd" }, defaultWidth: "full" }), time: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "zzzz a h:mm:ss", long: "z a h:mm:ss", medium: "a h:mm:ss", short: "a h:mm" }, defaultWidth: "full" }), dateTime: (0, _lib_buildFormatLongFn_js__WEBPACK_IMPORTED_MODULE_0__.buildFormatLongFn)({ formats: { full: "{{date}} {{time}}", long: "{{date}} {{time}}", medium: "{{date}} {{time}}", short: "{{date}} {{time}}" }, defaultWidth: "full" }) };
        }, "./node_modules/date-fns/locale/zh-TW/_lib/formatRelative.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { formatRelative: () => formatRelative });
            let formatRelativeLocale = { lastWeek: "'上個'eeee p", yesterday: "'昨天' p", today: "'今天' p", tomorrow: "'明天' p", nextWeek: "'下個'eeee p", other: "P" }, formatRelative = (token, _date, _baseDate, _options) => formatRelativeLocale[token];
        }, "./node_modules/date-fns/locale/zh-TW/_lib/localize.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { localize: () => localize });
            var _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildLocalizeFn.js");
            let localize = { ordinalNumber: (dirtyNumber, options1) => { let number = Number(dirtyNumber); switch (options1?.unit) {
                    case "date": return number + "日";
                    case "hour": return number + "時";
                    case "minute": return number + "分";
                    case "second": return number + "秒";
                    default: return "第 " + number;
                } }, era: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["前", "公元"], abbreviated: ["前", "公元"], wide: ["公元前", "公元"] }, defaultWidth: "wide" }), quarter: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["1", "2", "3", "4"], abbreviated: ["第一刻", "第二刻", "第三刻", "第四刻"], wide: ["第一刻鐘", "第二刻鐘", "第三刻鐘", "第四刻鐘"] }, defaultWidth: "wide", argumentCallback: quarter => quarter - 1 }), month: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二"], abbreviated: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"], wide: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"] }, defaultWidth: "wide" }), day: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: ["日", "一", "二", "三", "四", "五", "六"], short: ["日", "一", "二", "三", "四", "五", "六"], abbreviated: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"], wide: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"] }, defaultWidth: "wide" }), dayPeriod: (0, _lib_buildLocalizeFn_js__WEBPACK_IMPORTED_MODULE_0__.buildLocalizeFn)({ values: { narrow: { am: "上", pm: "下", midnight: "凌晨", noon: "午", morning: "早", afternoon: "下午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜間" }, wide: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜間" } }, defaultWidth: "wide", formattingValues: { narrow: { am: "上", pm: "下", midnight: "凌晨", noon: "午", morning: "早", afternoon: "下午", evening: "晚", night: "夜" }, abbreviated: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜間" }, wide: { am: "上午", pm: "下午", midnight: "凌晨", noon: "中午", morning: "早晨", afternoon: "中午", evening: "晚上", night: "夜間" } }, defaultFormattingWidth: "wide" }) };
        }, "./node_modules/date-fns/locale/zh-TW/_lib/match.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { match: () => match });
            var _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchFn.js");
            let match = { ordinalNumber: (0, __webpack_require__("./node_modules/date-fns/locale/_lib/buildMatchPatternFn.js").buildMatchPatternFn)({ matchPattern: /^(第\s*)?\d+(日|時|分|秒)?/i, parsePattern: /\d+/i, valueCallback: value => parseInt(value, 10) }), era: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(前)/i, abbreviated: /^(前)/i, wide: /^(公元前|公元)/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/^(前)/i, /^(公元)/i] }, defaultParseWidth: "any" }), quarter: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[1234]/i, abbreviated: /^第[一二三四]刻/i, wide: /^第[一二三四]刻鐘/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i] }, defaultParseWidth: "any", valueCallback: index => index + 1 }), month: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i, abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\d|1[12])月/i, wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i }, defaultMatchWidth: "wide", parsePatterns: { narrow: [/^一/i, /^二/i, /^三/i, /^四/i, /^五/i, /^六/i, /^七/i, /^八/i, /^九/i, /^十(?!(一|二))/i, /^十一/i, /^十二/i], any: [/^一|1/i, /^二|2/i, /^三|3/i, /^四|4/i, /^五|5/i, /^六|6/i, /^七|7/i, /^八|8/i, /^九|9/i, /^十(?!(一|二))|10/i, /^十一|11/i, /^十二|12/i] }, defaultParseWidth: "any" }), day: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { narrow: /^[一二三四五六日]/i, short: /^[一二三四五六日]/i, abbreviated: /^週[一二三四五六日]/i, wide: /^星期[一二三四五六日]/i }, defaultMatchWidth: "wide", parsePatterns: { any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i] }, defaultParseWidth: "any" }), dayPeriod: (0, _lib_buildMatchFn_js__WEBPACK_IMPORTED_MODULE_1__.buildMatchFn)({ matchPatterns: { any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨)/i }, defaultMatchWidth: "any", parsePatterns: { any: { am: /^上午?/i, pm: /^下午?/i, midnight: /^午夜/i, noon: /^[中正]午/i, morning: /^早上/i, afternoon: /^下午/i, evening: /^晚上?/i, night: /^凌晨/i } }, defaultParseWidth: "any" }) };
        }, "./node_modules/date-fns/max.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, max: () => max });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function max(dates, options1) { let result, context = options1?.in; return dates.forEach(date => { context || "object" != typeof date || (context = _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom.bind(null, date)); let date_ = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(date, context); (!result || result < date_ || isNaN(+date_)) && (result = date_); }), (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(context, result || NaN); }
            let __WEBPACK_DEFAULT_EXPORT__ = max;
        }, "./node_modules/date-fns/nextDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nextDay: () => nextDay });
            var _addDays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/addDays.js"), _getDay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/getDay.js");
            function nextDay(date, day, options1) { let delta = day - (0, _getDay_js__WEBPACK_IMPORTED_MODULE_0__.getDay)(date, options1); return delta <= 0 && (delta += 7), (0, _addDays_js__WEBPACK_IMPORTED_MODULE_1__.addDays)(date, delta, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = nextDay;
        }, "./node_modules/date-fns/nextMonday.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, nextMonday: () => nextMonday });
            var _nextDay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/nextDay.js");
            function nextMonday(date, options1) { return (0, _nextDay_js__WEBPACK_IMPORTED_MODULE_0__.nextDay)(date, 1, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = nextMonday;
        }, "./node_modules/date-fns/parse.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, longFormatters: () => _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_0__.longFormatters, parse: () => parse, parsers: () => _parse_lib_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parsers });
            var _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/locale/en-US.js"), _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/format/longFormatters.js"), _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/_lib/protectedTokens.js"), _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _getDefaultOptions_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/getDefaultOptions.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/toDate.js"), _parse_lib_Setter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Setter.js"), _parse_lib_parsers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers.js");
            let formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, notWhitespaceRegExp = /\S/, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
            function parse(dateStr, formatStr, referenceDate, options1) { let invalidDate = () => (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(options1?.in || referenceDate, NaN), defaultOptions = (0, _getDefaultOptions_js__WEBPACK_IMPORTED_MODULE_3__.getDefaultOptions)(), locale = options1?.locale ?? defaultOptions.locale ?? _lib_defaultLocale_js__WEBPACK_IMPORTED_MODULE_4__.enUS, firstWeekContainsDate = options1?.firstWeekContainsDate ?? options1?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1, weekStartsOn = options1?.weekStartsOn ?? options1?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0; if (!formatStr)
                return dateStr ? invalidDate() : (0, _toDate_js__WEBPACK_IMPORTED_MODULE_5__.toDate)(referenceDate, options1?.in); let subFnOptions = { firstWeekContainsDate, weekStartsOn, locale }, setters = [new _parse_lib_Setter_js__WEBPACK_IMPORTED_MODULE_6__.DateTimezoneSetter(options1?.in, referenceDate)], tokens = formatStr.match(longFormattingTokensRegExp).map(substring => { let firstCharacter = substring[0]; return firstCharacter in _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_0__.longFormatters ? (0, _lib_format_longFormatters_js__WEBPACK_IMPORTED_MODULE_0__.longFormatters[firstCharacter])(substring, locale.formatLong) : substring; }).join("").match(formattingTokensRegExp), usedTokens = []; for (let token of tokens) {
                !options1?.useAdditionalWeekYearTokens && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_7__.isProtectedWeekYearToken)(token) && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_7__.warnOrThrowProtectedError)(token, formatStr, dateStr), !options1?.useAdditionalDayOfYearTokens && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_7__.isProtectedDayOfYearToken)(token) && (0, _lib_protectedTokens_js__WEBPACK_IMPORTED_MODULE_7__.warnOrThrowProtectedError)(token, formatStr, dateStr);
                let firstCharacter = token[0], parser = _parse_lib_parsers_js__WEBPACK_IMPORTED_MODULE_1__.parsers[firstCharacter];
                if (parser) {
                    let { incompatibleTokens } = parser;
                    if (Array.isArray(incompatibleTokens)) {
                        let incompatibleToken = usedTokens.find(usedToken => incompatibleTokens.includes(usedToken.token) || usedToken.token === firstCharacter);
                        if (incompatibleToken)
                            throw RangeError(`The format string mustn't contain \`${incompatibleToken.fullToken}\` and \`${token}\` at the same time`);
                    }
                    else if ("*" === parser.incompatibleTokens && usedTokens.length > 0)
                        throw RangeError(`The format string mustn't contain \`${token}\` and any other token at the same time`);
                    usedTokens.push({ token: firstCharacter, fullToken: token });
                    let parseResult = parser.run(dateStr, token, locale.match, subFnOptions);
                    if (!parseResult)
                        return invalidDate();
                    setters.push(parseResult.setter), dateStr = parseResult.rest;
                }
                else {
                    if (firstCharacter.match(unescapedLatinCharacterRegExp))
                        throw RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
                    if ("''" === token ? token = "'" : "'" === firstCharacter && (token = token.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'")), 0 !== dateStr.indexOf(token))
                        return invalidDate();
                    dateStr = dateStr.slice(token.length);
                }
            } if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr))
                return invalidDate(); let uniquePrioritySetters = setters.map(setter => setter.priority).sort((a, b) => b - a).filter((priority, index, array) => array.indexOf(priority) === index).map(priority => setters.filter(setter => setter.priority === priority).sort((a, b) => b.subPriority - a.subPriority)).map(setterArray => setterArray[0]), date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_5__.toDate)(referenceDate, options1?.in); if (isNaN(+date))
                return invalidDate(); let flags = {}; for (let setter of uniquePrioritySetters) {
                if (!setter.validate(date, subFnOptions))
                    return invalidDate();
                let result = setter.set(date, flags, subFnOptions);
                Array.isArray(result) ? (date = result[0], Object.assign(flags, result[1])) : date = result;
            } return date; }
            let __WEBPACK_DEFAULT_EXPORT__ = parse;
        }, "./node_modules/date-fns/parse/_lib/Parser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Parser: () => Parser });
            var _Setter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Setter.js");
            class Parser {
                run(dateString, token, match, options1) { let result = this.parse(dateString, token, match, options1); return result ? { setter: new _Setter_js__WEBPACK_IMPORTED_MODULE_0__.ValueSetter(result.value, this.validate, this.set, this.priority, this.subPriority), rest: result.rest } : null; }
                validate(_utcDate, _value, _options) { return !0; }
            }
        }, "./node_modules/date-fns/parse/_lib/Setter.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DateTimezoneSetter: () => DateTimezoneSetter, Setter: () => Setter, ValueSetter: () => ValueSetter });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _transpose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/transpose.js");
            class Setter {
                constructor() {
                    this.subPriority = 0;
                }
                validate(_utcDate, _options) { return !0; }
            }
            class ValueSetter extends Setter {
                constructor(value, validateValue, setValue, priority, subPriority) { super(), this.value = value, this.validateValue = validateValue, this.setValue = setValue, this.priority = priority, subPriority && (this.subPriority = subPriority); }
                validate(date, options1) { return this.validateValue(date, this.value, options1); }
                set(date, flags, options1) { return this.setValue(date, flags, this.value, options1); }
            }
            class DateTimezoneSetter extends Setter {
                constructor(context, reference) {
                    this.priority = 10;
                    this.subPriority = -1;
                    super(), this.context = context || (date => (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(reference, date));
                }
                set(date, flags) { return flags.timestampIsSet ? date : (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(date, (0, _transpose_js__WEBPACK_IMPORTED_MODULE_1__.transpose)(date, this.context)); }
            }
        }, "./node_modules/date-fns/parse/_lib/constants.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { numericPatterns: () => numericPatterns, timezonePatterns: () => timezonePatterns });
            let numericPatterns = { month: /^(1[0-2]|0?\d)/, date: /^(3[0-1]|[0-2]?\d)/, dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/, week: /^(5[0-3]|[0-4]?\d)/, hour23h: /^(2[0-3]|[0-1]?\d)/, hour24h: /^(2[0-4]|[0-1]?\d)/, hour11h: /^(1[0-1]|0?\d)/, hour12h: /^(1[0-2]|0?\d)/, minute: /^[0-5]?\d/, second: /^[0-5]?\d/, singleDigit: /^\d/, twoDigits: /^\d{1,2}/, threeDigits: /^\d{1,3}/, fourDigits: /^\d{1,4}/, anyDigitsSigned: /^-?\d+/, singleDigitSigned: /^-?\d/, twoDigitsSigned: /^-?\d{1,2}/, threeDigitsSigned: /^-?\d{1,3}/, fourDigitsSigned: /^-?\d{1,4}/ }, timezonePatterns = { basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/, basic: /^([+-])(\d{2})(\d{2})|Z/, basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/, extended: /^([+-])(\d{2}):(\d{2})|Z/, extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/ };
        }, "./node_modules/date-fns/parse/_lib/parsers.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { parsers: () => parsers });
            var _parsers_EraParser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/EraParser.js"), _parsers_YearParser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/YearParser.js"), _parsers_LocalWeekYearParser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js"), _parsers_ISOWeekYearParser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js"), _parsers_ExtendedYearParser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js"), _parsers_QuarterParser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js"), _parsers_StandAloneQuarterParser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js"), _parsers_MonthParser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/MonthParser.js"), _parsers_StandAloneMonthParser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js"), _parsers_LocalWeekParser_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js"), _parsers_ISOWeekParser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js"), _parsers_DateParser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/DateParser.js"), _parsers_DayOfYearParser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js"), _parsers_DayParser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/DayParser.js"), _parsers_LocalDayParser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js"), _parsers_StandAloneLocalDayParser_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js"), _parsers_ISODayParser_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js"), _parsers_AMPMParser_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js"), _parsers_AMPMMidnightParser_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js"), _parsers_DayPeriodParser_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js"), _parsers_Hour1to12Parser_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js"), _parsers_Hour0to23Parser_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js"), _parsers_Hour0To11Parser_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js"), _parsers_Hour1To24Parser_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js"), _parsers_MinuteParser_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js"), _parsers_SecondParser_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/SecondParser.js"), _parsers_FractionOfSecondParser_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js"), _parsers_ISOTimezoneWithZParser_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js"), _parsers_ISOTimezoneParser_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js"), _parsers_TimestampSecondsParser_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js"), _parsers_TimestampMillisecondsParser_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__("./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js");
            let parsers = { G: new _parsers_EraParser_js__WEBPACK_IMPORTED_MODULE_0__.EraParser, y: new _parsers_YearParser_js__WEBPACK_IMPORTED_MODULE_1__.YearParser, Y: new _parsers_LocalWeekYearParser_js__WEBPACK_IMPORTED_MODULE_2__.LocalWeekYearParser, R: new _parsers_ISOWeekYearParser_js__WEBPACK_IMPORTED_MODULE_3__.ISOWeekYearParser, u: new _parsers_ExtendedYearParser_js__WEBPACK_IMPORTED_MODULE_4__.ExtendedYearParser, Q: new _parsers_QuarterParser_js__WEBPACK_IMPORTED_MODULE_5__.QuarterParser, q: new _parsers_StandAloneQuarterParser_js__WEBPACK_IMPORTED_MODULE_6__.StandAloneQuarterParser, M: new _parsers_MonthParser_js__WEBPACK_IMPORTED_MODULE_7__.MonthParser, L: new _parsers_StandAloneMonthParser_js__WEBPACK_IMPORTED_MODULE_8__.StandAloneMonthParser, w: new _parsers_LocalWeekParser_js__WEBPACK_IMPORTED_MODULE_9__.LocalWeekParser, I: new _parsers_ISOWeekParser_js__WEBPACK_IMPORTED_MODULE_10__.ISOWeekParser, d: new _parsers_DateParser_js__WEBPACK_IMPORTED_MODULE_11__.DateParser, D: new _parsers_DayOfYearParser_js__WEBPACK_IMPORTED_MODULE_12__.DayOfYearParser, E: new _parsers_DayParser_js__WEBPACK_IMPORTED_MODULE_13__.DayParser, e: new _parsers_LocalDayParser_js__WEBPACK_IMPORTED_MODULE_14__.LocalDayParser, c: new _parsers_StandAloneLocalDayParser_js__WEBPACK_IMPORTED_MODULE_15__.StandAloneLocalDayParser, i: new _parsers_ISODayParser_js__WEBPACK_IMPORTED_MODULE_16__.ISODayParser, a: new _parsers_AMPMParser_js__WEBPACK_IMPORTED_MODULE_17__.AMPMParser, b: new _parsers_AMPMMidnightParser_js__WEBPACK_IMPORTED_MODULE_18__.AMPMMidnightParser, B: new _parsers_DayPeriodParser_js__WEBPACK_IMPORTED_MODULE_19__.DayPeriodParser, h: new _parsers_Hour1to12Parser_js__WEBPACK_IMPORTED_MODULE_20__.Hour1to12Parser, H: new _parsers_Hour0to23Parser_js__WEBPACK_IMPORTED_MODULE_21__.Hour0to23Parser, K: new _parsers_Hour0To11Parser_js__WEBPACK_IMPORTED_MODULE_22__.Hour0To11Parser, k: new _parsers_Hour1To24Parser_js__WEBPACK_IMPORTED_MODULE_23__.Hour1To24Parser, m: new _parsers_MinuteParser_js__WEBPACK_IMPORTED_MODULE_24__.MinuteParser, s: new _parsers_SecondParser_js__WEBPACK_IMPORTED_MODULE_25__.SecondParser, S: new _parsers_FractionOfSecondParser_js__WEBPACK_IMPORTED_MODULE_26__.FractionOfSecondParser, X: new _parsers_ISOTimezoneWithZParser_js__WEBPACK_IMPORTED_MODULE_27__.ISOTimezoneWithZParser, x: new _parsers_ISOTimezoneParser_js__WEBPACK_IMPORTED_MODULE_28__.ISOTimezoneParser, t: new _parsers_TimestampSecondsParser_js__WEBPACK_IMPORTED_MODULE_29__.TimestampSecondsParser, T: new _parsers_TimestampMillisecondsParser_js__WEBPACK_IMPORTED_MODULE_30__.TimestampMillisecondsParser };
        }, "./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { AMPMMidnightParser: () => AMPMMidnightParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class AMPMMidnightParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 80;
                    this.incompatibleTokens = ["a", "B", "H", "k", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "b":
                    case "bb":
                    case "bbb": return match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    case "bbbbb": return match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    default: return match.dayPeriod(dateString, { width: "wide", context: "formatting" }) || match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                } }
                set(date, _flags, value) { return date.setHours((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.dayPeriodEnumToHours)(value), 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/AMPMParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { AMPMParser: () => AMPMParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class AMPMParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 80;
                    this.incompatibleTokens = ["b", "B", "H", "k", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "a":
                    case "aa":
                    case "aaa": return match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    case "aaaaa": return match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    default: return match.dayPeriod(dateString, { width: "wide", context: "formatting" }) || match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                } }
                set(date, _flags, value) { return date.setHours((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.dayPeriodEnumToHours)(value), 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/DateParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DateParser: () => DateParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            let DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            class DateParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.subPriority = 1;
                    this.incompatibleTokens = ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "d": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.date, dateString);
                    case "do": return match.ordinalNumber(dateString, { unit: "date" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(date, value) { let year = date.getFullYear(), isLeapYear = (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.isLeapYearIndex)(year), month = date.getMonth(); return isLeapYear ? value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month] : value >= 1 && value <= DAYS_IN_MONTH[month]; }
                set(date, _flags, value) { return date.setDate(value), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DayOfYearParser: () => DayOfYearParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class DayOfYearParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.subpriority = 1;
                    this.incompatibleTokens = ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "D":
                    case "DD": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.dayOfYear, dateString);
                    case "Do": return match.ordinalNumber(dateString, { unit: "date" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(date, value) { let year = date.getFullYear(); return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.isLeapYearIndex)(year) ? value >= 1 && value <= 366 : value >= 1 && value <= 365; }
                set(date, _flags, value) { return date.setMonth(0, value), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/DayParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DayParser: () => DayParser });
            var _setDay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/setDay.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js");
            class DayParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.incompatibleTokens = ["D", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "E":
                    case "EE":
                    case "EEE": return match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                    case "EEEEE": return match.day(dateString, { width: "narrow", context: "formatting" });
                    case "EEEEEE": return match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                    default: return match.day(dateString, { width: "wide", context: "formatting" }) || match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                } }
                validate(_date, value) { return value >= 0 && value <= 6; }
                set(date, _flags, value, options1) { return (date = (0, _setDay_js__WEBPACK_IMPORTED_MODULE_1__.setDay)(date, value, options1)).setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DayPeriodParser: () => DayPeriodParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class DayPeriodParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 80;
                    this.incompatibleTokens = ["a", "b", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "B":
                    case "BB":
                    case "BBB": return match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    case "BBBBB": return match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                    default: return match.dayPeriod(dateString, { width: "wide", context: "formatting" }) || match.dayPeriod(dateString, { width: "abbreviated", context: "formatting" }) || match.dayPeriod(dateString, { width: "narrow", context: "formatting" });
                } }
                set(date, _flags, value) { return date.setHours((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.dayPeriodEnumToHours)(value), 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/EraParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { EraParser: () => EraParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js");
            class EraParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 140;
                    this.incompatibleTokens = ["R", "u", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "G":
                    case "GG":
                    case "GGG": return match.era(dateString, { width: "abbreviated" }) || match.era(dateString, { width: "narrow" });
                    case "GGGGG": return match.era(dateString, { width: "narrow" });
                    default: return match.era(dateString, { width: "wide" }) || match.era(dateString, { width: "abbreviated" }) || match.era(dateString, { width: "narrow" });
                } }
                set(date, flags, value) { return flags.era = value, date.setFullYear(value, 0, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ExtendedYearParser: () => ExtendedYearParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ExtendedYearParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 130;
                    this.incompatibleTokens = ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token) { return "u" === token ? (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigitsSigned)(4, dateString) : (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigitsSigned)(token.length, dateString); }
                set(date, _flags, value) { return date.setFullYear(value, 0, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { FractionOfSecondParser: () => FractionOfSecondParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class FractionOfSecondParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 30;
                    this.incompatibleTokens = ["t", "T"];
                }
                parse(dateString, token) { return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString), value => Math.trunc(value * Math.pow(10, -token.length + 3))); }
                set(date, _flags, value) { return date.setMilliseconds(value), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Hour0To11Parser: () => Hour0To11Parser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class Hour0To11Parser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 70;
                    this.incompatibleTokens = ["h", "H", "k", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "K": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.hour11h, dateString);
                    case "Ko": return match.ordinalNumber(dateString, { unit: "hour" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 0 && value <= 11; }
                set(date, _flags, value) { return date.getHours() >= 12 && value < 12 ? date.setHours(value + 12, 0, 0, 0) : date.setHours(value, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Hour0to23Parser: () => Hour0to23Parser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class Hour0to23Parser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 70;
                    this.incompatibleTokens = ["a", "b", "h", "K", "k", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "H": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.hour23h, dateString);
                    case "Ho": return match.ordinalNumber(dateString, { unit: "hour" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 0 && value <= 23; }
                set(date, _flags, value) { return date.setHours(value, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Hour1To24Parser: () => Hour1To24Parser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class Hour1To24Parser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 70;
                    this.incompatibleTokens = ["a", "b", "h", "H", "K", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "k": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.hour24h, dateString);
                    case "ko": return match.ordinalNumber(dateString, { unit: "hour" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 1 && value <= 24; }
                set(date, _flags, value) { return date.setHours(value <= 24 ? value % 24 : value, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Hour1to12Parser: () => Hour1to12Parser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class Hour1to12Parser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 70;
                    this.incompatibleTokens = ["H", "K", "k", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "h": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.hour12h, dateString);
                    case "ho": return match.ordinalNumber(dateString, { unit: "hour" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 1 && value <= 12; }
                set(date, _flags, value) { let isPM = date.getHours() >= 12; return isPM && value < 12 ? date.setHours(value + 12, 0, 0, 0) : isPM || 12 !== value ? date.setHours(value, 0, 0, 0) : date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ISODayParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ISODayParser: () => ISODayParser });
            var _setISODay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/setISODay.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ISODayParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.incompatibleTokens = ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { let valueCallback = value => 0 === value ? 7 : value; switch (token) {
                    case "i":
                    case "ii": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                    case "io": return match.ordinalNumber(dateString, { unit: "day" });
                    case "iii": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" }), valueCallback);
                    case "iiiii": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.day(dateString, { width: "narrow", context: "formatting" }), valueCallback);
                    case "iiiiii": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" }), valueCallback);
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.day(dateString, { width: "wide", context: "formatting" }) || match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" }), valueCallback);
                } }
                validate(_date, value) { return value >= 1 && value <= 7; }
                set(date, _flags, value) { return (date = (0, _setISODay_js__WEBPACK_IMPORTED_MODULE_2__.setISODay)(date, value)).setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ISOTimezoneParser: () => ISOTimezoneParser });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"), _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ISOTimezoneParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 10;
                    this.incompatibleTokens = ["t", "T", "X"];
                }
                parse(dateString, token) { switch (token) {
                    case "x": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basicOptionalMinutes, dateString);
                    case "xx": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basic, dateString);
                    case "xxxx": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basicOptionalSeconds, dateString);
                    case "xxxxx": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.extendedOptionalSeconds, dateString);
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.extended, dateString);
                } }
                set(date, flags, value) { return flags.timestampIsSet ? date : (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_3__.constructFrom)(date, date.getTime() - (0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_4__.getTimezoneOffsetInMilliseconds)(date) - value); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ISOTimezoneWithZParser: () => ISOTimezoneWithZParser });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js"), _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ISOTimezoneWithZParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 10;
                    this.incompatibleTokens = ["t", "T", "x"];
                }
                parse(dateString, token) { switch (token) {
                    case "X": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basicOptionalMinutes, dateString);
                    case "XX": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basic, dateString);
                    case "XXXX": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.basicOptionalSeconds, dateString);
                    case "XXXXX": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.extendedOptionalSeconds, dateString);
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseTimezonePattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.timezonePatterns.extended, dateString);
                } }
                set(date, flags, value) { return flags.timestampIsSet ? date : (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_3__.constructFrom)(date, date.getTime() - (0, _lib_getTimezoneOffsetInMilliseconds_js__WEBPACK_IMPORTED_MODULE_4__.getTimezoneOffsetInMilliseconds)(date) - value); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ISOWeekParser: () => ISOWeekParser });
            var _setISOWeek_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/setISOWeek.js"), _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfISOWeek.js"), _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ISOWeekParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 100;
                    this.incompatibleTokens = ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "I": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.week, dateString);
                    case "Io": return match.ordinalNumber(dateString, { unit: "week" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 1 && value <= 53; }
                set(date, _flags, value) { return (0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfISOWeek)((0, _setISOWeek_js__WEBPACK_IMPORTED_MODULE_4__.setISOWeek)(date, value)); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ISOWeekYearParser: () => ISOWeekYearParser });
            var _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfISOWeek.js"), _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class ISOWeekYearParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 130;
                    this.incompatibleTokens = ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"];
                }
                parse(dateString, token) { return "R" === token ? (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigitsSigned)(4, dateString) : (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigitsSigned)(token.length, dateString); }
                set(date, _flags, value) { let firstWeekOfYear = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(date, 0); return firstWeekOfYear.setFullYear(value, 0, 4), firstWeekOfYear.setHours(0, 0, 0, 0), (0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfISOWeek)(firstWeekOfYear); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { LocalDayParser: () => LocalDayParser });
            var _setDay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/setDay.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class LocalDayParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"];
                }
                parse(dateString, token, match, options1) { let valueCallback = value => { let wholeWeekDays = 7 * Math.floor((value - 1) / 7); return (value + options1.weekStartsOn + 6) % 7 + wholeWeekDays; }; switch (token) {
                    case "e":
                    case "ee": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString), valueCallback);
                    case "eo": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "day" }), valueCallback);
                    case "eee": return match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                    case "eeeee": return match.day(dateString, { width: "narrow", context: "formatting" });
                    case "eeeeee": return match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                    default: return match.day(dateString, { width: "wide", context: "formatting" }) || match.day(dateString, { width: "abbreviated", context: "formatting" }) || match.day(dateString, { width: "short", context: "formatting" }) || match.day(dateString, { width: "narrow", context: "formatting" });
                } }
                validate(_date, value) { return value >= 0 && value <= 6; }
                set(date, _flags, value, options1) { return (date = (0, _setDay_js__WEBPACK_IMPORTED_MODULE_2__.setDay)(date, value, options1)).setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { LocalWeekParser: () => LocalWeekParser });
            var _setWeek_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/setWeek.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js"), _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class LocalWeekParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 100;
                    this.incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "w": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.week, dateString);
                    case "wo": return match.ordinalNumber(dateString, { unit: "week" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 1 && value <= 53; }
                set(date, _flags, value, options1) { return (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)((0, _setWeek_js__WEBPACK_IMPORTED_MODULE_4__.setWeek)(date, value, options1), options1); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { LocalWeekYearParser: () => LocalWeekYearParser });
            var _getWeekYear_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/getWeekYear.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class LocalWeekYearParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 130;
                    this.incompatibleTokens = ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"];
                }
                parse(dateString, token, match) { let valueCallback = year => ({ year, isTwoDigitYear: "YY" === token }); switch (token) {
                    case "Y": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(4, dateString), valueCallback);
                    case "Yo": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "year" }), valueCallback);
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString), valueCallback);
                } }
                validate(_date, value) { return value.isTwoDigitYear || value.year > 0; }
                set(date, flags, value, options1) { let currentYear = (0, _getWeekYear_js__WEBPACK_IMPORTED_MODULE_2__.getWeekYear)(date, options1); if (value.isTwoDigitYear) {
                    let normalizedTwoDigitYear = (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeTwoDigitYear)(value.year, currentYear);
                    return date.setFullYear(normalizedTwoDigitYear, 0, options1.firstWeekContainsDate), date.setHours(0, 0, 0, 0), (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)(date, options1);
                } let year = "era" in flags && 1 !== flags.era ? 1 - value.year : value.year; return date.setFullYear(year, 0, options1.firstWeekContainsDate), date.setHours(0, 0, 0, 0), (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)(date, options1); }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/MinuteParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { MinuteParser: () => MinuteParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class MinuteParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 60;
                    this.incompatibleTokens = ["t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "m": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.minute, dateString);
                    case "mo": return match.ordinalNumber(dateString, { unit: "minute" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 0 && value <= 59; }
                set(date, _flags, value) { return date.setMinutes(value, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/MonthParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { MonthParser: () => MonthParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class MonthParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.incompatibleTokens = ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"];
                    this.priority = 110;
                }
                parse(dateString, token, match) { let valueCallback = value => value - 1; switch (token) {
                    case "M": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.month, dateString), valueCallback);
                    case "MM": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(2, dateString), valueCallback);
                    case "Mo": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "month" }), valueCallback);
                    case "MMM": return match.month(dateString, { width: "abbreviated", context: "formatting" }) || match.month(dateString, { width: "narrow", context: "formatting" });
                    case "MMMMM": return match.month(dateString, { width: "narrow", context: "formatting" });
                    default: return match.month(dateString, { width: "wide", context: "formatting" }) || match.month(dateString, { width: "abbreviated", context: "formatting" }) || match.month(dateString, { width: "narrow", context: "formatting" });
                } }
                validate(_date, value) { return value >= 0 && value <= 11; }
                set(date, _flags, value) { return date.setMonth(value, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/QuarterParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { QuarterParser: () => QuarterParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class QuarterParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 120;
                    this.incompatibleTokens = ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "Q":
                    case "QQ": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                    case "Qo": return match.ordinalNumber(dateString, { unit: "quarter" });
                    case "QQQ": return match.quarter(dateString, { width: "abbreviated", context: "formatting" }) || match.quarter(dateString, { width: "narrow", context: "formatting" });
                    case "QQQQQ": return match.quarter(dateString, { width: "narrow", context: "formatting" });
                    default: return match.quarter(dateString, { width: "wide", context: "formatting" }) || match.quarter(dateString, { width: "abbreviated", context: "formatting" }) || match.quarter(dateString, { width: "narrow", context: "formatting" });
                } }
                validate(_date, value) { return value >= 1 && value <= 4; }
                set(date, _flags, value) { return date.setMonth((value - 1) * 3, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/SecondParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { SecondParser: () => SecondParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class SecondParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 50;
                    this.incompatibleTokens = ["t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "s": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.second, dateString);
                    case "so": return match.ordinalNumber(dateString, { unit: "second" });
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                } }
                validate(_date, value) { return value >= 0 && value <= 59; }
                set(date, _flags, value) { return date.setSeconds(value, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { StandAloneLocalDayParser: () => StandAloneLocalDayParser });
            var _setDay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/setDay.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class StandAloneLocalDayParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 90;
                    this.incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"];
                }
                parse(dateString, token, match, options1) { let valueCallback = value => { let wholeWeekDays = 7 * Math.floor((value - 1) / 7); return (value + options1.weekStartsOn + 6) % 7 + wholeWeekDays; }; switch (token) {
                    case "c":
                    case "cc": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString), valueCallback);
                    case "co": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "day" }), valueCallback);
                    case "ccc": return match.day(dateString, { width: "abbreviated", context: "standalone" }) || match.day(dateString, { width: "short", context: "standalone" }) || match.day(dateString, { width: "narrow", context: "standalone" });
                    case "ccccc": return match.day(dateString, { width: "narrow", context: "standalone" });
                    case "cccccc": return match.day(dateString, { width: "short", context: "standalone" }) || match.day(dateString, { width: "narrow", context: "standalone" });
                    default: return match.day(dateString, { width: "wide", context: "standalone" }) || match.day(dateString, { width: "abbreviated", context: "standalone" }) || match.day(dateString, { width: "short", context: "standalone" }) || match.day(dateString, { width: "narrow", context: "standalone" });
                } }
                validate(_date, value) { return value >= 0 && value <= 6; }
                set(date, _flags, value, options1) { return (date = (0, _setDay_js__WEBPACK_IMPORTED_MODULE_2__.setDay)(date, value, options1)).setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { StandAloneMonthParser: () => StandAloneMonthParser });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class StandAloneMonthParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 110;
                    this.incompatibleTokens = ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { let valueCallback = value => value - 1; switch (token) {
                    case "L": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNumericPattern)(_constants_js__WEBPACK_IMPORTED_MODULE_2__.numericPatterns.month, dateString), valueCallback);
                    case "LL": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(2, dateString), valueCallback);
                    case "Lo": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "month" }), valueCallback);
                    case "LLL": return match.month(dateString, { width: "abbreviated", context: "standalone" }) || match.month(dateString, { width: "narrow", context: "standalone" });
                    case "LLLLL": return match.month(dateString, { width: "narrow", context: "standalone" });
                    default: return match.month(dateString, { width: "wide", context: "standalone" }) || match.month(dateString, { width: "abbreviated", context: "standalone" }) || match.month(dateString, { width: "narrow", context: "standalone" });
                } }
                validate(_date, value) { return value >= 0 && value <= 11; }
                set(date, _flags, value) { return date.setMonth(value, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { StandAloneQuarterParser: () => StandAloneQuarterParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class StandAloneQuarterParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 120;
                    this.incompatibleTokens = ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { switch (token) {
                    case "q":
                    case "qq": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString);
                    case "qo": return match.ordinalNumber(dateString, { unit: "quarter" });
                    case "qqq": return match.quarter(dateString, { width: "abbreviated", context: "standalone" }) || match.quarter(dateString, { width: "narrow", context: "standalone" });
                    case "qqqqq": return match.quarter(dateString, { width: "narrow", context: "standalone" });
                    default: return match.quarter(dateString, { width: "wide", context: "standalone" }) || match.quarter(dateString, { width: "abbreviated", context: "standalone" }) || match.quarter(dateString, { width: "narrow", context: "standalone" });
                } }
                validate(_date, value) { return value >= 1 && value <= 4; }
                set(date, _flags, value) { return date.setMonth((value - 1) * 3, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { TimestampMillisecondsParser: () => TimestampMillisecondsParser });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class TimestampMillisecondsParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 20;
                    this.incompatibleTokens = "*";
                }
                parse(dateString) { return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseAnyDigitsSigned)(dateString); }
                set(date, _flags, value) { return [(0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(date, value), { timestampIsSet: !0 }]; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { TimestampSecondsParser: () => TimestampSecondsParser });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class TimestampSecondsParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 40;
                    this.incompatibleTokens = "*";
                }
                parse(dateString) { return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseAnyDigitsSigned)(dateString); }
                set(date, _flags, value) { return [(0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(date, 1e3 * value), { timestampIsSet: !0 }]; }
            }
        }, "./node_modules/date-fns/parse/_lib/parsers/YearParser.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { YearParser: () => YearParser });
            var _Parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/parse/_lib/Parser.js"), _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/utils.js");
            class YearParser extends _Parser_js__WEBPACK_IMPORTED_MODULE_0__.Parser {
                constructor() {
                    super(...arguments);
                    this.priority = 130;
                    this.incompatibleTokens = ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"];
                }
                parse(dateString, token, match) { let valueCallback = year => ({ year, isTwoDigitYear: "yy" === token }); switch (token) {
                    case "y": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(4, dateString), valueCallback);
                    case "yo": return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)(match.ordinalNumber(dateString, { unit: "year" }), valueCallback);
                    default: return (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.mapValue)((0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.parseNDigits)(token.length, dateString), valueCallback);
                } }
                validate(_date, value) { return value.isTwoDigitYear || value.year > 0; }
                set(date, flags, value) { let currentYear = date.getFullYear(); if (value.isTwoDigitYear) {
                    let normalizedTwoDigitYear = (0, _utils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeTwoDigitYear)(value.year, currentYear);
                    return date.setFullYear(normalizedTwoDigitYear, 0, 1), date.setHours(0, 0, 0, 0), date;
                } let year = "era" in flags && 1 !== flags.era ? 1 - value.year : value.year; return date.setFullYear(year, 0, 1), date.setHours(0, 0, 0, 0), date; }
            }
        }, "./node_modules/date-fns/parse/_lib/utils.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { dayPeriodEnumToHours: () => dayPeriodEnumToHours, isLeapYearIndex: () => isLeapYearIndex, mapValue: () => mapValue, normalizeTwoDigitYear: () => normalizeTwoDigitYear, parseAnyDigitsSigned: () => parseAnyDigitsSigned, parseNDigits: () => parseNDigits, parseNDigitsSigned: () => parseNDigitsSigned, parseNumericPattern: () => parseNumericPattern, parseTimezonePattern: () => parseTimezonePattern });
            var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constants.js"), _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/parse/_lib/constants.js");
            function mapValue(parseFnResult, mapFn) { return parseFnResult ? { value: mapFn(parseFnResult.value), rest: parseFnResult.rest } : parseFnResult; }
            function parseNumericPattern(pattern, dateString) { let matchResult = dateString.match(pattern); return matchResult ? { value: parseInt(matchResult[0], 10), rest: dateString.slice(matchResult[0].length) } : null; }
            function parseTimezonePattern(pattern, dateString) { let matchResult = dateString.match(pattern); if (!matchResult)
                return null; if ("Z" === matchResult[0])
                return { value: 0, rest: dateString.slice(1) }; let sign = "+" === matchResult[1] ? 1 : -1, hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0, minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0, seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0; return { value: sign * (hours * _constants_js__WEBPACK_IMPORTED_MODULE_0__.millisecondsInHour + minutes * _constants_js__WEBPACK_IMPORTED_MODULE_0__.millisecondsInMinute + seconds * _constants_js__WEBPACK_IMPORTED_MODULE_0__.millisecondsInSecond), rest: dateString.slice(matchResult[0].length) }; }
            function parseAnyDigitsSigned(dateString) { return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.anyDigitsSigned, dateString); }
            function parseNDigits(n, dateString) { switch (n) {
                case 1: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.singleDigit, dateString);
                case 2: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.twoDigits, dateString);
                case 3: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.threeDigits, dateString);
                case 4: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.fourDigits, dateString);
                default: return parseNumericPattern(RegExp("^\\d{1," + n + "}"), dateString);
            } }
            function parseNDigitsSigned(n, dateString) { switch (n) {
                case 1: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.singleDigitSigned, dateString);
                case 2: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.twoDigitsSigned, dateString);
                case 3: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.threeDigitsSigned, dateString);
                case 4: return parseNumericPattern(_constants_js__WEBPACK_IMPORTED_MODULE_1__.numericPatterns.fourDigitsSigned, dateString);
                default: return parseNumericPattern(RegExp("^-?\\d{1," + n + "}"), dateString);
            } }
            function dayPeriodEnumToHours(dayPeriod) { switch (dayPeriod) {
                case "morning": return 4;
                case "evening": return 17;
                case "pm":
                case "noon":
                case "afternoon": return 12;
                default: return 0;
            } }
            function normalizeTwoDigitYear(twoDigitYear, currentYear) { let result, isCommonEra = currentYear > 0, absCurrentYear = isCommonEra ? currentYear : 1 - currentYear; if (absCurrentYear <= 50)
                result = twoDigitYear || 100;
            else {
                let rangeEnd = absCurrentYear + 50;
                result = twoDigitYear + 100 * Math.trunc(rangeEnd / 100) - 100 * (twoDigitYear >= rangeEnd % 100);
            } return isCommonEra ? result : 1 - result; }
            function isLeapYearIndex(year) { return year % 400 == 0 || year % 4 == 0 && year % 100 != 0; }
        }, "./node_modules/date-fns/parseISO.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, parseISO: () => parseISO });
            var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constants.js"), _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function parseISO(argument, options1) { let date, offset, invalidDate = () => (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(options1?.in, NaN), additionalDigits = options1?.additionalDigits ?? 2, dateStrings = function (dateString) { let timeString, dateStrings = {}, array = dateString.split(patterns.dateTimeDelimiter); if (array.length > 2)
                return dateStrings; if (/:/.test(array[0]) ? timeString = array[0] : (dateStrings.date = array[0], timeString = array[1], patterns.timeZoneDelimiter.test(dateStrings.date) && (dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0], timeString = dateString.substr(dateStrings.date.length, dateString.length))), timeString) {
                let token = patterns.timezone.exec(timeString);
                token ? (dateStrings.time = timeString.replace(token[1], ""), dateStrings.timezone = token[1]) : dateStrings.time = timeString;
            } return dateStrings; }(argument); if (dateStrings.date) {
                let parseYearResult = function (dateString, additionalDigits) { let regex = RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)"), captures = dateString.match(regex); if (!captures)
                    return { year: NaN, restDateString: "" }; let year = captures[1] ? parseInt(captures[1]) : null, century = captures[2] ? parseInt(captures[2]) : null; return { year: null === century ? year : 100 * century, restDateString: dateString.slice((captures[1] || captures[2]).length) }; }(dateStrings.date, additionalDigits);
                date = function (dateString, year) { var _year, week, day, year1, month, date, year2, dayOfYear; if (null === year)
                    return new Date(NaN); let captures = dateString.match(dateRegex); if (!captures)
                    return new Date(NaN); let isWeekDate = !!captures[4], dayOfYear1 = parseDateUnit(captures[1]), month1 = parseDateUnit(captures[2]) - 1, day1 = parseDateUnit(captures[3]), week1 = parseDateUnit(captures[4]), dayOfWeek = parseDateUnit(captures[5]) - 1; if (isWeekDate) {
                    return (_year = 0, week = week1, day = dayOfWeek, week >= 1 && week <= 53 && day >= 0 && day <= 6) ? function (isoWeekYear, week, day) { let date = new Date(0); date.setUTCFullYear(isoWeekYear, 0, 4); let fourthOfJanuaryDay = date.getUTCDay() || 7; return date.setUTCDate(date.getUTCDate() + ((week - 1) * 7 + day + 1 - fourthOfJanuaryDay)), date; }(year, week1, dayOfWeek) : new Date(NaN);
                } {
                    let date1 = new Date(0);
                    return (year1 = year, month = month1, date = day1, month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year1) ? 29 : 28)) && (year2 = year, (dayOfYear = dayOfYear1) >= 1 && dayOfYear <= (isLeapYearIndex(year2) ? 366 : 365))) ? (date1.setUTCFullYear(year, month1, Math.max(dayOfYear1, day1)), date1) : new Date(NaN);
                } }(parseYearResult.restDateString, parseYearResult.year);
            } if (!date || isNaN(+date))
                return invalidDate(); let timestamp = +date, time = 0; if (dateStrings.time && isNaN(time = function (timeString) { var hours, minutes, seconds; let captures = timeString.match(timeRegex); if (!captures)
                return NaN; let hours1 = parseTimeUnit(captures[1]), minutes1 = parseTimeUnit(captures[2]), seconds1 = parseTimeUnit(captures[3]); return (hours = hours1, minutes = minutes1, seconds = seconds1, 24 === hours ? 0 === minutes && 0 === seconds : seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25) ? hours1 * _constants_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInHour + minutes1 * _constants_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInMinute + 1e3 * seconds1 : NaN; }(dateStrings.time)))
                return invalidDate(); if (dateStrings.timezone) {
                if (isNaN(offset = function (timezoneString) { var _hours, minutes; if ("Z" === timezoneString)
                    return 0; let captures = timezoneString.match(timezoneRegex); if (!captures)
                    return 0; let sign = "+" === captures[1] ? -1 : 1, hours = parseInt(captures[2]), minutes1 = captures[3] && parseInt(captures[3]) || 0; return (_hours = 0, (minutes = minutes1) >= 0 && minutes <= 59) ? sign * (hours * _constants_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInHour + minutes1 * _constants_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInMinute) : NaN; }(dateStrings.timezone)))
                    return invalidDate();
            }
            else {
                let tmpDate = new Date(timestamp + time), result = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(0, options1?.in);
                return result.setFullYear(tmpDate.getUTCFullYear(), tmpDate.getUTCMonth(), tmpDate.getUTCDate()), result.setHours(tmpDate.getUTCHours(), tmpDate.getUTCMinutes(), tmpDate.getUTCSeconds(), tmpDate.getUTCMilliseconds()), result;
            } return (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(timestamp + time + offset, options1?.in); }
            let patterns = { dateTimeDelimiter: /[T ]/, timeZoneDelimiter: /[Z ]/i, timezone: /([Z+-].*)$/ }, dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/, timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/, timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
            function parseDateUnit(value) { return value ? parseInt(value) : 1; }
            function parseTimeUnit(value) { return value && parseFloat(value.replace(",", ".")) || 0; }
            let daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            function isLeapYearIndex(year) { return year % 400 == 0 || year % 4 == 0 && year % 100 != 0; }
            let __WEBPACK_DEFAULT_EXPORT__ = parseISO;
        }, "./node_modules/date-fns/previousDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, previousDay: () => previousDay });
            var _getDay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/getDay.js"), _subDays_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/subDays.js");
            function previousDay(date, day, options1) { let delta = (0, _getDay_js__WEBPACK_IMPORTED_MODULE_0__.getDay)(date, options1) - day; return delta <= 0 && (delta += 7), (0, _subDays_js__WEBPACK_IMPORTED_MODULE_1__.subDays)(date, delta, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = previousDay;
        }, "./node_modules/date-fns/previousFriday.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, previousFriday: () => previousFriday });
            var _previousDay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/previousDay.js");
            function previousFriday(date, options1) { return (0, _previousDay_js__WEBPACK_IMPORTED_MODULE_0__.previousDay)(date, 5, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = previousFriday;
        }, "./node_modules/date-fns/setDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, setDay: () => setDay });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _addDays_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/addDays.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function setDay(date, day, options1) { let defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(), weekStartsOn = options1?.weekStartsOn ?? options1?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0, date_ = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(date, options1?.in), currentDay = date_.getDay(), delta = 7 - weekStartsOn, diff = day < 0 || day > 6 ? day - (currentDay + delta) % 7 : ((day % 7 + 7) % 7 + delta) % 7 - (currentDay + delta) % 7; return (0, _addDays_js__WEBPACK_IMPORTED_MODULE_2__.addDays)(date_, diff, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = setDay;
        }, "./node_modules/date-fns/setISODay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, setISODay: () => setISODay });
            var _addDays_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/addDays.js"), _getISODay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/getISODay.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function setISODay(date, day, options1) { let date_ = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), currentDay = (0, _getISODay_js__WEBPACK_IMPORTED_MODULE_1__.getISODay)(date_, options1); return (0, _addDays_js__WEBPACK_IMPORTED_MODULE_2__.addDays)(date_, day - currentDay, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = setISODay;
        }, "./node_modules/date-fns/setISOWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, setISOWeek: () => setISOWeek });
            var _getISOWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/getISOWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function setISOWeek(date, week, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), diff = (0, _getISOWeek_js__WEBPACK_IMPORTED_MODULE_1__.getISOWeek)(_date, options1) - week; return _date.setDate(_date.getDate() - 7 * diff), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = setISOWeek;
        }, "./node_modules/date-fns/setWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, setWeek: () => setWeek });
            var _getWeek_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/getWeek.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function setWeek(date, week, options1) { let date_ = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in), diff = (0, _getWeek_js__WEBPACK_IMPORTED_MODULE_1__.getWeek)(date_, options1) - week; return date_.setDate(date_.getDate() - 7 * diff), (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date_, options1?.in); }
            let __WEBPACK_DEFAULT_EXPORT__ = setWeek;
        }, "./node_modules/date-fns/startOfDay.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfDay: () => startOfDay });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function startOfDay(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return _date.setHours(0, 0, 0, 0), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfDay;
        }, "./node_modules/date-fns/startOfISOWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfISOWeek: () => startOfISOWeek });
            var _startOfWeek_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js");
            function startOfISOWeek(date, options1) { return (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_0__.startOfWeek)(date, { ...options1, weekStartsOn: 1 }); }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfISOWeek;
        }, "./node_modules/date-fns/startOfISOWeekYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfISOWeekYear: () => startOfISOWeekYear });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _getISOWeekYear_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/getISOWeekYear.js"), _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfISOWeek.js");
            function startOfISOWeekYear(date, options1) { let year = (0, _getISOWeekYear_js__WEBPACK_IMPORTED_MODULE_0__.getISOWeekYear)(date, options1), fourthOfJanuary = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_1__.constructFrom)(options1?.in || date, 0); return fourthOfJanuary.setFullYear(year, 0, 4), fourthOfJanuary.setHours(0, 0, 0, 0), (0, _startOfISOWeek_js__WEBPACK_IMPORTED_MODULE_2__.startOfISOWeek)(fourthOfJanuary); }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfISOWeekYear;
        }, "./node_modules/date-fns/startOfMonth.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfMonth: () => startOfMonth });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function startOfMonth(date, options1) { let _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return _date.setDate(1), _date.setHours(0, 0, 0, 0), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfMonth;
        }, "./node_modules/date-fns/startOfWeek.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfWeek: () => startOfWeek });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _toDate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function startOfWeek(date, options1) { let defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(), weekStartsOn = options1?.weekStartsOn ?? options1?.locale?.options?.weekStartsOn ?? defaultOptions.weekStartsOn ?? defaultOptions.locale?.options?.weekStartsOn ?? 0, _date = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_1__.toDate)(date, options1?.in), day = _date.getDay(); return _date.setDate(_date.getDate() - (7 * (day < weekStartsOn) + day - weekStartsOn)), _date.setHours(0, 0, 0, 0), _date; }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfWeek;
        }, "./node_modules/date-fns/startOfWeekYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfWeekYear: () => startOfWeekYear });
            var _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/_lib/defaultOptions.js"), _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/constructFrom.js"), _getWeekYear_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/getWeekYear.js"), _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js");
            function startOfWeekYear(date, options1) { let defaultOptions = (0, _lib_defaultOptions_js__WEBPACK_IMPORTED_MODULE_0__.getDefaultOptions)(), firstWeekContainsDate = options1?.firstWeekContainsDate ?? options1?.locale?.options?.firstWeekContainsDate ?? defaultOptions.firstWeekContainsDate ?? defaultOptions.locale?.options?.firstWeekContainsDate ?? 1, year = (0, _getWeekYear_js__WEBPACK_IMPORTED_MODULE_1__.getWeekYear)(date, options1), firstWeek = (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_2__.constructFrom)(options1?.in || date, 0); return firstWeek.setFullYear(year, 0, firstWeekContainsDate), firstWeek.setHours(0, 0, 0, 0), (0, _startOfWeek_js__WEBPACK_IMPORTED_MODULE_3__.startOfWeek)(firstWeek, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfWeekYear;
        }, "./node_modules/date-fns/startOfYear.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, startOfYear: () => startOfYear });
            var _toDate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/toDate.js");
            function startOfYear(date, options1) { let date_ = (0, _toDate_js__WEBPACK_IMPORTED_MODULE_0__.toDate)(date, options1?.in); return date_.setFullYear(date_.getFullYear(), 0, 1), date_.setHours(0, 0, 0, 0), date_; }
            let __WEBPACK_DEFAULT_EXPORT__ = startOfYear;
        }, "./node_modules/date-fns/subDays.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, subDays: () => subDays });
            var _addDays_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addDays.js");
            function subDays(date, amount, options1) { return (0, _addDays_js__WEBPACK_IMPORTED_MODULE_0__.addDays)(date, -amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = subDays;
        }, "./node_modules/date-fns/subMonths.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, subMonths: () => subMonths });
            var _addMonths_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addMonths.js");
            function subMonths(date, amount, options1) { return (0, _addMonths_js__WEBPACK_IMPORTED_MODULE_0__.addMonths)(date, -amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = subMonths;
        }, "./node_modules/date-fns/subWeeks.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, subWeeks: () => subWeeks });
            var _addWeeks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addWeeks.js");
            function subWeeks(date, amount, options1) { return (0, _addWeeks_js__WEBPACK_IMPORTED_MODULE_0__.addWeeks)(date, -amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = subWeeks;
        }, "./node_modules/date-fns/subYears.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, subYears: () => subYears });
            var _addYears_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/addYears.js");
            function subYears(date, amount, options1) { return (0, _addYears_js__WEBPACK_IMPORTED_MODULE_0__.addYears)(date, -amount, options1); }
            let __WEBPACK_DEFAULT_EXPORT__ = subYears;
        }, "./node_modules/date-fns/toDate.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, toDate: () => toDate });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js");
            function toDate(argument, context) { return (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(context || argument, argument); }
            let __WEBPACK_DEFAULT_EXPORT__ = toDate;
        }, "./node_modules/date-fns/transpose.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, transpose: () => transpose });
            var _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/constructFrom.js");
            function transpose(date, constructor) { var constructor1; let date_ = "function" == typeof (constructor1 = constructor) && constructor1.prototype?.constructor === constructor1 ? new constructor(0) : (0, _constructFrom_js__WEBPACK_IMPORTED_MODULE_0__.constructFrom)(constructor, 0); return date_.setFullYear(date.getFullYear(), date.getMonth(), date.getDate()), date_.setHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()), date_; }
            let __WEBPACK_DEFAULT_EXPORT__ = transpose;
        }, "./node_modules/deep-equal/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var assign = __webpack_require__("./node_modules/object.assign/index.js"), callBound = __webpack_require__("./node_modules/call-bind/callBound.js"), flags = __webpack_require__("./node_modules/regexp.prototype.flags/index.js"), GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), getIterator = __webpack_require__("./node_modules/es-get-iterator/node.js"), getSideChannel = __webpack_require__("./node_modules/side-channel/index.js"), is = __webpack_require__("./node_modules/object-is/index.js"), isArguments = __webpack_require__("./node_modules/is-arguments/index.js"), isArray = __webpack_require__("./node_modules/isarray/index.js"), isArrayBuffer = __webpack_require__("./node_modules/is-array-buffer/index.js"), isDate = __webpack_require__("./node_modules/is-date-object/index.js"), isRegex = __webpack_require__("./node_modules/is-regex/index.js"), isSharedArrayBuffer = __webpack_require__("./node_modules/is-shared-array-buffer/index.js"), objectKeys = __webpack_require__("./node_modules/object-keys/index.js"), whichBoxedPrimitive = __webpack_require__("./node_modules/which-boxed-primitive/index.js"), whichCollection = __webpack_require__("./node_modules/which-collection/index.js"), whichTypedArray = __webpack_require__("./node_modules/which-typed-array/index.js"), byteLength = __webpack_require__("./node_modules/array-buffer-byte-length/index.js"), sabByteLength = callBound("SharedArrayBuffer.prototype.byteLength", !0), $getTime = callBound("Date.prototype.getTime"), gPO = Object.getPrototypeOf, $objToString = callBound("Object.prototype.toString"), $Set = GetIntrinsic("%Set%", !0), $mapHas = callBound("Map.prototype.has", !0), $mapGet = callBound("Map.prototype.get", !0), $mapSize = callBound("Map.prototype.size", !0), $setAdd = callBound("Set.prototype.add", !0), $setDelete = callBound("Set.prototype.delete", !0), $setHas = callBound("Set.prototype.has", !0), $setSize = callBound("Set.prototype.size", !0);
            function setHasEqualElement(set, val1, opts, channel) { for (var result, i = getIterator(set); (result = i.next()) && !result.done;)
                if (internalDeepEqual(val1, result.value, opts, channel))
                    return $setDelete(set, result.value), !0; return !1; }
            function findLooseMatchingPrimitives(prim) { return void 0 === prim ? null : "object" != typeof prim ? "symbol" != typeof prim && ("string" != typeof prim && "number" != typeof prim || +prim == +prim) : void 0; }
            function mapHasEqualEntry(set, map, key1, item1, opts, channel) { for (var result, key2, i = getIterator(set); (result = i.next()) && !result.done;)
                if (internalDeepEqual(key1, key2 = result.value, opts, channel) && internalDeepEqual(item1, $mapGet(map, key2), opts, channel))
                    return $setDelete(set, key2), !0; return !1; }
            function internalDeepEqual(actual, expected, options1, channel) { var sentinel, opts = options1 || {}; if (opts.strict ? is(actual, expected) : actual === expected)
                return !0; if (whichBoxedPrimitive(actual) !== whichBoxedPrimitive(expected))
                return !1; if (!actual || !expected || "object" != typeof actual && "object" != typeof expected)
                return opts.strict ? is(actual, expected) : actual == expected; var hasActual = channel.has(actual), hasExpected = channel.has(expected); if (hasActual && hasExpected) {
                if (channel.get(actual) === channel.get(expected))
                    return !0;
            }
            else
                sentinel = {}; return hasActual || channel.set(actual, sentinel), hasExpected || channel.set(expected, sentinel), function (a, b, opts, channel) { if (typeof a != typeof b || null == a || null == b || $objToString(a) !== $objToString(b) || isArguments(a) !== isArguments(b) || isArray(a) !== isArray(b))
                return !1; var i, key, aIsError = a instanceof Error, bIsError = b instanceof Error; if (aIsError !== bIsError || (aIsError || bIsError) && (a.name !== b.name || a.message !== b.message))
                return !1; var aIsRegex = isRegex(a), bIsRegex = isRegex(b); if (aIsRegex !== bIsRegex || (aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b)))
                return !1; var aIsDate = isDate(a), bIsDate = isDate(b); if (aIsDate !== bIsDate || (aIsDate || bIsDate) && $getTime(a) !== $getTime(b) || opts.strict && gPO && gPO(a) !== gPO(b))
                return !1; var aWhich = whichTypedArray(a), bWhich = whichTypedArray(b); if (aWhich !== bWhich)
                return !1; if (aWhich || bWhich) {
                if (a.length !== b.length)
                    return !1;
                for (i = 0; i < a.length; i++)
                    if (a[i] !== b[i])
                        return !1;
                return !0;
            } var aIsBuffer = isBuffer(a), bIsBuffer = isBuffer(b); if (aIsBuffer !== bIsBuffer)
                return !1; if (aIsBuffer || bIsBuffer) {
                if (a.length !== b.length)
                    return !1;
                for (i = 0; i < a.length; i++)
                    if (a[i] !== b[i])
                        return !1;
                return !0;
            } var aIsArrayBuffer = isArrayBuffer(a), bIsArrayBuffer = isArrayBuffer(b); if (aIsArrayBuffer !== bIsArrayBuffer)
                return !1; if (aIsArrayBuffer || bIsArrayBuffer)
                return byteLength(a) === byteLength(b) && "function" == typeof Uint8Array && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel); var aIsSAB = isSharedArrayBuffer(a), bIsSAB = isSharedArrayBuffer(b); if (aIsSAB !== bIsSAB)
                return !1; if (aIsSAB || bIsSAB)
                return sabByteLength(a) === sabByteLength(b) && "function" == typeof Uint8Array && internalDeepEqual(new Uint8Array(a), new Uint8Array(b), opts, channel); if (typeof a != typeof b)
                return !1; var ka = objectKeys(a), kb = objectKeys(b); if (ka.length !== kb.length)
                return !1; for (ka.sort(), kb.sort(), i = ka.length - 1; i >= 0; i--)
                if (ka[i] != kb[i])
                    return !1; for (i = ka.length - 1; i >= 0; i--)
                if (!internalDeepEqual(a[key = ka[i]], b[key], opts, channel))
                    return !1; var aCollection = whichCollection(a), bCollection = whichCollection(b); return aCollection === bCollection && ("Set" === aCollection || "Set" === bCollection ? function (a, b, opts, channel) { if ($setSize(a) !== $setSize(b))
                return !1; for (var resultA, resultB, set, iA = getIterator(a), iB = getIterator(b); (resultA = iA.next()) && !resultA.done;)
                if (resultA.value && "object" == typeof resultA.value)
                    set || (set = new $Set), $setAdd(set, resultA.value);
                else if (!$setHas(b, resultA.value)) {
                    if (opts.strict || !function (a, b, prim) { var altValue = findLooseMatchingPrimitives(prim); return null != altValue ? altValue : $setHas(b, altValue) && !$setHas(a, altValue); }(a, b, resultA.value))
                        return !1;
                    set || (set = new $Set), $setAdd(set, resultA.value);
                } if (set) {
                for (; (resultB = iB.next()) && !resultB.done;)
                    if (resultB.value && "object" == typeof resultB.value) {
                        if (!setHasEqualElement(set, resultB.value, opts.strict, channel))
                            return !1;
                    }
                    else if (!opts.strict && !$setHas(a, resultB.value) && !setHasEqualElement(set, resultB.value, opts.strict, channel))
                        return !1;
                return 0 === $setSize(set);
            } return !0; }(a, b, opts, channel) : "Map" !== aCollection || function (a, b, opts, channel) { if ($mapSize(a) !== $mapSize(b))
                return !1; for (var resultA, resultB, set, key, item1, item2, iA = getIterator(a), iB = getIterator(b); (resultA = iA.next()) && !resultA.done;)
                if (key = resultA.value[0], item1 = resultA.value[1], key && "object" == typeof key)
                    set || (set = new $Set), $setAdd(set, key);
                else if (void 0 === (item2 = $mapGet(b, key)) && !$mapHas(b, key) || !internalDeepEqual(item1, item2, opts, channel)) {
                    if (opts.strict || !function (a, b, prim, item, opts, channel) { var altValue = findLooseMatchingPrimitives(prim); if (null != altValue)
                        return altValue; var curB = $mapGet(b, altValue), looseOpts = assign({}, opts, { strict: !1 }); return (void 0 !== curB || !!$mapHas(b, altValue)) && !!internalDeepEqual(item, curB, looseOpts, channel) && !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel); }(a, b, key, item1, opts, channel))
                        return !1;
                    set || (set = new $Set), $setAdd(set, key);
                } if (set) {
                for (; (resultB = iB.next()) && !resultB.done;)
                    if (key = resultB.value[0], item2 = resultB.value[1], key && "object" == typeof key) {
                        if (!mapHasEqualEntry(set, a, key, item2, opts, channel))
                            return !1;
                    }
                    else if (!opts.strict && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel)) && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: !1 }), channel))
                        return !1;
                return 0 === $setSize(set);
            } return !0; }(a, b, opts, channel)); }(actual, expected, opts, channel); }
            function isBuffer(x) { return !!x && "object" == typeof x && "number" == typeof x.length && "function" == typeof x.copy && "function" == typeof x.slice && (!(x.length > 0) || "number" == typeof x[0]) && !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x)); }
            module1.exports = function (a, b, opts) { return internalDeepEqual(a, b, opts, getSideChannel()); };
        }, "./node_modules/define-data-property/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $defineProperty = __webpack_require__("./node_modules/es-define-property/index.js"), $SyntaxError = __webpack_require__("./node_modules/es-errors/syntax.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), gopd = __webpack_require__("./node_modules/gopd/index.js");
            module1.exports = function (obj, property, value) { if (!obj || "object" != typeof obj && "function" != typeof obj)
                throw new $TypeError("`obj` must be an object or a function`"); if ("string" != typeof property && "symbol" != typeof property)
                throw new $TypeError("`property` must be a string or a symbol`"); if (arguments.length > 3 && "boolean" != typeof arguments[3] && null !== arguments[3])
                throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null"); if (arguments.length > 4 && "boolean" != typeof arguments[4] && null !== arguments[4])
                throw new $TypeError("`nonWritable`, if provided, must be a boolean or null"); if (arguments.length > 5 && "boolean" != typeof arguments[5] && null !== arguments[5])
                throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null"); if (arguments.length > 6 && "boolean" != typeof arguments[6])
                throw new $TypeError("`loose`, if provided, must be a boolean"); var nonEnumerable = arguments.length > 3 ? arguments[3] : null, nonWritable = arguments.length > 4 ? arguments[4] : null, nonConfigurable = arguments.length > 5 ? arguments[5] : null, loose = arguments.length > 6 && arguments[6], desc = !!gopd && gopd(obj, property); if ($defineProperty)
                $defineProperty(obj, property, { configurable: null === nonConfigurable && desc ? desc.configurable : !nonConfigurable, enumerable: null === nonEnumerable && desc ? desc.enumerable : !nonEnumerable, value: value, writable: null === nonWritable && desc ? desc.writable : !nonWritable });
            else if (!loose && (nonEnumerable || nonWritable || nonConfigurable))
                throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
            else
                obj[property] = value; };
        }, "./node_modules/define-properties/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var keys = __webpack_require__("./node_modules/object-keys/index.js"), hasSymbols = "function" == typeof Symbol && "symbol" == typeof Symbol("foo"), toStr = Object.prototype.toString, concat = Array.prototype.concat, defineDataProperty = __webpack_require__("./node_modules/define-data-property/index.js"), supportsDescriptors = __webpack_require__("./node_modules/has-property-descriptors/index.js")(), defineProperty = function (object, name, value, predicate) { if (name in object) {
                if (!0 === predicate) {
                    if (object[name] === value)
                        return;
                }
                else if ("function" != typeof predicate || "[object Function]" !== toStr.call(predicate) || !predicate())
                    return;
            } supportsDescriptors ? defineDataProperty(object, name, value, !0) : defineDataProperty(object, name, value); }, defineProperties = function (object, map) { var predicates = arguments.length > 2 ? arguments[2] : {}, props = keys(map); hasSymbols && (props = concat.call(props, Object.getOwnPropertySymbols(map))); for (var i = 0; i < props.length; i += 1)
                defineProperty(object, props[i], map[props[i]], predicates[props[i]]); };
            defineProperties.supportsDescriptors = !!supportsDescriptors, module1.exports = defineProperties;
        }, "./node_modules/dunder-proto/get.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var hasProtoAccessor, callBind = __webpack_require__("./node_modules/call-bind-apply-helpers/index.js"), gOPD = __webpack_require__("./node_modules/gopd/index.js");
            try {
                hasProtoAccessor = [].__proto__ === Array.prototype;
            }
            catch (e) {
                if (!e || "object" != typeof e || !("code" in e) || "ERR_PROTO_ACCESS" !== e.code)
                    throw e;
            }
            var desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, "__proto__"), $Object = Object, $getPrototypeOf = $Object.getPrototypeOf;
            module1.exports = desc && "function" == typeof desc.get ? callBind([desc.get]) : "function" == typeof $getPrototypeOf && function (value) { return $getPrototypeOf(null == value ? value : $Object(value)); };
        }, "./node_modules/err-code/index.js": module1 => {
            "use strict";
            function assign(obj, props) { for (let key in props)
                Object.defineProperty(obj, key, { value: props[key], enumerable: !0, configurable: !0 }); return obj; }
            module1.exports = function (err, code, props) { if (!err || "string" == typeof err)
                throw TypeError("Please pass an Error to err-code"); props || (props = {}), "object" == typeof code && (props = code, code = void 0), null != code && (props.code = code); try {
                return assign(err, props);
            }
            catch (_) {
                props.message = err.message, props.stack = err.stack;
                let ErrClass = function () { };
                return ErrClass.prototype = Object.create(Object.getPrototypeOf(err)), assign(new ErrClass, props);
            } };
        }, "./node_modules/es-define-property/index.js": module1 => {
            "use strict";
            var $defineProperty = Object.defineProperty || !1;
            if ($defineProperty)
                try {
                    $defineProperty({}, "a", { value: 1 });
                }
                catch (e) {
                    $defineProperty = !1;
                }
            module1.exports = $defineProperty;
        }, "./node_modules/es-errors/eval.js": module1 => {
            "use strict";
            module1.exports = EvalError;
        }, "./node_modules/es-errors/index.js": module1 => {
            "use strict";
            module1.exports = Error;
        }, "./node_modules/es-errors/range.js": module1 => {
            "use strict";
            module1.exports = RangeError;
        }, "./node_modules/es-errors/ref.js": module1 => {
            "use strict";
            module1.exports = ReferenceError;
        }, "./node_modules/es-errors/syntax.js": module1 => {
            "use strict";
            module1.exports = SyntaxError;
        }, "./node_modules/es-errors/type.js": module1 => {
            "use strict";
            module1.exports = TypeError;
        }, "./node_modules/es-errors/uri.js": module1 => {
            "use strict";
            module1.exports = URIError;
        }, "./node_modules/es-get-iterator/node.js": module1 => {
            "use strict";
            var $iterator = Symbol.iterator;
            module1.exports = function (iterable) { if (null != iterable && void 0 !== iterable[$iterator])
                return iterable[$iterator](); };
        }, "./node_modules/es-object-atoms/index.js": module1 => {
            "use strict";
            module1.exports = Object;
        }, "./node_modules/for-each/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var isCallable = __webpack_require__("./node_modules/is-callable/index.js"), toStr = Object.prototype.toString, hasOwnProperty = Object.prototype.hasOwnProperty, forEachArray = function (array, iterator, receiver) { for (var i = 0, len = array.length; i < len; i++)
                hasOwnProperty.call(array, i) && (null == receiver ? iterator(array[i], i, array) : iterator.call(receiver, array[i], i, array)); }, forEachString = function (string, iterator, receiver) { for (var i = 0, len = string.length; i < len; i++)
                null == receiver ? iterator(string.charAt(i), i, string) : iterator.call(receiver, string.charAt(i), i, string); }, forEachObject = function (object, iterator, receiver) { for (var k in object)
                hasOwnProperty.call(object, k) && (null == receiver ? iterator(object[k], k, object) : iterator.call(receiver, object[k], k, object)); };
            module1.exports = function (list, iterator, thisArg) { var receiver; if (!isCallable(iterator))
                throw TypeError("iterator must be a function"); (arguments.length >= 3 && (receiver = thisArg), "[object Array]" === toStr.call(list)) ? forEachArray(list, iterator, receiver) : "string" == typeof list ? forEachString(list, iterator, receiver) : forEachObject(list, iterator, receiver); };
        }, "./node_modules/function-bind/implementation.js": module1 => {
            "use strict";
            var toStr = Object.prototype.toString, max = Math.max, concatty = function (a, b) { for (var arr = [], i = 0; i < a.length; i += 1)
                arr[i] = a[i]; for (var j = 0; j < b.length; j += 1)
                arr[j + a.length] = b[j]; return arr; }, slicy = function (arrLike, offset) { for (var arr = [], i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1)
                arr[j] = arrLike[i]; return arr; }, joiny = function (arr, joiner) { for (var str = "", i = 0; i < arr.length; i += 1)
                str += arr[i], i + 1 < arr.length && (str += joiner); return str; };
            module1.exports = function (that) { var bound, target = this; if ("function" != typeof target || "[object Function]" !== toStr.apply(target))
                throw TypeError("Function.prototype.bind called on incompatible " + target); for (var args = slicy(arguments, 1), boundLength = max(0, target.length - args.length), boundArgs = [], i = 0; i < boundLength; i++)
                boundArgs[i] = "$" + i; if (bound = Function("binder", "return function (" + joiny(boundArgs, ",") + "){ return binder.apply(this,arguments); }")(function () { if (this instanceof bound) {
                var result = target.apply(this, concatty(args, arguments));
                return Object(result) === result ? result : this;
            } return target.apply(that, concatty(args, arguments)); }), target.prototype) {
                var Empty = function () { };
                Empty.prototype = target.prototype, bound.prototype = new Empty, Empty.prototype = null;
            } return bound; };
        }, "./node_modules/function-bind/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var implementation = __webpack_require__("./node_modules/function-bind/implementation.js");
            module1.exports = Function.prototype.bind || implementation;
        }, "./node_modules/functions-have-names/index.js": module1 => {
            "use strict";
            var functionsHaveNames = function () { return "string" == typeof (function () { }).name; }, gOPD = Object.getOwnPropertyDescriptor;
            if (gOPD)
                try {
                    gOPD([], "length");
                }
                catch (e) {
                    gOPD = null;
                }
            functionsHaveNames.functionsHaveConfigurableNames = function () { if (!functionsHaveNames() || !gOPD)
                return !1; var desc = gOPD(function () { }, "name"); return !!desc && !!desc.configurable; };
            var $bind = Function.prototype.bind;
            functionsHaveNames.boundFunctionsHaveNames = function () { return functionsHaveNames() && "function" == typeof $bind && "" !== (function () { }).bind().name; }, module1.exports = functionsHaveNames;
        }, "./node_modules/get-intrinsic/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var undefined, $Object = __webpack_require__("./node_modules/es-object-atoms/index.js"), $Error = __webpack_require__("./node_modules/es-errors/index.js"), $EvalError = __webpack_require__("./node_modules/es-errors/eval.js"), $RangeError = __webpack_require__("./node_modules/es-errors/range.js"), $ReferenceError = __webpack_require__("./node_modules/es-errors/ref.js"), $SyntaxError = __webpack_require__("./node_modules/es-errors/syntax.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $URIError = __webpack_require__("./node_modules/es-errors/uri.js"), abs = __webpack_require__("./node_modules/math-intrinsics/abs.js"), floor = __webpack_require__("./node_modules/math-intrinsics/floor.js"), max = __webpack_require__("./node_modules/math-intrinsics/max.js"), min = __webpack_require__("./node_modules/math-intrinsics/min.js"), pow = __webpack_require__("./node_modules/math-intrinsics/pow.js"), round = __webpack_require__("./node_modules/math-intrinsics/round.js"), sign = __webpack_require__("./node_modules/math-intrinsics/sign.js"), $Function = Function, getEvalledConstructor = function (expressionSyntax) { try {
                return $Function('"use strict"; return (' + expressionSyntax + ").constructor;")();
            }
            catch (e) { } }, $gOPD = __webpack_require__("./node_modules/gopd/index.js"), $defineProperty = __webpack_require__("./node_modules/es-define-property/index.js"), throwTypeError = function () { throw new $TypeError; }, ThrowTypeError = $gOPD ? function () { try {
                return arguments.callee, throwTypeError;
            }
            catch (calleeThrows) {
                try {
                    return $gOPD(arguments, "callee").get;
                }
                catch (gOPDthrows) {
                    return throwTypeError;
                }
            } }() : throwTypeError, hasSymbols = __webpack_require__("./node_modules/has-symbols/index.js")(), getProto = __webpack_require__("./node_modules/get-proto/index.js"), $ObjectGPO = __webpack_require__("./node_modules/get-proto/Object.getPrototypeOf.js"), $ReflectGPO = __webpack_require__("./node_modules/get-proto/Reflect.getPrototypeOf.js"), $apply = __webpack_require__("./node_modules/call-bind-apply-helpers/functionApply.js"), $call = __webpack_require__("./node_modules/call-bind-apply-helpers/functionCall.js"), needsEval = {}, TypedArray = "undefined" != typeof Uint8Array && getProto ? getProto(Uint8Array) : undefined, INTRINSICS = { __proto__: null, "%AggregateError%": "undefined" == typeof AggregateError ? undefined : AggregateError, "%Array%": Array, "%ArrayBuffer%": "undefined" == typeof ArrayBuffer ? undefined : ArrayBuffer, "%ArrayIteratorPrototype%": hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined, "%AsyncFromSyncIteratorPrototype%": undefined, "%AsyncFunction%": needsEval, "%AsyncGenerator%": needsEval, "%AsyncGeneratorFunction%": needsEval, "%AsyncIteratorPrototype%": needsEval, "%Atomics%": "undefined" == typeof Atomics ? undefined : Atomics, "%BigInt%": "undefined" == typeof BigInt ? undefined : BigInt, "%BigInt64Array%": "undefined" == typeof BigInt64Array ? undefined : BigInt64Array, "%BigUint64Array%": "undefined" == typeof BigUint64Array ? undefined : BigUint64Array, "%Boolean%": Boolean, "%DataView%": "undefined" == typeof DataView ? undefined : DataView, "%Date%": Date, "%decodeURI%": decodeURI, "%decodeURIComponent%": decodeURIComponent, "%encodeURI%": encodeURI, "%encodeURIComponent%": encodeURIComponent, "%Error%": $Error, "%eval%": eval, "%EvalError%": $EvalError, "%Float16Array%": "undefined" == typeof Float16Array ? undefined : Float16Array, "%Float32Array%": "undefined" == typeof Float32Array ? undefined : Float32Array, "%Float64Array%": "undefined" == typeof Float64Array ? undefined : Float64Array, "%FinalizationRegistry%": "undefined" == typeof FinalizationRegistry ? undefined : FinalizationRegistry, "%Function%": $Function, "%GeneratorFunction%": needsEval, "%Int8Array%": "undefined" == typeof Int8Array ? undefined : Int8Array, "%Int16Array%": "undefined" == typeof Int16Array ? undefined : Int16Array, "%Int32Array%": "undefined" == typeof Int32Array ? undefined : Int32Array, "%isFinite%": isFinite, "%isNaN%": isNaN, "%IteratorPrototype%": hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined, "%JSON%": "object" == typeof JSON ? JSON : undefined, "%Map%": "undefined" == typeof Map ? undefined : Map, "%MapIteratorPrototype%": "undefined" != typeof Map && hasSymbols && getProto ? getProto(new Map()[Symbol.iterator]()) : undefined, "%Math%": Math, "%Number%": Number, "%Object%": $Object, "%Object.getOwnPropertyDescriptor%": $gOPD, "%parseFloat%": parseFloat, "%parseInt%": parseInt, "%Promise%": "undefined" == typeof Promise ? undefined : Promise, "%Proxy%": "undefined" == typeof Proxy ? undefined : Proxy, "%RangeError%": $RangeError, "%ReferenceError%": $ReferenceError, "%Reflect%": "undefined" == typeof Reflect ? undefined : Reflect, "%RegExp%": RegExp, "%Set%": "undefined" == typeof Set ? undefined : Set, "%SetIteratorPrototype%": "undefined" != typeof Set && hasSymbols && getProto ? getProto(new Set()[Symbol.iterator]()) : undefined, "%SharedArrayBuffer%": "undefined" == typeof SharedArrayBuffer ? undefined : SharedArrayBuffer, "%String%": String, "%StringIteratorPrototype%": hasSymbols && getProto ? getProto(""[Symbol.iterator]()) : undefined, "%Symbol%": hasSymbols ? Symbol : undefined, "%SyntaxError%": $SyntaxError, "%ThrowTypeError%": ThrowTypeError, "%TypedArray%": TypedArray, "%TypeError%": $TypeError, "%Uint8Array%": "undefined" == typeof Uint8Array ? undefined : Uint8Array, "%Uint8ClampedArray%": "undefined" == typeof Uint8ClampedArray ? undefined : Uint8ClampedArray, "%Uint16Array%": "undefined" == typeof Uint16Array ? undefined : Uint16Array, "%Uint32Array%": "undefined" == typeof Uint32Array ? undefined : Uint32Array, "%URIError%": $URIError, "%WeakMap%": "undefined" == typeof WeakMap ? undefined : WeakMap, "%WeakRef%": "undefined" == typeof WeakRef ? undefined : WeakRef, "%WeakSet%": "undefined" == typeof WeakSet ? undefined : WeakSet, "%Function.prototype.call%": $call, "%Function.prototype.apply%": $apply, "%Object.defineProperty%": $defineProperty, "%Object.getPrototypeOf%": $ObjectGPO, "%Math.abs%": abs, "%Math.floor%": floor, "%Math.max%": max, "%Math.min%": min, "%Math.pow%": pow, "%Math.round%": round, "%Math.sign%": sign, "%Reflect.getPrototypeOf%": $ReflectGPO };
            if (getProto)
                try {
                    null.error;
                }
                catch (e) {
                    var errorProto = getProto(getProto(e));
                    INTRINSICS["%Error.prototype%"] = errorProto;
                }
            var doEval = function doEval(name) { var value; if ("%AsyncFunction%" === name)
                value = getEvalledConstructor("async function () {}");
            else if ("%GeneratorFunction%" === name)
                value = getEvalledConstructor("function* () {}");
            else if ("%AsyncGeneratorFunction%" === name)
                value = getEvalledConstructor("async function* () {}");
            else if ("%AsyncGenerator%" === name) {
                var fn = doEval("%AsyncGeneratorFunction%");
                fn && (value = fn.prototype);
            }
            else if ("%AsyncIteratorPrototype%" === name) {
                var gen = doEval("%AsyncGenerator%");
                gen && getProto && (value = getProto(gen.prototype));
            } return INTRINSICS[name] = value, value; }, LEGACY_ALIASES = { __proto__: null, "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"], "%ArrayPrototype%": ["Array", "prototype"], "%ArrayProto_entries%": ["Array", "prototype", "entries"], "%ArrayProto_forEach%": ["Array", "prototype", "forEach"], "%ArrayProto_keys%": ["Array", "prototype", "keys"], "%ArrayProto_values%": ["Array", "prototype", "values"], "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"], "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"], "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"], "%BooleanPrototype%": ["Boolean", "prototype"], "%DataViewPrototype%": ["DataView", "prototype"], "%DatePrototype%": ["Date", "prototype"], "%ErrorPrototype%": ["Error", "prototype"], "%EvalErrorPrototype%": ["EvalError", "prototype"], "%Float32ArrayPrototype%": ["Float32Array", "prototype"], "%Float64ArrayPrototype%": ["Float64Array", "prototype"], "%FunctionPrototype%": ["Function", "prototype"], "%Generator%": ["GeneratorFunction", "prototype"], "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"], "%Int8ArrayPrototype%": ["Int8Array", "prototype"], "%Int16ArrayPrototype%": ["Int16Array", "prototype"], "%Int32ArrayPrototype%": ["Int32Array", "prototype"], "%JSONParse%": ["JSON", "parse"], "%JSONStringify%": ["JSON", "stringify"], "%MapPrototype%": ["Map", "prototype"], "%NumberPrototype%": ["Number", "prototype"], "%ObjectPrototype%": ["Object", "prototype"], "%ObjProto_toString%": ["Object", "prototype", "toString"], "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"], "%PromisePrototype%": ["Promise", "prototype"], "%PromiseProto_then%": ["Promise", "prototype", "then"], "%Promise_all%": ["Promise", "all"], "%Promise_reject%": ["Promise", "reject"], "%Promise_resolve%": ["Promise", "resolve"], "%RangeErrorPrototype%": ["RangeError", "prototype"], "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"], "%RegExpPrototype%": ["RegExp", "prototype"], "%SetPrototype%": ["Set", "prototype"], "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"], "%StringPrototype%": ["String", "prototype"], "%SymbolPrototype%": ["Symbol", "prototype"], "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"], "%TypedArrayPrototype%": ["TypedArray", "prototype"], "%TypeErrorPrototype%": ["TypeError", "prototype"], "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"], "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"], "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"], "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"], "%URIErrorPrototype%": ["URIError", "prototype"], "%WeakMapPrototype%": ["WeakMap", "prototype"], "%WeakSetPrototype%": ["WeakSet", "prototype"] }, bind = __webpack_require__("./node_modules/function-bind/index.js"), hasOwn = __webpack_require__("./node_modules/hasown/index.js"), $concat = bind.call($call, Array.prototype.concat), $spliceApply = bind.call($apply, Array.prototype.splice), $replace = bind.call($call, String.prototype.replace), $strSlice = bind.call($call, String.prototype.slice), $exec = bind.call($call, RegExp.prototype.exec), rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, reEscapeChar = /\\(\\)?/g, stringToPath = function (string) { var first = $strSlice(string, 0, 1), last = $strSlice(string, -1); if ("%" === first && "%" !== last)
                throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`"); if ("%" === last && "%" !== first)
                throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`"); var result = []; return $replace(string, rePropName, function (match, number, quote, subString) { result[result.length] = quote ? $replace(subString, reEscapeChar, "$1") : number || match; }), result; }, getBaseIntrinsic = function (name, allowMissing) { var alias, intrinsicName = name; if (hasOwn(LEGACY_ALIASES, intrinsicName) && (intrinsicName = "%" + (alias = LEGACY_ALIASES[intrinsicName])[0] + "%"), hasOwn(INTRINSICS, intrinsicName)) {
                var value = INTRINSICS[intrinsicName];
                if (value === needsEval && (value = doEval(intrinsicName)), void 0 === value && !allowMissing)
                    throw new $TypeError("intrinsic " + name + " exists, but is not available. Please file an issue!");
                return { alias: alias, name: intrinsicName, value: value };
            } throw new $SyntaxError("intrinsic " + name + " does not exist!"); };
            module1.exports = function (name, allowMissing) { if ("string" != typeof name || 0 === name.length)
                throw new $TypeError("intrinsic name must be a non-empty string"); if (arguments.length > 1 && "boolean" != typeof allowMissing)
                throw new $TypeError('"allowMissing" argument must be a boolean'); if (null === $exec(/^%?[^%]*%?$/, name))
                throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name"); var parts = stringToPath(name), intrinsicBaseName = parts.length > 0 ? parts[0] : "", intrinsic = getBaseIntrinsic("%" + intrinsicBaseName + "%", allowMissing), intrinsicRealName = intrinsic.name, value = intrinsic.value, skipFurtherCaching = !1, alias = intrinsic.alias; alias && (intrinsicBaseName = alias[0], $spliceApply(parts, $concat([0, 1], alias))); for (var i = 1, isOwn = !0; i < parts.length; i += 1) {
                var part = parts[i], first = $strSlice(part, 0, 1), last = $strSlice(part, -1);
                if (('"' === first || "'" === first || "`" === first || '"' === last || "'" === last || "`" === last) && first !== last)
                    throw new $SyntaxError("property names with quotes must have matching quotes");
                if ("constructor" !== part && isOwn || (skipFurtherCaching = !0), intrinsicBaseName += "." + part, hasOwn(INTRINSICS, intrinsicRealName = "%" + intrinsicBaseName + "%"))
                    value = INTRINSICS[intrinsicRealName];
                else if (null != value) {
                    if (!(part in value)) {
                        if (!allowMissing)
                            throw new $TypeError("base intrinsic for " + name + " exists, but the property is not available.");
                        return;
                    }
                    if ($gOPD && i + 1 >= parts.length) {
                        var desc = $gOPD(value, part);
                        value = (isOwn = !!desc) && "get" in desc && !("originalValue" in desc.get) ? desc.get : value[part];
                    }
                    else
                        isOwn = hasOwn(value, part), value = value[part];
                    isOwn && !skipFurtherCaching && (INTRINSICS[intrinsicRealName] = value);
                }
            } return value; };
        }, "./node_modules/get-proto/Object.getPrototypeOf.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            module1.exports = __webpack_require__("./node_modules/es-object-atoms/index.js").getPrototypeOf || null;
        }, "./node_modules/get-proto/Reflect.getPrototypeOf.js": module1 => {
            "use strict";
            module1.exports = "undefined" != typeof Reflect && Reflect.getPrototypeOf || null;
        }, "./node_modules/get-proto/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var reflectGetProto = __webpack_require__("./node_modules/get-proto/Reflect.getPrototypeOf.js"), originalGetProto = __webpack_require__("./node_modules/get-proto/Object.getPrototypeOf.js"), getDunderProto = __webpack_require__("./node_modules/dunder-proto/get.js");
            module1.exports = reflectGetProto ? function (O) { return reflectGetProto(O); } : originalGetProto ? function (O) { if (!O || "object" != typeof O && "function" != typeof O)
                throw TypeError("getProto: not an object"); return originalGetProto(O); } : getDunderProto ? function (O) { return getDunderProto(O); } : null;
        }, "./node_modules/gopd/gOPD.js": module1 => {
            "use strict";
            module1.exports = Object.getOwnPropertyDescriptor;
        }, "./node_modules/gopd/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $gOPD = __webpack_require__("./node_modules/gopd/gOPD.js");
            if ($gOPD)
                try {
                    $gOPD([], "length");
                }
                catch (e) {
                    $gOPD = null;
                }
            module1.exports = $gOPD;
        }, "./node_modules/handlebars/dist/handlebars.js": function (module1) {
            module1.exports = function () {
                var modules = [function (module1, exports, __nested_webpack_require_2839__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_2839__(1).default;
                        exports.__esModule = !0;
                        var _handlebarsRuntime2 = _interopRequireDefault(__nested_webpack_require_2839__(2)), _handlebarsCompilerAst2 = _interopRequireDefault(__nested_webpack_require_2839__(84)), _handlebarsCompilerBase = __nested_webpack_require_2839__(85), _handlebarsCompilerCompiler = __nested_webpack_require_2839__(90), _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(__nested_webpack_require_2839__(91)), _handlebarsCompilerVisitor2 = _interopRequireDefault(__nested_webpack_require_2839__(88)), _handlebarsNoConflict2 = _interopRequireDefault(__nested_webpack_require_2839__(83)), _create = _handlebarsRuntime2.default.create;
                        function create() { var hb = _create(); return hb.compile = function (input, options1) { return _handlebarsCompilerCompiler.compile(input, options1, hb); }, hb.precompile = function (input, options1) { return _handlebarsCompilerCompiler.precompile(input, options1, hb); }, hb.AST = _handlebarsCompilerAst2.default, hb.Compiler = _handlebarsCompilerCompiler.Compiler, hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2.default, hb.Parser = _handlebarsCompilerBase.parser, hb.parse = _handlebarsCompilerBase.parse, hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing, hb; }
                        var inst = create();
                        inst.create = create, _handlebarsNoConflict2.default(inst), inst.Visitor = _handlebarsCompilerVisitor2.default, inst.default = inst, exports.default = inst, module1.exports = exports.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.default = function (obj) { return obj && obj.__esModule ? obj : { default: obj }; }, exports.__esModule = !0;
                    }, function (module1, exports, __nested_webpack_require_5051__) {
                        "use strict";
                        var _interopRequireWildcard = __nested_webpack_require_5051__(3).default, _interopRequireDefault = __nested_webpack_require_5051__(1).default;
                        exports.__esModule = !0;
                        var base = _interopRequireWildcard(__nested_webpack_require_5051__(4)), _handlebarsSafeString2 = _interopRequireDefault(__nested_webpack_require_5051__(77)), _handlebarsException2 = _interopRequireDefault(__nested_webpack_require_5051__(6)), Utils = _interopRequireWildcard(__nested_webpack_require_5051__(5)), runtime = _interopRequireWildcard(__nested_webpack_require_5051__(78)), _handlebarsNoConflict2 = _interopRequireDefault(__nested_webpack_require_5051__(83));
                        function create() { var hb = new base.HandlebarsEnvironment; return Utils.extend(hb, base), hb.SafeString = _handlebarsSafeString2.default, hb.Exception = _handlebarsException2.default, hb.Utils = Utils, hb.escapeExpression = Utils.escapeExpression, hb.VM = runtime, hb.template = function (spec) { return runtime.template(spec, hb); }, hb; }
                        var inst = create();
                        inst.create = create, _handlebarsNoConflict2.default(inst), inst.default = inst, exports.default = inst, module1.exports = exports.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.default = function (obj) { if (obj && obj.__esModule)
                            return obj; var newObj = {}; if (null != obj)
                            for (var key in obj)
                                Object.prototype.hasOwnProperty.call(obj, key) && (newObj[key] = obj[key]); return newObj.default = obj, newObj; }, exports.__esModule = !0;
                    }, function (module1, exports, __nested_webpack_require_7277__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_7277__(1).default;
                        exports.__esModule = !0, exports.HandlebarsEnvironment = HandlebarsEnvironment;
                        var _utils = __nested_webpack_require_7277__(5), _exception2 = _interopRequireDefault(__nested_webpack_require_7277__(6)), _helpers = __nested_webpack_require_7277__(10), _decorators = __nested_webpack_require_7277__(70), _logger2 = _interopRequireDefault(__nested_webpack_require_7277__(72)), _internalProtoAccess = __nested_webpack_require_7277__(73);
                        exports.VERSION = "4.7.8", exports.COMPILER_REVISION = 8, exports.LAST_COMPATIBLE_COMPILER_REVISION = 7, exports.REVISION_CHANGES = { 1: "<= 1.0.rc.2", 2: "== 1.0.0-rc.3", 3: "== 1.0.0-rc.4", 4: "== 1.x.x", 5: "== 2.0.0-alpha.x", 6: ">= 2.0.0-beta.1", 7: ">= 4.0.0 <4.3.0", 8: ">= 4.3.0" };
                        var objectType = "[object Object]";
                        function HandlebarsEnvironment(helpers, partials, decorators) { this.helpers = helpers || {}, this.partials = partials || {}, this.decorators = decorators || {}, _helpers.registerDefaultHelpers(this), _decorators.registerDefaultDecorators(this); }
                        HandlebarsEnvironment.prototype = { constructor: HandlebarsEnvironment, logger: _logger2.default, log: _logger2.default.log, registerHelper: function (name, fn) { if (_utils.toString.call(name) === objectType) {
                                if (fn)
                                    throw new _exception2.default("Arg not supported with multiple helpers");
                                _utils.extend(this.helpers, name);
                            }
                            else
                                this.helpers[name] = fn; }, unregisterHelper: function (name) { delete this.helpers[name]; }, registerPartial: function (name, partial) { if (_utils.toString.call(name) === objectType)
                                _utils.extend(this.partials, name);
                            else {
                                if (void 0 === partial)
                                    throw new _exception2.default('Attempting to register a partial called "' + name + '" as undefined');
                                this.partials[name] = partial;
                            } }, unregisterPartial: function (name) { delete this.partials[name]; }, registerDecorator: function (name, fn) { if (_utils.toString.call(name) === objectType) {
                                if (fn)
                                    throw new _exception2.default("Arg not supported with multiple decorators");
                                _utils.extend(this.decorators, name);
                            }
                            else
                                this.decorators[name] = fn; }, unregisterDecorator: function (name) { delete this.decorators[name]; }, resetLoggedPropertyAccesses: function () { _internalProtoAccess.resetLoggedProperties(); } }, exports.log = _logger2.default.log, exports.createFrame = _utils.createFrame, exports.logger = _logger2.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.extend = extend, exports.indexOf = function (array, value) { for (var i = 0, len = array.length; i < len; i++)
                            if (array[i] === value)
                                return i; return -1; }, exports.escapeExpression = function (string) { if ("string" != typeof string) {
                            if (string && string.toHTML)
                                return string.toHTML();
                            if (null == string)
                                return "";
                            if (!string)
                                return string + "";
                            string = "" + string;
                        } return possible.test(string) ? string.replace(badChars, escapeChar) : string; }, exports.isEmpty = function (value) { return !value && 0 !== value || !!isArray(value) && 0 === value.length; }, exports.createFrame = function (object) { var frame = extend({}, object); return frame._parent = object, frame; }, exports.blockParams = function (params, ids) { return params.path = ids, params; }, exports.appendContextPath = function (contextPath, id) { return (contextPath ? contextPath + "." : "") + id; };
                        var escape1 = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;", "=": "&#x3D;" }, badChars = /[&<>"'`=]/g, possible = /[&<>"'`=]/;
                        function escapeChar(chr) { return escape1[chr]; }
                        function extend(obj) { for (var i = 1; i < arguments.length; i++)
                            for (var key in arguments[i])
                                Object.prototype.hasOwnProperty.call(arguments[i], key) && (obj[key] = arguments[i][key]); return obj; }
                        var toString = Object.prototype.toString;
                        exports.toString = toString;
                        var isFunction = function (value) { return "function" == typeof value; };
                        isFunction(/x/) && (exports.isFunction = isFunction = function (value) { return "function" == typeof value && "[object Function]" === toString.call(value); }), exports.isFunction = isFunction;
                        var isArray = Array.isArray || function (value) { return !!value && "object" == typeof value && "[object Array]" === toString.call(value); };
                        exports.isArray = isArray;
                    }, function (module1, exports, __nested_webpack_require_13814__) {
                        "use strict";
                        var _Object$defineProperty = __nested_webpack_require_13814__(7).default;
                        exports.__esModule = !0;
                        var errorProps = ["description", "fileName", "lineNumber", "endLineNumber", "message", "name", "number", "stack"];
                        function Exception(message, node) { var loc = node && node.loc, line = void 0, endLineNumber = void 0, column = void 0, endColumn = void 0; loc && (line = loc.start.line, endLineNumber = loc.end.line, column = loc.start.column, endColumn = loc.end.column, message += " - " + line + ":" + column); for (var tmp = Error.prototype.constructor.call(this, message), idx = 0; idx < errorProps.length; idx++)
                            this[errorProps[idx]] = tmp[errorProps[idx]]; Error.captureStackTrace && Error.captureStackTrace(this, Exception); try {
                            loc && (this.lineNumber = line, this.endLineNumber = endLineNumber, _Object$defineProperty ? (Object.defineProperty(this, "column", { value: column, enumerable: !0 }), Object.defineProperty(this, "endColumn", { value: endColumn, enumerable: !0 })) : (this.column = column, this.endColumn = endColumn));
                        }
                        catch (nop) { } }
                        Exception.prototype = Error(), exports.default = Exception, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_15674__) { module1.exports = { default: __nested_webpack_require_15674__(8), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_15825__) { var $ = __nested_webpack_require_15825__(9); module1.exports = function (it, key, desc) { return $.setDesc(it, key, desc); }; }, function (module1, exports) { var $Object = Object; module1.exports = { create: $Object.create, getProto: $Object.getPrototypeOf, isEnum: ({}).propertyIsEnumerable, getDesc: $Object.getOwnPropertyDescriptor, setDesc: $Object.defineProperty, setDescs: $Object.defineProperties, getKeys: $Object.keys, getNames: $Object.getOwnPropertyNames, getSymbols: $Object.getOwnPropertySymbols, each: [].forEach }; }, function (module1, exports, __nested_webpack_require_16519__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_16519__(1).default;
                        exports.__esModule = !0, exports.registerDefaultHelpers = function (instance) { _helpersBlockHelperMissing2.default(instance), _helpersEach2.default(instance), _helpersHelperMissing2.default(instance), _helpersIf2.default(instance), _helpersLog2.default(instance), _helpersLookup2.default(instance), _helpersWith2.default(instance); }, exports.moveHelperToHooks = function (instance, helperName, keepHelper) { instance.helpers[helperName] && (instance.hooks[helperName] = instance.helpers[helperName], keepHelper || delete instance.helpers[helperName]); };
                        var _helpersBlockHelperMissing2 = _interopRequireDefault(__nested_webpack_require_16519__(11)), _helpersEach2 = _interopRequireDefault(__nested_webpack_require_16519__(12)), _helpersHelperMissing2 = _interopRequireDefault(__nested_webpack_require_16519__(65)), _helpersIf2 = _interopRequireDefault(__nested_webpack_require_16519__(66)), _helpersLog2 = _interopRequireDefault(__nested_webpack_require_16519__(67)), _helpersLookup2 = _interopRequireDefault(__nested_webpack_require_16519__(68)), _helpersWith2 = _interopRequireDefault(__nested_webpack_require_16519__(69));
                    }, function (module1, exports, __nested_webpack_require_18215__) {
                        "use strict";
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_18215__(5);
                        exports.default = function (instance) { instance.registerHelper("blockHelperMissing", function (context, options1) { var inverse = options1.inverse, fn = options1.fn; if (!0 === context)
                            return fn(this); if (!1 === context || null == context)
                            return inverse(this); if (_utils.isArray(context))
                            if (context.length > 0)
                                return options1.ids && (options1.ids = [options1.name]), instance.helpers.each(context, options1);
                            else
                                return inverse(this); if (options1.data && options1.ids) {
                            var data1 = _utils.createFrame(options1.data);
                            data1.contextPath = _utils.appendContextPath(options1.data.contextPath, options1.name), options1 = { data: data1 };
                        } return fn(context, options1); }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_19312__) {
                        "use strict";
                        var _Symbol = __nested_webpack_require_19312__(13).default, _Symbol$iterator = __nested_webpack_require_19312__(43).default, _getIterator = __nested_webpack_require_19312__(55).default, _Object$keys = __nested_webpack_require_19312__(60).default, _interopRequireDefault = __nested_webpack_require_19312__(1).default;
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_19312__(5), _exception2 = _interopRequireDefault(__nested_webpack_require_19312__(6));
                        exports.default = function (instance) { instance.registerHelper("each", function (context, options1) { if (!options1)
                            throw new _exception2.default("Must pass iterator to #each"); var priorKey, fn = options1.fn, inverse = options1.inverse, i = 0, ret = "", data1 = void 0, contextPath = void 0; function execIteration(field, index, last) { data1 && (data1.key = field, data1.index = index, data1.first = 0 === index, data1.last = !!last, contextPath && (data1.contextPath = contextPath + field)), ret += fn(context[field], { data: data1, blockParams: _utils.blockParams([context[field], field], [contextPath + field, null]) }); } if (options1.data && options1.ids && (contextPath = _utils.appendContextPath(options1.data.contextPath, options1.ids[0]) + "."), _utils.isFunction(context) && (context = context.call(this)), options1.data && (data1 = _utils.createFrame(options1.data)), context && "object" == typeof context)
                            if (_utils.isArray(context))
                                for (var j = context.length; i < j; i++)
                                    i in context && execIteration(i, i, i === context.length - 1);
                            else if ("function" == typeof _Symbol && context[_Symbol$iterator]) {
                                for (var newContext = [], iterator = _getIterator(context), it = iterator.next(); !it.done; it = iterator.next())
                                    newContext.push(it.value);
                                context = newContext;
                                for (var j = context.length; i < j; i++)
                                    execIteration(i, i, i === context.length - 1);
                            }
                            else
                                priorKey = void 0, _Object$keys(context).forEach(function (key) { void 0 !== priorKey && execIteration(priorKey, i - 1), priorKey = key, i++; }), void 0 !== priorKey && execIteration(priorKey, i - 1, !0); return 0 === i && (ret = inverse(this)), ret; }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_22468__) { module1.exports = { default: __nested_webpack_require_22468__(14), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_22621__) { __nested_webpack_require_22621__(15), __nested_webpack_require_22621__(42), module1.exports = __nested_webpack_require_22621__(21).Symbol; }, function (module1, exports, __nested_webpack_require_22800__) {
                        "use strict";
                        var $ = __nested_webpack_require_22800__(9), global1 = __nested_webpack_require_22800__(16), has = __nested_webpack_require_22800__(17), DESCRIPTORS = __nested_webpack_require_22800__(18), $export = __nested_webpack_require_22800__(20), redefine = __nested_webpack_require_22800__(24), $fails = __nested_webpack_require_22800__(19), shared = __nested_webpack_require_22800__(27), setToStringTag = __nested_webpack_require_22800__(28), uid = __nested_webpack_require_22800__(30), wks = __nested_webpack_require_22800__(29), keyOf = __nested_webpack_require_22800__(31), $names = __nested_webpack_require_22800__(36), enumKeys = __nested_webpack_require_22800__(37), isArray = __nested_webpack_require_22800__(38), anObject = __nested_webpack_require_22800__(39), toIObject = __nested_webpack_require_22800__(32), createDesc = __nested_webpack_require_22800__(26), getDesc = $.getDesc, setDesc = $.setDesc, _create = $.create, getNames = $names.get, $Symbol = global1.Symbol, $JSON = global1.JSON, _stringify = $JSON && $JSON.stringify, setter = !1, HIDDEN = wks("_hidden"), isEnum = $.isEnum, SymbolRegistry = shared("symbol-registry"), AllSymbols = shared("symbols"), useNative = "function" == typeof $Symbol, ObjectProto = Object.prototype, setSymbolDesc = DESCRIPTORS && $fails(function () { return 7 != _create(setDesc({}, "a", { get: function () { return setDesc(this, "a", { value: 7 }).a; } })).a; }) ? function (it, key, D) { var protoDesc = getDesc(ObjectProto, key); protoDesc && delete ObjectProto[key], setDesc(it, key, D), protoDesc && it !== ObjectProto && setDesc(ObjectProto, key, protoDesc); } : setDesc, wrap = function (tag) { var sym = AllSymbols[tag] = _create($Symbol.prototype); return sym._k = tag, DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, { configurable: !0, set: function (value) { has(this, HIDDEN) && has(this[HIDDEN], tag) && (this[HIDDEN][tag] = !1), setSymbolDesc(this, tag, createDesc(1, value)); } }), sym; }, isSymbol = function (it) { return "symbol" == typeof it; }, $defineProperty = function (it, key, D) { return D && has(AllSymbols, key) ? (D.enumerable ? (has(it, HIDDEN) && it[HIDDEN][key] && (it[HIDDEN][key] = !1), D = _create(D, { enumerable: createDesc(0, !1) })) : (has(it, HIDDEN) || setDesc(it, HIDDEN, createDesc(1, {})), it[HIDDEN][key] = !0), setSymbolDesc(it, key, D)) : setDesc(it, key, D); }, $defineProperties = function (it, P) { anObject(it); for (var key, keys = enumKeys(P = toIObject(P)), i = 0, l = keys.length; l > i;)
                            $defineProperty(it, key = keys[i++], P[key]); return it; }, $create = function (it, P) { return void 0 === P ? _create(it) : $defineProperties(_create(it), P); }, $propertyIsEnumerable = function (key) { var E = isEnum.call(this, key); return !(E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key]) || E; }, $getOwnPropertyDescriptor = function (it, key) { var D = getDesc(it = toIObject(it), key); return D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]) && (D.enumerable = !0), D; }, $getOwnPropertyNames = function (it) { for (var key, names = getNames(toIObject(it)), result = [], i = 0; names.length > i;)
                            has(AllSymbols, key = names[i++]) || key == HIDDEN || result.push(key); return result; }, $getOwnPropertySymbols = function (it) { for (var key, names = getNames(toIObject(it)), result = [], i = 0; names.length > i;)
                            has(AllSymbols, key = names[i++]) && result.push(AllSymbols[key]); return result; }, buggyJSON = $fails(function () { var S = $Symbol(); return "[null]" != _stringify([S]) || "{}" != _stringify({ a: S }) || "{}" != _stringify(Object(S)); });
                        useNative || (redefine(($Symbol = function () { if (isSymbol(this))
                            throw TypeError("Symbol is not a constructor"); return wrap(uid(arguments.length > 0 ? arguments[0] : void 0)); }).prototype, "toString", function () { return this._k; }), isSymbol = function (it) { return it instanceof $Symbol; }, $.create = $create, $.isEnum = $propertyIsEnumerable, $.getDesc = $getOwnPropertyDescriptor, $.setDesc = $defineProperty, $.setDescs = $defineProperties, $.getNames = $names.get = $getOwnPropertyNames, $.getSymbols = $getOwnPropertySymbols, DESCRIPTORS && !__nested_webpack_require_22800__(41) && redefine(ObjectProto, "propertyIsEnumerable", $propertyIsEnumerable, !0));
                        var symbolStatics = { for: function (key) { return has(SymbolRegistry, key += "") ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key); }, keyFor: function (key) { return keyOf(SymbolRegistry, key); }, useSetter: function () { setter = !0; }, useSimple: function () { setter = !1; } };
                        $.each.call("hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), function (it) { var sym = wks(it); symbolStatics[it] = useNative ? sym : wrap(sym); }), setter = !0, $export($export.G + $export.W, { Symbol: $Symbol }), $export($export.S, "Symbol", symbolStatics), $export($export.S + !useNative * $export.F, "Object", { create: $create, defineProperty: $defineProperty, defineProperties: $defineProperties, getOwnPropertyDescriptor: $getOwnPropertyDescriptor, getOwnPropertyNames: $getOwnPropertyNames, getOwnPropertySymbols: $getOwnPropertySymbols }), $JSON && $export($export.S + $export.F * (!useNative || buggyJSON), "JSON", { stringify: function (it) { if (!(void 0 === it || isSymbol(it))) {
                                for (var replacer, $replacer, args = [it], i = 1, $$ = arguments; $$.length > i;)
                                    args.push($$[i++]);
                                return "function" == typeof (replacer = args[1]) && ($replacer = replacer), ($replacer || !isArray(replacer)) && (replacer = function (key, value) { if ($replacer && (value = $replacer.call(this, key, value)), !isSymbol(value))
                                    return value; }), args[1] = replacer, _stringify.apply($JSON, args);
                            } } }), setToStringTag($Symbol, "Symbol"), setToStringTag(Math, "Math", !0), setToStringTag(global1.JSON, "JSON", !0);
                    }, function (module1, exports) { var global1 = module1.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(); "number" == typeof __g && (__g = global1); }, function (module1, exports) { var hasOwnProperty = {}.hasOwnProperty; module1.exports = function (it, key) { return hasOwnProperty.call(it, key); }; }, function (module1, exports, __nested_webpack_require_31367__) { module1.exports = !__nested_webpack_require_31367__(19)(function () { return 7 != Object.defineProperty({}, "a", { get: function () { return 7; } }).a; }); }, function (module1, exports) { module1.exports = function (exec) { try {
                        return !!exec();
                    }
                    catch (e) {
                        return !0;
                    } }; }, function (module1, exports, __nested_webpack_require_31793__) { var global1 = __nested_webpack_require_31793__(16), core = __nested_webpack_require_31793__(21), ctx = __nested_webpack_require_31793__(22), PROTOTYPE = "prototype", $export = function (type, name, source) { var key, own, out, IS_FORCED = type & $export.F, IS_GLOBAL = type & $export.G, IS_STATIC = type & $export.S, IS_PROTO = type & $export.P, IS_BIND = type & $export.B, IS_WRAP = type & $export.W, exports = IS_GLOBAL ? core : core[name] || (core[name] = {}), target = IS_GLOBAL ? global1 : IS_STATIC ? global1[name] : (global1[name] || {})[PROTOTYPE]; for (key in IS_GLOBAL && (source = name), source)
                        (own = !IS_FORCED && target && key in target) && key in exports || (out = own ? target[key] : source[key], exports[key] = IS_GLOBAL && "function" != typeof target[key] ? source[key] : IS_BIND && own ? ctx(out, global1) : IS_WRAP && target[key] == out ? function (C) { var F = function (param) { return this instanceof C ? new C(param) : C(param); }; return F[PROTOTYPE] = C[PROTOTYPE], F; }(out) : IS_PROTO && "function" == typeof out ? ctx(Function.call, out) : out, IS_PROTO && ((exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out)); }; $export.F = 1, $export.G = 2, $export.S = 4, $export.P = 8, $export.B = 16, $export.W = 32, module1.exports = $export; }, function (module1, exports) { var core = module1.exports = { version: "1.2.6" }; "number" == typeof __e && (__e = core); }, function (module1, exports, __nested_webpack_require_33828__) { var aFunction = __nested_webpack_require_33828__(23); module1.exports = function (fn, that, length) { if (aFunction(fn), void 0 === that)
                        return fn; switch (length) {
                        case 1: return function (a) { return fn.call(that, a); };
                        case 2: return function (a, b) { return fn.call(that, a, b); };
                        case 3: return function (a, b, c) { return fn.call(that, a, b, c); };
                    } return function () { return fn.apply(that, arguments); }; }; }, function (module1, exports) { module1.exports = function (it) { if ("function" != typeof it)
                        throw TypeError(it + " is not a function!"); return it; }; }, function (module1, exports, __nested_webpack_require_34611__) { module1.exports = __nested_webpack_require_34611__(25); }, function (module1, exports, __nested_webpack_require_34731__) { var $ = __nested_webpack_require_34731__(9), createDesc = __nested_webpack_require_34731__(26); module1.exports = __nested_webpack_require_34731__(18) ? function (object, key, value) { return $.setDesc(object, key, createDesc(1, value)); } : function (object, key, value) { return object[key] = value, object; }; }, function (module1, exports) { module1.exports = function (bitmap, value) { return { enumerable: !(1 & bitmap), configurable: !(2 & bitmap), writable: !(4 & bitmap), value: value }; }; }, function (module1, exports, __nested_webpack_require_35351__) { var global1 = __nested_webpack_require_35351__(16), SHARED = "__core-js_shared__", store = global1[SHARED] || (global1[SHARED] = {}); module1.exports = function (key) { return store[key] || (store[key] = {}); }; }, function (module1, exports, __nested_webpack_require_35636__) { var def = __nested_webpack_require_35636__(9).setDesc, has = __nested_webpack_require_35636__(17), TAG = __nested_webpack_require_35636__(29)("toStringTag"); module1.exports = function (it, tag, stat) { it && !has(it = stat ? it : it.prototype, TAG) && def(it, TAG, { configurable: !0, value: tag }); }; }, function (module1, exports, __nested_webpack_require_35990__) { var store = __nested_webpack_require_35990__(27)("wks"), uid = __nested_webpack_require_35990__(30), Symbol1 = __nested_webpack_require_35990__(16).Symbol; module1.exports = function (name) { return store[name] || (store[name] = Symbol1 && Symbol1[name] || (Symbol1 || uid)("Symbol." + name)); }; }, function (module1, exports) { var id = 0, px = Math.random(); module1.exports = function (key) { return "Symbol(".concat(void 0 === key ? "" : key, ")_", (++id + px).toString(36)); }; }, function (module1, exports, __nested_webpack_require_36561__) { var $ = __nested_webpack_require_36561__(9), toIObject = __nested_webpack_require_36561__(32); module1.exports = function (object, el) { for (var key, O = toIObject(object), keys = $.getKeys(O), length = keys.length, index = 0; length > index;)
                        if (O[key = keys[index++]] === el)
                            return key; }; }, function (module1, exports, __nested_webpack_require_36954__) { var IObject = __nested_webpack_require_36954__(33), defined = __nested_webpack_require_36954__(35); module1.exports = function (it) { return IObject(defined(it)); }; }, function (module1, exports, __nested_webpack_require_37255__) { var cof = __nested_webpack_require_37255__(34); module1.exports = Object("z").propertyIsEnumerable(0) ? Object : function (it) { return "String" == cof(it) ? it.split("") : Object(it); }; }, function (module1, exports) { var toString = {}.toString; module1.exports = function (it) { return toString.call(it).slice(8, -1); }; }, function (module1, exports) { module1.exports = function (it) { if (void 0 == it)
                        throw TypeError("Can't call method on  " + it); return it; }; }, function (module1, exports, __nested_webpack_require_37963__) { var toIObject = __nested_webpack_require_37963__(32), getNames = __nested_webpack_require_37963__(9).getNames, toString = {}.toString, windowNames = "object" == typeof window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], getWindowNames = function (it) { try {
                        return getNames(it);
                    }
                    catch (e) {
                        return windowNames.slice();
                    } }; module1.exports.get = function (it) { return windowNames && "[object Window]" == toString.call(it) ? getWindowNames(it) : getNames(toIObject(it)); }; }, function (module1, exports, __nested_webpack_require_38672__) { var $ = __nested_webpack_require_38672__(9); module1.exports = function (it) { var keys = $.getKeys(it), getSymbols = $.getSymbols; if (getSymbols)
                        for (var key, symbols = getSymbols(it), isEnum = $.isEnum, i = 0; symbols.length > i;)
                            isEnum.call(it, key = symbols[i++]) && keys.push(key); return keys; }; }, function (module1, exports, __nested_webpack_require_39157__) { var cof = __nested_webpack_require_39157__(34); module1.exports = Array.isArray || function (arg) { return "Array" == cof(arg); }; }, function (module1, exports, __nested_webpack_require_39383__) { var isObject = __nested_webpack_require_39383__(40); module1.exports = function (it) { if (!isObject(it))
                        throw TypeError(it + " is not an object!"); return it; }; }, function (module1, exports) { module1.exports = function (it) { return "object" == typeof it ? null !== it : "function" == typeof it; }; }, function (module1, exports) { module1.exports = !0; }, function (module1, exports) { }, function (module1, exports, __nested_webpack_require_39920__) { module1.exports = { default: __nested_webpack_require_39920__(44), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_40073__) { __nested_webpack_require_40073__(45), __nested_webpack_require_40073__(51), module1.exports = __nested_webpack_require_40073__(29)("iterator"); }, function (module1, exports, __nested_webpack_require_40257__) {
                        "use strict";
                        var $at = __nested_webpack_require_40257__(46)(!0);
                        __nested_webpack_require_40257__(48)(String, "String", function (iterated) { this._t = String(iterated), this._i = 0; }, function () { var point, O = this._t, index = this._i; return index >= O.length ? { value: void 0, done: !0 } : (point = $at(O, index), this._i += point.length, { value: point, done: !1 }); });
                    }, function (module1, exports, __nested_webpack_require_40872__) { var toInteger = __nested_webpack_require_40872__(47), defined = __nested_webpack_require_40872__(35); module1.exports = function (TO_STRING) { return function (that, pos) { var a, b, s = String(defined(that)), i = toInteger(pos), l = s.length; return i < 0 || i >= l ? TO_STRING ? "" : void 0 : (a = s.charCodeAt(i)) < 55296 || a > 56319 || i + 1 === l || (b = s.charCodeAt(i + 1)) < 56320 || b > 57343 ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 55296 << 10) + (b - 56320) + 65536; }; }; }, function (module1, exports) { var ceil = Math.ceil, floor = Math.floor; module1.exports = function (it) { return isNaN(it *= 1) ? 0 : (it > 0 ? floor : ceil)(it); }; }, function (module1, exports, __nested_webpack_require_41800__) {
                        "use strict";
                        var LIBRARY = __nested_webpack_require_41800__(41), $export = __nested_webpack_require_41800__(20), redefine = __nested_webpack_require_41800__(24), hide = __nested_webpack_require_41800__(25), has = __nested_webpack_require_41800__(17), Iterators = __nested_webpack_require_41800__(49), $iterCreate = __nested_webpack_require_41800__(50), setToStringTag = __nested_webpack_require_41800__(28), getProto = __nested_webpack_require_41800__(9).getProto, ITERATOR = __nested_webpack_require_41800__(29)("iterator"), BUGGY = !([].keys && "next" in [].keys()), FF_ITERATOR = "@@iterator", KEYS = "keys", VALUES = "values", returnThis = function () { return this; };
                        module1.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) { $iterCreate(Constructor, NAME, next); var methods, key, getMethod = function (kind) { if (!BUGGY && kind in proto)
                            return proto[kind]; switch (kind) {
                            case KEYS:
                            case VALUES: return function () { return new Constructor(this, kind); };
                        } return function () { return new Constructor(this, kind); }; }, TAG = NAME + " Iterator", DEF_VALUES = DEFAULT == VALUES, VALUES_BUG = !1, proto = Base.prototype, $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT], $default = $native || getMethod(DEFAULT); if ($native) {
                            var IteratorPrototype = getProto($default.call(new Base));
                            setToStringTag(IteratorPrototype, TAG, !0), !LIBRARY && has(proto, FF_ITERATOR) && hide(IteratorPrototype, ITERATOR, returnThis), DEF_VALUES && $native.name !== VALUES && (VALUES_BUG = !0, $default = function () { return $native.call(this); });
                        } if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR]) && hide(proto, ITERATOR, $default), Iterators[NAME] = $default, Iterators[TAG] = returnThis, DEFAULT)
                            if (methods = { values: DEF_VALUES ? $default : getMethod(VALUES), keys: IS_SET ? $default : getMethod(KEYS), entries: DEF_VALUES ? getMethod("entries") : $default }, FORCED)
                                for (key in methods)
                                    key in proto || redefine(proto, key, methods[key]);
                            else
                                $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods); return methods; };
                    }, function (module1, exports) { module1.exports = {}; }, function (module1, exports, __nested_webpack_require_44627__) {
                        "use strict";
                        var $ = __nested_webpack_require_44627__(9), descriptor = __nested_webpack_require_44627__(26), setToStringTag = __nested_webpack_require_44627__(28), IteratorPrototype = {};
                        __nested_webpack_require_44627__(25)(IteratorPrototype, __nested_webpack_require_44627__(29)("iterator"), function () { return this; }), module1.exports = function (Constructor, NAME, next) { Constructor.prototype = $.create(IteratorPrototype, { next: descriptor(1, next) }), setToStringTag(Constructor, NAME + " Iterator"); };
                    }, function (module1, exports, __nested_webpack_require_45240__) { __nested_webpack_require_45240__(52); var Iterators = __nested_webpack_require_45240__(49); Iterators.NodeList = Iterators.HTMLCollection = Iterators.Array; }, function (module1, exports, __nested_webpack_require_45451__) {
                        "use strict";
                        var addToUnscopables = __nested_webpack_require_45451__(53), step = __nested_webpack_require_45451__(54), Iterators = __nested_webpack_require_45451__(49), toIObject = __nested_webpack_require_45451__(32);
                        module1.exports = __nested_webpack_require_45451__(48)(Array, "Array", function (iterated, kind) { this._t = toIObject(iterated), this._i = 0, this._k = kind; }, function () { var O = this._t, kind = this._k, index = this._i++; return !O || index >= O.length ? (this._t = void 0, step(1)) : "keys" == kind ? step(0, index) : "values" == kind ? step(0, O[index]) : step(0, [index, O[index]]); }, "values"), Iterators.Arguments = Iterators.Array, addToUnscopables("keys"), addToUnscopables("values"), addToUnscopables("entries");
                    }, function (module1, exports) { module1.exports = function () { }; }, function (module1, exports) { module1.exports = function (done, value) { return { value: value, done: !!done }; }; }, function (module1, exports, __nested_webpack_require_46923__) { module1.exports = { default: __nested_webpack_require_46923__(56), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_47076__) { __nested_webpack_require_47076__(51), __nested_webpack_require_47076__(45), module1.exports = __nested_webpack_require_47076__(57); }, function (module1, exports, __nested_webpack_require_47248__) { var anObject = __nested_webpack_require_47248__(39), get = __nested_webpack_require_47248__(58); module1.exports = __nested_webpack_require_47248__(21).getIterator = function (it) { var iterFn = get(it); if ("function" != typeof iterFn)
                        throw TypeError(it + " is not iterable!"); return anObject(iterFn.call(it)); }; }, function (module1, exports, __nested_webpack_require_47619__) { var classof = __nested_webpack_require_47619__(59), ITERATOR = __nested_webpack_require_47619__(29)("iterator"), Iterators = __nested_webpack_require_47619__(49); module1.exports = __nested_webpack_require_47619__(21).getIteratorMethod = function (it) { if (void 0 != it)
                        return it[ITERATOR] || it["@@iterator"] || Iterators[classof(it)]; }; }, function (module1, exports, __nested_webpack_require_48011__) { var cof = __nested_webpack_require_48011__(34), TAG = __nested_webpack_require_48011__(29)("toStringTag"), ARG = "Arguments" == cof(function () { return arguments; }()); module1.exports = function (it) { var O, T, B; return void 0 === it ? "Undefined" : null === it ? "Null" : "string" == typeof (T = (O = Object(it))[TAG]) ? T : ARG ? cof(O) : "Object" == (B = cof(O)) && "function" == typeof O.callee ? "Arguments" : B; }; }, function (module1, exports, __nested_webpack_require_48679__) { module1.exports = { default: __nested_webpack_require_48679__(61), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_48832__) { __nested_webpack_require_48832__(62), module1.exports = __nested_webpack_require_48832__(21).Object.keys; }, function (module1, exports, __nested_webpack_require_48990__) { var toObject = __nested_webpack_require_48990__(63); __nested_webpack_require_48990__(64)("keys", function ($keys) { return function (it) { return $keys(toObject(it)); }; }); }, function (module1, exports, __nested_webpack_require_49261__) { var defined = __nested_webpack_require_49261__(35); module1.exports = function (it) { return Object(defined(it)); }; }, function (module1, exports, __nested_webpack_require_49475__) { var $export = __nested_webpack_require_49475__(20), core = __nested_webpack_require_49475__(21), fails = __nested_webpack_require_49475__(19); module1.exports = function (KEY, exec) { var fn = (core.Object || {})[KEY] || Object[KEY], exp = {}; exp[KEY] = exec(fn), $export($export.S + $export.F * fails(function () { fn(1); }), "Object", exp); }; }, function (module1, exports, __nested_webpack_require_49943__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_49943__(1).default;
                        exports.__esModule = !0;
                        var _exception2 = _interopRequireDefault(__nested_webpack_require_49943__(6));
                        exports.default = function (instance) { instance.registerHelper("helperMissing", function () { if (1 != arguments.length)
                            throw new _exception2.default('Missing helper: "' + arguments[arguments.length - 1].name + '"'); }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_50706__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_50706__(1).default;
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_50706__(5), _exception2 = _interopRequireDefault(__nested_webpack_require_50706__(6));
                        exports.default = function (instance) { instance.registerHelper("if", function (conditional, options1) { if (2 != arguments.length)
                            throw new _exception2.default("#if requires exactly one argument"); return (_utils.isFunction(conditional) && (conditional = conditional.call(this)), !options1.hash.includeZero && !conditional || _utils.isEmpty(conditional)) ? options1.inverse(this) : options1.fn(this); }), instance.registerHelper("unless", function (conditional, options1) { if (2 != arguments.length)
                            throw new _exception2.default("#unless requires exactly one argument"); return instance.helpers.if.call(this, conditional, { fn: options1.inverse, inverse: options1.fn, hash: options1.hash }); }); }, module1.exports = exports.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.default = function (instance) { instance.registerHelper("log", function () { for (var args = [void 0], options1 = arguments[arguments.length - 1], i = 0; i < arguments.length - 1; i++)
                            args.push(arguments[i]); var level = 1; null != options1.hash.level ? level = options1.hash.level : options1.data && null != options1.data.level && (level = options1.data.level), args[0] = level, instance.log.apply(instance, args); }); }, module1.exports = exports.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.default = function (instance) { instance.registerHelper("lookup", function (obj, field, options1) { return obj ? options1.lookupProperty(obj, field) : obj; }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_53352__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_53352__(1).default;
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_53352__(5), _exception2 = _interopRequireDefault(__nested_webpack_require_53352__(6));
                        exports.default = function (instance) { instance.registerHelper("with", function (context, options1) { if (2 != arguments.length)
                            throw new _exception2.default("#with requires exactly one argument"); _utils.isFunction(context) && (context = context.call(this)); var fn = options1.fn; if (_utils.isEmpty(context))
                            return options1.inverse(this); var data1 = options1.data; return options1.data && options1.ids && ((data1 = _utils.createFrame(options1.data)).contextPath = _utils.appendContextPath(options1.data.contextPath, options1.ids[0])), fn(context, { data: data1, blockParams: _utils.blockParams([context], [data1 && data1.contextPath]) }); }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_54534__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_54534__(1).default;
                        exports.__esModule = !0, exports.registerDefaultDecorators = function (instance) { _decoratorsInline2.default(instance); };
                        var _decoratorsInline2 = _interopRequireDefault(__nested_webpack_require_54534__(71));
                    }, function (module1, exports, __nested_webpack_require_55002__) {
                        "use strict";
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_55002__(5);
                        exports.default = function (instance) { instance.registerDecorator("inline", function (fn, props, container, options1) { var ret = fn; return props.partials || (props.partials = {}, ret = function (context, options1) { var original = container.partials; container.partials = _utils.extend({}, original, props.partials); var ret = fn(context, options1); return container.partials = original, ret; }), props.partials[options1.args[0]] = options1.fn, ret; }); }, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_55827__) {
                        "use strict";
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_55827__(5), logger = { methodMap: ["debug", "info", "warn", "error"], level: "info", lookupLevel: function (level) { if ("string" == typeof level) {
                                var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());
                                level = levelMap >= 0 ? levelMap : parseInt(level, 10);
                            } return level; }, log: function (level) { if (level = logger.lookupLevel(level), "undefined" != typeof console && logger.lookupLevel(logger.level) <= level) {
                                var method = logger.methodMap[level];
                                console[method] || (method = "log");
                                for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)
                                    message[_key - 1] = arguments[_key];
                                console[method].apply(console, message);
                            } } };
                        exports.default = logger, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_57154__) {
                        "use strict";
                        var _Object$create = __nested_webpack_require_57154__(74).default, _Object$keys = __nested_webpack_require_57154__(60).default, _interopRequireDefault = __nested_webpack_require_57154__(1).default;
                        exports.__esModule = !0, exports.createProtoAccessControl = function (runtimeOptions) { var defaultMethodWhiteList = _Object$create(null); defaultMethodWhiteList.constructor = !1, defaultMethodWhiteList.__defineGetter__ = !1, defaultMethodWhiteList.__defineSetter__ = !1, defaultMethodWhiteList.__lookupGetter__ = !1; var defaultPropertyWhiteList = _Object$create(null); return defaultPropertyWhiteList.__proto__ = !1, { properties: { whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties), defaultValue: runtimeOptions.allowProtoPropertiesByDefault }, methods: { whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods), defaultValue: runtimeOptions.allowProtoMethodsByDefault } }; }, exports.resultIsAllowed = function (result, protoAccessControl, propertyName) { return "function" == typeof result ? checkWhiteList(protoAccessControl.methods, propertyName) : checkWhiteList(protoAccessControl.properties, propertyName); }, exports.resetLoggedProperties = function () { _Object$keys(loggedProperties).forEach(function (propertyName) { delete loggedProperties[propertyName]; }); };
                        var _createNewLookupObject = __nested_webpack_require_57154__(76), _logger2 = _interopRequireDefault(__nested_webpack_require_57154__(72)), loggedProperties = _Object$create(null);
                        function checkWhiteList(protoAccessControlForType, propertyName) {
                            var propertyName1;
                            return void 0 !== protoAccessControlForType.whitelist[propertyName] ? !0 === protoAccessControlForType.whitelist[propertyName] : void 0 !== protoAccessControlForType.defaultValue ? protoAccessControlForType.defaultValue : (!0 !== loggedProperties[propertyName1 = propertyName] && (loggedProperties[propertyName1] = !0, _logger2.default.log("error", 'Handlebars: Access has been denied to resolve the property "' + propertyName1 + `" because it is not an "own property" of its parent.
You can add a runtime option to disable the check or this warning:
See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`)), !1);
                        }
                    }, function (module1, exports, __nested_webpack_require_60104__) { module1.exports = { default: __nested_webpack_require_60104__(75), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_60257__) { var $ = __nested_webpack_require_60257__(9); module1.exports = function (P, D) { return $.create(P, D); }; }, function (module1, exports, __nested_webpack_require_60438__) {
                        "use strict";
                        var _Object$create = __nested_webpack_require_60438__(74).default;
                        exports.__esModule = !0, exports.createNewLookupObject = function () { for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++)
                            sources[_key] = arguments[_key]; return _utils.extend.apply(void 0, [_Object$create(null)].concat(sources)); };
                        var _utils = __nested_webpack_require_60438__(5);
                    }, function (module1, exports) {
                        "use strict";
                        function SafeString(string) { this.string = string; }
                        exports.__esModule = !0, SafeString.prototype.toString = SafeString.prototype.toHTML = function () { return "" + this.string; }, exports.default = SafeString, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_61662__) {
                        "use strict";
                        var _Object$seal = __nested_webpack_require_61662__(79).default, _Object$keys = __nested_webpack_require_61662__(60).default, _interopRequireWildcard = __nested_webpack_require_61662__(3).default, _interopRequireDefault = __nested_webpack_require_61662__(1).default;
                        exports.__esModule = !0, exports.checkRevision = function (compilerInfo) { var compilerRevision = compilerInfo && compilerInfo[0] || 1, currentRevision = _base.COMPILER_REVISION; if (!(compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION) || !(compilerRevision <= _base.COMPILER_REVISION))
                            if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {
                                var runtimeVersions = _base.REVISION_CHANGES[currentRevision], compilerVersions = _base.REVISION_CHANGES[compilerRevision];
                                throw new _exception2.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + runtimeVersions + ") or downgrade your runtime to an older version (" + compilerVersions + ").");
                            }
                            else
                                throw new _exception2.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + compilerInfo[1] + ")."); }, exports.template = function (templateSpec, env) {
                            if (!env)
                                throw new _exception2.default("No environment passed to template");
                            if (!templateSpec || !templateSpec.main)
                                throw new _exception2.default("Unknown template object: " + typeof templateSpec);
                            templateSpec.main.decorator = templateSpec.main_d, env.VM.checkRevision(templateSpec.compiler);
                            var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && 7 === templateSpec.compiler[0], container = { strict: function (obj, name, loc) { if (!obj || !(name in obj))
                                    throw new _exception2.default('"' + name + '" not defined in ' + obj, { loc: loc }); return container.lookupProperty(obj, name); }, lookupProperty: function (parent, propertyName) { var result = parent[propertyName]; if (null == result || Object.prototype.hasOwnProperty.call(parent, propertyName) || _internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName))
                                    return result; }, lookup: function (depths, name) { for (var len = depths.length, i = 0; i < len; i++)
                                    if (null != (depths[i] && container.lookupProperty(depths[i], name)))
                                        return depths[i][name]; }, lambda: function (current, context) { return "function" == typeof current ? current.call(context) : current; }, escapeExpression: Utils.escapeExpression, invokePartial: function (partial, context, options1) {
                                    options1.hash && (context = Utils.extend({}, context, options1.hash), options1.ids && (options1.ids[0] = !0)), partial = env.VM.resolvePartial.call(this, partial, context, options1);
                                    var extendedOptions = Utils.extend({}, options1, { hooks: this.hooks, protoAccessControl: this.protoAccessControl }), result = env.VM.invokePartial.call(this, partial, context, extendedOptions);
                                    if (null == result && env.compile && (options1.partials[options1.name] = env.compile(partial, templateSpec.compilerOptions, env), result = options1.partials[options1.name](context, extendedOptions)), null != result) {
                                        if (options1.indent) {
                                            for (var lines = result.split(`
`), i = 0, l = lines.length; i < l && (lines[i] || i + 1 !== l); i++)
                                                lines[i] = options1.indent + lines[i];
                                            result = lines.join(`
`);
                                        }
                                        return result;
                                    }
                                    throw new _exception2.default("The partial " + options1.name + " could not be compiled when running in runtime-only mode");
                                }, fn: function (i) { var ret = templateSpec[i]; return ret.decorator = templateSpec[i + "_d"], ret; }, programs: [], program: function (i, data1, declaredBlockParams, blockParams, depths) { var programWrapper = this.programs[i], fn = this.fn(i); return data1 || depths || blockParams || declaredBlockParams ? programWrapper = wrapProgram(this, i, fn, data1, declaredBlockParams, blockParams, depths) : programWrapper || (programWrapper = this.programs[i] = wrapProgram(this, i, fn)), programWrapper; }, data: function (value, depth) { for (; value && depth--;)
                                    value = value._parent; return value; }, mergeIfNeeded: function (param, common) { var obj = param || common; return param && common && param !== common && (obj = Utils.extend({}, common, param)), obj; }, nullContext: _Object$seal({}), noop: env.VM.noop, compilerInfo: templateSpec.compiler };
                            function ret(context) { var context1, data1, options1 = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], data2 = options1.data; ret._setup(options1), !options1.partial && templateSpec.useData && (context1 = context, (data1 = data2) && "root" in data1 || ((data1 = data1 ? _base.createFrame(data1) : {}).root = context1), data2 = data1); var depths = void 0, blockParams = templateSpec.useBlockParams ? [] : void 0; function main(context) { return "" + templateSpec.main(container, context, container.helpers, container.partials, data2, blockParams, depths); } return templateSpec.useDepths && (depths = options1.depths ? context != options1.depths[0] ? [context].concat(options1.depths) : options1.depths : [context]), (main = executeDecorators(templateSpec.main, main, container, options1.depths || [], data2, blockParams))(context, options1); }
                            return ret.isTop = !0, ret._setup = function (options1) { if (options1.partial)
                                container.protoAccessControl = options1.protoAccessControl, container.helpers = options1.helpers, container.partials = options1.partials, container.decorators = options1.decorators, container.hooks = options1.hooks;
                            else {
                                var mergedHelpers, container1, mergedHelpers1 = Utils.extend({}, env.helpers, options1.helpers);
                                mergedHelpers = mergedHelpers1, container1 = container, _Object$keys(mergedHelpers).forEach(function (helperName) { var helper, lookupProperty, helper1 = mergedHelpers[helperName]; mergedHelpers[helperName] = (helper = helper1, lookupProperty = container1.lookupProperty, _internalWrapHelper.wrapHelper(helper, function (options1) { return Utils.extend({ lookupProperty: lookupProperty }, options1); })); }), container.helpers = mergedHelpers1, templateSpec.usePartial && (container.partials = container.mergeIfNeeded(options1.partials, env.partials)), (templateSpec.usePartial || templateSpec.useDecorators) && (container.decorators = Utils.extend({}, env.decorators, options1.decorators)), container.hooks = {}, container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options1);
                                var keepHelperInHelpers = options1.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;
                                _helpers.moveHelperToHooks(container, "helperMissing", keepHelperInHelpers), _helpers.moveHelperToHooks(container, "blockHelperMissing", keepHelperInHelpers);
                            } }, ret._child = function (i, data1, blockParams, depths) { if (templateSpec.useBlockParams && !blockParams)
                                throw new _exception2.default("must pass block params"); if (templateSpec.useDepths && !depths)
                                throw new _exception2.default("must pass parent depths"); return wrapProgram(container, i, templateSpec[i], data1, 0, blockParams, depths); }, ret;
                        }, exports.wrapProgram = wrapProgram, exports.resolvePartial = function (partial, context, options1) { return partial ? partial.call || options1.name || (options1.name = partial, partial = options1.partials[partial]) : partial = "@partial-block" === options1.name ? options1.data["partial-block"] : options1.partials[options1.name], partial; }, exports.invokePartial = function (partial, context, options1) { var fn, currentPartialBlock = options1.data && options1.data["partial-block"]; options1.partial = !0, options1.ids && (options1.data.contextPath = options1.ids[0] || options1.data.contextPath); var partialBlock = void 0; if (options1.fn && options1.fn !== noop && (options1.data = _base.createFrame(options1.data), fn = options1.fn, partialBlock = options1.data["partial-block"] = function (context) { var options1 = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1]; return options1.data = _base.createFrame(options1.data), options1.data["partial-block"] = currentPartialBlock, fn(context, options1); }, fn.partials && (options1.partials = Utils.extend({}, options1.partials, fn.partials))), void 0 === partial && partialBlock && (partial = partialBlock), void 0 === partial)
                            throw new _exception2.default("The partial " + options1.name + " could not be found"); if (partial instanceof Function)
                            return partial(context, options1); }, exports.noop = noop;
                        var Utils = _interopRequireWildcard(__nested_webpack_require_61662__(5)), _exception2 = _interopRequireDefault(__nested_webpack_require_61662__(6)), _base = __nested_webpack_require_61662__(4), _helpers = __nested_webpack_require_61662__(10), _internalWrapHelper = __nested_webpack_require_61662__(82), _internalProtoAccess = __nested_webpack_require_61662__(73);
                        function wrapProgram(container, i, fn, data1, declaredBlockParams, blockParams, depths) { function prog(context) { var options1 = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], currentDepths = depths; return depths && context != depths[0] && (context !== container.nullContext || null !== depths[0]) && (currentDepths = [context].concat(depths)), fn(container, context, container.helpers, container.partials, options1.data || data1, blockParams && [options1.blockParams].concat(blockParams), currentDepths); } return (prog = executeDecorators(fn, prog, container, depths, data1, blockParams)).program = i, prog.depth = depths ? depths.length : 0, prog.blockParams = declaredBlockParams || 0, prog; }
                        function noop() { return ""; }
                        function executeDecorators(fn, prog, container, depths, data1, blockParams) { if (fn.decorator) {
                            var props = {};
                            prog = fn.decorator(prog, props, container, depths && depths[0], data1, blockParams, depths), Utils.extend(prog, props);
                        } return prog; }
                    }, function (module1, exports, __nested_webpack_require_74814__) { module1.exports = { default: __nested_webpack_require_74814__(80), __esModule: !0 }; }, function (module1, exports, __nested_webpack_require_74967__) { __nested_webpack_require_74967__(81), module1.exports = __nested_webpack_require_74967__(21).Object.seal; }, function (module1, exports, __nested_webpack_require_75125__) { var isObject = __nested_webpack_require_75125__(40); __nested_webpack_require_75125__(64)("seal", function ($seal) { return function (it) { return $seal && isObject(it) ? $seal(it) : it; }; }); }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.wrapHelper = function (helper, transformOptionsFn) { return "function" != typeof helper ? helper : function () { var options1 = arguments[arguments.length - 1]; return arguments[arguments.length - 1] = transformOptionsFn(options1), helper.apply(this, arguments); }; };
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.default = function (Handlebars) { "object" != typeof globalThis && (Object.prototype.__defineGetter__("__magic__", function () { return this; }), __magic__.globalThis = __magic__, delete Object.prototype.__magic__); var $Handlebars = globalThis.Handlebars; Handlebars.noConflict = function () { return globalThis.Handlebars === Handlebars && (globalThis.Handlebars = $Handlebars), Handlebars; }; }, module1.exports = exports.default;
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0;
                        var AST = { helpers: { helperExpression: function (node) { return "SubExpression" === node.type || ("MustacheStatement" === node.type || "BlockStatement" === node.type) && !!(node.params && node.params.length || node.hash); }, scopedId: function (path) { return /^\.|this\b/.test(path.original); }, simpleId: function (path) { return 1 === path.parts.length && !AST.helpers.scopedId(path) && !path.depth; } } };
                        exports.default = AST, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_78078__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_78078__(1).default, _interopRequireWildcard = __nested_webpack_require_78078__(3).default;
                        exports.__esModule = !0, exports.parseWithoutProcessing = parseWithoutProcessing, exports.parse = function (input, options1) { var ast = parseWithoutProcessing(input, options1); return new _whitespaceControl2.default(options1).accept(ast); };
                        var _parser2 = _interopRequireDefault(__nested_webpack_require_78078__(86)), _whitespaceControl2 = _interopRequireDefault(__nested_webpack_require_78078__(87)), Helpers = _interopRequireWildcard(__nested_webpack_require_78078__(89)), _utils = __nested_webpack_require_78078__(5);
                        exports.parser = _parser2.default;
                        var yy = {};
                        function parseWithoutProcessing(input, options1) { return "Program" === input.type ? input : (_parser2.default.yy = yy, yy.locInfo = function (locInfo) { return new yy.SourceLocation(options1 && options1.srcName, locInfo); }, _parser2.default.parse(input)); }
                        _utils.extend(yy, Helpers);
                    }, function (module1, exports) {
                        "use strict";
                        exports.__esModule = !0, exports.default = function () {
                            var lexer, parser = { trace: function () { }, yy: {}, symbols_: { error: 2, root: 3, program: 4, EOF: 5, program_repetition0: 6, statement: 7, mustache: 8, block: 9, rawBlock: 10, partial: 11, partialBlock: 12, content: 13, COMMENT: 14, CONTENT: 15, openRawBlock: 16, rawBlock_repetition0: 17, END_RAW_BLOCK: 18, OPEN_RAW_BLOCK: 19, helperName: 20, openRawBlock_repetition0: 21, openRawBlock_option0: 22, CLOSE_RAW_BLOCK: 23, openBlock: 24, block_option0: 25, closeBlock: 26, openInverse: 27, block_option1: 28, OPEN_BLOCK: 29, openBlock_repetition0: 30, openBlock_option0: 31, openBlock_option1: 32, CLOSE: 33, OPEN_INVERSE: 34, openInverse_repetition0: 35, openInverse_option0: 36, openInverse_option1: 37, openInverseChain: 38, OPEN_INVERSE_CHAIN: 39, openInverseChain_repetition0: 40, openInverseChain_option0: 41, openInverseChain_option1: 42, inverseAndProgram: 43, INVERSE: 44, inverseChain: 45, inverseChain_option0: 46, OPEN_ENDBLOCK: 47, OPEN: 48, mustache_repetition0: 49, mustache_option0: 50, OPEN_UNESCAPED: 51, mustache_repetition1: 52, mustache_option1: 53, CLOSE_UNESCAPED: 54, OPEN_PARTIAL: 55, partialName: 56, partial_repetition0: 57, partial_option0: 58, openPartialBlock: 59, OPEN_PARTIAL_BLOCK: 60, openPartialBlock_repetition0: 61, openPartialBlock_option0: 62, param: 63, sexpr: 64, OPEN_SEXPR: 65, sexpr_repetition0: 66, sexpr_option0: 67, CLOSE_SEXPR: 68, hash: 69, hash_repetition_plus0: 70, hashSegment: 71, ID: 72, EQUALS: 73, blockParams: 74, OPEN_BLOCK_PARAMS: 75, blockParams_repetition_plus0: 76, CLOSE_BLOCK_PARAMS: 77, path: 78, dataName: 79, STRING: 80, NUMBER: 81, BOOLEAN: 82, UNDEFINED: 83, NULL: 84, DATA: 85, pathSegments: 86, SEP: 87, $accept: 0, $end: 1 }, terminals_: { 2: "error", 5: "EOF", 14: "COMMENT", 15: "CONTENT", 18: "END_RAW_BLOCK", 19: "OPEN_RAW_BLOCK", 23: "CLOSE_RAW_BLOCK", 29: "OPEN_BLOCK", 33: "CLOSE", 34: "OPEN_INVERSE", 39: "OPEN_INVERSE_CHAIN", 44: "INVERSE", 47: "OPEN_ENDBLOCK", 48: "OPEN", 51: "OPEN_UNESCAPED", 54: "CLOSE_UNESCAPED", 55: "OPEN_PARTIAL", 60: "OPEN_PARTIAL_BLOCK", 65: "OPEN_SEXPR", 68: "CLOSE_SEXPR", 72: "ID", 73: "EQUALS", 75: "OPEN_BLOCK_PARAMS", 77: "CLOSE_BLOCK_PARAMS", 80: "STRING", 81: "NUMBER", 82: "BOOLEAN", 83: "UNDEFINED", 84: "NULL", 85: "DATA", 87: "SEP" }, productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]], performAction: function (yytext, yyleng, yylineno, yy, yystate, $$, _$) { var $0 = $$.length - 1; switch (yystate) {
                                    case 1: return $$[$0 - 1];
                                    case 2:
                                        this.$ = yy.prepareProgram($$[$0]);
                                        break;
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                    case 20:
                                    case 27:
                                    case 28:
                                    case 33:
                                    case 34:
                                    case 40:
                                    case 41:
                                        this.$ = $$[$0];
                                        break;
                                    case 9:
                                        this.$ = { type: "CommentStatement", value: yy.stripComment($$[$0]), strip: yy.stripFlags($$[$0], $$[$0]), loc: yy.locInfo(this._$) };
                                        break;
                                    case 10:
                                        this.$ = { type: "ContentStatement", original: $$[$0], value: $$[$0], loc: yy.locInfo(this._$) };
                                        break;
                                    case 11:
                                        this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
                                        break;
                                    case 12:
                                        this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };
                                        break;
                                    case 13:
                                        this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], !1, this._$);
                                        break;
                                    case 14:
                                        this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], !0, this._$);
                                        break;
                                    case 15:
                                        this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
                                        break;
                                    case 16:
                                    case 17:
                                        this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };
                                        break;
                                    case 18:
                                        this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };
                                        break;
                                    case 19:
                                        var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], !1, this._$), program = yy.prepareProgram([inverse], $$[$0 - 1].loc);
                                        program.chained = !0, this.$ = { strip: $$[$0 - 2].strip, program: program, chain: !0 };
                                        break;
                                    case 21:
                                        this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };
                                        break;
                                    case 22:
                                    case 23:
                                        this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);
                                        break;
                                    case 24:
                                        this.$ = { type: "PartialStatement", name: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], indent: "", strip: yy.stripFlags($$[$0 - 4], $$[$0]), loc: yy.locInfo(this._$) };
                                        break;
                                    case 25:
                                        this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);
                                        break;
                                    case 26:
                                        this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };
                                        break;
                                    case 29:
                                        this.$ = { type: "SubExpression", path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], loc: yy.locInfo(this._$) };
                                        break;
                                    case 30:
                                        this.$ = { type: "Hash", pairs: $$[$0], loc: yy.locInfo(this._$) };
                                        break;
                                    case 31:
                                        this.$ = { type: "HashPair", key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };
                                        break;
                                    case 32:
                                        this.$ = yy.id($$[$0 - 1]);
                                        break;
                                    case 35:
                                        this.$ = { type: "StringLiteral", value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };
                                        break;
                                    case 36:
                                        this.$ = { type: "NumberLiteral", value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };
                                        break;
                                    case 37:
                                        this.$ = { type: "BooleanLiteral", value: "true" === $$[$0], original: "true" === $$[$0], loc: yy.locInfo(this._$) };
                                        break;
                                    case 38:
                                        this.$ = { type: "UndefinedLiteral", original: void 0, value: void 0, loc: yy.locInfo(this._$) };
                                        break;
                                    case 39:
                                        this.$ = { type: "NullLiteral", original: null, value: null, loc: yy.locInfo(this._$) };
                                        break;
                                    case 42:
                                        this.$ = yy.preparePath(!0, $$[$0], this._$);
                                        break;
                                    case 43:
                                        this.$ = yy.preparePath(!1, $$[$0], this._$);
                                        break;
                                    case 44:
                                        $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] }), this.$ = $$[$0 - 2];
                                        break;
                                    case 45:
                                        this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];
                                        break;
                                    case 46:
                                    case 48:
                                    case 50:
                                    case 58:
                                    case 64:
                                    case 70:
                                    case 78:
                                    case 82:
                                    case 86:
                                    case 90:
                                    case 94:
                                        this.$ = [];
                                        break;
                                    case 47:
                                    case 49:
                                    case 51:
                                    case 59:
                                    case 65:
                                    case 71:
                                    case 79:
                                    case 83:
                                    case 87:
                                    case 91:
                                    case 95:
                                    case 99:
                                    case 101:
                                        $$[$0 - 1].push($$[$0]);
                                        break;
                                    case 98:
                                    case 100: this.$ = [$$[$0]];
                                } }, table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }], defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] }, parseError: function (str, hash) { throw Error(str); }, parse: function (input) {
                                    var self1 = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = "", yylineno = 0, yyleng = 0, recovering = 0;
                                    this.lexer.setInput(input), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, void 0 === this.lexer.yylloc && (this.lexer.yylloc = {});
                                    var yyloc = this.lexer.yylloc;
                                    lstack.push(yyloc);
                                    var ranges = this.lexer.options && this.lexer.options.ranges;
                                    "function" == typeof this.yy.parseError && (this.parseError = this.yy.parseError);
                                    for (var symbol, preErrorSymbol, state, action, r, p, len, newState, expected, yyval = {};;) {
                                        if (state = stack[stack.length - 1], this.defaultActions[state] ? action = this.defaultActions[state] : (null == symbol && (symbol = function () { var token; return "number" != typeof (token = self1.lexer.lex() || 1) && (token = self1.symbols_[token] || token), token; }()), action = table[state] && table[state][symbol]), void 0 === action || !action.length || !action[0]) {
                                            var errStr = "";
                                            if (!recovering) {
                                                for (p in expected = [], table[state])
                                                    this.terminals_[p] && p > 2 && expected.push("'" + this.terminals_[p] + "'");
                                                errStr = this.lexer.showPosition ? "Parse error on line " + (yylineno + 1) + `:
` + this.lexer.showPosition() + `
Expecting ` + expected.join(", ") + ", got '" + (this.terminals_[symbol] || symbol) + "'" : "Parse error on line " + (yylineno + 1) + ": Unexpected " + (1 == symbol ? "end of input" : "'" + (this.terminals_[symbol] || symbol) + "'"), this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });
                                            }
                                        }
                                        if (action[0] instanceof Array && action.length > 1)
                                            throw Error("Parse Error: multiple actions possible at state: " + state + ", token: " + symbol);
                                        switch (action[0]) {
                                            case 1:
                                                stack.push(symbol), vstack.push(this.lexer.yytext), lstack.push(this.lexer.yylloc), stack.push(action[1]), symbol = null, preErrorSymbol ? (symbol = preErrorSymbol, preErrorSymbol = null) : (yyleng = this.lexer.yyleng, yytext = this.lexer.yytext, yylineno = this.lexer.yylineno, yyloc = this.lexer.yylloc, recovering > 0 && recovering--);
                                                break;
                                            case 2:
                                                if (len = this.productions_[action[1]][1], yyval.$ = vstack[vstack.length - len], yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column }, ranges && (yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]]), void 0 !== (r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack)))
                                                    return r;
                                                len && (stack = stack.slice(0, -1 * len * 2), vstack = vstack.slice(0, -1 * len), lstack = lstack.slice(0, -1 * len)), stack.push(this.productions_[action[1]][0]), vstack.push(yyval.$), lstack.push(yyval._$), newState = table[stack[stack.length - 2]][stack[stack.length - 1]], stack.push(newState);
                                                break;
                                            case 3: return !0;
                                        }
                                    }
                                    return !0;
                                } };
                            function Parser() { this.yy = {}; }
                            return (lexer = { EOF: 1, parseError: function (str, hash) { if (this.yy.parser)
                                    this.yy.parser.parseError(str, hash);
                                else
                                    throw Error(str); }, setInput: function (input) { return this._input = input, this._more = this._less = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this; }, input: function () { var ch = this._input[0]; return this.yytext += ch, this.yyleng++, this.offset++, this.match += ch, this.matched += ch, ch.match(/(?:\r\n?|\n).*/g) ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), ch; }, unput: function (ch) { var len = ch.length, lines = ch.split(/(?:\r\n?|\n)/g); this._input = ch + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - len - 1), this.offset -= len; var oldLines = this.match.split(/(?:\r\n?|\n)/g); this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), lines.length - 1 && (this.yylineno -= lines.length - 1); var r = this.yylloc.range; return this.yylloc = { first_line: this.yylloc.first_line, last_line: this.yylineno + 1, first_column: this.yylloc.first_column, last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len }, this.options.ranges && (this.yylloc.range = [r[0], r[0] + this.yyleng - len]), this; }, more: function () { return this._more = !0, this; }, less: function (n) { this.unput(this.match.slice(n)); }, pastInput: function () { var past = this.matched.substr(0, this.matched.length - this.match.length); return (past.length > 20 ? "..." : "") + past.substr(-20).replace(/\n/g, ""); }, upcomingInput: function () { var next = this.match; return next.length < 20 && (next += this._input.substr(0, 20 - next.length)), (next.substr(0, 20) + (next.length > 20 ? "..." : "")).replace(/\n/g, ""); }, showPosition: function () {
                                    var pre = this.pastInput(), c = Array(pre.length + 1).join("-");
                                    return pre + this.upcomingInput() + `
` + c + "^";
                                }, next: function () {
                                    if (this.done)
                                        return this.EOF;
                                    this._input || (this.done = !0), this._more || (this.yytext = "", this.match = "");
                                    for (var token, match, tempMatch, index, lines, rules = this._currentRules(), i = 0; i < rules.length && (!(tempMatch = this._input.match(this.rules[rules[i]])) || match && !(tempMatch[0].length > match[0].length) || (match = tempMatch, index = i, this.options.flex)); i++)
                                        ;
                                    return match ? ((lines = match[0].match(/(?:\r\n?|\n).*/g)) && (this.yylineno += lines.length), this.yylloc = { first_line: this.yylloc.last_line, last_line: this.yylineno + 1, first_column: this.yylloc.last_column, last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + match[0].length }, this.yytext += match[0], this.match += match[0], this.matches = match, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._input = this._input.slice(match[0].length), this.matched += match[0], token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), token) ? token : void 0 : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + `. Unrecognized text.
` + this.showPosition(), { text: "", token: null, line: this.yylineno });
                                }, lex: function () { var r = this.next(); return void 0 !== r ? r : this.lex(); }, begin: function (condition) { this.conditionStack.push(condition); }, popState: function () { return this.conditionStack.pop(); }, _currentRules: function () { return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules; }, topState: function () { return this.conditionStack[this.conditionStack.length - 2]; }, pushState: function (condition) { this.begin(condition); } }).options = {}, lexer.performAction = function (yy, yy_, $avoiding_name_collisions, YY_START) { function strip(start, end) { return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start); } switch ($avoiding_name_collisions) {
                                case 0:
                                    if ("\\\\" === yy_.yytext.slice(-2) ? (strip(0, 1), this.begin("mu")) : "\\" === yy_.yytext.slice(-1) ? (strip(0, 1), this.begin("emu")) : this.begin("mu"), yy_.yytext)
                                        return 15;
                                    break;
                                case 1:
                                case 5: return 15;
                                case 2: return this.popState(), 15;
                                case 3: return this.begin("raw"), 15;
                                case 4:
                                    if (this.popState(), "raw" === this.conditionStack[this.conditionStack.length - 1])
                                        return 15;
                                    return strip(5, 9), "END_RAW_BLOCK";
                                case 6:
                                case 22: return this.popState(), 14;
                                case 7: return 65;
                                case 8: return 68;
                                case 9: return 19;
                                case 10: return this.popState(), this.begin("raw"), 23;
                                case 11: return 55;
                                case 12: return 60;
                                case 13: return 29;
                                case 14: return 47;
                                case 15:
                                case 16: return this.popState(), 44;
                                case 17: return 34;
                                case 18: return 39;
                                case 19: return 51;
                                case 20:
                                case 23: return 48;
                                case 21:
                                    this.unput(yy_.yytext), this.popState(), this.begin("com");
                                    break;
                                case 24: return 73;
                                case 25:
                                case 26:
                                case 41: return 72;
                                case 27: return 87;
                                case 28: break;
                                case 29: return this.popState(), 54;
                                case 30: return this.popState(), 33;
                                case 31: return yy_.yytext = strip(1, 2).replace(/\\"/g, '"'), 80;
                                case 32: return yy_.yytext = strip(1, 2).replace(/\\'/g, "'"), 80;
                                case 33: return 85;
                                case 34:
                                case 35: return 82;
                                case 36: return 83;
                                case 37: return 84;
                                case 38: return 81;
                                case 39: return 75;
                                case 40: return 77;
                                case 42: return yy_.yytext = yy_.yytext.replace(/\\([\\\]])/g, "$1"), 72;
                                case 43: return "INVALID";
                                case 44: return 5;
                            } }, lexer.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]+?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/], lexer.conditions = { mu: { rules: [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], inclusive: !1 }, emu: { rules: [2], inclusive: !1 }, com: { rules: [6], inclusive: !1 }, raw: { rules: [3, 4, 5], inclusive: !1 }, INITIAL: { rules: [0, 1, 44], inclusive: !0 } }, parser.lexer = lexer, Parser.prototype = parser, parser.Parser = Parser, new Parser;
                        }(), module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_129022__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_129022__(1).default;
                        function WhitespaceControl() { var options1 = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]; this.options = options1; }
                        function isPrevWhitespace(body, i, isRoot) { void 0 === i && (i = body.length); var prev = body[i - 1], sibling = body[i - 2]; return prev ? "ContentStatement" === prev.type ? (sibling || !isRoot ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(prev.original) : void 0 : isRoot; }
                        function isNextWhitespace(body, i, isRoot) { void 0 === i && (i = -1); var next = body[i + 1], sibling = body[i + 2]; return next ? "ContentStatement" === next.type ? (sibling || !isRoot ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(next.original) : void 0 : isRoot; }
                        function omitRight(body, i, multiple) { var current = body[null == i ? 0 : i + 1]; if (current && "ContentStatement" === current.type && (multiple || !current.rightStripped)) {
                            var original = current.value;
                            current.value = current.value.replace(multiple ? /^\s+/ : /^[ \t]*\r?\n?/, ""), current.rightStripped = current.value !== original;
                        } }
                        function omitLeft(body, i, multiple) { var current = body[null == i ? body.length - 1 : i - 1]; if (current && "ContentStatement" === current.type && (multiple || !current.leftStripped)) {
                            var original = current.value;
                            return current.value = current.value.replace(multiple ? /\s+$/ : /[ \t]+$/, ""), current.leftStripped = current.value !== original, current.leftStripped;
                        } }
                        exports.__esModule = !0, WhitespaceControl.prototype = new (_interopRequireDefault(__nested_webpack_require_129022__(88))).default, WhitespaceControl.prototype.Program = function (program) { var doStandalone = !this.options.ignoreStandalone, isRoot = !this.isRootSeen; this.isRootSeen = !0; for (var body = program.body, i = 0, l = body.length; i < l; i++) {
                            var current = body[i], strip = this.accept(current);
                            if (strip) {
                                var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot), _isNextWhitespace = isNextWhitespace(body, i, isRoot), openStandalone = strip.openStandalone && _isPrevWhitespace, closeStandalone = strip.closeStandalone && _isNextWhitespace, inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;
                                strip.close && omitRight(body, i, !0), strip.open && omitLeft(body, i, !0), doStandalone && inlineStandalone && (omitRight(body, i), omitLeft(body, i) && "PartialStatement" === current.type && (current.indent = /([ \t]+$)/.exec(body[i - 1].original)[1])), doStandalone && openStandalone && (omitRight((current.program || current.inverse).body), omitLeft(body, i)), doStandalone && closeStandalone && (omitRight(body, i), omitLeft((current.inverse || current.program).body));
                            }
                        } return program; }, WhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) { this.accept(block.program), this.accept(block.inverse); var program = block.program || block.inverse, inverse = block.program && block.inverse, firstInverse = inverse, lastInverse = inverse; if (inverse && inverse.chained)
                            for (firstInverse = inverse.body[0].program; lastInverse.chained;)
                                lastInverse = lastInverse.body[lastInverse.body.length - 1].program; var strip = { open: block.openStrip.open, close: block.closeStrip.close, openStandalone: isNextWhitespace(program.body), closeStandalone: isPrevWhitespace((firstInverse || program).body) }; if (block.openStrip.close && omitRight(program.body, null, !0), inverse) {
                            var inverseStrip = block.inverseStrip;
                            inverseStrip.open && omitLeft(program.body, null, !0), inverseStrip.close && omitRight(firstInverse.body, null, !0), block.closeStrip.open && omitLeft(lastInverse.body, null, !0), !this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body) && (omitLeft(program.body), omitRight(firstInverse.body));
                        }
                        else
                            block.closeStrip.open && omitLeft(program.body, null, !0); return strip; }, WhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) { return mustache.strip; }, WhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) { var strip = node.strip || {}; return { inlineStandalone: !0, open: strip.open, close: strip.close }; }, exports.default = WhitespaceControl, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_135807__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_135807__(1).default;
                        exports.__esModule = !0;
                        var _exception2 = _interopRequireDefault(__nested_webpack_require_135807__(6));
                        function Visitor() { this.parents = []; }
                        function visitSubExpression(mustache) { this.acceptRequired(mustache, "path"), this.acceptArray(mustache.params), this.acceptKey(mustache, "hash"); }
                        function visitBlock(block) { visitSubExpression.call(this, block), this.acceptKey(block, "program"), this.acceptKey(block, "inverse"); }
                        function visitPartial(partial) { this.acceptRequired(partial, "name"), this.acceptArray(partial.params), this.acceptKey(partial, "hash"); }
                        Visitor.prototype = { constructor: Visitor, mutating: !1, acceptKey: function (node, name) { var value = this.accept(node[name]); if (this.mutating) {
                                if (value && !Visitor.prototype[value.type])
                                    throw new _exception2.default('Unexpected node type "' + value.type + '" found when accepting ' + name + " on " + node.type);
                                node[name] = value;
                            } }, acceptRequired: function (node, name) { if (this.acceptKey(node, name), !node[name])
                                throw new _exception2.default(node.type + " requires " + name); }, acceptArray: function (array) { for (var i = 0, l = array.length; i < l; i++)
                                this.acceptKey(array, i), !array[i] && (array.splice(i, 1), i--, l--); }, accept: function (object) { if (object) {
                                if (!this[object.type])
                                    throw new _exception2.default("Unknown type: " + object.type, object);
                                this.current && this.parents.unshift(this.current), this.current = object;
                                var ret = this[object.type](object);
                                if (this.current = this.parents.shift(), !this.mutating || ret)
                                    return ret;
                                if (!1 !== ret)
                                    return object;
                            } }, Program: function (program) { this.acceptArray(program.body); }, MustacheStatement: visitSubExpression, Decorator: visitSubExpression, BlockStatement: visitBlock, DecoratorBlock: visitBlock, PartialStatement: visitPartial, PartialBlockStatement: function (partial) { visitPartial.call(this, partial), this.acceptKey(partial, "program"); }, ContentStatement: function () { }, CommentStatement: function () { }, SubExpression: visitSubExpression, PathExpression: function () { }, StringLiteral: function () { }, NumberLiteral: function () { }, BooleanLiteral: function () { }, UndefinedLiteral: function () { }, NullLiteral: function () { }, Hash: function (hash) { this.acceptArray(hash.pairs); }, HashPair: function (pair) { this.acceptRequired(pair, "value"); } }, exports.default = Visitor, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_139663__) {
                        "use strict";
                        var _interopRequireDefault = __nested_webpack_require_139663__(1).default;
                        exports.__esModule = !0, exports.SourceLocation = function (source, locInfo) { this.source = source, this.start = { line: locInfo.first_line, column: locInfo.first_column }, this.end = { line: locInfo.last_line, column: locInfo.last_column }; }, exports.id = function (token) { return /^\[.*\]$/.test(token) ? token.substring(1, token.length - 1) : token; }, exports.stripFlags = function (open, close) { return { open: "~" === open.charAt(2), close: "~" === close.charAt(close.length - 3) }; }, exports.stripComment = function (comment) { return comment.replace(/^\{\{~?!-?-?/, "").replace(/-?-?~?\}\}$/, ""); }, exports.preparePath = function (data1, parts, loc) { loc = this.locInfo(loc); for (var original = data1 ? "@" : "", dig = [], depth = 0, i = 0, l = parts.length; i < l; i++) {
                            var part = parts[i].part, isLiteral = parts[i].original !== part;
                            if (original += (parts[i].separator || "") + part, isLiteral || ".." !== part && "." !== part && "this" !== part)
                                dig.push(part);
                            else if (dig.length > 0)
                                throw new _exception2.default("Invalid path: " + original, { loc: loc });
                            else
                                ".." === part && depth++;
                        } return { type: "PathExpression", data: data1, depth: depth, parts: dig, original: original, loc: loc }; }, exports.prepareMustache = function (path, params, hash, open, strip, locInfo) { var escapeFlag = open.charAt(3) || open.charAt(2); return { type: /\*/.test(open) ? "Decorator" : "MustacheStatement", path: path, params: params, hash: hash, escaped: "{" !== escapeFlag && "&" !== escapeFlag, strip: strip, loc: this.locInfo(locInfo) }; }, exports.prepareRawBlock = function (openRawBlock, contents, close, locInfo) { validateClose(openRawBlock, close); var program = { type: "Program", body: contents, strip: {}, loc: locInfo = this.locInfo(locInfo) }; return { type: "BlockStatement", path: openRawBlock.path, params: openRawBlock.params, hash: openRawBlock.hash, program: program, openStrip: {}, inverseStrip: {}, closeStrip: {}, loc: locInfo }; }, exports.prepareBlock = function (openBlock, program, inverseAndProgram, close, inverted, locInfo) { close && close.path && validateClose(openBlock, close); var decorator = /\*/.test(openBlock.open); program.blockParams = openBlock.blockParams; var inverse = void 0, inverseStrip = void 0; if (inverseAndProgram) {
                            if (decorator)
                                throw new _exception2.default("Unexpected inverse block on decorator", inverseAndProgram);
                            inverseAndProgram.chain && (inverseAndProgram.program.body[0].closeStrip = close.strip), inverseStrip = inverseAndProgram.strip, inverse = inverseAndProgram.program;
                        } return inverted && (inverted = inverse, inverse = program, program = inverted), { type: decorator ? "DecoratorBlock" : "BlockStatement", path: openBlock.path, params: openBlock.params, hash: openBlock.hash, program: program, inverse: inverse, openStrip: openBlock.strip, inverseStrip: inverseStrip, closeStrip: close && close.strip, loc: this.locInfo(locInfo) }; }, exports.prepareProgram = function (statements, loc) { if (!loc && statements.length) {
                            var firstLoc = statements[0].loc, lastLoc = statements[statements.length - 1].loc;
                            firstLoc && lastLoc && (loc = { source: firstLoc.source, start: { line: firstLoc.start.line, column: firstLoc.start.column }, end: { line: lastLoc.end.line, column: lastLoc.end.column } });
                        } return { type: "Program", body: statements, strip: {}, loc: loc }; }, exports.preparePartialBlock = function (open, program, close, locInfo) { return validateClose(open, close), { type: "PartialBlockStatement", name: open.path, params: open.params, hash: open.hash, program: program, openStrip: open.strip, closeStrip: close && close.strip, loc: this.locInfo(locInfo) }; };
                        var _exception2 = _interopRequireDefault(__nested_webpack_require_139663__(6));
                        function validateClose(open, close) { if (close = close.path ? close.path.original : close, open.path.original !== close) {
                            var errorNode = { loc: open.path.loc };
                            throw new _exception2.default(open.path.original + " doesn't match " + close, errorNode);
                        } }
                    }, function (module1, exports, __nested_webpack_require_145258__) {
                        "use strict";
                        var _Object$create = __nested_webpack_require_145258__(74).default, _interopRequireDefault = __nested_webpack_require_145258__(1).default;
                        exports.__esModule = !0, exports.Compiler = Compiler, exports.precompile = function (input, options1, env) { if (null == input || "string" != typeof input && "Program" !== input.type)
                            throw new _exception2.default("You must pass a string or Handlebars AST to Handlebars.precompile. You passed " + input); "data" in (options1 = options1 || {}) || (options1.data = !0), options1.compat && (options1.useDepths = !0); var ast = env.parse(input, options1), environment = new env.Compiler().compile(ast, options1); return new env.JavaScriptCompiler().compile(environment, options1); }, exports.compile = function (input, options1, env) { if (void 0 === options1 && (options1 = {}), null == input || "string" != typeof input && "Program" !== input.type)
                            throw new _exception2.default("You must pass a string or Handlebars AST to Handlebars.compile. You passed " + input); "data" in (options1 = _utils.extend({}, options1)) || (options1.data = !0), options1.compat && (options1.useDepths = !0); var compiled = void 0; function compileInput() { var ast = env.parse(input, options1), environment = new env.Compiler().compile(ast, options1), templateSpec = new env.JavaScriptCompiler().compile(environment, options1, void 0, !0); return env.template(templateSpec); } function ret(context, execOptions) { return compiled || (compiled = compileInput()), compiled.call(this, context, execOptions); } return ret._setup = function (setupOptions) { return compiled || (compiled = compileInput()), compiled._setup(setupOptions); }, ret._child = function (i, data1, blockParams, depths) { return compiled || (compiled = compileInput()), compiled._child(i, data1, blockParams, depths); }, ret; };
                        var _exception2 = _interopRequireDefault(__nested_webpack_require_145258__(6)), _utils = __nested_webpack_require_145258__(5), _ast2 = _interopRequireDefault(__nested_webpack_require_145258__(84)), slice = [].slice;
                        function Compiler() { }
                        function transformLiteralToPath(sexpr) { if (!sexpr.path.parts) {
                            var literal = sexpr.path;
                            sexpr.path = { type: "PathExpression", data: !1, depth: 0, parts: [literal.original + ""], original: literal.original + "", loc: literal.loc };
                        } }
                        Compiler.prototype = { compiler: Compiler, equals: function (other) { var len = this.opcodes.length; if (other.opcodes.length !== len)
                                return !1; for (var i = 0; i < len; i++) {
                                var opcode = this.opcodes[i], otherOpcode = other.opcodes[i];
                                if (opcode.opcode !== otherOpcode.opcode || !function argEquals(a, b) { if (a === b)
                                    return !0; if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {
                                    for (var i = 0; i < a.length; i++)
                                        if (!argEquals(a[i], b[i]))
                                            return !1;
                                    return !0;
                                } }(opcode.args, otherOpcode.args))
                                    return !1;
                            } len = this.children.length; for (var i = 0; i < len; i++)
                                if (!this.children[i].equals(other.children[i]))
                                    return !1; return !0; }, guid: 0, compile: function (program, options1) { return this.sourceNode = [], this.opcodes = [], this.children = [], this.options = options1, this.stringParams = options1.stringParams, this.trackIds = options1.trackIds, options1.blockParams = options1.blockParams || [], options1.knownHelpers = _utils.extend(_Object$create(null), { helperMissing: !0, blockHelperMissing: !0, each: !0, if: !0, unless: !0, with: !0, log: !0, lookup: !0 }, options1.knownHelpers), this.accept(program); }, compileProgram: function (program) { var result = new this.compiler().compile(program, this.options), guid = this.guid++; return this.usePartial = this.usePartial || result.usePartial, this.children[guid] = result, this.useDepths = this.useDepths || result.useDepths, guid; }, accept: function (node) { if (!this[node.type])
                                throw new _exception2.default("Unknown type: " + node.type, node); this.sourceNode.unshift(node); var ret = this[node.type](node); return this.sourceNode.shift(), ret; }, Program: function (program) { this.options.blockParams.unshift(program.blockParams); for (var body = program.body, bodyLength = body.length, i = 0; i < bodyLength; i++)
                                this.accept(body[i]); return this.options.blockParams.shift(), this.isSimple = 1 === bodyLength, this.blockParams = program.blockParams ? program.blockParams.length : 0, this; }, BlockStatement: function (block) { transformLiteralToPath(block); var program = block.program, inverse = block.inverse; program = program && this.compileProgram(program), inverse = inverse && this.compileProgram(inverse); var type = this.classifySexpr(block); "helper" === type ? this.helperSexpr(block, program, inverse) : "simple" === type ? (this.simpleSexpr(block), this.opcode("pushProgram", program), this.opcode("pushProgram", inverse), this.opcode("emptyHash"), this.opcode("blockValue", block.path.original)) : (this.ambiguousSexpr(block, program, inverse), this.opcode("pushProgram", program), this.opcode("pushProgram", inverse), this.opcode("emptyHash"), this.opcode("ambiguousBlockValue")), this.opcode("append"); }, DecoratorBlock: function (decorator) { var program = decorator.program && this.compileProgram(decorator.program), params = this.setupFullMustacheParams(decorator, program, void 0), path = decorator.path; this.useDecorators = !0, this.opcode("registerDecorator", params.length, path.original); }, PartialStatement: function (partial) { this.usePartial = !0; var program = partial.program; program && (program = this.compileProgram(partial.program)); var params = partial.params; if (params.length > 1)
                                throw new _exception2.default("Unsupported number of partial arguments: " + params.length, partial); params.length || (this.options.explicitPartialContext ? this.opcode("pushLiteral", "undefined") : params.push({ type: "PathExpression", parts: [], depth: 0 })); var partialName = partial.name.original, isDynamic = "SubExpression" === partial.name.type; isDynamic && this.accept(partial.name), this.setupFullMustacheParams(partial, program, void 0, !0); var indent = partial.indent || ""; this.options.preventIndent && indent && (this.opcode("appendContent", indent), indent = ""), this.opcode("invokePartial", isDynamic, partialName, indent), this.opcode("append"); }, PartialBlockStatement: function (partialBlock) { this.PartialStatement(partialBlock); }, MustacheStatement: function (mustache) { this.SubExpression(mustache), mustache.escaped && !this.options.noEscape ? this.opcode("appendEscaped") : this.opcode("append"); }, Decorator: function (decorator) { this.DecoratorBlock(decorator); }, ContentStatement: function (content) { content.value && this.opcode("appendContent", content.value); }, CommentStatement: function () { }, SubExpression: function (sexpr) { transformLiteralToPath(sexpr); var type = this.classifySexpr(sexpr); "simple" === type ? this.simpleSexpr(sexpr) : "helper" === type ? this.helperSexpr(sexpr) : this.ambiguousSexpr(sexpr); }, ambiguousSexpr: function (sexpr, program, inverse) { var path = sexpr.path, name = path.parts[0]; this.opcode("getContext", path.depth), this.opcode("pushProgram", program), this.opcode("pushProgram", inverse), path.strict = !0, this.accept(path), this.opcode("invokeAmbiguous", name, null != program || null != inverse); }, simpleSexpr: function (sexpr) { var path = sexpr.path; path.strict = !0, this.accept(path), this.opcode("resolvePossibleLambda"); }, helperSexpr: function (sexpr, program, inverse) { var params = this.setupFullMustacheParams(sexpr, program, inverse), path = sexpr.path, name = path.parts[0]; if (this.options.knownHelpers[name])
                                this.opcode("invokeKnownHelper", params.length, name);
                            else if (this.options.knownHelpersOnly)
                                throw new _exception2.default("You specified knownHelpersOnly, but used the unknown helper " + name, sexpr);
                            else
                                path.strict = !0, path.falsy = !0, this.accept(path), this.opcode("invokeHelper", params.length, path.original, _ast2.default.helpers.simpleId(path)); }, PathExpression: function (path) { this.addDepth(path.depth), this.opcode("getContext", path.depth); var name = path.parts[0], scoped = _ast2.default.helpers.scopedId(path), blockParamId = !path.depth && !scoped && this.blockParamIndex(name); blockParamId ? this.opcode("lookupBlockParam", blockParamId, path.parts) : name ? path.data ? (this.options.data = !0, this.opcode("lookupData", path.depth, path.parts, path.strict)) : this.opcode("lookupOnContext", path.parts, path.falsy, path.strict, scoped) : this.opcode("pushContext"); }, StringLiteral: function (string) { this.opcode("pushString", string.value); }, NumberLiteral: function (number) { this.opcode("pushLiteral", number.value); }, BooleanLiteral: function (bool) { this.opcode("pushLiteral", bool.value); }, UndefinedLiteral: function () { this.opcode("pushLiteral", "undefined"); }, NullLiteral: function () { this.opcode("pushLiteral", "null"); }, Hash: function (hash) { var pairs = hash.pairs, i = 0, l = pairs.length; for (this.opcode("pushHash"); i < l; i++)
                                this.pushParam(pairs[i].value); for (; i--;)
                                this.opcode("assignToHash", pairs[i].key); this.opcode("popHash"); }, opcode: function (name) { this.opcodes.push({ opcode: name, args: slice.call(arguments, 1), loc: this.sourceNode[0].loc }); }, addDepth: function (depth) { depth && (this.useDepths = !0); }, classifySexpr: function (sexpr) { var isSimple = _ast2.default.helpers.simpleId(sexpr.path), isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]), isHelper = !isBlockParam && _ast2.default.helpers.helperExpression(sexpr), isEligible = !isBlockParam && (isHelper || isSimple); if (isEligible && !isHelper) {
                                var _name = sexpr.path.parts[0], options1 = this.options;
                                options1.knownHelpers[_name] ? isHelper = !0 : options1.knownHelpersOnly && (isEligible = !1);
                            } return isHelper ? "helper" : isEligible ? "ambiguous" : "simple"; }, pushParams: function (params) { for (var i = 0, l = params.length; i < l; i++)
                                this.pushParam(params[i]); }, pushParam: function (val1) { var value = null != val1.value ? val1.value : val1.original || ""; if (this.stringParams)
                                value.replace && (value = value.replace(/^(\.?\.\/)*/g, "").replace(/\//g, ".")), val1.depth && this.addDepth(val1.depth), this.opcode("getContext", val1.depth || 0), this.opcode("pushStringParam", value, val1.type), "SubExpression" === val1.type && this.accept(val1);
                            else {
                                if (this.trackIds) {
                                    var blockParamIndex = void 0;
                                    if (!val1.parts || _ast2.default.helpers.scopedId(val1) || val1.depth || (blockParamIndex = this.blockParamIndex(val1.parts[0])), blockParamIndex) {
                                        var blockParamChild = val1.parts.slice(1).join(".");
                                        this.opcode("pushId", "BlockParam", blockParamIndex, blockParamChild);
                                    }
                                    else
                                        (value = val1.original || value).replace && (value = value.replace(/^this(?:\.|$)/, "").replace(/^\.\//, "").replace(/^\.$/, "")), this.opcode("pushId", val1.type, value);
                                }
                                this.accept(val1);
                            } }, setupFullMustacheParams: function (sexpr, program, inverse, omitEmpty) { var params = sexpr.params; return this.pushParams(params), this.opcode("pushProgram", program), this.opcode("pushProgram", inverse), sexpr.hash ? this.accept(sexpr.hash) : this.opcode("emptyHash", omitEmpty), params; }, blockParamIndex: function (name) { for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {
                                var blockParams = this.options.blockParams[depth], param = blockParams && _utils.indexOf(blockParams, name);
                                if (blockParams && param >= 0)
                                    return [depth, param];
                            } } };
                    }, function (module1, exports, __nested_webpack_require_161675__) {
                        "use strict";
                        var _Object$keys = __nested_webpack_require_161675__(60).default, _interopRequireDefault = __nested_webpack_require_161675__(1).default;
                        exports.__esModule = !0;
                        var _base = __nested_webpack_require_161675__(4), _exception2 = _interopRequireDefault(__nested_webpack_require_161675__(6)), _utils = __nested_webpack_require_161675__(5), _codeGen2 = _interopRequireDefault(__nested_webpack_require_161675__(92));
                        function Literal(value) { this.value = value; }
                        function JavaScriptCompiler() { }
                        JavaScriptCompiler.prototype = { nameLookup: function (parent, name) { return this.internalNameLookup(parent, name); }, depthedLookup: function (name) { return [this.aliasable("container.lookup"), "(depths, ", JSON.stringify(name), ")"]; }, compilerInfo: function () { var revision = _base.COMPILER_REVISION, versions = _base.REVISION_CHANGES[revision]; return [revision, versions]; }, appendToBuffer: function (source, location, explicit) { return (_utils.isArray(source) || (source = [source]), source = this.source.wrap(source, location), this.environment.isSimple) ? ["return ", source, ";"] : explicit ? ["buffer += ", source, ";"] : (source.appendToBuffer = !0, source); }, initializeBuffer: function () { return this.quotedString(""); }, internalNameLookup: function (parent, name) { return this.lookupPropertyFunctionIsUsed = !0, ["lookupProperty(", parent, ",", JSON.stringify(name), ")"]; }, lookupPropertyFunctionIsUsed: !1, compile: function (environment, options1, context, asObject) {
                                this.environment = environment, this.options = options1, this.stringParams = this.options.stringParams, this.trackIds = this.options.trackIds, this.precompile = !asObject, this.name = this.environment.name, this.isChild = !!context, this.context = context || { decorators: [], programs: [], environments: [] }, this.preamble(), this.stackSlot = 0, this.stackVars = [], this.aliases = {}, this.registers = { list: [] }, this.hashes = [], this.compileStack = [], this.inlineStack = [], this.blockParams = [], this.compileChildren(environment, options1), this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat, this.useBlockParams = this.useBlockParams || environment.useBlockParams;
                                var opcodes = environment.opcodes, opcode = void 0, firstLoc = void 0, i = void 0, l = void 0;
                                for (i = 0, l = opcodes.length; i < l; i++)
                                    opcode = opcodes[i], this.source.currentLocation = opcode.loc, firstLoc = firstLoc || opcode.loc, this[opcode.opcode].apply(this, opcode.args);
                                if (this.source.currentLocation = firstLoc, this.pushSource(""), this.stackSlot || this.inlineStack.length || this.compileStack.length)
                                    throw new _exception2.default("Compile completed with content left on stack");
                                this.decorators.isEmpty() ? this.decorators = void 0 : (this.useDecorators = !0, this.decorators.prepend(["var decorators = container.decorators, ", this.lookupPropertyFunctionVarDeclaration(), `;
`]), this.decorators.push("return fn;"), asObject ? this.decorators = Function.apply(this, ["fn", "props", "container", "depth0", "data", "blockParams", "depths", this.decorators.merge()]) : (this.decorators.prepend(`function(fn, props, container, depth0, data, blockParams, depths) {
`), this.decorators.push(`}
`), this.decorators = this.decorators.merge()));
                                var fn = this.createFunctionContext(asObject);
                                if (this.isChild)
                                    return fn;
                                var ret = { compiler: this.compilerInfo(), main: fn };
                                this.decorators && (ret.main_d = this.decorators, ret.useDecorators = !0);
                                var _context = this.context, programs = _context.programs, decorators = _context.decorators;
                                for (i = 0, l = programs.length; i < l; i++)
                                    programs[i] && (ret[i] = programs[i], decorators[i] && (ret[i + "_d"] = decorators[i], ret.useDecorators = !0));
                                return this.environment.usePartial && (ret.usePartial = !0), this.options.data && (ret.useData = !0), this.useDepths && (ret.useDepths = !0), this.useBlockParams && (ret.useBlockParams = !0), this.options.compat && (ret.compat = !0), asObject ? ret.compilerOptions = this.options : (ret.compiler = JSON.stringify(ret.compiler), this.source.currentLocation = { start: { line: 1, column: 0 } }, ret = this.objectLiteral(ret), options1.srcName ? (ret = ret.toStringWithSourceMap({ file: options1.destName })).map = ret.map && ret.map.toString() : ret = ret.toString()), ret;
                            }, preamble: function () { this.lastContext = 0, this.source = new _codeGen2.default(this.options.srcName), this.decorators = new _codeGen2.default(this.options.srcName); }, createFunctionContext: function (asObject) {
                                var _this = this, varDeclarations = "", locals = this.stackVars.concat(this.registers.list);
                                locals.length > 0 && (varDeclarations += ", " + locals.join(", "));
                                var aliasCount = 0;
                                _Object$keys(this.aliases).forEach(function (alias) { var node = _this.aliases[alias]; node.children && node.referenceCount > 1 && (varDeclarations += ", alias" + ++aliasCount + "=" + alias, node.children[0] = "alias" + aliasCount); }), this.lookupPropertyFunctionIsUsed && (varDeclarations += ", " + this.lookupPropertyFunctionVarDeclaration());
                                var params = ["container", "depth0", "helpers", "partials", "data"];
                                (this.useBlockParams || this.useDepths) && params.push("blockParams"), this.useDepths && params.push("depths");
                                var source = this.mergeSource(varDeclarations);
                                return asObject ? (params.push(source), Function.apply(this, params)) : this.source.wrap(["function(", params.join(","), `) {
  `, source, "}"]);
                            }, mergeSource: function (varDeclarations) {
                                var isSimple = this.environment.isSimple, appendOnly = !this.forceBuffer, appendFirst = void 0, sourceSeen = void 0, bufferStart = void 0, bufferEnd = void 0;
                                return this.source.each(function (line) { line.appendToBuffer ? (bufferStart ? line.prepend("  + ") : bufferStart = line, bufferEnd = line) : (bufferStart && (sourceSeen ? bufferStart.prepend("buffer += ") : appendFirst = !0, bufferEnd.add(";"), bufferStart = bufferEnd = void 0), sourceSeen = !0, isSimple || (appendOnly = !1)); }), appendOnly ? bufferStart ? (bufferStart.prepend("return "), bufferEnd.add(";")) : sourceSeen || this.source.push('return "";') : (varDeclarations += ", buffer = " + (appendFirst ? "" : this.initializeBuffer()), bufferStart ? (bufferStart.prepend("return buffer + "), bufferEnd.add(";")) : this.source.push("return buffer;")), varDeclarations && this.source.prepend("var " + varDeclarations.substring(2) + (appendFirst ? "" : `;
`)), this.source.merge();
                            }, lookupPropertyFunctionVarDeclaration: function () {
                                return `
      lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    }
    `.trim();
                            }, blockValue: function (name) { var blockHelperMissing = this.aliasable("container.hooks.blockHelperMissing"), params = [this.contextName(0)]; this.setupHelperArgs(name, 0, params); var blockName = this.popStack(); params.splice(1, 0, blockName), this.push(this.source.functionCall(blockHelperMissing, "call", params)); }, ambiguousBlockValue: function () { var blockHelperMissing = this.aliasable("container.hooks.blockHelperMissing"), params = [this.contextName(0)]; this.setupHelperArgs("", 0, params, !0), this.flushInline(); var current = this.topStack(); params.splice(1, 0, current), this.pushSource(["if (!", this.lastHelper, ") { ", current, " = ", this.source.functionCall(blockHelperMissing, "call", params), "}"]); }, appendContent: function (content) { this.pendingContent ? content = this.pendingContent + content : this.pendingLocation = this.source.currentLocation, this.pendingContent = content; }, append: function () { if (this.isInline())
                                this.replaceStack(function (current) { return [" != null ? ", current, ' : ""']; }), this.pushSource(this.appendToBuffer(this.popStack()));
                            else {
                                var local = this.popStack();
                                this.pushSource(["if (", local, " != null) { ", this.appendToBuffer(local, void 0, !0), " }"]), this.environment.isSimple && this.pushSource(["else { ", this.appendToBuffer("''", void 0, !0), " }"]);
                            } }, appendEscaped: function () { this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"), "(", this.popStack(), ")"])); }, getContext: function (depth) { this.lastContext = depth; }, pushContext: function () { this.pushStackLiteral(this.contextName(this.lastContext)); }, lookupOnContext: function (parts, falsy, strict, scoped) { var i = 0; scoped || !this.options.compat || this.lastContext ? this.pushContext() : this.push(this.depthedLookup(parts[i++])), this.resolvePath("context", parts, i, falsy, strict); }, lookupBlockParam: function (blockParamId, parts) { this.useBlockParams = !0, this.push(["blockParams[", blockParamId[0], "][", blockParamId[1], "]"]), this.resolvePath("context", parts, 1); }, lookupData: function (depth, parts, strict) { depth ? this.pushStackLiteral("container.data(data, " + depth + ")") : this.pushStackLiteral("data"), this.resolvePath("data", parts, 0, !0, strict); }, resolvePath: function (type, parts, i, falsy, strict) { var _this2 = this; if (this.options.strict || this.options.assumeObjects)
                                return void this.push(function (requireTerminal, compiler, parts, i, type) { var stack = compiler.popStack(), len = parts.length; for (requireTerminal && len--; i < len; i++)
                                    stack = compiler.nameLookup(stack, parts[i], type); return requireTerminal ? [compiler.aliasable("container.strict"), "(", stack, ", ", compiler.quotedString(parts[i]), ", ", JSON.stringify(compiler.source.currentLocation), " )"] : stack; }(this.options.strict && strict, this, parts, i, type)); for (var len = parts.length; i < len; i++)
                                this.replaceStack(function (current) { var lookup = _this2.nameLookup(current, parts[i], type); return falsy ? [" && ", lookup] : [" != null ? ", lookup, " : ", current]; }); }, resolvePossibleLambda: function () { this.push([this.aliasable("container.lambda"), "(", this.popStack(), ", ", this.contextName(0), ")"]); }, pushStringParam: function (string, type) { this.pushContext(), this.pushString(type), "SubExpression" !== type && ("string" == typeof string ? this.pushString(string) : this.pushStackLiteral(string)); }, emptyHash: function (omitEmpty) { this.trackIds && this.push("{}"), this.stringParams && (this.push("{}"), this.push("{}")), this.pushStackLiteral(omitEmpty ? "undefined" : "{}"); }, pushHash: function () { this.hash && this.hashes.push(this.hash), this.hash = { values: {}, types: [], contexts: [], ids: [] }; }, popHash: function () { var hash = this.hash; this.hash = this.hashes.pop(), this.trackIds && this.push(this.objectLiteral(hash.ids)), this.stringParams && (this.push(this.objectLiteral(hash.contexts)), this.push(this.objectLiteral(hash.types))), this.push(this.objectLiteral(hash.values)); }, pushString: function (string) { this.pushStackLiteral(this.quotedString(string)); }, pushLiteral: function (value) { this.pushStackLiteral(value); }, pushProgram: function (guid) { null != guid ? this.pushStackLiteral(this.programExpression(guid)) : this.pushStackLiteral(null); }, registerDecorator: function (paramSize, name) { var foundDecorator = this.nameLookup("decorators", name, "decorator"), options1 = this.setupHelperArgs(name, paramSize); this.decorators.push(["fn = ", this.decorators.functionCall(foundDecorator, "", ["fn", "props", "container", options1]), " || fn;"]); }, invokeHelper: function (paramSize, name, isSimple) { var nonHelper = this.popStack(), helper = this.setupHelper(paramSize, name), possibleFunctionCalls = []; isSimple && possibleFunctionCalls.push(helper.name), possibleFunctionCalls.push(nonHelper), this.options.strict || possibleFunctionCalls.push(this.aliasable("container.hooks.helperMissing")); var functionLookupCode = ["(", this.itemsSeparatedBy(possibleFunctionCalls, "||"), ")"], functionCall = this.source.functionCall(functionLookupCode, "call", helper.callParams); this.push(functionCall); }, itemsSeparatedBy: function (items, separator) { var result = []; result.push(items[0]); for (var i = 1; i < items.length; i++)
                                result.push(separator, items[i]); return result; }, invokeKnownHelper: function (paramSize, name) { var helper = this.setupHelper(paramSize, name); this.push(this.source.functionCall(helper.name, "call", helper.callParams)); }, invokeAmbiguous: function (name, helperCall) { this.useRegister("helper"); var nonHelper = this.popStack(); this.emptyHash(); var helper = this.setupHelper(0, name, helperCall), lookup = ["(", "(helper = ", this.lastHelper = this.nameLookup("helpers", name, "helper"), " || ", nonHelper, ")"]; this.options.strict || (lookup[0] = "(helper = ", lookup.push(" != null ? helper : ", this.aliasable("container.hooks.helperMissing"))), this.push(["(", lookup, helper.paramsInit ? ["),(", helper.paramsInit] : [], "),", "(typeof helper === ", this.aliasable('"function"'), " ? ", this.source.functionCall("helper", "call", helper.callParams), " : helper))"]); }, invokePartial: function (isDynamic, name, indent) { var params = [], options1 = this.setupParams(name, 1, params); isDynamic && (name = this.popStack(), delete options1.name), indent && (options1.indent = JSON.stringify(indent)), options1.helpers = "helpers", options1.partials = "partials", options1.decorators = "container.decorators", isDynamic ? params.unshift(name) : params.unshift(this.nameLookup("partials", name, "partial")), this.options.compat && (options1.depths = "depths"), options1 = this.objectLiteral(options1), params.push(options1), this.push(this.source.functionCall("container.invokePartial", "", params)); }, assignToHash: function (key) { var value = this.popStack(), context = void 0, type = void 0, id = void 0; this.trackIds && (id = this.popStack()), this.stringParams && (type = this.popStack(), context = this.popStack()); var hash = this.hash; context && (hash.contexts[key] = context), type && (hash.types[key] = type), id && (hash.ids[key] = id), hash.values[key] = value; }, pushId: function (type, name, child) { "BlockParam" === type ? this.pushStackLiteral("blockParams[" + name[0] + "].path[" + name[1] + "]" + (child ? " + " + JSON.stringify("." + child) : "")) : "PathExpression" === type ? this.pushString(name) : "SubExpression" === type ? this.pushStackLiteral("true") : this.pushStackLiteral("null"); }, compiler: JavaScriptCompiler, compileChildren: function (environment, options1) { for (var children1 = environment.children, child = void 0, compiler = void 0, i = 0, l = children1.length; i < l; i++) {
                                child = children1[i], compiler = new this.compiler;
                                var existing = this.matchExistingProgram(child);
                                if (null == existing) {
                                    this.context.programs.push("");
                                    var index = this.context.programs.length;
                                    child.index = index, child.name = "program" + index, this.context.programs[index] = compiler.compile(child, options1, this.context, !this.precompile), this.context.decorators[index] = compiler.decorators, this.context.environments[index] = child, this.useDepths = this.useDepths || compiler.useDepths, this.useBlockParams = this.useBlockParams || compiler.useBlockParams, child.useDepths = this.useDepths, child.useBlockParams = this.useBlockParams;
                                }
                                else
                                    child.index = existing.index, child.name = "program" + existing.index, this.useDepths = this.useDepths || existing.useDepths, this.useBlockParams = this.useBlockParams || existing.useBlockParams;
                            } }, matchExistingProgram: function (child) { for (var i = 0, len = this.context.environments.length; i < len; i++) {
                                var environment = this.context.environments[i];
                                if (environment && environment.equals(child))
                                    return environment;
                            } }, programExpression: function (guid) { var child = this.environment.children[guid], programParams = [child.index, "data", child.blockParams]; return (this.useBlockParams || this.useDepths) && programParams.push("blockParams"), this.useDepths && programParams.push("depths"), "container.program(" + programParams.join(", ") + ")"; }, useRegister: function (name) { this.registers[name] || (this.registers[name] = !0, this.registers.list.push(name)); }, push: function (expr) { return expr instanceof Literal || (expr = this.source.wrap(expr)), this.inlineStack.push(expr), expr; }, pushStackLiteral: function (item) { this.push(new Literal(item)); }, pushSource: function (source) { this.pendingContent && (this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation)), this.pendingContent = void 0), source && this.source.push(source); }, replaceStack: function (callback) { var prefix = ["("], stack = void 0, createdStack = void 0, usedLiteral = void 0; if (!this.isInline())
                                throw new _exception2.default("replaceStack on non-inline"); var top = this.popStack(!0); if (top instanceof Literal)
                                prefix = ["(", stack = [top.value]], usedLiteral = !0;
                            else {
                                createdStack = !0;
                                var _name = this.incrStack();
                                prefix = ["((", this.push(_name), " = ", top, ")"], stack = this.topStack();
                            } var item = callback.call(this, stack); usedLiteral || this.popStack(), createdStack && this.stackSlot--, this.push(prefix.concat(item, ")")); }, incrStack: function () { return this.stackSlot++, this.stackSlot > this.stackVars.length && this.stackVars.push("stack" + this.stackSlot), this.topStackName(); }, topStackName: function () { return "stack" + this.stackSlot; }, flushInline: function () { var inlineStack = this.inlineStack; this.inlineStack = []; for (var i = 0, len = inlineStack.length; i < len; i++) {
                                var entry = inlineStack[i];
                                if (entry instanceof Literal)
                                    this.compileStack.push(entry);
                                else {
                                    var stack = this.incrStack();
                                    this.pushSource([stack, " = ", entry, ";"]), this.compileStack.push(stack);
                                }
                            } }, isInline: function () { return this.inlineStack.length; }, popStack: function (wrapped) { var inline = this.isInline(), item = (inline ? this.inlineStack : this.compileStack).pop(); if (!wrapped && item instanceof Literal)
                                return item.value; if (!inline) {
                                if (!this.stackSlot)
                                    throw new _exception2.default("Invalid stack pop");
                                this.stackSlot--;
                            } return item; }, topStack: function () { var stack = this.isInline() ? this.inlineStack : this.compileStack, item = stack[stack.length - 1]; return item instanceof Literal ? item.value : item; }, contextName: function (context) { return this.useDepths && context ? "depths[" + context + "]" : "depth" + context; }, quotedString: function (str) { return this.source.quotedString(str); }, objectLiteral: function (obj) { return this.source.objectLiteral(obj); }, aliasable: function (name) { var ret = this.aliases[name]; return ret ? ret.referenceCount++ : ((ret = this.aliases[name] = this.source.wrap(name)).aliasable = !0, ret.referenceCount = 1), ret; }, setupHelper: function (paramSize, name, blockHelper) { var params = [], paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper); return { params: params, paramsInit: paramsInit, name: this.nameLookup("helpers", name, "helper"), callParams: [this.aliasable(this.contextName(0) + " != null ? " + this.contextName(0) + " : (container.nullContext || {})")].concat(params) }; }, setupParams: function (helper, paramSize, params) { var options1 = {}, contexts = [], types = [], ids = [], objectArgs = !params, param = void 0; objectArgs && (params = []), options1.name = this.quotedString(helper), options1.hash = this.popStack(), this.trackIds && (options1.hashIds = this.popStack()), this.stringParams && (options1.hashTypes = this.popStack(), options1.hashContexts = this.popStack()); var inverse = this.popStack(), program = this.popStack(); (program || inverse) && (options1.fn = program || "container.noop", options1.inverse = inverse || "container.noop"); for (var i = paramSize; i--;)
                                param = this.popStack(), params[i] = param, this.trackIds && (ids[i] = this.popStack()), this.stringParams && (types[i] = this.popStack(), contexts[i] = this.popStack()); return objectArgs && (options1.args = this.source.generateArray(params)), this.trackIds && (options1.ids = this.source.generateArray(ids)), this.stringParams && (options1.types = this.source.generateArray(types), options1.contexts = this.source.generateArray(contexts)), this.options.data && (options1.data = "data"), this.useBlockParams && (options1.blockParams = "blockParams"), options1; }, setupHelperArgs: function (helper, paramSize, params, useRegister) { var options1 = this.setupParams(helper, paramSize, params); return (options1.loc = JSON.stringify(this.source.currentLocation), options1 = this.objectLiteral(options1), useRegister) ? (this.useRegister("options"), params.push("options"), ["options=", options1]) : params ? (params.push(options1), "") : options1; } };
                        for (var reservedWords = "break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "), compilerWords = JavaScriptCompiler.RESERVED_WORDS = {}, i = 0, l = reservedWords.length; i < l; i++)
                            compilerWords[reservedWords[i]] = !0;
                        JavaScriptCompiler.isValidJavaScriptVariableName = function (name) { return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name); }, exports.default = JavaScriptCompiler, module1.exports = exports.default;
                    }, function (module1, exports, __nested_webpack_require_197611__) {
                        "use strict";
                        var _Object$keys = __nested_webpack_require_197611__(60).default;
                        exports.__esModule = !0;
                        var _utils = __nested_webpack_require_197611__(5), SourceNode = void 0;
                        function castChunk(chunk, codeGen, loc) { if (_utils.isArray(chunk)) {
                            for (var ret = [], i = 0, len = chunk.length; i < len; i++)
                                ret.push(codeGen.wrap(chunk[i], loc));
                            return ret;
                        } return "boolean" == typeof chunk || "number" == typeof chunk ? chunk + "" : chunk; }
                        function CodeGen(srcFile) { this.srcFile = srcFile, this.source = []; }
                        SourceNode || ((SourceNode = function (line, column, srcFile, chunks) { this.src = "", chunks && this.add(chunks); }).prototype = { add: function (chunks) { _utils.isArray(chunks) && (chunks = chunks.join("")), this.src += chunks; }, prepend: function (chunks) { _utils.isArray(chunks) && (chunks = chunks.join("")), this.src = chunks + this.src; }, toStringWithSourceMap: function () { return { code: this.toString() }; }, toString: function () { return this.src; } }), CodeGen.prototype = { isEmpty: function () { return !this.source.length; }, prepend: function (source, loc) { this.source.unshift(this.wrap(source, loc)); }, push: function (source, loc) { this.source.push(this.wrap(source, loc)); }, merge: function () {
                                var source = this.empty();
                                return this.each(function (line) {
                                    source.add(["  ", line, `
`]);
                                }), source;
                            }, each: function (iter) { for (var i = 0, len = this.source.length; i < len; i++)
                                iter(this.source[i]); }, empty: function () { var loc = this.currentLocation || { start: {} }; return new SourceNode(loc.start.line, loc.start.column, this.srcFile); }, wrap: function (chunk) { var loc = arguments.length <= 1 || void 0 === arguments[1] ? this.currentLocation || { start: {} } : arguments[1]; return chunk instanceof SourceNode ? chunk : (chunk = castChunk(chunk, this, loc), new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk)); }, functionCall: function (fn, type, params) { return params = this.generateList(params), this.wrap([fn, type ? "." + type + "(" : "(", params, ")"]); }, quotedString: function (str) { return '"' + (str + "").replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029") + '"'; }, objectLiteral: function (obj) { var _this = this, pairs = []; _Object$keys(obj).forEach(function (key) { var value = castChunk(obj[key], _this); "undefined" !== value && pairs.push([_this.quotedString(key), ":", value]); }); var ret = this.generateList(pairs); return ret.prepend("{"), ret.add("}"), ret; }, generateList: function (entries) { for (var ret = this.empty(), i = 0, len = entries.length; i < len; i++)
                                i && ret.add(","), ret.add(castChunk(entries[i], this)); return ret; }, generateArray: function (entries) { var ret = this.generateList(entries); return ret.prepend("["), ret.add("]"), ret; } }, exports.default = CodeGen, module1.exports = exports.default;
                    }], installedModules = {};
                function __nested_webpack_require_1638__(moduleId) { if (installedModules[moduleId])
                    return installedModules[moduleId].exports; var module1 = installedModules[moduleId] = { exports: {}, id: moduleId, loaded: !1 }; return modules[moduleId].call(module1.exports, module1, module1.exports, __nested_webpack_require_1638__), module1.loaded = !0, module1.exports; }
                return __nested_webpack_require_1638__.m = modules, __nested_webpack_require_1638__.c = installedModules, __nested_webpack_require_1638__.p = "", __nested_webpack_require_1638__(0);
            }();
        }, "./node_modules/has-bigints/index.js": module1 => {
            "use strict";
            var $BigInt = "undefined" != typeof BigInt && BigInt;
            module1.exports = function () { return "function" == typeof $BigInt && "function" == typeof BigInt && "bigint" == typeof $BigInt(42) && "bigint" == typeof BigInt(42); };
        }, "./node_modules/has-property-descriptors/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $defineProperty = __webpack_require__("./node_modules/es-define-property/index.js"), hasPropertyDescriptors = function () { return !!$defineProperty; };
            hasPropertyDescriptors.hasArrayLengthDefineBug = function () { if (!$defineProperty)
                return null; try {
                return 1 !== $defineProperty([], "length", { value: 1 }).length;
            }
            catch (e) {
                return !0;
            } }, module1.exports = hasPropertyDescriptors;
        }, "./node_modules/has-symbols/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var origSymbol = "undefined" != typeof Symbol && Symbol, hasSymbolSham = __webpack_require__("./node_modules/has-symbols/shams.js");
            module1.exports = function () { return "function" == typeof origSymbol && "function" == typeof Symbol && "symbol" == typeof origSymbol("foo") && "symbol" == typeof Symbol("bar") && hasSymbolSham(); };
        }, "./node_modules/has-symbols/shams.js": module1 => {
            "use strict";
            module1.exports = function () { if ("function" != typeof Symbol || "function" != typeof Object.getOwnPropertySymbols)
                return !1; if ("symbol" == typeof Symbol.iterator)
                return !0; var obj = {}, sym = Symbol("test"), symObj = Object(sym); if ("string" == typeof sym || "[object Symbol]" !== Object.prototype.toString.call(sym) || "[object Symbol]" !== Object.prototype.toString.call(symObj))
                return !1; for (var _ in obj[sym] = 42, obj)
                return !1; if ("function" == typeof Object.keys && 0 !== Object.keys(obj).length || "function" == typeof Object.getOwnPropertyNames && 0 !== Object.getOwnPropertyNames(obj).length)
                return !1; var syms = Object.getOwnPropertySymbols(obj); if (1 !== syms.length || syms[0] !== sym || !Object.prototype.propertyIsEnumerable.call(obj, sym))
                return !1; if ("function" == typeof Object.getOwnPropertyDescriptor) {
                var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
                if (42 !== descriptor.value || !0 !== descriptor.enumerable)
                    return !1;
            } return !0; };
        }, "./node_modules/has-tostringtag/shams.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var hasSymbols = __webpack_require__("./node_modules/has-symbols/shams.js");
            module1.exports = function () { return hasSymbols() && !!Symbol.toStringTag; };
        }, "./node_modules/hasown/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var call = Function.prototype.call, $hasOwn = Object.prototype.hasOwnProperty;
            module1.exports = __webpack_require__("./node_modules/function-bind/index.js").call(call, $hasOwn);
        }, "./node_modules/i18next/dist/esm/i18next.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { changeLanguage: () => changeLanguage, createInstance: () => createInstance, default: () => instance, dir: () => dir, exists: () => exists, getFixedT: () => getFixedT, hasLoadedNamespace: () => hasLoadedNamespace, init: () => init, loadLanguages: () => loadLanguages, loadNamespaces: () => loadNamespaces, loadResources: () => loadResources, reloadResources: () => reloadResources, setDefaultNamespace: () => setDefaultNamespace, t: () => t, use: () => use });
            let isString = obj => "string" == typeof obj, defer = () => { let res, rej, promise = new Promise((resolve, reject) => { res = resolve, rej = reject; }); return promise.resolve = res, promise.reject = rej, promise; }, makeString = object => null == object ? "" : "" + object, copy = (a, s, t) => { a.forEach(m => { s[m] && (t[m] = s[m]); }); }, lastOfPathSeparatorRegExp = /###/g, cleanKey = key => key && key.indexOf("###") > -1 ? key.replace(lastOfPathSeparatorRegExp, ".") : key, canNotTraverseDeeper = object => !object || isString(object), getLastOfPath = (object, path, Empty) => { let stack = isString(path) ? path.split(".") : path, stackIndex = 0; for (; stackIndex < stack.length - 1;) {
                if (canNotTraverseDeeper(object))
                    return {};
                let key = cleanKey(stack[stackIndex]);
                !object[key] && Empty && (object[key] = new Empty), object = Object.prototype.hasOwnProperty.call(object, key) ? object[key] : {}, ++stackIndex;
            } return canNotTraverseDeeper(object) ? {} : { obj: object, k: cleanKey(stack[stackIndex]) }; }, setPath = (object, path, newValue) => { let { obj, k } = getLastOfPath(object, path, Object); if (void 0 !== obj || 1 === path.length) {
                obj[k] = newValue;
                return;
            } let e = path[path.length - 1], p = path.slice(0, path.length - 1), last = getLastOfPath(object, p, Object); for (; void 0 === last.obj && p.length;)
                e = `${p[p.length - 1]}.${e}`, last = getLastOfPath(object, p = p.slice(0, p.length - 1), Object), last?.obj && void 0 !== last.obj[`${last.k}.${e}`] && (last.obj = void 0); last.obj[`${last.k}.${e}`] = newValue; }, pushPath = (object, path, newValue, concat) => { let { obj, k } = getLastOfPath(object, path, Object); obj[k] = obj[k] || [], obj[k].push(newValue); }, getPath = (object, path) => { let { obj, k } = getLastOfPath(object, path); if (obj && Object.prototype.hasOwnProperty.call(obj, k))
                return obj[k]; }, getPathWithDefaults = (data1, defaultData, key) => { let value = getPath(data1, key); return void 0 !== value ? value : getPath(defaultData, key); }, deepExtend = (target, source, overwrite) => { for (let prop in source)
                "__proto__" !== prop && "constructor" !== prop && (prop in target ? isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String ? overwrite && (target[prop] = source[prop]) : deepExtend(target[prop], source[prop], overwrite) : target[prop] = source[prop]); return target; }, regexEscape = str => str.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
            var _entityMap = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#x2F;" };
            let escape1 = data1 => isString(data1) ? data1.replace(/[&<>"'\/]/g, s => _entityMap[s]) : data1, chars = [" ", ",", "?", "!", ";"], looksLikeObjectPathRegExpCache = new class {
                constructor(capacity) { this.capacity = capacity, this.regExpMap = new Map, this.regExpQueue = []; }
                getRegExp(pattern) { let regExpFromCache = this.regExpMap.get(pattern); if (void 0 !== regExpFromCache)
                    return regExpFromCache; let regExpNew = new RegExp(pattern); return this.regExpQueue.length === this.capacity && this.regExpMap.delete(this.regExpQueue.shift()), this.regExpMap.set(pattern, regExpNew), this.regExpQueue.push(pattern), regExpNew; }
            }(20), looksLikeObjectPath = (key, nsSeparator, keySeparator) => { nsSeparator = nsSeparator || "", keySeparator = keySeparator || ""; let possibleChars = chars.filter(c => 0 > nsSeparator.indexOf(c) && 0 > keySeparator.indexOf(c)); if (0 === possibleChars.length)
                return !0; let r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => "?" === c ? "\\?" : c).join("|")})`), matched = !r.test(key); if (!matched) {
                let ki = key.indexOf(keySeparator);
                ki > 0 && !r.test(key.substring(0, ki)) && (matched = !0);
            } return matched; }, deepFind = (obj, path, keySeparator = ".") => { if (!obj)
                return; if (obj[path]) {
                if (!Object.prototype.hasOwnProperty.call(obj, path))
                    return;
                return obj[path];
            } let tokens = path.split(keySeparator), current = obj; for (let i = 0; i < tokens.length;) {
                let next;
                if (!current || "object" != typeof current)
                    return;
                let nextPath = "";
                for (let j = i; j < tokens.length; ++j)
                    if (j !== i && (nextPath += keySeparator), nextPath += tokens[j], void 0 !== (next = current[nextPath])) {
                        if (["string", "number", "boolean"].indexOf(typeof next) > -1 && j < tokens.length - 1)
                            continue;
                        i += j - i + 1;
                        break;
                    }
                current = next;
            } return current; }, getCleanedCode = code => code?.replace("_", "-"), consoleLogger = { type: "logger", log(args) { this.output("log", args); }, warn(args) { this.output("warn", args); }, error(args) { this.output("error", args); }, output(type, args) { console?.[type]?.apply?.(console, args); } };
            class Logger {
                constructor(concreteLogger, options1 = {}) { this.init(concreteLogger, options1); }
                init(concreteLogger, options1 = {}) { this.prefix = options1.prefix || "i18next:", this.logger = concreteLogger || consoleLogger, this.options = options1, this.debug = options1.debug; }
                log(...args) { return this.forward(args, "log", "", !0); }
                warn(...args) { return this.forward(args, "warn", "", !0); }
                error(...args) { return this.forward(args, "error", ""); }
                deprecate(...args) { return this.forward(args, "warn", "WARNING DEPRECATED: ", !0); }
                forward(args, lvl, prefix, debugOnly) { return debugOnly && !this.debug ? null : (isString(args[0]) && (args[0] = `${prefix}${this.prefix} ${args[0]}`), this.logger[lvl](args)); }
                create(moduleName) { return new Logger(this.logger, { ...{ prefix: `${this.prefix}:${moduleName}:` }, ...this.options }); }
                clone(options1) { return (options1 = options1 || this.options).prefix = options1.prefix || this.prefix, new Logger(this.logger, options1); }
            }
            var baseLogger = new Logger;
            class EventEmitter {
                constructor() { this.observers = {}; }
                on(events, listener) { return events.split(" ").forEach(event => { this.observers[event] || (this.observers[event] = new Map); let numListeners = this.observers[event].get(listener) || 0; this.observers[event].set(listener, numListeners + 1); }), this; }
                off(event, listener) { if (this.observers[event]) {
                    if (!listener)
                        return void delete this.observers[event];
                    this.observers[event].delete(listener);
                } }
                emit(event, ...args) { this.observers[event] && Array.from(this.observers[event].entries()).forEach(([observer, numTimesAdded]) => { for (let i = 0; i < numTimesAdded; i++)
                    observer(...args); }), this.observers["*"] && Array.from(this.observers["*"].entries()).forEach(([observer, numTimesAdded]) => { for (let i = 0; i < numTimesAdded; i++)
                    observer.apply(observer, [event, ...args]); }); }
            }
            class ResourceStore extends EventEmitter {
                constructor(data1, options1 = { ns: ["translation"], defaultNS: "translation" }) { super(), this.data = data1 || {}, this.options = options1, void 0 === this.options.keySeparator && (this.options.keySeparator = "."), void 0 === this.options.ignoreJSONStructure && (this.options.ignoreJSONStructure = !0); }
                addNamespaces(ns) { 0 > this.options.ns.indexOf(ns) && this.options.ns.push(ns); }
                removeNamespaces(ns) { let index = this.options.ns.indexOf(ns); index > -1 && this.options.ns.splice(index, 1); }
                getResource(lng, ns, key, options1 = {}) { let path, keySeparator = void 0 !== options1.keySeparator ? options1.keySeparator : this.options.keySeparator, ignoreJSONStructure = void 0 !== options1.ignoreJSONStructure ? options1.ignoreJSONStructure : this.options.ignoreJSONStructure; lng.indexOf(".") > -1 ? path = lng.split(".") : (path = [lng, ns], key && (Array.isArray(key) ? path.push(...key) : isString(key) && keySeparator ? path.push(...key.split(keySeparator)) : path.push(key))); let result = getPath(this.data, path); return (!result && !ns && !key && lng.indexOf(".") > -1 && (lng = path[0], ns = path[1], key = path.slice(2).join(".")), !result && ignoreJSONStructure && isString(key)) ? deepFind(this.data?.[lng]?.[ns], key, keySeparator) : result; }
                addResource(lng, ns, key, value, options1 = { silent: !1 }) { let keySeparator = void 0 !== options1.keySeparator ? options1.keySeparator : this.options.keySeparator, path = [lng, ns]; key && (path = path.concat(keySeparator ? key.split(keySeparator) : key)), lng.indexOf(".") > -1 && (path = lng.split("."), value = ns, ns = path[1]), this.addNamespaces(ns), setPath(this.data, path, value), options1.silent || this.emit("added", lng, ns, key, value); }
                addResources(lng, ns, resources, options1 = { silent: !1 }) { for (let m in resources)
                    (isString(resources[m]) || Array.isArray(resources[m])) && this.addResource(lng, ns, m, resources[m], { silent: !0 }); options1.silent || this.emit("added", lng, ns, resources); }
                addResourceBundle(lng, ns, resources, deep, overwrite, options1 = { silent: !1, skipCopy: !1 }) { let path = [lng, ns]; lng.indexOf(".") > -1 && (path = lng.split("."), deep = resources, resources = ns, ns = path[1]), this.addNamespaces(ns); let pack = getPath(this.data, path) || {}; options1.skipCopy || (resources = JSON.parse(JSON.stringify(resources))), deep ? deepExtend(pack, resources, overwrite) : pack = { ...pack, ...resources }, setPath(this.data, path, pack), options1.silent || this.emit("added", lng, ns, resources); }
                removeResourceBundle(lng, ns) { this.hasResourceBundle(lng, ns) && delete this.data[lng][ns], this.removeNamespaces(ns), this.emit("removed", lng, ns); }
                hasResourceBundle(lng, ns) { return void 0 !== this.getResource(lng, ns); }
                getResourceBundle(lng, ns) { return ns || (ns = this.options.defaultNS), this.getResource(lng, ns); }
                getDataByLanguage(lng) { return this.data[lng]; }
                hasLanguageSomeTranslations(lng) { let data1 = this.getDataByLanguage(lng); return !!(data1 && Object.keys(data1) || []).find(v => data1[v] && Object.keys(data1[v]).length > 0); }
                toJSON() { return this.data; }
            }
            var postProcessor = { processors: {}, addPostProcessor(module1) { this.processors[module1.name] = module1; }, handle(processors, value, key, options1, translator) { return processors.forEach(processor => { value = this.processors[processor]?.process(value, key, options1, translator) ?? value; }), value; } };
            let checkedLoadedFor = {}, shouldHandleAsObject = res => !isString(res) && "boolean" != typeof res && "number" != typeof res;
            class Translator extends EventEmitter {
                constructor(services, options1 = {}) { super(), copy(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], services, this), this.options = options1, void 0 === this.options.keySeparator && (this.options.keySeparator = "."), this.logger = baseLogger.create("translator"); }
                changeLanguage(lng) { lng && (this.language = lng); }
                exists(key, o = { interpolation: {} }) { let opt = { ...o }; if (null == key)
                    return !1; let resolved = this.resolve(key, opt); return resolved?.res !== void 0; }
                extractFromKey(key, opt) { let nsSeparator = void 0 !== opt.nsSeparator ? opt.nsSeparator : this.options.nsSeparator; void 0 === nsSeparator && (nsSeparator = ":"); let keySeparator = void 0 !== opt.keySeparator ? opt.keySeparator : this.options.keySeparator, namespaces = opt.ns || this.options.defaultNS || [], wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1, seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator); if (wouldCheckForNsInKey && !seemsNaturalLanguage) {
                    let m = key.match(this.interpolator.nestingRegexp);
                    if (m && m.length > 0)
                        return { key, namespaces: isString(namespaces) ? [namespaces] : namespaces };
                    let parts = key.split(nsSeparator);
                    (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) && (namespaces = parts.shift()), key = parts.join(keySeparator);
                } return { key, namespaces: isString(namespaces) ? [namespaces] : namespaces }; }
                translate(keys, o, lastKey) { let opt = "object" == typeof o ? { ...o } : o; if ("object" != typeof opt && this.options.overloadTranslationOptionHandler && (opt = this.options.overloadTranslationOptionHandler(arguments)), "object" == typeof options && (opt = { ...opt }), opt || (opt = {}), null == keys)
                    return ""; Array.isArray(keys) || (keys = [String(keys)]); let returnDetails = void 0 !== opt.returnDetails ? opt.returnDetails : this.options.returnDetails, keySeparator = void 0 !== opt.keySeparator ? opt.keySeparator : this.options.keySeparator, { key, namespaces } = this.extractFromKey(keys[keys.length - 1], opt), namespace = namespaces[namespaces.length - 1], nsSeparator = void 0 !== opt.nsSeparator ? opt.nsSeparator : this.options.nsSeparator; void 0 === nsSeparator && (nsSeparator = ":"); let lng = opt.lng || this.language, appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode; if (lng?.toLowerCase() === "cimode")
                    return appendNamespaceToCIMode ? returnDetails ? { res: `${namespace}${nsSeparator}${key}`, usedKey: key, exactUsedKey: key, usedLng: lng, usedNS: namespace, usedParams: this.getUsedParamsDetails(opt) } : `${namespace}${nsSeparator}${key}` : returnDetails ? { res: key, usedKey: key, exactUsedKey: key, usedLng: lng, usedNS: namespace, usedParams: this.getUsedParamsDetails(opt) } : key; let resolved = this.resolve(keys, opt), res = resolved?.res, resUsedKey = resolved?.usedKey || key, resExactUsedKey = resolved?.exactUsedKey || key, joinArrays = void 0 !== opt.joinArrays ? opt.joinArrays : this.options.joinArrays, handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject, needsPluralHandling = void 0 !== opt.count && !isString(opt.count), hasDefaultValue = Translator.hasDefaultValue(opt), defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : "", defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, { ordinal: !1 }) : "", needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && 0 === opt.count, defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue, resForObjHndl = res; handleAsObjectInI18nFormat && !res && hasDefaultValue && (resForObjHndl = defaultValue); let handleAsObject = shouldHandleAsObject(resForObjHndl), resType = Object.prototype.toString.apply(resForObjHndl); if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && 0 > ["[object Number]", "[object Function]", "[object RegExp]"].indexOf(resType) && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {
                    if (!opt.returnObjects && !this.options.returnObjects) {
                        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
                        let r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, { ...opt, ns: namespaces }) : `key '${key} (${this.language})' returned an object instead of string.`;
                        return returnDetails ? (resolved.res = r, resolved.usedParams = this.getUsedParamsDetails(opt), resolved) : r;
                    }
                    if (keySeparator) {
                        let resTypeIsArray = Array.isArray(resForObjHndl), copy = resTypeIsArray ? [] : {}, newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;
                        for (let m in resForObjHndl)
                            if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {
                                let deepKey = `${newKeyToUse}${keySeparator}${m}`;
                                hasDefaultValue && !res ? copy[m] = this.translate(deepKey, { ...opt, defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : void 0, ...{ joinArrays: !1, ns: namespaces } }) : copy[m] = this.translate(deepKey, { ...opt, joinArrays: !1, ns: namespaces }), copy[m] === deepKey && (copy[m] = resForObjHndl[m]);
                            }
                        res = copy;
                    }
                }
                else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res))
                    (res = res.join(joinArrays)) && (res = this.extendTranslation(res, keys, opt, lastKey));
                else {
                    let usedDefault = !1, usedKey = !1;
                    !this.isValidLookup(res) && hasDefaultValue && (usedDefault = !0, res = defaultValue), this.isValidLookup(res) || (usedKey = !0, res = key);
                    let resForMissing = (opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && usedKey ? void 0 : res, updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;
                    if (usedKey || usedDefault || updateMissing) {
                        if (this.logger.log(updateMissing ? "updateKey" : "missingKey", lng, namespace, key, updateMissing ? defaultValue : res), keySeparator) {
                            let fk = this.resolve(key, { ...opt, keySeparator: !1 });
                            fk && fk.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
                        }
                        let lngs = [], fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);
                        if ("fallback" === this.options.saveMissingTo && fallbackLngs && fallbackLngs[0])
                            for (let i = 0; i < fallbackLngs.length; i++)
                                lngs.push(fallbackLngs[i]);
                        else
                            "all" === this.options.saveMissingTo ? lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language) : lngs.push(opt.lng || this.language);
                        let send = (l, k, specificDefaultValue) => { let defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing; this.options.missingKeyHandler ? this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt) : this.backendConnector?.saveMissing && this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt), this.emit("missingKey", l, namespace, k, res); };
                        this.options.saveMissing && (this.options.saveMissingPlurals && needsPluralHandling ? lngs.forEach(language => { let suffixes = this.pluralResolver.getSuffixes(language, opt); needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && 0 > suffixes.indexOf(`${this.options.pluralSeparator}zero`) && suffixes.push(`${this.options.pluralSeparator}zero`), suffixes.forEach(suffix => { send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue); }); }) : send(lngs, key, defaultValue));
                    }
                    res = this.extendTranslation(res, keys, opt, resolved, lastKey), usedKey && res === key && this.options.appendNamespaceToMissingKey && (res = `${namespace}${nsSeparator}${key}`), (usedKey || usedDefault) && this.options.parseMissingKeyHandler && (res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : void 0, opt));
                } return returnDetails ? (resolved.res = res, resolved.usedParams = this.getUsedParamsDetails(opt), resolved) : res; }
                extendTranslation(res, key, opt, resolved, lastKey) { if (this.i18nFormat?.parse)
                    res = this.i18nFormat.parse(res, { ...this.options.interpolation.defaultVariables, ...opt }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, { resolved });
                else if (!opt.skipInterpolation) {
                    let nestBef;
                    opt.interpolation && this.interpolator.init({ ...opt, ...{ interpolation: { ...this.options.interpolation, ...opt.interpolation } } });
                    let skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== void 0 ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
                    if (skipOnVariables) {
                        let nb = res.match(this.interpolator.nestingRegexp);
                        nestBef = nb && nb.length;
                    }
                    let data1 = opt.replace && !isString(opt.replace) ? opt.replace : opt;
                    if (this.options.interpolation.defaultVariables && (data1 = { ...this.options.interpolation.defaultVariables, ...data1 }), res = this.interpolator.interpolate(res, data1, opt.lng || this.language || resolved.usedLng, opt), skipOnVariables) {
                        let na = res.match(this.interpolator.nestingRegexp);
                        nestBef < (na && na.length) && (opt.nest = !1);
                    }
                    !opt.lng && resolved && resolved.res && (opt.lng = this.language || resolved.usedLng), !1 !== opt.nest && (res = this.interpolator.nest(res, (...args) => lastKey?.[0] !== args[0] || opt.context ? this.translate(...args, key) : (this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`), null), opt)), opt.interpolation && this.interpolator.reset();
                } let postProcess = opt.postProcess || this.options.postProcess, postProcessorNames = isString(postProcess) ? [postProcess] : postProcess; return null != res && postProcessorNames?.length && !1 !== opt.applyPostProcessor && (res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? { i18nResolved: { ...resolved, usedParams: this.getUsedParamsDetails(opt) }, ...opt } : opt, this)), res; }
                resolve(keys, opt = {}) { let found, usedKey, exactUsedKey, usedLng, usedNS; return isString(keys) && (keys = [keys]), keys.forEach(k => { if (this.isValidLookup(found))
                    return; let extracted = this.extractFromKey(k, opt), key = extracted.key; usedKey = key; let namespaces = extracted.namespaces; this.options.fallbackNS && (namespaces = namespaces.concat(this.options.fallbackNS)); let needsPluralHandling = void 0 !== opt.count && !isString(opt.count), needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && 0 === opt.count, needsContextHandling = void 0 !== opt.context && (isString(opt.context) || "number" == typeof opt.context) && "" !== opt.context, codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng); namespaces.forEach(ns => { this.isValidLookup(found) || (usedNS = ns, !checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS) && (checkedLoadedFor[`${codes[0]}-${ns}`] = !0, this.logger.warn(`key "${usedKey}" for languages "${codes.join(", ")}" won't get resolved as namespace "${usedNS}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), codes.forEach(code => { let possibleKey; if (this.isValidLookup(found))
                    return; usedLng = code; let finalKeys = [key]; if (this.i18nFormat?.addLookupKeys)
                    this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);
                else {
                    let pluralSuffix;
                    needsPluralHandling && (pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt));
                    let zeroSuffix = `${this.options.pluralSeparator}zero`, ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                    if (needsPluralHandling && (finalKeys.push(key + pluralSuffix), opt.ordinal && 0 === pluralSuffix.indexOf(ordinalPrefix) && finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator)), needsZeroSuffixLookup && finalKeys.push(key + zeroSuffix)), needsContextHandling) {
                        let contextKey = `${key}${this.options.contextSeparator}${opt.context}`;
                        finalKeys.push(contextKey), needsPluralHandling && (finalKeys.push(contextKey + pluralSuffix), opt.ordinal && 0 === pluralSuffix.indexOf(ordinalPrefix) && finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator)), needsZeroSuffixLookup && finalKeys.push(contextKey + zeroSuffix));
                    }
                } for (; possibleKey = finalKeys.pop();)
                    this.isValidLookup(found) || (exactUsedKey = possibleKey, found = this.getResource(code, ns, possibleKey, opt)); })); }); }), { res: found, usedKey, exactUsedKey, usedLng, usedNS }; }
                isValidLookup(res) { return void 0 !== res && !(!this.options.returnNull && null === res) && !(!this.options.returnEmptyString && "" === res); }
                getResource(code, ns, key, options1 = {}) { return this.i18nFormat?.getResource ? this.i18nFormat.getResource(code, ns, key, options1) : this.resourceStore.getResource(code, ns, key, options1); }
                getUsedParamsDetails(options1 = {}) { let useOptionsReplaceForData = options1.replace && !isString(options1.replace), data1 = useOptionsReplaceForData ? options1.replace : options1; if (useOptionsReplaceForData && void 0 !== options1.count && (data1.count = options1.count), this.options.interpolation.defaultVariables && (data1 = { ...this.options.interpolation.defaultVariables, ...data1 }), !useOptionsReplaceForData)
                    for (let key of (data1 = { ...data1 }, ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"]))
                        delete data1[key]; return data1; }
                static hasDefaultValue(options1) { let prefix = "defaultValue"; for (let option in options1)
                    if (Object.prototype.hasOwnProperty.call(options1, option) && prefix === option.substring(0, prefix.length) && void 0 !== options1[option])
                        return !0; return !1; }
            }
            class LanguageUtil {
                constructor(options1) { this.options = options1, this.supportedLngs = this.options.supportedLngs || !1, this.logger = baseLogger.create("languageUtils"); }
                getScriptPartFromCode(code) { if (!(code = getCleanedCode(code)) || 0 > code.indexOf("-"))
                    return null; let p = code.split("-"); return 2 === p.length || (p.pop(), "x" === p[p.length - 1].toLowerCase()) ? null : this.formatLanguageCode(p.join("-")); }
                getLanguagePartFromCode(code) { if (!(code = getCleanedCode(code)) || 0 > code.indexOf("-"))
                    return code; let p = code.split("-"); return this.formatLanguageCode(p[0]); }
                formatLanguageCode(code) { if (isString(code) && code.indexOf("-") > -1) {
                    let formattedCode;
                    try {
                        formattedCode = Intl.getCanonicalLocales(code)[0];
                    }
                    catch (e) { }
                    return (formattedCode && this.options.lowerCaseLng && (formattedCode = formattedCode.toLowerCase()), formattedCode) ? formattedCode : this.options.lowerCaseLng ? code.toLowerCase() : code;
                } return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code; }
                isSupportedCode(code) { return ("languageOnly" === this.options.load || this.options.nonExplicitSupportedLngs) && (code = this.getLanguagePartFromCode(code)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1; }
                getBestMatchFromCodes(codes) { let found; return codes ? (codes.forEach(code => { if (found)
                    return; let cleanedLng = this.formatLanguageCode(code); (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) && (found = cleanedLng); }), !found && this.options.supportedLngs && codes.forEach(code => { if (found)
                    return; let lngScOnly = this.getScriptPartFromCode(code); if (this.isSupportedCode(lngScOnly))
                    return found = lngScOnly; let lngOnly = this.getLanguagePartFromCode(code); if (this.isSupportedCode(lngOnly))
                    return found = lngOnly; found = this.options.supportedLngs.find(supportedLng => { if (supportedLng === lngOnly || !(0 > supportedLng.indexOf("-") && 0 > lngOnly.indexOf("-")) && (supportedLng.indexOf("-") > 0 && 0 > lngOnly.indexOf("-") && supportedLng.substring(0, supportedLng.indexOf("-")) === lngOnly || 0 === supportedLng.indexOf(lngOnly) && lngOnly.length > 1))
                    return supportedLng; }); }), found || (found = this.getFallbackCodes(this.options.fallbackLng)[0]), found) : null; }
                getFallbackCodes(fallbacks, code) { if (!fallbacks)
                    return []; if ("function" == typeof fallbacks && (fallbacks = fallbacks(code)), isString(fallbacks) && (fallbacks = [fallbacks]), Array.isArray(fallbacks))
                    return fallbacks; if (!code)
                    return fallbacks.default || []; let found = fallbacks[code]; return found || (found = fallbacks[this.getScriptPartFromCode(code)]), found || (found = fallbacks[this.formatLanguageCode(code)]), found || (found = fallbacks[this.getLanguagePartFromCode(code)]), found || (found = fallbacks.default), found || []; }
                toResolveHierarchy(code, fallbackCode) { let fallbackCodes = this.getFallbackCodes((!1 === fallbackCode ? [] : fallbackCode) || this.options.fallbackLng || [], code), codes = [], addCode = c => { c && (this.isSupportedCode(c) ? codes.push(c) : this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`)); }; return isString(code) && (code.indexOf("-") > -1 || code.indexOf("_") > -1) ? ("languageOnly" !== this.options.load && addCode(this.formatLanguageCode(code)), "languageOnly" !== this.options.load && "currentOnly" !== this.options.load && addCode(this.getScriptPartFromCode(code)), "currentOnly" !== this.options.load && addCode(this.getLanguagePartFromCode(code))) : isString(code) && addCode(this.formatLanguageCode(code)), fallbackCodes.forEach(fc => { 0 > codes.indexOf(fc) && addCode(this.formatLanguageCode(fc)); }), codes; }
            }
            let suffixesOrder = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 }, dummyRule = { select: count => 1 === count ? "one" : "other", resolvedOptions: () => ({ pluralCategories: ["one", "other"] }) };
            class PluralResolver {
                constructor(languageUtils, options1 = {}) { this.languageUtils = languageUtils, this.options = options1, this.logger = baseLogger.create("pluralResolver"), this.pluralRulesCache = {}; }
                addRule(lng, obj) { this.rules[lng] = obj; }
                clearCache() { this.pluralRulesCache = {}; }
                getRule(code, options1 = {}) { let rule, cleanedCode = getCleanedCode("dev" === code ? "en" : code), type = options1.ordinal ? "ordinal" : "cardinal", cacheKey = JSON.stringify({ cleanedCode, type }); if (cacheKey in this.pluralRulesCache)
                    return this.pluralRulesCache[cacheKey]; try {
                    rule = new Intl.PluralRules(cleanedCode, { type });
                }
                catch (err) {
                    if (!Intl)
                        return this.logger.error("No Intl support, please use an Intl polyfill!"), dummyRule;
                    if (!code.match(/-|_/))
                        return dummyRule;
                    let lngPart = this.languageUtils.getLanguagePartFromCode(code);
                    rule = this.getRule(lngPart, options1);
                } return this.pluralRulesCache[cacheKey] = rule, rule; }
                needsPlural(code, options1 = {}) { let rule = this.getRule(code, options1); return rule || (rule = this.getRule("dev", options1)), rule?.resolvedOptions().pluralCategories.length > 1; }
                getPluralFormsOfKey(code, key, options1 = {}) { return this.getSuffixes(code, options1).map(suffix => `${key}${suffix}`); }
                getSuffixes(code, options1 = {}) { let rule = this.getRule(code, options1); return (rule || (rule = this.getRule("dev", options1)), rule) ? rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options1.ordinal ? `ordinal${this.options.prepend}` : ""}${pluralCategory}`) : []; }
                getSuffix(code, count, options1 = {}) { let rule = this.getRule(code, options1); return rule ? `${this.options.prepend}${options1.ordinal ? `ordinal${this.options.prepend}` : ""}${rule.select(count)}` : (this.logger.warn(`no plural rule found for: ${code}`), this.getSuffix("dev", count, options1)); }
            }
            let deepFindWithDefaults = (data1, defaultData, key, keySeparator = ".", ignoreJSONStructure = !0) => { let path = getPathWithDefaults(data1, defaultData, key); return !path && ignoreJSONStructure && isString(key) && void 0 === (path = deepFind(data1, key, keySeparator)) && (path = deepFind(defaultData, key, keySeparator)), path; }, regexSafe = val1 => val1.replace(/\$/g, "$$$$");
            class Interpolator {
                constructor(options1 = {}) { this.logger = baseLogger.create("interpolator"), this.options = options1, this.format = options1?.interpolation?.format || (value => value), this.init(options1); }
                init(options1 = {}) { options1.interpolation || (options1.interpolation = { escapeValue: !0 }); let { escape: escape$1, escapeValue, useRawValueToEscape, prefix, prefixEscaped, suffix, suffixEscaped, formatSeparator, unescapeSuffix, unescapePrefix, nestingPrefix, nestingPrefixEscaped, nestingSuffix, nestingSuffixEscaped, nestingOptionsSeparator, maxReplaces, alwaysFormat } = options1.interpolation; this.escape = void 0 !== escape$1 ? escape$1 : escape1, this.escapeValue = void 0 === escapeValue || escapeValue, this.useRawValueToEscape = void 0 !== useRawValueToEscape && useRawValueToEscape, this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || "{{", this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || "}}", this.formatSeparator = formatSeparator || ",", this.unescapePrefix = unescapeSuffix ? "" : unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : unescapeSuffix || "", this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape("$t("), this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(")"), this.nestingOptionsSeparator = nestingOptionsSeparator || ",", this.maxReplaces = maxReplaces || 1e3, this.alwaysFormat = void 0 !== alwaysFormat && alwaysFormat, this.resetRegExp(); }
                reset() { this.options && this.init(this.options); }
                resetRegExp() { let getOrResetRegExp = (existingRegExp, pattern) => existingRegExp?.source === pattern ? (existingRegExp.lastIndex = 0, existingRegExp) : RegExp(pattern, "g"); this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`), this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`), this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`); }
                interpolate(str, data1, lng, options1) { let match, value, replaces, defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {}, handleFormat = key => { if (0 > key.indexOf(this.formatSeparator)) {
                    let path = deepFindWithDefaults(data1, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);
                    return this.alwaysFormat ? this.format(path, void 0, lng, { ...options1, ...data1, interpolationkey: key }) : path;
                } let p = key.split(this.formatSeparator), k = p.shift().trim(), f = p.join(this.formatSeparator).trim(); return this.format(deepFindWithDefaults(data1, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, { ...options1, ...data1, interpolationkey: k }); }; this.resetRegExp(); let missingInterpolationHandler = options1?.missingInterpolationHandler || this.options.missingInterpolationHandler, skipOnVariables = options1?.interpolation?.skipOnVariables !== void 0 ? options1.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables; return [{ regex: this.regexpUnescape, safeValue: val1 => regexSafe(val1) }, { regex: this.regexp, safeValue: val1 => this.escapeValue ? regexSafe(this.escape(val1)) : regexSafe(val1) }].forEach(todo => { for (replaces = 0; match = todo.regex.exec(str);) {
                    let matchedVar = match[1].trim();
                    if (void 0 === (value = handleFormat(matchedVar)))
                        if ("function" == typeof missingInterpolationHandler) {
                            let temp = missingInterpolationHandler(str, match, options1);
                            value = isString(temp) ? temp : "";
                        }
                        else if (options1 && Object.prototype.hasOwnProperty.call(options1, matchedVar))
                            value = "";
                        else if (skipOnVariables) {
                            value = match[0];
                            continue;
                        }
                        else
                            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`), value = "";
                    else
                        isString(value) || this.useRawValueToEscape || (value = makeString(value));
                    let safeValue = todo.safeValue(value);
                    if (str = str.replace(match[0], safeValue), skipOnVariables ? (todo.regex.lastIndex += value.length, todo.regex.lastIndex -= match[0].length) : todo.regex.lastIndex = 0, ++replaces >= this.maxReplaces)
                        break;
                } }), str; }
                nest(str, fc, options1 = {}) { let match, value, clonedOptions, handleHasOptions = (key, inheritedOptions) => { let sep = this.nestingOptionsSeparator; if (0 > key.indexOf(sep))
                    return key; let c = key.split(RegExp(`${sep}[ ]*{`)), optionsString = `{${c[1]}`; key = c[0]; let matchedSingleQuotes = (optionsString = this.interpolate(optionsString, clonedOptions)).match(/'/g), matchedDoubleQuotes = optionsString.match(/"/g); ((matchedSingleQuotes?.length ?? 0) % 2 != 0 || matchedDoubleQuotes) && matchedDoubleQuotes.length % 2 == 0 || (optionsString = optionsString.replace(/'/g, '"')); try {
                    clonedOptions = JSON.parse(optionsString), inheritedOptions && (clonedOptions = { ...inheritedOptions, ...clonedOptions });
                }
                catch (e) {
                    return this.logger.warn(`failed parsing options string in nesting for key ${key}`, e), `${key}${sep}${optionsString}`;
                } return clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1 && delete clonedOptions.defaultValue, key; }; for (; match = this.nestingRegexp.exec(str);) {
                    let formatters = [];
                    (clonedOptions = (clonedOptions = { ...options1 }).replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions).applyPostProcessor = !1, delete clonedOptions.defaultValue;
                    let doReduce = !1;
                    if (-1 !== match[0].indexOf(this.formatSeparator) && !/{.*}/.test(match[1])) {
                        let r = match[1].split(this.formatSeparator).map(elem => elem.trim());
                        match[1] = r.shift(), formatters = r, doReduce = !0;
                    }
                    if ((value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions)) && match[0] === str && !isString(value))
                        return value;
                    isString(value) || (value = makeString(value)), value || (this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`), value = ""), doReduce && (value = formatters.reduce((v, f) => this.format(v, f, options1.lng, { ...options1, interpolationkey: match[1].trim() }), value.trim())), str = str.replace(match[0], value), this.regexp.lastIndex = 0;
                } return str; }
            }
            let parseFormatStr = formatStr => { let formatName = formatStr.toLowerCase().trim(), formatOptions = {}; if (formatStr.indexOf("(") > -1) {
                let p = formatStr.split("(");
                formatName = p[0].toLowerCase().trim();
                let optStr = p[1].substring(0, p[1].length - 1);
                "currency" === formatName && 0 > optStr.indexOf(":") ? formatOptions.currency || (formatOptions.currency = optStr.trim()) : "relativetime" === formatName && 0 > optStr.indexOf(":") ? formatOptions.range || (formatOptions.range = optStr.trim()) : optStr.split(";").forEach(opt => { if (opt) {
                    let [key, ...rest] = opt.split(":"), val1 = rest.join(":").trim().replace(/^'+|'+$/g, ""), trimmedKey = key.trim();
                    formatOptions[trimmedKey] || (formatOptions[trimmedKey] = val1), "false" === val1 && (formatOptions[trimmedKey] = !1), "true" === val1 && (formatOptions[trimmedKey] = !0), isNaN(val1) || (formatOptions[trimmedKey] = parseInt(val1, 10));
                } });
            } return { formatName, formatOptions }; }, createCachedFormatter = fn => { let cache = {}; return (v, l, o) => { let optForCache = o; o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey] && (optForCache = { ...optForCache, [o.interpolationkey]: void 0 }); let key = l + JSON.stringify(optForCache), frm = cache[key]; return frm || (frm = fn(getCleanedCode(l), o), cache[key] = frm), frm(v); }; }, createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);
            class Formatter {
                constructor(options1 = {}) { this.logger = baseLogger.create("formatter"), this.options = options1, this.init(options1); }
                init(services, options1 = { interpolation: {} }) { this.formatSeparator = options1.interpolation.formatSeparator || ","; let cf = options1.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter; this.formats = { number: cf((lng, opt) => { let formatter = new Intl.NumberFormat(lng, { ...opt }); return val1 => formatter.format(val1); }), currency: cf((lng, opt) => { let formatter = new Intl.NumberFormat(lng, { ...opt, style: "currency" }); return val1 => formatter.format(val1); }), datetime: cf((lng, opt) => { let formatter = new Intl.DateTimeFormat(lng, { ...opt }); return val1 => formatter.format(val1); }), relativetime: cf((lng, opt) => { let formatter = new Intl.RelativeTimeFormat(lng, { ...opt }); return val1 => formatter.format(val1, opt.range || "day"); }), list: cf((lng, opt) => { let formatter = new Intl.ListFormat(lng, { ...opt }); return val1 => formatter.format(val1); }) }; }
                add(name, fc) { this.formats[name.toLowerCase().trim()] = fc; }
                addCached(name, fc) { this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc); }
                format(value, format, lng, options1 = {}) { let formats = format.split(this.formatSeparator); if (formats.length > 1 && formats[0].indexOf("(") > 1 && 0 > formats[0].indexOf(")") && formats.find(f => f.indexOf(")") > -1)) {
                    let lastIndex = formats.findIndex(f => f.indexOf(")") > -1);
                    formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);
                } return formats.reduce((mem, f) => { let { formatName, formatOptions } = parseFormatStr(f); if (this.formats[formatName]) {
                    let formatted = mem;
                    try {
                        let valOptions = options1?.formatParams?.[options1.interpolationkey] || {}, l = valOptions.locale || valOptions.lng || options1.locale || options1.lng || lng;
                        formatted = this.formats[formatName](mem, l, { ...formatOptions, ...options1, ...valOptions });
                    }
                    catch (error) {
                        this.logger.warn(error);
                    }
                    return formatted;
                } return this.logger.warn(`there was no format function for ${formatName}`), mem; }, value); }
            }
            let removePending = (q, name) => { void 0 !== q.pending[name] && (delete q.pending[name], q.pendingCount--); };
            class Connector extends EventEmitter {
                constructor(backend, store, services, options1 = {}) { super(), this.backend = backend, this.store = store, this.services = services, this.languageUtils = services.languageUtils, this.options = options1, this.logger = baseLogger.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = options1.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = options1.maxRetries >= 0 ? options1.maxRetries : 5, this.retryTimeout = options1.retryTimeout >= 1 ? options1.retryTimeout : 350, this.state = {}, this.queue = [], this.backend?.init?.(services, options1.backend, options1); }
                queueLoad(languages, namespaces, options1, callback) { let toLoad = {}, pending = {}, toLoadLanguages = {}, toLoadNamespaces = {}; return languages.forEach(lng => { let hasAllNamespaces = !0; namespaces.forEach(ns => { let name = `${lng}|${ns}`; !options1.reload && this.store.hasResourceBundle(lng, ns) ? this.state[name] = 2 : this.state[name] < 0 || (1 === this.state[name] ? void 0 === pending[name] && (pending[name] = !0) : (this.state[name] = 1, hasAllNamespaces = !1, void 0 === pending[name] && (pending[name] = !0), void 0 === toLoad[name] && (toLoad[name] = !0), void 0 === toLoadNamespaces[ns] && (toLoadNamespaces[ns] = !0))); }), hasAllNamespaces || (toLoadLanguages[lng] = !0); }), (Object.keys(toLoad).length || Object.keys(pending).length) && this.queue.push({ pending, pendingCount: Object.keys(pending).length, loaded: {}, errors: [], callback }), { toLoad: Object.keys(toLoad), pending: Object.keys(pending), toLoadLanguages: Object.keys(toLoadLanguages), toLoadNamespaces: Object.keys(toLoadNamespaces) }; }
                loaded(name, err, data1) { let s = name.split("|"), lng = s[0], ns = s[1]; err && this.emit("failedLoading", lng, ns, err), !err && data1 && this.store.addResourceBundle(lng, ns, data1, void 0, void 0, { skipCopy: !0 }), this.state[name] = err ? -1 : 2, err && data1 && (this.state[name] = 0); let loaded = {}; this.queue.forEach(q => { pushPath(q.loaded, [lng], ns), removePending(q, name), err && q.errors.push(err), 0 !== q.pendingCount || q.done || (Object.keys(q.loaded).forEach(l => { loaded[l] || (loaded[l] = {}); let loadedKeys = q.loaded[l]; loadedKeys.length && loadedKeys.forEach(n => { void 0 === loaded[l][n] && (loaded[l][n] = !0); }); }), q.done = !0, q.errors.length ? q.callback(q.errors) : q.callback()); }), this.emit("loaded", loaded), this.queue = this.queue.filter(q => !q.done); }
                read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) { if (!lng.length)
                    return callback(null, {}); if (this.readingCalls >= this.maxParallelReads)
                    return void this.waitingReads.push({ lng, ns, fcName, tried, wait, callback }); this.readingCalls++; let resolver = (err, data1) => { if (this.readingCalls--, this.waitingReads.length > 0) {
                    let next = this.waitingReads.shift();
                    this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);
                } if (err && data1 && tried < this.maxRetries)
                    return void setTimeout(() => { this.read.call(this, lng, ns, fcName, tried + 1, 2 * wait, callback); }, wait); callback(err, data1); }, fc = this.backend[fcName].bind(this.backend); if (2 === fc.length) {
                    try {
                        let r = fc(lng, ns);
                        r && "function" == typeof r.then ? r.then(data1 => resolver(null, data1)).catch(resolver) : resolver(null, r);
                    }
                    catch (err) {
                        resolver(err);
                    }
                    return;
                } return fc(lng, ns, resolver); }
                prepareLoading(languages, namespaces, options1 = {}, callback) { if (!this.backend)
                    return this.logger.warn("No backend was added via i18next.use. Will not load resources."), callback && callback(); isString(languages) && (languages = this.languageUtils.toResolveHierarchy(languages)), isString(namespaces) && (namespaces = [namespaces]); let toLoad = this.queueLoad(languages, namespaces, options1, callback); if (!toLoad.toLoad.length)
                    return toLoad.pending.length || callback(), null; toLoad.toLoad.forEach(name => { this.loadOne(name); }); }
                load(languages, namespaces, callback) { this.prepareLoading(languages, namespaces, {}, callback); }
                reload(languages, namespaces, callback) { this.prepareLoading(languages, namespaces, { reload: !0 }, callback); }
                loadOne(name, prefix = "") { let s = name.split("|"), lng = s[0], ns = s[1]; this.read(lng, ns, "read", void 0, void 0, (err, data1) => { err && this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err), !err && data1 && this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data1), this.loaded(name, err, data1); }); }
                saveMissing(languages, namespace, key, fallbackValue, isUpdate, options1 = {}, clb = () => { }) { if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace))
                    return void this.logger.warn(`did not save key "${key}" as the namespace "${namespace}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"); if (null != key && "" !== key) {
                    if (this.backend?.create) {
                        let opts = { ...options1, isUpdate }, fc = this.backend.create.bind(this.backend);
                        if (fc.length < 6)
                            try {
                                let r;
                                (r = 5 === fc.length ? fc(languages, namespace, key, fallbackValue, opts) : fc(languages, namespace, key, fallbackValue)) && "function" == typeof r.then ? r.then(data1 => clb(null, data1)).catch(clb) : clb(null, r);
                            }
                            catch (err) {
                                clb(err);
                            }
                        else
                            fc(languages, namespace, key, fallbackValue, clb, opts);
                    }
                    languages && languages[0] && this.store.addResource(languages[0], namespace, key, fallbackValue);
                } }
            }
            let get = () => ({ debug: !1, initAsync: !0, ns: ["translation"], defaultNS: ["translation"], fallbackLng: ["dev"], fallbackNS: !1, supportedLngs: !1, nonExplicitSupportedLngs: !1, load: "all", preload: !1, simplifyPluralSuffix: !0, keySeparator: ".", nsSeparator: ":", pluralSeparator: "_", contextSeparator: "_", partialBundledLanguages: !1, saveMissing: !1, updateMissing: !1, saveMissingTo: "fallback", saveMissingPlurals: !0, missingKeyHandler: !1, missingInterpolationHandler: !1, postProcess: !1, postProcessPassResolved: !1, returnNull: !1, returnEmptyString: !0, returnObjects: !1, joinArrays: !1, returnedObjectHandler: !1, parseMissingKeyHandler: !1, appendNamespaceToMissingKey: !1, appendNamespaceToCIMode: !1, overloadTranslationOptionHandler: args => { let ret = {}; if ("object" == typeof args[1] && (ret = args[1]), isString(args[1]) && (ret.defaultValue = args[1]), isString(args[2]) && (ret.tDescription = args[2]), "object" == typeof args[2] || "object" == typeof args[3]) {
                    let options1 = args[3] || args[2];
                    Object.keys(options1).forEach(key => { ret[key] = options1[key]; });
                } return ret; }, interpolation: { escapeValue: !0, format: value => value, prefix: "{{", suffix: "}}", formatSeparator: ",", unescapePrefix: "-", nestingPrefix: "$t(", nestingSuffix: ")", nestingOptionsSeparator: ",", maxReplaces: 1e3, skipOnVariables: !0 }, cacheInBuiltFormats: !0 }), transformOptions = options1 => (isString(options1.ns) && (options1.ns = [options1.ns]), isString(options1.fallbackLng) && (options1.fallbackLng = [options1.fallbackLng]), isString(options1.fallbackNS) && (options1.fallbackNS = [options1.fallbackNS]), options1.supportedLngs?.indexOf?.("cimode") < 0 && (options1.supportedLngs = options1.supportedLngs.concat(["cimode"])), "boolean" == typeof options1.initImmediate && (options1.initAsync = options1.initImmediate), options1), noop = () => { }, bindMemberFunctions = inst => { Object.getOwnPropertyNames(Object.getPrototypeOf(inst)).forEach(mem => { "function" == typeof inst[mem] && (inst[mem] = inst[mem].bind(inst)); }); };
            class I18n extends EventEmitter {
                constructor(options1 = {}, callback) { if (super(), this.options = transformOptions(options1), this.services = {}, this.logger = baseLogger, this.modules = { external: [] }, bindMemberFunctions(this), callback && !this.isInitialized && !options1.isClone) {
                    if (!this.options.initAsync)
                        return this.init(options1, callback), this;
                    setTimeout(() => { this.init(options1, callback); }, 0);
                } }
                init(options1 = {}, callback) { this.isInitializing = !0, "function" == typeof options1 && (callback = options1, options1 = {}), null == options1.defaultNS && options1.ns && (isString(options1.ns) ? options1.defaultNS = options1.ns : 0 > options1.ns.indexOf("translation") && (options1.defaultNS = options1.ns[0])); let defOpts = get(); this.options = { ...defOpts, ...this.options, ...transformOptions(options1) }, this.options.interpolation = { ...defOpts.interpolation, ...this.options.interpolation }, void 0 !== options1.keySeparator && (this.options.userDefinedKeySeparator = options1.keySeparator), void 0 !== options1.nsSeparator && (this.options.userDefinedNsSeparator = options1.nsSeparator); let createClassOnDemand = ClassOrObject => ClassOrObject ? "function" == typeof ClassOrObject ? new ClassOrObject : ClassOrObject : null; if (!this.options.isClone) {
                    let formatter;
                    this.modules.logger ? baseLogger.init(createClassOnDemand(this.modules.logger), this.options) : baseLogger.init(null, this.options), formatter = this.modules.formatter ? this.modules.formatter : Formatter;
                    let lu = new LanguageUtil(this.options);
                    this.store = new ResourceStore(this.options.resources, this.options);
                    let s = this.services;
                    s.logger = baseLogger, s.resourceStore = this.store, s.languageUtils = lu, s.pluralResolver = new PluralResolver(lu, { prepend: this.options.pluralSeparator, simplifyPluralSuffix: this.options.simplifyPluralSuffix }), formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format) && (s.formatter = createClassOnDemand(formatter), s.formatter.init(s, this.options), this.options.interpolation.format = s.formatter.format.bind(s.formatter)), s.interpolator = new Interpolator(this.options), s.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) }, s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options), s.backendConnector.on("*", (event, ...args) => { this.emit(event, ...args); }), this.modules.languageDetector && (s.languageDetector = createClassOnDemand(this.modules.languageDetector), s.languageDetector.init && s.languageDetector.init(s, this.options.detection, this.options)), this.modules.i18nFormat && (s.i18nFormat = createClassOnDemand(this.modules.i18nFormat), s.i18nFormat.init && s.i18nFormat.init(this)), this.translator = new Translator(this.services, this.options), this.translator.on("*", (event, ...args) => { this.emit(event, ...args); }), this.modules.external.forEach(m => { m.init && m.init(this); });
                } if (this.format = this.options.interpolation.format, callback || (callback = noop), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
                    let codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
                    codes.length > 0 && "dev" !== codes[0] && (this.options.lng = codes[0]);
                } this.services.languageDetector || this.options.lng || this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach(fcName => { this[fcName] = (...args) => this.store[fcName](...args); }), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach(fcName => { this[fcName] = (...args) => (this.store[fcName](...args), this); }); let deferred = defer(), load = () => { let finish = (err, t) => { this.isInitializing = !1, this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), deferred.resolve(t), callback(err, t); }; if (this.languages && !this.isInitialized)
                    return finish(null, this.t.bind(this)); this.changeLanguage(this.options.lng, finish); }; return this.options.resources || !this.options.initAsync ? load() : setTimeout(load, 0), deferred; }
                loadResources(language, callback = noop) { let usedCallback = callback, usedLng = isString(language) ? language : this.language; if ("function" == typeof language && (usedCallback = language), !this.options.resources || this.options.partialBundledLanguages) {
                    if (usedLng?.toLowerCase() === "cimode" && (!this.options.preload || 0 === this.options.preload.length))
                        return usedCallback();
                    let toLoad = [], append = lng => { lng && "cimode" !== lng && this.services.languageUtils.toResolveHierarchy(lng).forEach(l => { "cimode" !== l && 0 > toLoad.indexOf(l) && toLoad.push(l); }); };
                    usedLng ? append(usedLng) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(l => append(l)), this.options.preload?.forEach?.(l => append(l)), this.services.backendConnector.load(toLoad, this.options.ns, e => { e || this.resolvedLanguage || !this.language || this.setResolvedLanguage(this.language), usedCallback(e); });
                }
                else
                    usedCallback(null); }
                reloadResources(lngs, ns, callback) { let deferred = defer(); return "function" == typeof lngs && (callback = lngs, lngs = void 0), "function" == typeof ns && (callback = ns, ns = void 0), lngs || (lngs = this.languages), ns || (ns = this.options.ns), callback || (callback = noop), this.services.backendConnector.reload(lngs, ns, err => { deferred.resolve(), callback(err); }), deferred; }
                use(module1) { if (!module1)
                    throw Error("You are passing an undefined module! Please check the object you are passing to i18next.use()"); if (!module1.type)
                    throw Error("You are passing a wrong module! Please check the object you are passing to i18next.use()"); return "backend" === module1.type && (this.modules.backend = module1), ("logger" === module1.type || module1.log && module1.warn && module1.error) && (this.modules.logger = module1), "languageDetector" === module1.type && (this.modules.languageDetector = module1), "i18nFormat" === module1.type && (this.modules.i18nFormat = module1), "postProcessor" === module1.type && postProcessor.addPostProcessor(module1), "formatter" === module1.type && (this.modules.formatter = module1), "3rdParty" === module1.type && this.modules.external.push(module1), this; }
                setResolvedLanguage(l) { if (l && this.languages && !(["cimode", "dev"].indexOf(l) > -1)) {
                    for (let li = 0; li < this.languages.length; li++) {
                        let lngInLngs = this.languages[li];
                        if (!(["cimode", "dev"].indexOf(lngInLngs) > -1) && this.store.hasLanguageSomeTranslations(lngInLngs)) {
                            this.resolvedLanguage = lngInLngs;
                            break;
                        }
                    }
                    !this.resolvedLanguage && 0 > this.languages.indexOf(l) && this.store.hasLanguageSomeTranslations(l) && (this.resolvedLanguage = l, this.languages.unshift(l));
                } }
                changeLanguage(lng, callback) { this.isLanguageChangingTo = lng; let deferred = defer(); this.emit("languageChanging", lng); let setLngProps = l => { this.language = l, this.languages = this.services.languageUtils.toResolveHierarchy(l), this.resolvedLanguage = void 0, this.setResolvedLanguage(l); }, done = (err, l) => { l ? this.isLanguageChangingTo === lng && (setLngProps(l), this.translator.changeLanguage(l), this.isLanguageChangingTo = void 0, this.emit("languageChanged", l), this.logger.log("languageChanged", l)) : this.isLanguageChangingTo = void 0, deferred.resolve((...args) => this.t(...args)), callback && callback(err, (...args) => this.t(...args)); }, setLng = lngs => { lng || lngs || !this.services.languageDetector || (lngs = []); let fl = isString(lngs) ? lngs : lngs && lngs[0], l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs); l && (this.language || setLngProps(l), this.translator.language || this.translator.changeLanguage(l), this.services.languageDetector?.cacheUserLanguage?.(l)), this.loadResources(l, err => { done(err, l); }); }; return lng || !this.services.languageDetector || this.services.languageDetector.async ? !lng && this.services.languageDetector && this.services.languageDetector.async ? 0 === this.services.languageDetector.detect.length ? this.services.languageDetector.detect().then(setLng) : this.services.languageDetector.detect(setLng) : setLng(lng) : setLng(this.services.languageDetector.detect()), deferred; }
                getFixedT(lng, ns, keyPrefix) { let fixedT = (key, opts, ...rest) => { let o, resultKey; (o = "object" != typeof opts ? this.options.overloadTranslationOptionHandler([key, opts].concat(rest)) : { ...opts }).lng = o.lng || fixedT.lng, o.lngs = o.lngs || fixedT.lngs, o.ns = o.ns || fixedT.ns, "" !== o.keyPrefix && (o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix); let keySeparator = this.options.keySeparator || "."; return resultKey = o.keyPrefix && Array.isArray(key) ? key.map(k => `${o.keyPrefix}${keySeparator}${k}`) : o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key, this.t(resultKey, o); }; return isString(lng) ? fixedT.lng = lng : fixedT.lngs = lng, fixedT.ns = ns, fixedT.keyPrefix = keyPrefix, fixedT; }
                t(...args) { return this.translator?.translate(...args); }
                exists(...args) { return this.translator?.exists(...args); }
                setDefaultNamespace(ns) { this.options.defaultNS = ns; }
                hasLoadedNamespace(ns, options1 = {}) { if (!this.isInitialized)
                    return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1; if (!this.languages || !this.languages.length)
                    return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1; let lng = options1.lng || this.resolvedLanguage || this.languages[0], fallbackLng = !!this.options && this.options.fallbackLng, lastLng = this.languages[this.languages.length - 1]; if ("cimode" === lng.toLowerCase())
                    return !0; let loadNotPending = (l, n) => { let loadState = this.services.backendConnector.state[`${l}|${n}`]; return -1 === loadState || 0 === loadState || 2 === loadState; }; if (options1.precheck) {
                    let preResult = options1.precheck(this, loadNotPending);
                    if (void 0 !== preResult)
                        return preResult;
                } return !!(this.hasResourceBundle(lng, ns) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))); }
                loadNamespaces(ns, callback) { let deferred = defer(); return this.options.ns ? (isString(ns) && (ns = [ns]), ns.forEach(n => { 0 > this.options.ns.indexOf(n) && this.options.ns.push(n); }), this.loadResources(err => { deferred.resolve(), callback && callback(err); }), deferred) : (callback && callback(), Promise.resolve()); }
                loadLanguages(lngs, callback) { let deferred = defer(); isString(lngs) && (lngs = [lngs]); let preloaded = this.options.preload || [], newLngs = lngs.filter(lng => 0 > preloaded.indexOf(lng) && this.services.languageUtils.isSupportedCode(lng)); return newLngs.length ? (this.options.preload = preloaded.concat(newLngs), this.loadResources(err => { deferred.resolve(), callback && callback(err); }), deferred) : (callback && callback(), Promise.resolve()); }
                dir(lng) { return (lng || (lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language)), lng) ? ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"].indexOf((this.services?.languageUtils || new LanguageUtil(get())).getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr" : "rtl"; }
                static createInstance(options1 = {}, callback) { return new I18n(options1, callback); }
                cloneInstance(options1 = {}, callback = noop) { let forkResourceStore = options1.forkResourceStore; forkResourceStore && delete options1.forkResourceStore; let mergedOptions = { ...this.options, ...options1, isClone: !0 }, clone = new I18n(mergedOptions); return (void 0 !== options1.debug || void 0 !== options1.prefix) && (clone.logger = clone.logger.clone(options1)), ["store", "services", "language"].forEach(m => { clone[m] = this[m]; }), clone.services = { ...this.services }, clone.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) }, forkResourceStore && (clone.store = new ResourceStore(Object.keys(this.store.data).reduce((prev, l) => (prev[l] = { ...this.store.data[l] }, prev[l] = Object.keys(prev[l]).reduce((acc, n) => (acc[n] = { ...prev[l][n] }, acc), prev[l]), prev), {}), mergedOptions), clone.services.resourceStore = clone.store), clone.translator = new Translator(clone.services, mergedOptions), clone.translator.on("*", (event, ...args) => { clone.emit(event, ...args); }), clone.init(mergedOptions, callback), clone.translator.options = mergedOptions, clone.translator.backendConnector.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) }, clone; }
                toJSON() { return { options: this.options, store: this.store, language: this.language, languages: this.languages, resolvedLanguage: this.resolvedLanguage }; }
            }
            let instance = I18n.createInstance();
            instance.createInstance = I18n.createInstance;
            let createInstance = instance.createInstance, dir = instance.dir, init = instance.init, loadResources = instance.loadResources, reloadResources = instance.reloadResources, use = instance.use, changeLanguage = instance.changeLanguage, getFixedT = instance.getFixedT, t = instance.t, exists = instance.exists, setDefaultNamespace = instance.setDefaultNamespace, hasLoadedNamespace = instance.hasLoadedNamespace, loadNamespaces = instance.loadNamespaces, loadLanguages = instance.loadLanguages;
        }, "./node_modules/is-arguments/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")(), $toString = __webpack_require__("./node_modules/call-bind/callBound.js")("Object.prototype.toString"), isStandardArguments = function (value) { return (!hasToStringTag || !value || "object" != typeof value || !(Symbol.toStringTag in value)) && "[object Arguments]" === $toString(value); }, isLegacyArguments = function (value) { return !!isStandardArguments(value) || null !== value && "object" == typeof value && "number" == typeof value.length && value.length >= 0 && "[object Array]" !== $toString(value) && "[object Function]" === $toString(value.callee); }, supportsStandardArguments = function () { return isStandardArguments(arguments); }();
            isStandardArguments.isLegacyArguments = isLegacyArguments, module1.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;
        }, "./node_modules/is-array-buffer/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBind = __webpack_require__("./node_modules/call-bind/index.js"), callBound = __webpack_require__("./node_modules/call-bound/index.js"), $ArrayBuffer = __webpack_require__("./node_modules/get-intrinsic/index.js")("%ArrayBuffer%", !0), $byteLength = callBound("ArrayBuffer.prototype.byteLength", !0), $toString = callBound("Object.prototype.toString"), abSlice = !!$ArrayBuffer && !$byteLength && new $ArrayBuffer(0).slice, $abSlice = !!abSlice && callBind(abSlice);
            module1.exports = $byteLength || $abSlice ? function (obj) { if (!obj || "object" != typeof obj)
                return !1; try {
                return $byteLength ? $byteLength(obj) : $abSlice(obj, 0), !0;
            }
            catch (e) {
                return !1;
            } } : $ArrayBuffer ? function (obj) { return "[object ArrayBuffer]" === $toString(obj); } : function (obj) { return !1; };
        }, "./node_modules/is-bigint/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            if (__webpack_require__("./node_modules/has-bigints/index.js")()) {
                var bigIntValueOf = BigInt.prototype.valueOf, tryBigInt = function (value) { try {
                    return bigIntValueOf.call(value), !0;
                }
                catch (e) { } return !1; };
                module1.exports = function (value) { return null != value && "boolean" != typeof value && "string" != typeof value && "number" != typeof value && "symbol" != typeof value && "function" != typeof value && ("bigint" == typeof value || tryBigInt(value)); };
            }
            else
                module1.exports = function (value) { return !1; };
        }, "./node_modules/is-boolean-object/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), $boolToStr = callBound("Boolean.prototype.toString"), $toString = callBound("Object.prototype.toString"), tryBooleanObject = function (value) { try {
                return $boolToStr(value), !0;
            }
            catch (e) {
                return !1;
            } }, hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")();
            module1.exports = function (value) { return "boolean" == typeof value || null !== value && "object" == typeof value && (hasToStringTag ? tryBooleanObject(value) : "[object Boolean]" === $toString(value)); };
        }, "./node_modules/is-buffer/index.js": module1 => { function isBuffer(obj) { return !!obj.constructor && "function" == typeof obj.constructor.isBuffer && obj.constructor.isBuffer(obj); } module1.exports = function (obj) { var obj1; return null != obj && (isBuffer(obj) || "function" == typeof (obj1 = obj).readFloatLE && "function" == typeof obj1.slice && isBuffer(obj1.slice(0, 0)) || !!obj._isBuffer); }; }, "./node_modules/is-callable/index.js": module1 => {
            "use strict";
            var badArrayLike, isCallableMarker, fnToStr = Function.prototype.toString, reflectApply = "object" == typeof Reflect && null !== Reflect && Reflect.apply;
            if ("function" == typeof reflectApply && "function" == typeof Object.defineProperty)
                try {
                    badArrayLike = Object.defineProperty({}, "length", { get: function () { throw isCallableMarker; } }), isCallableMarker = {}, reflectApply(function () { throw 42; }, null, badArrayLike);
                }
                catch (_) {
                    _ !== isCallableMarker && (reflectApply = null);
                }
            else
                reflectApply = null;
            var constructorRegex = /^\s*class\b/, isES6ClassFn = function (value) { try {
                var fnStr = fnToStr.call(value);
                return constructorRegex.test(fnStr);
            }
            catch (e) {
                return !1;
            } }, tryFunctionObject = function (value) { try {
                if (isES6ClassFn(value))
                    return !1;
                return fnToStr.call(value), !0;
            }
            catch (e) {
                return !1;
            } }, toStr = Object.prototype.toString, hasToStringTag = "function" == typeof Symbol && !!Symbol.toStringTag, isIE68 = !(0 in [,]), isDDA = function () { return !1; };
            if ("object" == typeof document) {
                var all = document.all;
                toStr.call(all) === toStr.call(document.all) && (isDDA = function (value) { if ((isIE68 || !value) && (void 0 === value || "object" == typeof value))
                    try {
                        var str = toStr.call(value);
                        return ("[object HTMLAllCollection]" === str || "[object HTML document.all class]" === str || "[object HTMLCollection]" === str || "[object Object]" === str) && null == value("");
                    }
                    catch (e) { } return !1; });
            }
            module1.exports = reflectApply ? function (value) { if (isDDA(value))
                return !0; if (!value || "function" != typeof value && "object" != typeof value)
                return !1; try {
                reflectApply(value, null, badArrayLike);
            }
            catch (e) {
                if (e !== isCallableMarker)
                    return !1;
            } return !isES6ClassFn(value) && tryFunctionObject(value); } : function (value) { if (isDDA(value))
                return !0; if (!value || "function" != typeof value && "object" != typeof value)
                return !1; if (hasToStringTag)
                return tryFunctionObject(value); if (isES6ClassFn(value))
                return !1; var strClass = toStr.call(value); return ("[object Function]" === strClass || "[object GeneratorFunction]" === strClass || !!/^\[object HTML/.test(strClass)) && tryFunctionObject(value); };
        }, "./node_modules/is-date-object/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), getDay = callBound("Date.prototype.getDay"), tryDateObject = function (value) { try {
                return getDay(value), !0;
            }
            catch (e) {
                return !1;
            } }, toStr = callBound("Object.prototype.toString"), hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")();
            module1.exports = function (value) { return "object" == typeof value && null !== value && (hasToStringTag ? tryDateObject(value) : "[object Date]" === toStr(value)); };
        }, "./node_modules/is-map/index.js": module1 => {
            "use strict";
            var exported, $Map = "function" == typeof Map && Map.prototype ? Map : null, $Set = "function" == typeof Set && Set.prototype ? Set : null;
            $Map || (exported = function (x) { return !1; });
            var $mapHas = $Map ? Map.prototype.has : null, $setHas = $Set ? Set.prototype.has : null;
            exported || $mapHas || (exported = function (x) { return !1; }), module1.exports = exported || function (x) { if (!x || "object" != typeof x)
                return !1; try {
                if ($mapHas.call(x), $setHas)
                    try {
                        $setHas.call(x);
                    }
                    catch (e) {
                        return !0;
                    }
                return x instanceof $Map;
            }
            catch (e) { } return !1; };
        }, "./node_modules/is-number-object/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), $numToStr = callBound("Number.prototype.toString"), tryNumberObject = function (value) { try {
                return $numToStr(value), !0;
            }
            catch (e) {
                return !1;
            } }, $toString = callBound("Object.prototype.toString"), hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")();
            module1.exports = function (value) { return "number" == typeof value || !!value && "object" == typeof value && (hasToStringTag ? tryNumberObject(value) : "[object Number]" === $toString(value)); };
        }, "./node_modules/is-regex/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var fn, callBound = __webpack_require__("./node_modules/call-bound/index.js"), hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")(), hasOwn = __webpack_require__("./node_modules/hasown/index.js"), gOPD = __webpack_require__("./node_modules/gopd/index.js");
            if (hasToStringTag) {
                var $exec = callBound("RegExp.prototype.exec"), isRegexMarker = {}, throwRegexMarker = function () { throw isRegexMarker; }, badStringifier = { toString: throwRegexMarker, valueOf: throwRegexMarker };
                "symbol" == typeof Symbol.toPrimitive && (badStringifier[Symbol.toPrimitive] = throwRegexMarker), fn = function (value) { if (!value || "object" != typeof value)
                    return !1; var descriptor = gOPD(value, "lastIndex"); if (!(descriptor && hasOwn(descriptor, "value")))
                    return !1; try {
                    $exec(value, badStringifier);
                }
                catch (e) {
                    return e === isRegexMarker;
                } };
            }
            else {
                var $toString = callBound("Object.prototype.toString");
                fn = function (value) { return !!value && ("object" == typeof value || "function" == typeof value) && "[object RegExp]" === $toString(value); };
            }
            module1.exports = fn;
        }, "./node_modules/is-set/index.js": module1 => {
            "use strict";
            var exported, $Map = "function" == typeof Map && Map.prototype ? Map : null, $Set = "function" == typeof Set && Set.prototype ? Set : null;
            $Set || (exported = function (x) { return !1; });
            var $mapHas = $Map ? Map.prototype.has : null, $setHas = $Set ? Set.prototype.has : null;
            exported || $setHas || (exported = function (x) { return !1; }), module1.exports = exported || function (x) { if (!x || "object" != typeof x)
                return !1; try {
                if ($setHas.call(x), $mapHas)
                    try {
                        $mapHas.call(x);
                    }
                    catch (e) {
                        return !0;
                    }
                return x instanceof $Set;
            }
            catch (e) { } return !1; };
        }, "./node_modules/is-shared-array-buffer/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $byteLength = __webpack_require__("./node_modules/call-bound/index.js")("SharedArrayBuffer.prototype.byteLength", !0);
            module1.exports = $byteLength ? function (obj) { if (!obj || "object" != typeof obj)
                return !1; try {
                return $byteLength(obj), !0;
            }
            catch (e) {
                return !1;
            } } : function (_obj) { return !1; };
        }, "./node_modules/is-string/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), $strValueOf = callBound("String.prototype.valueOf"), tryStringObject = function (value) { try {
                return $strValueOf(value), !0;
            }
            catch (e) {
                return !1;
            } }, $toString = callBound("Object.prototype.toString"), hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")();
            module1.exports = function (value) { return "string" == typeof value || !!value && "object" == typeof value && (hasToStringTag ? tryStringObject(value) : "[object String]" === $toString(value)); };
        }, "./node_modules/is-symbol/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), $toString = callBound("Object.prototype.toString"), hasSymbols = __webpack_require__("./node_modules/has-symbols/index.js")(), safeRegexTest = __webpack_require__("./node_modules/safe-regex-test/index.js");
            if (hasSymbols) {
                var $symToStr = callBound("Symbol.prototype.toString"), isSymString = safeRegexTest(/^Symbol\(.*\)$/);
                module1.exports = function (value) { if ("symbol" == typeof value)
                    return !0; if (!value || "object" != typeof value || "[object Symbol]" !== $toString(value))
                    return !1; try {
                    return "symbol" == typeof value.valueOf() && isSymString($symToStr(value));
                }
                catch (e) {
                    return !1;
                } };
            }
            else
                module1.exports = function (value) { return !1; };
        }, "./node_modules/is-weakmap/index.js": module1 => {
            "use strict";
            var exported, $WeakMap = "function" == typeof WeakMap && WeakMap.prototype ? WeakMap : null, $WeakSet = "function" == typeof WeakSet && WeakSet.prototype ? WeakSet : null;
            $WeakMap || (exported = function (x) { return !1; });
            var $mapHas = $WeakMap ? $WeakMap.prototype.has : null, $setHas = $WeakSet ? $WeakSet.prototype.has : null;
            exported || $mapHas || (exported = function (x) { return !1; }), module1.exports = exported || function (x) { if (!x || "object" != typeof x)
                return !1; try {
                if ($mapHas.call(x, $mapHas), $setHas)
                    try {
                        $setHas.call(x, $setHas);
                    }
                    catch (e) {
                        return !0;
                    }
                return x instanceof $WeakMap;
            }
            catch (e) { } return !1; };
        }, "./node_modules/is-weakset/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), callBound = __webpack_require__("./node_modules/call-bind/callBound.js"), $WeakSet = GetIntrinsic("%WeakSet%", !0), $setHas = callBound("WeakSet.prototype.has", !0);
            if ($setHas) {
                var $mapHas = callBound("WeakMap.prototype.has", !0);
                module1.exports = function (x) { if (!x || "object" != typeof x)
                    return !1; try {
                    if ($setHas(x, $setHas), $mapHas)
                        try {
                            $mapHas(x, $mapHas);
                        }
                        catch (e) {
                            return !0;
                        }
                    return x instanceof $WeakSet;
                }
                catch (e) { } return !1; };
            }
            else
                module1.exports = function (x) { return !1; };
        }, "./node_modules/isarray/index.js": module1 => { var toString = {}.toString; module1.exports = Array.isArray || function (arr) { return "[object Array]" == toString.call(arr); }; }, "./node_modules/lodash/_DataView.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(__webpack_require__("./node_modules/lodash/_root.js"), "DataView"); }, "./node_modules/lodash/_Hash.js": (module1, __unused_webpack_exports, __webpack_require__) => { var hashClear = __webpack_require__("./node_modules/lodash/_hashClear.js"), hashDelete = __webpack_require__("./node_modules/lodash/_hashDelete.js"), hashGet = __webpack_require__("./node_modules/lodash/_hashGet.js"), hashHas = __webpack_require__("./node_modules/lodash/_hashHas.js"), hashSet = __webpack_require__("./node_modules/lodash/_hashSet.js"); function Hash(entries) { var index = -1, length = null == entries ? 0 : entries.length; for (this.clear(); ++index < length;) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        } } Hash.prototype.clear = hashClear, Hash.prototype.delete = hashDelete, Hash.prototype.get = hashGet, Hash.prototype.has = hashHas, Hash.prototype.set = hashSet, module1.exports = Hash; }, "./node_modules/lodash/_ListCache.js": (module1, __unused_webpack_exports, __webpack_require__) => { var listCacheClear = __webpack_require__("./node_modules/lodash/_listCacheClear.js"), listCacheDelete = __webpack_require__("./node_modules/lodash/_listCacheDelete.js"), listCacheGet = __webpack_require__("./node_modules/lodash/_listCacheGet.js"), listCacheHas = __webpack_require__("./node_modules/lodash/_listCacheHas.js"), listCacheSet = __webpack_require__("./node_modules/lodash/_listCacheSet.js"); function ListCache(entries) { var index = -1, length = null == entries ? 0 : entries.length; for (this.clear(); ++index < length;) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        } } ListCache.prototype.clear = listCacheClear, ListCache.prototype.delete = listCacheDelete, ListCache.prototype.get = listCacheGet, ListCache.prototype.has = listCacheHas, ListCache.prototype.set = listCacheSet, module1.exports = ListCache; }, "./node_modules/lodash/_Map.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(__webpack_require__("./node_modules/lodash/_root.js"), "Map"); }, "./node_modules/lodash/_MapCache.js": (module1, __unused_webpack_exports, __webpack_require__) => { var mapCacheClear = __webpack_require__("./node_modules/lodash/_mapCacheClear.js"), mapCacheDelete = __webpack_require__("./node_modules/lodash/_mapCacheDelete.js"), mapCacheGet = __webpack_require__("./node_modules/lodash/_mapCacheGet.js"), mapCacheHas = __webpack_require__("./node_modules/lodash/_mapCacheHas.js"), mapCacheSet = __webpack_require__("./node_modules/lodash/_mapCacheSet.js"); function MapCache(entries) { var index = -1, length = null == entries ? 0 : entries.length; for (this.clear(); ++index < length;) {
            var entry = entries[index];
            this.set(entry[0], entry[1]);
        } } MapCache.prototype.clear = mapCacheClear, MapCache.prototype.delete = mapCacheDelete, MapCache.prototype.get = mapCacheGet, MapCache.prototype.has = mapCacheHas, MapCache.prototype.set = mapCacheSet, module1.exports = MapCache; }, "./node_modules/lodash/_Promise.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(__webpack_require__("./node_modules/lodash/_root.js"), "Promise"); }, "./node_modules/lodash/_Set.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(__webpack_require__("./node_modules/lodash/_root.js"), "Set"); }, "./node_modules/lodash/_SetCache.js": (module1, __unused_webpack_exports, __webpack_require__) => { var MapCache = __webpack_require__("./node_modules/lodash/_MapCache.js"), setCacheAdd = __webpack_require__("./node_modules/lodash/_setCacheAdd.js"), setCacheHas = __webpack_require__("./node_modules/lodash/_setCacheHas.js"); function SetCache(values) { var index = -1, length = null == values ? 0 : values.length; for (this.__data__ = new MapCache; ++index < length;)
            this.add(values[index]); } SetCache.prototype.add = SetCache.prototype.push = setCacheAdd, SetCache.prototype.has = setCacheHas, module1.exports = SetCache; }, "./node_modules/lodash/_Stack.js": (module1, __unused_webpack_exports, __webpack_require__) => { var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"), stackClear = __webpack_require__("./node_modules/lodash/_stackClear.js"), stackDelete = __webpack_require__("./node_modules/lodash/_stackDelete.js"), stackGet = __webpack_require__("./node_modules/lodash/_stackGet.js"), stackHas = __webpack_require__("./node_modules/lodash/_stackHas.js"), stackSet = __webpack_require__("./node_modules/lodash/_stackSet.js"); function Stack(entries) { var data1 = this.__data__ = new ListCache(entries); this.size = data1.size; } Stack.prototype.clear = stackClear, Stack.prototype.delete = stackDelete, Stack.prototype.get = stackGet, Stack.prototype.has = stackHas, Stack.prototype.set = stackSet, module1.exports = Stack; }, "./node_modules/lodash/_Symbol.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_root.js").Symbol; }, "./node_modules/lodash/_Uint8Array.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_root.js").Uint8Array; }, "./node_modules/lodash/_WeakMap.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(__webpack_require__("./node_modules/lodash/_root.js"), "WeakMap"); }, "./node_modules/lodash/_arrayFilter.js": module1 => { module1.exports = function (array, predicate) { for (var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = []; ++index < length;) {
            var value = array[index];
            predicate(value, index, array) && (result[resIndex++] = value);
        } return result; }; }, "./node_modules/lodash/_arrayLikeKeys.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseTimes = __webpack_require__("./node_modules/lodash/_baseTimes.js"), isArguments = __webpack_require__("./node_modules/lodash/isArguments.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isBuffer = __webpack_require__("./node_modules/lodash/isBuffer.js"), isIndex = __webpack_require__("./node_modules/lodash/_isIndex.js"), isTypedArray = __webpack_require__("./node_modules/lodash/isTypedArray.js"), hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (value, inherited) { var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length; for (var key in value)
            (inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ("length" == key || isBuff && ("offset" == key || "parent" == key) || isType && ("buffer" == key || "byteLength" == key || "byteOffset" == key) || isIndex(key, length))) && result.push(key); return result; }; }, "./node_modules/lodash/_arrayPush.js": module1 => { module1.exports = function (array, values) { for (var index = -1, length = values.length, offset = array.length; ++index < length;)
            array[offset + index] = values[index]; return array; }; }, "./node_modules/lodash/_arraySome.js": module1 => { module1.exports = function (array, predicate) { for (var index = -1, length = null == array ? 0 : array.length; ++index < length;)
            if (predicate(array[index], index, array))
                return !0; return !1; }; }, "./node_modules/lodash/_assocIndexOf.js": (module1, __unused_webpack_exports, __webpack_require__) => { var eq = __webpack_require__("./node_modules/lodash/eq.js"); module1.exports = function (array, key) { for (var length = array.length; length--;)
            if (eq(array[length][0], key))
                return length; return -1; }; }, "./node_modules/lodash/_baseGetAllKeys.js": (module1, __unused_webpack_exports, __webpack_require__) => { var arrayPush = __webpack_require__("./node_modules/lodash/_arrayPush.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"); module1.exports = function (object, keysFunc, symbolsFunc) { var result = keysFunc(object); return isArray(object) ? result : arrayPush(result, symbolsFunc(object)); }; }, "./node_modules/lodash/_baseGetTag.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Symbol1 = __webpack_require__("./node_modules/lodash/_Symbol.js"), getRawTag = __webpack_require__("./node_modules/lodash/_getRawTag.js"), objectToString = __webpack_require__("./node_modules/lodash/_objectToString.js"), symToStringTag = Symbol1 ? Symbol1.toStringTag : void 0; module1.exports = function (value) { return null == value ? void 0 === value ? "[object Undefined]" : "[object Null]" : symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value); }; }, "./node_modules/lodash/_baseIsArguments.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js"); module1.exports = function (value) { return isObjectLike(value) && "[object Arguments]" == baseGetTag(value); }; }, "./node_modules/lodash/_baseIsEqual.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseIsEqualDeep = __webpack_require__("./node_modules/lodash/_baseIsEqualDeep.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js"); module1.exports = function baseIsEqual(value, other, bitmask, customizer, stack) { return value === other || (null != value && null != other && (isObjectLike(value) || isObjectLike(other)) ? baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack) : value != value && other != other); }; }, "./node_modules/lodash/_baseIsEqualDeep.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"), equalArrays = __webpack_require__("./node_modules/lodash/_equalArrays.js"), equalByTag = __webpack_require__("./node_modules/lodash/_equalByTag.js"), equalObjects = __webpack_require__("./node_modules/lodash/_equalObjects.js"), getTag = __webpack_require__("./node_modules/lodash/_getTag.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isBuffer = __webpack_require__("./node_modules/lodash/isBuffer.js"), isTypedArray = __webpack_require__("./node_modules/lodash/isTypedArray.js"), argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]", hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (object, other, bitmask, customizer, equalFunc, stack) { var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other); objTag = objTag == argsTag ? objectTag : objTag, othTag = othTag == argsTag ? objectTag : othTag; var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag; if (isSameTag && isBuffer(object)) {
            if (!isBuffer(other))
                return !1;
            objIsArr = !0, objIsObj = !1;
        } if (isSameTag && !objIsObj)
            return stack || (stack = new Stack), objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack); if (!(1 & bitmask)) {
            var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
            if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                return stack || (stack = new Stack), equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
            }
        } return !!isSameTag && (stack || (stack = new Stack), equalObjects(object, other, bitmask, customizer, equalFunc, stack)); }; }, "./node_modules/lodash/_baseIsMatch.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"), baseIsEqual = __webpack_require__("./node_modules/lodash/_baseIsEqual.js"); module1.exports = function (object, source, matchData, customizer) { var index = matchData.length, length = index, noCustomizer = !customizer; if (null == object)
            return !length; for (object = Object(object); index--;) {
            var data1 = matchData[index];
            if (noCustomizer && data1[2] ? data1[1] !== object[data1[0]] : !(data1[0] in object))
                return !1;
        } for (; ++index < length;) {
            var key = (data1 = matchData[index])[0], objValue = object[key], srcValue = data1[1];
            if (noCustomizer && data1[2]) {
                if (void 0 === objValue && !(key in object))
                    return !1;
            }
            else {
                var stack = new Stack;
                if (customizer)
                    var result = customizer(objValue, srcValue, key, object, source, stack);
                if (!(void 0 === result ? baseIsEqual(srcValue, objValue, 3, customizer, stack) : result))
                    return !1;
            }
        } return !0; }; }, "./node_modules/lodash/_baseIsNative.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isFunction = __webpack_require__("./node_modules/lodash/isFunction.js"), isMasked = __webpack_require__("./node_modules/lodash/_isMasked.js"), isObject = __webpack_require__("./node_modules/lodash/isObject.js"), toSource = __webpack_require__("./node_modules/lodash/_toSource.js"), reIsHostCtor = /^\[object .+?Constructor\]$/, objectProto = Object.prototype, funcToString = Function.prototype.toString, hasOwnProperty = objectProto.hasOwnProperty, reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"); module1.exports = function (value) { return !(!isObject(value) || isMasked(value)) && (isFunction(value) ? reIsNative : reIsHostCtor).test(toSource(value)); }; }, "./node_modules/lodash/_baseIsTypedArray.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), isLength = __webpack_require__("./node_modules/lodash/isLength.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js"), typedArrayTags = {}; typedArrayTags["[object Float32Array]"] = typedArrayTags["[object Float64Array]"] = typedArrayTags["[object Int8Array]"] = typedArrayTags["[object Int16Array]"] = typedArrayTags["[object Int32Array]"] = typedArrayTags["[object Uint8Array]"] = typedArrayTags["[object Uint8ClampedArray]"] = typedArrayTags["[object Uint16Array]"] = typedArrayTags["[object Uint32Array]"] = !0, typedArrayTags["[object Arguments]"] = typedArrayTags["[object Array]"] = typedArrayTags["[object ArrayBuffer]"] = typedArrayTags["[object Boolean]"] = typedArrayTags["[object DataView]"] = typedArrayTags["[object Date]"] = typedArrayTags["[object Error]"] = typedArrayTags["[object Function]"] = typedArrayTags["[object Map]"] = typedArrayTags["[object Number]"] = typedArrayTags["[object Object]"] = typedArrayTags["[object RegExp]"] = typedArrayTags["[object Set]"] = typedArrayTags["[object String]"] = typedArrayTags["[object WeakMap]"] = !1, module1.exports = function (value) { return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)]; }; }, "./node_modules/lodash/_baseKeys.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isPrototype = __webpack_require__("./node_modules/lodash/_isPrototype.js"), nativeKeys = __webpack_require__("./node_modules/lodash/_nativeKeys.js"), hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (object) { if (!isPrototype(object))
            return nativeKeys(object); var result = []; for (var key in Object(object))
            hasOwnProperty.call(object, key) && "constructor" != key && result.push(key); return result; }; }, "./node_modules/lodash/_baseTimes.js": module1 => { module1.exports = function (n, iteratee) { for (var index = -1, result = Array(n); ++index < n;)
            result[index] = iteratee(index); return result; }; }, "./node_modules/lodash/_baseUnary.js": module1 => { module1.exports = function (func) { return function (value) { return func(value); }; }; }, "./node_modules/lodash/_cacheHas.js": module1 => { module1.exports = function (cache, key) { return cache.has(key); }; }, "./node_modules/lodash/_coreJsData.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_root.js")["__core-js_shared__"]; }, "./node_modules/lodash/_equalArrays.js": (module1, __unused_webpack_exports, __webpack_require__) => { var SetCache = __webpack_require__("./node_modules/lodash/_SetCache.js"), arraySome = __webpack_require__("./node_modules/lodash/_arraySome.js"), cacheHas = __webpack_require__("./node_modules/lodash/_cacheHas.js"); module1.exports = function (array, other, bitmask, customizer, equalFunc, stack) { var isPartial = 1 & bitmask, arrLength = array.length, othLength = other.length; if (arrLength != othLength && !(isPartial && othLength > arrLength))
            return !1; var arrStacked = stack.get(array), othStacked = stack.get(other); if (arrStacked && othStacked)
            return arrStacked == other && othStacked == array; var index = -1, result = !0, seen = 2 & bitmask ? new SetCache : void 0; for (stack.set(array, other), stack.set(other, array); ++index < arrLength;) {
            var arrValue = array[index], othValue = other[index];
            if (customizer)
                var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
            if (void 0 !== compared) {
                if (compared)
                    continue;
                result = !1;
                break;
            }
            if (seen) {
                if (!arraySome(other, function (othValue, othIndex) { if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack)))
                    return seen.push(othIndex); })) {
                    result = !1;
                    break;
                }
            }
            else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                result = !1;
                break;
            }
        } return stack.delete(array), stack.delete(other), result; }; }, "./node_modules/lodash/_equalByTag.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Symbol1 = __webpack_require__("./node_modules/lodash/_Symbol.js"), Uint8Array1 = __webpack_require__("./node_modules/lodash/_Uint8Array.js"), eq = __webpack_require__("./node_modules/lodash/eq.js"), equalArrays = __webpack_require__("./node_modules/lodash/_equalArrays.js"), mapToArray = __webpack_require__("./node_modules/lodash/_mapToArray.js"), setToArray = __webpack_require__("./node_modules/lodash/_setToArray.js"), symbolProto = Symbol1 ? Symbol1.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0; module1.exports = function (object, other, tag, bitmask, customizer, equalFunc, stack) { switch (tag) {
            case "[object DataView]":
                if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset)
                    break;
                object = object.buffer, other = other.buffer;
            case "[object ArrayBuffer]":
                if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array1(object), new Uint8Array1(other)))
                    break;
                return !0;
            case "[object Boolean]":
            case "[object Date]":
            case "[object Number]": return eq(+object, +other);
            case "[object Error]": return object.name == other.name && object.message == other.message;
            case "[object RegExp]":
            case "[object String]": return object == other + "";
            case "[object Map]": var convert = mapToArray;
            case "[object Set]":
                var isPartial = 1 & bitmask;
                if (convert || (convert = setToArray), object.size != other.size && !isPartial)
                    break;
                var stacked = stack.get(object);
                if (stacked)
                    return stacked == other;
                bitmask |= 2, stack.set(object, other);
                var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                return stack.delete(object), result;
            case "[object Symbol]": if (symbolValueOf)
                return symbolValueOf.call(object) == symbolValueOf.call(other);
        } return !1; }; }, "./node_modules/lodash/_equalObjects.js": (module1, __unused_webpack_exports, __webpack_require__) => { var getAllKeys = __webpack_require__("./node_modules/lodash/_getAllKeys.js"), hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (object, other, bitmask, customizer, equalFunc, stack) { var isPartial = 1 & bitmask, objProps = getAllKeys(object), objLength = objProps.length; if (objLength != getAllKeys(other).length && !isPartial)
            return !1; for (var index = objLength; index--;) {
            var key = objProps[index];
            if (!(isPartial ? key in other : hasOwnProperty.call(other, key)))
                return !1;
        } var objStacked = stack.get(object), othStacked = stack.get(other); if (objStacked && othStacked)
            return objStacked == other && othStacked == object; var result = !0; stack.set(object, other), stack.set(other, object); for (var skipCtor = isPartial; ++index < objLength;) {
            var objValue = object[key = objProps[index]], othValue = other[key];
            if (customizer)
                var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
            if (!(void 0 === compared ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                result = !1;
                break;
            }
            skipCtor || (skipCtor = "constructor" == key);
        } if (result && !skipCtor) {
            var objCtor = object.constructor, othCtor = other.constructor;
            objCtor != othCtor && "constructor" in object && "constructor" in other && !("function" == typeof objCtor && objCtor instanceof objCtor && "function" == typeof othCtor && othCtor instanceof othCtor) && (result = !1);
        } return stack.delete(object), stack.delete(other), result; }; }, "./node_modules/lodash/_freeGlobal.js": module1 => { module1.exports = "object" == typeof global && global && global.Object === Object && global; }, "./node_modules/lodash/_getAllKeys.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseGetAllKeys = __webpack_require__("./node_modules/lodash/_baseGetAllKeys.js"), getSymbols = __webpack_require__("./node_modules/lodash/_getSymbols.js"), keys = __webpack_require__("./node_modules/lodash/keys.js"); module1.exports = function (object) { return baseGetAllKeys(object, keys, getSymbols); }; }, "./node_modules/lodash/_getMapData.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isKeyable = __webpack_require__("./node_modules/lodash/_isKeyable.js"); module1.exports = function (map, key) { var data1 = map.__data__; return isKeyable(key) ? data1["string" == typeof key ? "string" : "hash"] : data1.map; }; }, "./node_modules/lodash/_getMatchData.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isStrictComparable = __webpack_require__("./node_modules/lodash/_isStrictComparable.js"), keys = __webpack_require__("./node_modules/lodash/keys.js"); module1.exports = function (object) { for (var result = keys(object), length = result.length; length--;) {
            var key = result[length], value = object[key];
            result[length] = [key, value, isStrictComparable(value)];
        } return result; }; }, "./node_modules/lodash/_getNative.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseIsNative = __webpack_require__("./node_modules/lodash/_baseIsNative.js"), getValue = __webpack_require__("./node_modules/lodash/_getValue.js"); module1.exports = function (object, key) { var value = getValue(object, key); return baseIsNative(value) ? value : void 0; }; }, "./node_modules/lodash/_getRawTag.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Symbol1 = __webpack_require__("./node_modules/lodash/_Symbol.js"), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty, nativeObjectToString = objectProto.toString, symToStringTag = Symbol1 ? Symbol1.toStringTag : void 0; module1.exports = function (value) { var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag]; try {
            value[symToStringTag] = void 0;
            var unmasked = !0;
        }
        catch (e) { } var result = nativeObjectToString.call(value); return unmasked && (isOwn ? value[symToStringTag] = tag : delete value[symToStringTag]), result; }; }, "./node_modules/lodash/_getSymbols.js": (module1, __unused_webpack_exports, __webpack_require__) => { var arrayFilter = __webpack_require__("./node_modules/lodash/_arrayFilter.js"), stubArray = __webpack_require__("./node_modules/lodash/stubArray.js"), propertyIsEnumerable = Object.prototype.propertyIsEnumerable, nativeGetSymbols = Object.getOwnPropertySymbols; module1.exports = nativeGetSymbols ? function (object) { return null == object ? [] : arrayFilter(nativeGetSymbols(object = Object(object)), function (symbol) { return propertyIsEnumerable.call(object, symbol); }); } : stubArray; }, "./node_modules/lodash/_getTag.js": (module1, __unused_webpack_exports, __webpack_require__) => { var DataView1 = __webpack_require__("./node_modules/lodash/_DataView.js"), Map1 = __webpack_require__("./node_modules/lodash/_Map.js"), Promise1 = __webpack_require__("./node_modules/lodash/_Promise.js"), Set1 = __webpack_require__("./node_modules/lodash/_Set.js"), WeakMap1 = __webpack_require__("./node_modules/lodash/_WeakMap.js"), baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), toSource = __webpack_require__("./node_modules/lodash/_toSource.js"), mapTag = "[object Map]", promiseTag = "[object Promise]", setTag = "[object Set]", weakMapTag = "[object WeakMap]", dataViewTag = "[object DataView]", dataViewCtorString = toSource(DataView1), mapCtorString = toSource(Map1), promiseCtorString = toSource(Promise1), setCtorString = toSource(Set1), weakMapCtorString = toSource(WeakMap1), getTag = baseGetTag; (DataView1 && getTag(new DataView1(new ArrayBuffer(1))) != dataViewTag || Map1 && getTag(new Map1) != mapTag || Promise1 && getTag(Promise1.resolve()) != promiseTag || Set1 && getTag(new Set1) != setTag || WeakMap1 && getTag(new WeakMap1) != weakMapTag) && (getTag = function (value) { var result = baseGetTag(value), Ctor = "[object Object]" == result ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : ""; if (ctorString)
            switch (ctorString) {
                case dataViewCtorString: return dataViewTag;
                case mapCtorString: return mapTag;
                case promiseCtorString: return promiseTag;
                case setCtorString: return setTag;
                case weakMapCtorString: return weakMapTag;
            } return result; }), module1.exports = getTag; }, "./node_modules/lodash/_getValue.js": module1 => { module1.exports = function (object, key) { return null == object ? void 0 : object[key]; }; }, "./node_modules/lodash/_hashClear.js": (module1, __unused_webpack_exports, __webpack_require__) => { var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js"); module1.exports = function () { this.__data__ = nativeCreate ? nativeCreate(null) : {}, this.size = 0; }; }, "./node_modules/lodash/_hashDelete.js": module1 => { module1.exports = function (key) { var result = this.has(key) && delete this.__data__[key]; return this.size -= !!result, result; }; }, "./node_modules/lodash/_hashGet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js"), hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (key) { var data1 = this.__data__; if (nativeCreate) {
            var result = data1[key];
            return "__lodash_hash_undefined__" === result ? void 0 : result;
        } return hasOwnProperty.call(data1, key) ? data1[key] : void 0; }; }, "./node_modules/lodash/_hashHas.js": (module1, __unused_webpack_exports, __webpack_require__) => { var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js"), hasOwnProperty = Object.prototype.hasOwnProperty; module1.exports = function (key) { var data1 = this.__data__; return nativeCreate ? void 0 !== data1[key] : hasOwnProperty.call(data1, key); }; }, "./node_modules/lodash/_hashSet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var nativeCreate = __webpack_require__("./node_modules/lodash/_nativeCreate.js"); module1.exports = function (key, value) { var data1 = this.__data__; return this.size += +!this.has(key), data1[key] = nativeCreate && void 0 === value ? "__lodash_hash_undefined__" : value, this; }; }, "./node_modules/lodash/_isIndex.js": module1 => { var reIsUint = /^(?:0|[1-9]\d*)$/; module1.exports = function (value, length) { var type = typeof value; return !!(length = null == length ? 0x1fffffffffffff : length) && ("number" == type || "symbol" != type && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length; }; }, "./node_modules/lodash/_isKeyable.js": module1 => { module1.exports = function (value) { var type = typeof value; return "string" == type || "number" == type || "symbol" == type || "boolean" == type ? "__proto__" !== value : null === value; }; }, "./node_modules/lodash/_isMasked.js": (module1, __unused_webpack_exports, __webpack_require__) => { var coreJsData = __webpack_require__("./node_modules/lodash/_coreJsData.js"), maskSrcKey = function () { var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || ""); return uid ? "Symbol(src)_1." + uid : ""; }(); module1.exports = function (func) { return !!maskSrcKey && maskSrcKey in func; }; }, "./node_modules/lodash/_isPrototype.js": module1 => { var objectProto = Object.prototype; module1.exports = function (value) { var Ctor = value && value.constructor; return value === ("function" == typeof Ctor && Ctor.prototype || objectProto); }; }, "./node_modules/lodash/_isStrictComparable.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isObject = __webpack_require__("./node_modules/lodash/isObject.js"); module1.exports = function (value) { return value == value && !isObject(value); }; }, "./node_modules/lodash/_listCacheClear.js": module1 => { module1.exports = function () { this.__data__ = [], this.size = 0; }; }, "./node_modules/lodash/_listCacheDelete.js": (module1, __unused_webpack_exports, __webpack_require__) => { var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js"), splice = Array.prototype.splice; module1.exports = function (key) { var data1 = this.__data__, index = assocIndexOf(data1, key); return !(index < 0) && (index == data1.length - 1 ? data1.pop() : splice.call(data1, index, 1), --this.size, !0); }; }, "./node_modules/lodash/_listCacheGet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js"); module1.exports = function (key) { var data1 = this.__data__, index = assocIndexOf(data1, key); return index < 0 ? void 0 : data1[index][1]; }; }, "./node_modules/lodash/_listCacheHas.js": (module1, __unused_webpack_exports, __webpack_require__) => { var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js"); module1.exports = function (key) { return assocIndexOf(this.__data__, key) > -1; }; }, "./node_modules/lodash/_listCacheSet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js"); module1.exports = function (key, value) { var data1 = this.__data__, index = assocIndexOf(data1, key); return index < 0 ? (++this.size, data1.push([key, value])) : data1[index][1] = value, this; }; }, "./node_modules/lodash/_mapCacheClear.js": (module1, __unused_webpack_exports, __webpack_require__) => { var Hash = __webpack_require__("./node_modules/lodash/_Hash.js"), ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"), Map1 = __webpack_require__("./node_modules/lodash/_Map.js"); module1.exports = function () { this.size = 0, this.__data__ = { hash: new Hash, map: new (Map1 || ListCache), string: new Hash }; }; }, "./node_modules/lodash/_mapCacheDelete.js": (module1, __unused_webpack_exports, __webpack_require__) => { var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js"); module1.exports = function (key) { var result = getMapData(this, key).delete(key); return this.size -= !!result, result; }; }, "./node_modules/lodash/_mapCacheGet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js"); module1.exports = function (key) { return getMapData(this, key).get(key); }; }, "./node_modules/lodash/_mapCacheHas.js": (module1, __unused_webpack_exports, __webpack_require__) => { var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js"); module1.exports = function (key) { return getMapData(this, key).has(key); }; }, "./node_modules/lodash/_mapCacheSet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var getMapData = __webpack_require__("./node_modules/lodash/_getMapData.js"); module1.exports = function (key, value) { var data1 = getMapData(this, key), size = data1.size; return data1.set(key, value), this.size += +(data1.size != size), this; }; }, "./node_modules/lodash/_mapToArray.js": module1 => { module1.exports = function (map) { var index = -1, result = Array(map.size); return map.forEach(function (value, key) { result[++index] = [key, value]; }), result; }; }, "./node_modules/lodash/_nativeCreate.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_getNative.js")(Object, "create"); }, "./node_modules/lodash/_nativeKeys.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/lodash/_overArg.js")(Object.keys, Object); }, "./node_modules/lodash/_nodeUtil.js": (module1, exports, __webpack_require__) => { module1 = __webpack_require__.nmd(module1); var freeGlobal = __webpack_require__("./node_modules/lodash/_freeGlobal.js"), freeExports = exports && !exports.nodeType && exports, freeModule = freeExports && module1 && !module1.nodeType && module1, freeProcess = freeModule && freeModule.exports === freeExports && freeGlobal.process, nodeUtil = function () { try {
            var types = freeModule && freeModule.require && freeModule.require("util").types;
            if (types)
                return types;
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
        }
        catch (e) { } }(); module1.exports = nodeUtil; }, "./node_modules/lodash/_objectToString.js": module1 => { var nativeObjectToString = Object.prototype.toString; module1.exports = function (value) { return nativeObjectToString.call(value); }; }, "./node_modules/lodash/_overArg.js": module1 => { module1.exports = function (func, transform) { return function (arg) { return func(transform(arg)); }; }; }, "./node_modules/lodash/_root.js": (module1, __unused_webpack_exports, __webpack_require__) => { var freeGlobal = __webpack_require__("./node_modules/lodash/_freeGlobal.js"), freeSelf = "object" == typeof self && self && self.Object === Object && self; module1.exports = freeGlobal || freeSelf || Function("return this")(); }, "./node_modules/lodash/_setCacheAdd.js": module1 => { module1.exports = function (value) { return this.__data__.set(value, "__lodash_hash_undefined__"), this; }; }, "./node_modules/lodash/_setCacheHas.js": module1 => { module1.exports = function (value) { return this.__data__.has(value); }; }, "./node_modules/lodash/_setToArray.js": module1 => { module1.exports = function (set) { var index = -1, result = Array(set.size); return set.forEach(function (value) { result[++index] = value; }), result; }; }, "./node_modules/lodash/_stackClear.js": (module1, __unused_webpack_exports, __webpack_require__) => { var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"); module1.exports = function () { this.__data__ = new ListCache, this.size = 0; }; }, "./node_modules/lodash/_stackDelete.js": module1 => { module1.exports = function (key) { var data1 = this.__data__, result = data1.delete(key); return this.size = data1.size, result; }; }, "./node_modules/lodash/_stackGet.js": module1 => { module1.exports = function (key) { return this.__data__.get(key); }; }, "./node_modules/lodash/_stackHas.js": module1 => { module1.exports = function (key) { return this.__data__.has(key); }; }, "./node_modules/lodash/_stackSet.js": (module1, __unused_webpack_exports, __webpack_require__) => { var ListCache = __webpack_require__("./node_modules/lodash/_ListCache.js"), Map1 = __webpack_require__("./node_modules/lodash/_Map.js"), MapCache = __webpack_require__("./node_modules/lodash/_MapCache.js"); module1.exports = function (key, value) { var data1 = this.__data__; if (data1 instanceof ListCache) {
            var pairs = data1.__data__;
            if (!Map1 || pairs.length < 199)
                return pairs.push([key, value]), this.size = ++data1.size, this;
            data1 = this.__data__ = new MapCache(pairs);
        } return data1.set(key, value), this.size = data1.size, this; }; }, "./node_modules/lodash/_toSource.js": module1 => { var funcToString = Function.prototype.toString; module1.exports = function (func) { if (null != func) {
            try {
                return funcToString.call(func);
            }
            catch (e) { }
            try {
                return func + "";
            }
            catch (e) { }
        } return ""; }; }, "./node_modules/lodash/eq.js": module1 => { module1.exports = function (value, other) { return value === other || value != value && other != other; }; }, "./node_modules/lodash/isArguments.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseIsArguments = __webpack_require__("./node_modules/lodash/_baseIsArguments.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js"), objectProto = Object.prototype, hasOwnProperty = objectProto.hasOwnProperty, propertyIsEnumerable = objectProto.propertyIsEnumerable; module1.exports = baseIsArguments(function () { return arguments; }()) ? baseIsArguments : function (value) { return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee"); }; }, "./node_modules/lodash/isArray.js": module1 => { module1.exports = Array.isArray; }, "./node_modules/lodash/isArrayLike.js": (module1, __unused_webpack_exports, __webpack_require__) => { var isFunction = __webpack_require__("./node_modules/lodash/isFunction.js"), isLength = __webpack_require__("./node_modules/lodash/isLength.js"); module1.exports = function (value) { return null != value && isLength(value.length) && !isFunction(value); }; }, "./node_modules/lodash/isBuffer.js": (module1, exports, __webpack_require__) => { module1 = __webpack_require__.nmd(module1); var root = __webpack_require__("./node_modules/lodash/_root.js"), stubFalse = __webpack_require__("./node_modules/lodash/stubFalse.js"), freeExports = exports && !exports.nodeType && exports, freeModule = freeExports && module1 && !module1.nodeType && module1, Buffer1 = freeModule && freeModule.exports === freeExports ? root.Buffer : void 0, nativeIsBuffer = Buffer1 ? Buffer1.isBuffer : void 0; module1.exports = nativeIsBuffer || stubFalse; }, "./node_modules/lodash/isFunction.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), isObject = __webpack_require__("./node_modules/lodash/isObject.js"); module1.exports = function (value) { if (!isObject(value))
            return !1; var tag = baseGetTag(value); return "[object Function]" == tag || "[object GeneratorFunction]" == tag || "[object AsyncFunction]" == tag || "[object Proxy]" == tag; }; }, "./node_modules/lodash/isLength.js": module1 => { module1.exports = function (value) { return "number" == typeof value && value > -1 && value % 1 == 0 && value <= 0x1fffffffffffff; }; }, "./node_modules/lodash/isMatch.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseIsMatch = __webpack_require__("./node_modules/lodash/_baseIsMatch.js"), getMatchData = __webpack_require__("./node_modules/lodash/_getMatchData.js"); module1.exports = function (object, source) { return object === source || baseIsMatch(object, source, getMatchData(source)); }; }, "./node_modules/lodash/isObject.js": module1 => { module1.exports = function (value) { var type = typeof value; return null != value && ("object" == type || "function" == type); }; }, "./node_modules/lodash/isObjectLike.js": module1 => { module1.exports = function (value) { return null != value && "object" == typeof value; }; }, "./node_modules/lodash/isTypedArray.js": (module1, __unused_webpack_exports, __webpack_require__) => { var baseIsTypedArray = __webpack_require__("./node_modules/lodash/_baseIsTypedArray.js"), baseUnary = __webpack_require__("./node_modules/lodash/_baseUnary.js"), nodeUtil = __webpack_require__("./node_modules/lodash/_nodeUtil.js"), nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray; module1.exports = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray; }, "./node_modules/lodash/keys.js": (module1, __unused_webpack_exports, __webpack_require__) => { var arrayLikeKeys = __webpack_require__("./node_modules/lodash/_arrayLikeKeys.js"), baseKeys = __webpack_require__("./node_modules/lodash/_baseKeys.js"), isArrayLike = __webpack_require__("./node_modules/lodash/isArrayLike.js"); module1.exports = function (object) { return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object); }; }, "./node_modules/lodash/stubArray.js": module1 => { module1.exports = function () { return []; }; }, "./node_modules/lodash/stubFalse.js": module1 => { module1.exports = function () { return !1; }; }, "./node_modules/lru-cache/dist/esm/index.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            var _a, _Stack_constructing, _LRUCache_instances, _LRUCache_max, _LRUCache_maxSize, _LRUCache_dispose, _LRUCache_onInsert, _LRUCache_disposeAfter, _LRUCache_fetchMethod, _LRUCache_memoMethod, _LRUCache_size, _LRUCache_calculatedSize, _LRUCache_keyMap, _LRUCache_keyList, _LRUCache_valList, _LRUCache_next, _LRUCache_prev, _LRUCache_head, _LRUCache_tail, _LRUCache_free, _LRUCache_disposed, _LRUCache_sizes, _LRUCache_starts, _LRUCache_ttls, _LRUCache_hasDispose, _LRUCache_hasFetchMethod, _LRUCache_hasDisposeAfter, _LRUCache_hasOnInsert, _LRUCache_initializeTTLTracking, _LRUCache_updateItemAge, _LRUCache_statusTTL, _LRUCache_setItemTTL, _LRUCache_isStale, _LRUCache_initializeSizeTracking, _LRUCache_removeItemSize, _LRUCache_addItemSize, _LRUCache_requireSize, _LRUCache_indexes, _LRUCache_rindexes, _LRUCache_isValidIndex, _LRUCache_evict, _LRUCache_backgroundFetch, _LRUCache_isBackgroundFetch, _LRUCache_connect, _LRUCache_moveToTail, _LRUCache_delete, _LRUCache_clear, _b;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { LRUCache: () => LRUCache });
            let perf = "object" == typeof performance && performance && "function" == typeof performance.now ? performance : Date, warned = new Set, PROCESS = "object" == typeof process && process ? process : {}, emitWarning = (msg, type, code, fn) => { "function" == typeof PROCESS.emitWarning ? PROCESS.emitWarning(msg, type, code, fn) : console.error(`[${code}] ${type}: ${msg}`); }, AC = globalThis.AbortController, AS = globalThis.AbortSignal;
            if (void 0 === AC) {
                AS = class {
                    constructor() {
                        this._onabort = [];
                        this.aborted = !1;
                    }
                    addEventListener(_, fn) { this._onabort.push(fn); }
                }, AC = class {
                    constructor() {
                        this.signal = new AS;
                        warnACPolyfill();
                    }
                    abort(reason) { if (!this.signal.aborted) {
                        for (let fn of (this.signal.reason = reason, this.signal.aborted = !0, this.signal._onabort))
                            fn(reason);
                        this.signal.onabort?.(reason);
                    } }
                };
                let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== "1", warnACPolyfill = () => { printACPolyfillWarning && (printACPolyfillWarning = !1, emitWarning("AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.", "NO_ABORT_CONTROLLER", "ENOTSUP", warnACPolyfill)); };
            }
            let shouldWarn = code => !warned.has(code);
            Symbol("type");
            let isPosInt = n => n && n === Math.floor(n) && n > 0 && isFinite(n), getUintArray = max => isPosInt(max) ? max <= 256 ? Uint8Array : max <= 65536 ? Uint16Array : max <= 0x100000000 ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null : null;
            class ZeroArray extends Array {
                constructor(size) { super(size), this.fill(0); }
            }
            class Stack {
                static create(max) { let HeapCls = getUintArray(max); if (!HeapCls)
                    return []; __classPrivateFieldSet(_a, _a, !0, "f", _Stack_constructing); let s = new _a(max, HeapCls); return __classPrivateFieldSet(_a, _a, !1, "f", _Stack_constructing), s; }
                constructor(max, HeapCls) { if (!__classPrivateFieldGet(_a, _a, "f", _Stack_constructing))
                    throw TypeError("instantiate Stack using Stack.create(n)"); this.heap = new HeapCls(max), this.length = 0; }
                push(n) { this.heap[this.length++] = n; }
                pop() { return this.heap[--this.length]; }
            }
            _a = Stack;
            _Stack_constructing = { value: !1 };
            class LRUCache {
                static unsafeExposeInternals(c) { return { starts: __classPrivateFieldGet(c, _LRUCache_starts, "f"), ttls: __classPrivateFieldGet(c, _LRUCache_ttls, "f"), sizes: __classPrivateFieldGet(c, _LRUCache_sizes, "f"), keyMap: __classPrivateFieldGet(c, _LRUCache_keyMap, "f"), keyList: __classPrivateFieldGet(c, _LRUCache_keyList, "f"), valList: __classPrivateFieldGet(c, _LRUCache_valList, "f"), next: __classPrivateFieldGet(c, _LRUCache_next, "f"), prev: __classPrivateFieldGet(c, _LRUCache_prev, "f"), get head() { return __classPrivateFieldGet(c, _LRUCache_head, "f"); }, get tail() { return __classPrivateFieldGet(c, _LRUCache_tail, "f"); }, free: __classPrivateFieldGet(c, _LRUCache_free, "f"), isBackgroundFetch: p => __classPrivateFieldGet(c, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(c, p), backgroundFetch: (k, index, options1, context) => __classPrivateFieldGet(c, _LRUCache_instances, "m", _LRUCache_backgroundFetch).call(c, k, index, options1, context), moveToTail: index => __classPrivateFieldGet(c, _LRUCache_instances, "m", _LRUCache_moveToTail).call(c, index), indexes: options1 => __classPrivateFieldGet(c, _LRUCache_instances, "m", _LRUCache_indexes).call(c, options1), rindexes: options1 => __classPrivateFieldGet(c, _LRUCache_instances, "m", _LRUCache_rindexes).call(c, options1), isStale: index => __classPrivateFieldGet(c, _LRUCache_isStale, "f").call(c, index) }; }
                get max() { return __classPrivateFieldGet(this, _LRUCache_max, "f"); }
                get maxSize() { return __classPrivateFieldGet(this, _LRUCache_maxSize, "f"); }
                get calculatedSize() { return __classPrivateFieldGet(this, _LRUCache_calculatedSize, "f"); }
                get size() { return __classPrivateFieldGet(this, _LRUCache_size, "f"); }
                get fetchMethod() { return __classPrivateFieldGet(this, _LRUCache_fetchMethod, "f"); }
                get memoMethod() { return __classPrivateFieldGet(this, _LRUCache_memoMethod, "f"); }
                get dispose() { return __classPrivateFieldGet(this, _LRUCache_dispose, "f"); }
                get onInsert() { return __classPrivateFieldGet(this, _LRUCache_onInsert, "f"); }
                get disposeAfter() { return __classPrivateFieldGet(this, _LRUCache_disposeAfter, "f"); }
                constructor(options1) {
                    _LRUCache_instances.add(this);
                    _LRUCache_max.set(this, void 0);
                    _LRUCache_maxSize.set(this, void 0);
                    _LRUCache_dispose.set(this, void 0);
                    _LRUCache_onInsert.set(this, void 0);
                    _LRUCache_disposeAfter.set(this, void 0);
                    _LRUCache_fetchMethod.set(this, void 0);
                    _LRUCache_memoMethod.set(this, void 0);
                    _LRUCache_size.set(this, void 0);
                    _LRUCache_calculatedSize.set(this, void 0);
                    _LRUCache_keyMap.set(this, void 0);
                    _LRUCache_keyList.set(this, void 0);
                    _LRUCache_valList.set(this, void 0);
                    _LRUCache_next.set(this, void 0);
                    _LRUCache_prev.set(this, void 0);
                    _LRUCache_head.set(this, void 0);
                    _LRUCache_tail.set(this, void 0);
                    _LRUCache_free.set(this, void 0);
                    _LRUCache_disposed.set(this, void 0);
                    _LRUCache_sizes.set(this, void 0);
                    _LRUCache_starts.set(this, void 0);
                    _LRUCache_ttls.set(this, void 0);
                    _LRUCache_hasDispose.set(this, void 0);
                    _LRUCache_hasFetchMethod.set(this, void 0);
                    _LRUCache_hasDisposeAfter.set(this, void 0);
                    _LRUCache_hasOnInsert.set(this, void 0);
                    _LRUCache_updateItemAge.set(this, () => { });
                    _LRUCache_statusTTL.set(this, () => { });
                    _LRUCache_setItemTTL.set(this, () => { });
                    _LRUCache_isStale.set(this, () => !1);
                    _LRUCache_removeItemSize.set(this, _i => { });
                    _LRUCache_addItemSize.set(this, (_i, _s, _st) => { });
                    _LRUCache_requireSize.set(this, (_k, _v, size, sizeCalculation) => { if (size || sizeCalculation)
                        throw TypeError("cannot set size without setting maxSize or maxEntrySize on cache"); return 0; });
                    this[_b] = "LRUCache";
                    let { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, onInsert, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, memoMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort } = options1;
                    if (0 !== max && !isPosInt(max))
                        throw TypeError("max option must be a nonnegative integer");
                    let UintArray = max ? getUintArray(max) : Array;
                    if (!UintArray)
                        throw Error("invalid max value: " + max);
                    if (__classPrivateFieldSet(this, _LRUCache_max, max, "f"), __classPrivateFieldSet(this, _LRUCache_maxSize, maxSize, "f"), this.maxEntrySize = maxEntrySize || __classPrivateFieldGet(this, _LRUCache_maxSize, "f"), this.sizeCalculation = sizeCalculation, this.sizeCalculation) {
                        if (!__classPrivateFieldGet(this, _LRUCache_maxSize, "f") && !this.maxEntrySize)
                            throw TypeError("cannot set sizeCalculation without setting maxSize or maxEntrySize");
                        if ("function" != typeof this.sizeCalculation)
                            throw TypeError("sizeCalculation set to non-function");
                    }
                    if (void 0 !== memoMethod && "function" != typeof memoMethod)
                        throw TypeError("memoMethod must be a function if defined");
                    if (__classPrivateFieldSet(this, _LRUCache_memoMethod, memoMethod, "f"), void 0 !== fetchMethod && "function" != typeof fetchMethod)
                        throw TypeError("fetchMethod must be a function if specified");
                    if (__classPrivateFieldSet(this, _LRUCache_fetchMethod, fetchMethod, "f"), __classPrivateFieldSet(this, _LRUCache_hasFetchMethod, !!fetchMethod, "f"), __classPrivateFieldSet(this, _LRUCache_keyMap, new Map, "f"), __classPrivateFieldSet(this, _LRUCache_keyList, Array(max).fill(void 0), "f"), __classPrivateFieldSet(this, _LRUCache_valList, Array(max).fill(void 0), "f"), __classPrivateFieldSet(this, _LRUCache_next, new UintArray(max), "f"), __classPrivateFieldSet(this, _LRUCache_prev, new UintArray(max), "f"), __classPrivateFieldSet(this, _LRUCache_head, 0, "f"), __classPrivateFieldSet(this, _LRUCache_tail, 0, "f"), __classPrivateFieldSet(this, _LRUCache_free, Stack.create(max), "f"), __classPrivateFieldSet(this, _LRUCache_size, 0, "f"), __classPrivateFieldSet(this, _LRUCache_calculatedSize, 0, "f"), "function" == typeof dispose && (__classPrivateFieldSet(this, _LRUCache_dispose, dispose, "f")), "function" == typeof onInsert && (__classPrivateFieldSet(this, _LRUCache_onInsert, onInsert, "f")), "function" == typeof disposeAfter ? (__classPrivateFieldSet(this, _LRUCache_disposeAfter, disposeAfter, "f"), __classPrivateFieldSet(this, _LRUCache_disposed, [], "f")) : (__classPrivateFieldSet(this, _LRUCache_disposeAfter, void 0, "f"), __classPrivateFieldSet(this, _LRUCache_disposed, void 0, "f")), __classPrivateFieldSet(this, _LRUCache_hasDispose, !!__classPrivateFieldGet(this, _LRUCache_dispose, "f"), "f"), __classPrivateFieldSet(this, _LRUCache_hasOnInsert, !!__classPrivateFieldGet(this, _LRUCache_onInsert, "f"), "f"), __classPrivateFieldSet(this, _LRUCache_hasDisposeAfter, !!__classPrivateFieldGet(this, _LRUCache_disposeAfter, "f"), "f"), this.noDisposeOnSet = !!noDisposeOnSet, this.noUpdateTTL = !!noUpdateTTL, this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection, this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection, this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort, this.ignoreFetchAbort = !!ignoreFetchAbort, 0 !== this.maxEntrySize) {
                        if (0 !== __classPrivateFieldGet(this, _LRUCache_maxSize, "f") && !isPosInt(__classPrivateFieldGet(this, _LRUCache_maxSize, "f")))
                            throw TypeError("maxSize must be a positive integer if specified");
                        if (!isPosInt(this.maxEntrySize))
                            throw TypeError("maxEntrySize must be a positive integer if specified");
                        __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_initializeSizeTracking).call(this);
                    }
                    if (this.allowStale = !!allowStale, this.noDeleteOnStaleGet = !!noDeleteOnStaleGet, this.updateAgeOnGet = !!updateAgeOnGet, this.updateAgeOnHas = !!updateAgeOnHas, this.ttlResolution = isPosInt(ttlResolution) || 0 === ttlResolution ? ttlResolution : 1, this.ttlAutopurge = !!ttlAutopurge, this.ttl = ttl || 0, this.ttl) {
                        if (!isPosInt(this.ttl))
                            throw TypeError("ttl must be a positive integer if specified");
                        __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_initializeTTLTracking).call(this);
                    }
                    if (0 === __classPrivateFieldGet(this, _LRUCache_max, "f") && 0 === this.ttl && 0 === __classPrivateFieldGet(this, _LRUCache_maxSize, "f"))
                        throw TypeError("At least one of max, maxSize, or ttl is required");
                    if (!this.ttlAutopurge && !__classPrivateFieldGet(this, _LRUCache_max, "f") && !__classPrivateFieldGet(this, _LRUCache_maxSize, "f")) {
                        let code = "LRU_CACHE_UNBOUNDED";
                        shouldWarn(code) && (warned.add(code), emitWarning("TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.", "UnboundedCacheWarning", code, LRUCache));
                    }
                }
                getRemainingTTL(key) { return __classPrivateFieldGet(this, _LRUCache_keyMap, "f").has(key) ? 1 / 0 : 0; }
                *entries() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this))
                    void 0 === __classPrivateFieldGet(this, _LRUCache_valList, "f")[i] || void 0 === __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i] || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield [__classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]]); }
                *rentries() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this))
                    void 0 === __classPrivateFieldGet(this, _LRUCache_valList, "f")[i] || void 0 === __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i] || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield [__classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]]); }
                *keys() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this)) {
                    let k = __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i];
                    void 0 === k || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield k);
                } }
                *rkeys() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this)) {
                    let k = __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i];
                    void 0 === k || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield k);
                } }
                *values() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this))
                    void 0 === __classPrivateFieldGet(this, _LRUCache_valList, "f")[i] || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]); }
                *rvalues() { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this))
                    void 0 === __classPrivateFieldGet(this, _LRUCache_valList, "f")[i] || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]) || (yield __classPrivateFieldGet(this, _LRUCache_valList, "f")[i]); }
                [(_LRUCache_max = new WeakMap(), _LRUCache_maxSize = new WeakMap(), _LRUCache_dispose = new WeakMap(), _LRUCache_onInsert = new WeakMap(), _LRUCache_disposeAfter = new WeakMap(), _LRUCache_fetchMethod = new WeakMap(), _LRUCache_memoMethod = new WeakMap(), _LRUCache_size = new WeakMap(), _LRUCache_calculatedSize = new WeakMap(), _LRUCache_keyMap = new WeakMap(), _LRUCache_keyList = new WeakMap(), _LRUCache_valList = new WeakMap(), _LRUCache_next = new WeakMap(), _LRUCache_prev = new WeakMap(), _LRUCache_head = new WeakMap(), _LRUCache_tail = new WeakMap(), _LRUCache_free = new WeakMap(), _LRUCache_disposed = new WeakMap(), _LRUCache_sizes = new WeakMap(), _LRUCache_starts = new WeakMap(), _LRUCache_ttls = new WeakMap(), _LRUCache_hasDispose = new WeakMap(), _LRUCache_hasFetchMethod = new WeakMap(), _LRUCache_hasDisposeAfter = new WeakMap(), _LRUCache_hasOnInsert = new WeakMap(), _LRUCache_updateItemAge = new WeakMap(), _LRUCache_statusTTL = new WeakMap(), _LRUCache_setItemTTL = new WeakMap(), _LRUCache_isStale = new WeakMap(), _LRUCache_removeItemSize = new WeakMap(), _LRUCache_addItemSize = new WeakMap(), _LRUCache_requireSize = new WeakMap(), _LRUCache_instances = new WeakSet(), _LRUCache_initializeTTLTracking = function _LRUCache_initializeTTLTracking() { let ttls = new ZeroArray(__classPrivateFieldGet(this, _LRUCache_max, "f")), starts = new ZeroArray(__classPrivateFieldGet(this, _LRUCache_max, "f")); __classPrivateFieldSet(this, _LRUCache_ttls, ttls, "f"), __classPrivateFieldSet(this, _LRUCache_starts, starts, "f"), __classPrivateFieldSet(this, _LRUCache_setItemTTL, (index, ttl, start = perf.now()) => { if (starts[index] = 0 !== ttl ? start : 0, ttls[index] = ttl, 0 !== ttl && this.ttlAutopurge) {
                    let t = setTimeout(() => { __classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, index) && __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, __classPrivateFieldGet(this, _LRUCache_keyList, "f")[index], "expire"); }, ttl + 1);
                    t.unref && t.unref();
                } }, "f"), __classPrivateFieldSet(this, _LRUCache_updateItemAge, index => { starts[index] = 0 !== ttls[index] ? perf.now() : 0; }, "f"), __classPrivateFieldSet(this, _LRUCache_statusTTL, (status, index) => { if (ttls[index]) {
                    let ttl = ttls[index], start = starts[index];
                    if (!ttl || !start)
                        return;
                    status.ttl = ttl, status.start = start, status.now = cachedNow || getNow();
                    let age = status.now - start;
                    status.remainingTTL = ttl - age;
                } }, "f"); let cachedNow = 0, getNow = () => { let n = perf.now(); if (this.ttlResolution > 0) {
                    cachedNow = n;
                    let t = setTimeout(() => cachedNow = 0, this.ttlResolution);
                    t.unref && t.unref();
                } return n; }; this.getRemainingTTL = key => { let index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(key); if (void 0 === index)
                    return 0; let ttl = ttls[index], start = starts[index]; return ttl && start ? ttl - ((cachedNow || getNow()) - start) : 1 / 0; }, __classPrivateFieldSet(this, _LRUCache_isStale, index => { let s = starts[index], t = ttls[index]; return !!t && !!s && (cachedNow || getNow()) - s > t; }, "f"); }, _LRUCache_initializeSizeTracking = function _LRUCache_initializeSizeTracking() { let sizes = new ZeroArray(__classPrivateFieldGet(this, _LRUCache_max, "f")); __classPrivateFieldSet(this, _LRUCache_calculatedSize, 0, "f"), __classPrivateFieldSet(this, _LRUCache_sizes, sizes, "f"), __classPrivateFieldSet(this, _LRUCache_removeItemSize, index => { __classPrivateFieldSet(this, _LRUCache_calculatedSize, __classPrivateFieldGet(this, _LRUCache_calculatedSize, "f") - sizes[index], "f"), sizes[index] = 0; }, "f"), __classPrivateFieldSet(this, _LRUCache_requireSize, (k, v, size, sizeCalculation) => { if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v))
                    return 0; if (!isPosInt(size))
                    if (sizeCalculation) {
                        if ("function" != typeof sizeCalculation)
                            throw TypeError("sizeCalculation must be a function");
                        if (!isPosInt(size = sizeCalculation(v, k)))
                            throw TypeError("sizeCalculation return invalid (expect positive integer)");
                    }
                    else
                        throw TypeError("invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set."); return size; }, "f"), __classPrivateFieldSet(this, _LRUCache_addItemSize, (index, size, status) => { if (sizes[index] = size, __classPrivateFieldGet(this, _LRUCache_maxSize, "f")) {
                    let maxSize = __classPrivateFieldGet(this, _LRUCache_maxSize, "f") - sizes[index];
                    for (; __classPrivateFieldGet(this, _LRUCache_calculatedSize, "f") > maxSize;)
                        __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_evict).call(this, !0);
                } __classPrivateFieldSet(this, _LRUCache_calculatedSize, __classPrivateFieldGet(this, _LRUCache_calculatedSize, "f") + sizes[index], "f"), status && (status.entrySize = size, status.totalCalculatedSize = __classPrivateFieldGet(this, _LRUCache_calculatedSize, "f")); }, "f"); }, _LRUCache_indexes = function* _LRUCache_indexes({ allowStale = this.allowStale } = {}) { if (__classPrivateFieldGet(this, _LRUCache_size, "f"))
                    for (let i = __classPrivateFieldGet(this, _LRUCache_tail, "f"); __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isValidIndex).call(this, i) && ((allowStale || !__classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, i)) && (yield i), i !== __classPrivateFieldGet(this, _LRUCache_head, "f"));)
                        i = __classPrivateFieldGet(this, _LRUCache_prev, "f")[i]; }, _LRUCache_rindexes = function* _LRUCache_rindexes({ allowStale = this.allowStale } = {}) { if (__classPrivateFieldGet(this, _LRUCache_size, "f"))
                    for (let i = __classPrivateFieldGet(this, _LRUCache_head, "f"); __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isValidIndex).call(this, i) && ((allowStale || !__classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, i)) && (yield i), i !== __classPrivateFieldGet(this, _LRUCache_tail, "f"));)
                        i = __classPrivateFieldGet(this, _LRUCache_next, "f")[i]; }, _LRUCache_isValidIndex = function _LRUCache_isValidIndex(index) { return void 0 !== index && __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(__classPrivateFieldGet(this, _LRUCache_keyList, "f")[index]) === index; }, Symbol.iterator)]() { return this.entries(); }
                find(fn, getOptions = {}) { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this)) {
                    let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[i], value = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v;
                    if (void 0 !== value && fn(value, __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], this))
                        return this.get(__classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], getOptions);
                } }
                forEach(fn, thisp = this) { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this)) {
                    let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[i], value = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v;
                    void 0 !== value && fn.call(thisp, value, __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], this);
                } }
                rforEach(fn, thisp = this) { for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this)) {
                    let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[i], value = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v;
                    void 0 !== value && fn.call(thisp, value, __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], this);
                } }
                purgeStale() { let deleted = !1; for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this, { allowStale: !0 }))
                    __classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, i) && (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], "expire"), deleted = !0); return deleted; }
                info(key) { let i = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(key); if (void 0 === i)
                    return; let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[i], value = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v; if (void 0 === value)
                    return; let entry = { value }; if (__classPrivateFieldGet(this, _LRUCache_ttls, "f") && __classPrivateFieldGet(this, _LRUCache_starts, "f")) {
                    let ttl = __classPrivateFieldGet(this, _LRUCache_ttls, "f")[i], start = __classPrivateFieldGet(this, _LRUCache_starts, "f")[i];
                    ttl && start && (entry.ttl = ttl - (perf.now() - start), entry.start = Date.now());
                } return __classPrivateFieldGet(this, _LRUCache_sizes, "f") && (entry.size = __classPrivateFieldGet(this, _LRUCache_sizes, "f")[i]), entry; }
                dump() { let arr = []; for (let i of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_indexes).call(this, { allowStale: !0 })) {
                    let key = __classPrivateFieldGet(this, _LRUCache_keyList, "f")[i], v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[i], value = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v;
                    if (void 0 === value || void 0 === key)
                        continue;
                    let entry = { value };
                    if (__classPrivateFieldGet(this, _LRUCache_ttls, "f") && __classPrivateFieldGet(this, _LRUCache_starts, "f")) {
                        entry.ttl = __classPrivateFieldGet(this, _LRUCache_ttls, "f")[i];
                        let age = perf.now() - __classPrivateFieldGet(this, _LRUCache_starts, "f")[i];
                        entry.start = Math.floor(Date.now() - age);
                    }
                    __classPrivateFieldGet(this, _LRUCache_sizes, "f") && (entry.size = __classPrivateFieldGet(this, _LRUCache_sizes, "f")[i]), arr.unshift([key, entry]);
                } return arr; }
                load(arr) { for (let [key, entry] of (this.clear(), arr)) {
                    if (entry.start) {
                        let age = Date.now() - entry.start;
                        entry.start = perf.now() - age;
                    }
                    this.set(key, entry.value, entry);
                } }
                set(k, v, setOptions = {}) { var _c, _d; if (void 0 === v)
                    return this.delete(k), this; let { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status } = setOptions, { noUpdateTTL = this.noUpdateTTL } = setOptions, size = __classPrivateFieldGet(this, _LRUCache_requireSize, "f").call(this, k, v, setOptions.size || 0, sizeCalculation); if (this.maxEntrySize && size > this.maxEntrySize)
                    return status && (status.set = "miss", status.maxEntrySizeExceeded = !0), __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, k, "set"), this; let index = 0 === __classPrivateFieldGet(this, _LRUCache_size, "f") ? void 0 : __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k); if (void 0 === index)
                    index = 0 === __classPrivateFieldGet(this, _LRUCache_size, "f") ? __classPrivateFieldGet(this, _LRUCache_tail, "f") : 0 !== __classPrivateFieldGet(this, _LRUCache_free, "f").length ? __classPrivateFieldGet(this, _LRUCache_free, "f").pop() : __classPrivateFieldGet(this, _LRUCache_size, "f") === __classPrivateFieldGet(this, _LRUCache_max, "f") ? __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_evict).call(this, !1) : __classPrivateFieldGet(this, _LRUCache_size, "f"), __classPrivateFieldGet(this, _LRUCache_keyList, "f")[index] = k, __classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = v, __classPrivateFieldGet(this, _LRUCache_keyMap, "f").set(k, index), __classPrivateFieldGet(this, _LRUCache_next, "f")[__classPrivateFieldGet(this, _LRUCache_tail, "f")] = index, __classPrivateFieldGet(this, _LRUCache_prev, "f")[index] = __classPrivateFieldGet(this, _LRUCache_tail, "f"), __classPrivateFieldSet(this, _LRUCache_tail, index, "f"), __classPrivateFieldSet(this, _LRUCache_size, (_d = __classPrivateFieldGet(this, _LRUCache_size, "f"), _c = _d++, _d), "f"), _c, __classPrivateFieldGet(this, _LRUCache_addItemSize, "f").call(this, index, size, status), status && (status.set = "add"), noUpdateTTL = !1, __classPrivateFieldGet(this, _LRUCache_hasOnInsert, "f") && __classPrivateFieldGet(this, _LRUCache_onInsert, "f")?.call(this, v, k, "add");
                else {
                    __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_moveToTail).call(this, index);
                    let oldVal = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index];
                    if (v !== oldVal) {
                        if (__classPrivateFieldGet(this, _LRUCache_hasFetchMethod, "f") && __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, oldVal)) {
                            oldVal.__abortController.abort(Error("replaced"));
                            let { __staleWhileFetching: s } = oldVal;
                            void 0 !== s && !noDisposeOnSet && (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") && __classPrivateFieldGet(this, _LRUCache_dispose, "f")?.call(this, s, k, "set"), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.push([s, k, "set"]));
                        }
                        else
                            !noDisposeOnSet && (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") && __classPrivateFieldGet(this, _LRUCache_dispose, "f")?.call(this, oldVal, k, "set"), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.push([oldVal, k, "set"]));
                        if (__classPrivateFieldGet(this, _LRUCache_removeItemSize, "f").call(this, index), __classPrivateFieldGet(this, _LRUCache_addItemSize, "f").call(this, index, size, status), __classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = v, status) {
                            status.set = "replace";
                            let oldValue = oldVal && __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, oldVal) ? oldVal.__staleWhileFetching : oldVal;
                            void 0 !== oldValue && (status.oldValue = oldValue);
                        }
                    }
                    else
                        status && (status.set = "update");
                    __classPrivateFieldGet(this, _LRUCache_hasOnInsert, "f") && this.onInsert?.(v, k, v === oldVal ? "update" : "replace");
                } if (0 === ttl || __classPrivateFieldGet(this, _LRUCache_ttls, "f") || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_initializeTTLTracking).call(this), __classPrivateFieldGet(this, _LRUCache_ttls, "f") && (noUpdateTTL || __classPrivateFieldGet(this, _LRUCache_setItemTTL, "f").call(this, index, ttl, start), status && __classPrivateFieldGet(this, _LRUCache_statusTTL, "f").call(this, status, index)), !noDisposeOnSet && __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")) {
                    let task, dt = __classPrivateFieldGet(this, _LRUCache_disposed, "f");
                    for (; task = dt?.shift();)
                        __classPrivateFieldGet(this, _LRUCache_disposeAfter, "f")?.call(this, ...task);
                } return this; }
                pop() { try {
                    for (; __classPrivateFieldGet(this, _LRUCache_size, "f");) {
                        let val1 = __classPrivateFieldGet(this, _LRUCache_valList, "f")[__classPrivateFieldGet(this, _LRUCache_head, "f")];
                        if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_evict).call(this, !0), __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, val1)) {
                            if (val1.__staleWhileFetching)
                                return val1.__staleWhileFetching;
                        }
                        else if (void 0 !== val1)
                            return val1;
                    }
                }
                finally {
                    if (__classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")) {
                        let task, dt = __classPrivateFieldGet(this, _LRUCache_disposed, "f");
                        for (; task = dt?.shift();)
                            __classPrivateFieldGet(this, _LRUCache_disposeAfter, "f")?.call(this, ...task);
                    }
                } }
                has(k, hasOptions = {}) { let { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions, index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k); if (void 0 !== index) {
                    let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index];
                    if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) && void 0 === v.__staleWhileFetching)
                        return !1;
                    if (!__classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, index))
                        return updateAgeOnHas && __classPrivateFieldGet(this, _LRUCache_updateItemAge, "f").call(this, index), status && (status.has = "hit", __classPrivateFieldGet(this, _LRUCache_statusTTL, "f").call(this, status, index)), !0;
                    status && (status.has = "stale", __classPrivateFieldGet(this, _LRUCache_statusTTL, "f").call(this, status, index));
                }
                else
                    status && (status.has = "miss"); return !1; }
                peek(k, peekOptions = {}) { let { allowStale = this.allowStale } = peekOptions, index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k); if (void 0 === index || !allowStale && __classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, index))
                    return; let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index]; return __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__staleWhileFetching : v; }
                async fetch(k, fetchOptions = {}) { let { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = !1, status, signal } = fetchOptions; if (!__classPrivateFieldGet(this, _LRUCache_hasFetchMethod, "f"))
                    return status && (status.fetch = "get"), this.get(k, { allowStale, updateAgeOnGet, noDeleteOnStaleGet, status }); let options1 = { allowStale, updateAgeOnGet, noDeleteOnStaleGet, ttl, noDisposeOnSet, size, sizeCalculation, noUpdateTTL, noDeleteOnFetchRejection, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, status, signal }, index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k); if (void 0 === index) {
                    status && (status.fetch = "miss");
                    let p = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_backgroundFetch).call(this, k, index, options1, context);
                    return p.__returned = p;
                } {
                    let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index];
                    if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v)) {
                        let stale = allowStale && void 0 !== v.__staleWhileFetching;
                        return status && (status.fetch = "inflight", stale && (status.returnedStale = !0)), stale ? v.__staleWhileFetching : v.__returned = v;
                    }
                    let isStale = __classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, index);
                    if (!forceRefresh && !isStale)
                        return status && (status.fetch = "hit"), __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_moveToTail).call(this, index), updateAgeOnGet && __classPrivateFieldGet(this, _LRUCache_updateItemAge, "f").call(this, index), status && __classPrivateFieldGet(this, _LRUCache_statusTTL, "f").call(this, status, index), v;
                    let p = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_backgroundFetch).call(this, k, index, options1, context), staleVal = void 0 !== p.__staleWhileFetching && allowStale;
                    return status && (status.fetch = isStale ? "stale" : "refresh", staleVal && isStale && (status.returnedStale = !0)), staleVal ? p.__staleWhileFetching : p.__returned = p;
                } }
                async forceFetch(k, fetchOptions = {}) { let v = await this.fetch(k, fetchOptions); if (void 0 === v)
                    throw Error("fetch() returned undefined"); return v; }
                memo(k, memoOptions = {}) { let memoMethod = __classPrivateFieldGet(this, _LRUCache_memoMethod, "f"); if (!memoMethod)
                    throw Error("no memoMethod provided to constructor"); let { context, forceRefresh, ...options1 } = memoOptions, v = this.get(k, options1); if (!forceRefresh && void 0 !== v)
                    return v; let vv = memoMethod(k, v, { options: options1, context }); return this.set(k, vv, options1), vv; }
                get(k, getOptions = {}) { let { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status } = getOptions, index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k); if (void 0 !== index) {
                    let value = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index], fetching = __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, value);
                    return (status && __classPrivateFieldGet(this, _LRUCache_statusTTL, "f").call(this, status, index), __classPrivateFieldGet(this, _LRUCache_isStale, "f").call(this, index)) ? (status && (status.get = "stale"), fetching) ? (status && allowStale && void 0 !== value.__staleWhileFetching && (status.returnedStale = !0), allowStale ? value.__staleWhileFetching : void 0) : (noDeleteOnStaleGet || __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, k, "expire"), status && allowStale && (status.returnedStale = !0), allowStale ? value : void 0) : (status && (status.get = "hit"), fetching) ? value.__staleWhileFetching : (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_moveToTail).call(this, index), updateAgeOnGet && __classPrivateFieldGet(this, _LRUCache_updateItemAge, "f").call(this, index), value);
                } status && (status.get = "miss"); }
                delete(k) { return __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, k, "delete"); }
                clear() { return __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_clear).call(this, "delete"); }
            }
            _b = Symbol.toStringTag, _LRUCache_evict = function _LRUCache_evict(free) { var _c, _d; let head = __classPrivateFieldGet(this, _LRUCache_head, "f"), k = __classPrivateFieldGet(this, _LRUCache_keyList, "f")[head], v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[head]; return __classPrivateFieldGet(this, _LRUCache_hasFetchMethod, "f") && __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__abortController.abort(Error("evicted")) : (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") || __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f")) && (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") && __classPrivateFieldGet(this, _LRUCache_dispose, "f")?.call(this, v, k, "evict"), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.push([v, k, "evict"])), __classPrivateFieldGet(this, _LRUCache_removeItemSize, "f").call(this, head), free && (__classPrivateFieldGet(this, _LRUCache_keyList, "f")[head] = void 0, __classPrivateFieldGet(this, _LRUCache_valList, "f")[head] = void 0, __classPrivateFieldGet(this, _LRUCache_free, "f").push(head)), 1 === __classPrivateFieldGet(this, _LRUCache_size, "f") ? (__classPrivateFieldSet(this, _LRUCache_head, __classPrivateFieldSet(this, _LRUCache_tail, 0, "f"), "f"), __classPrivateFieldGet(this, _LRUCache_free, "f").length = 0) : __classPrivateFieldSet(this, _LRUCache_head, __classPrivateFieldGet(this, _LRUCache_next, "f")[head], "f"), __classPrivateFieldGet(this, _LRUCache_keyMap, "f").delete(k), __classPrivateFieldSet(this, _LRUCache_size, (_d = __classPrivateFieldGet(this, _LRUCache_size, "f"), _c = _d--, _d), "f"), _c, head; }, _LRUCache_backgroundFetch = function _LRUCache_backgroundFetch(k, index, options1, context) { let v = void 0 === index ? void 0 : __classPrivateFieldGet(this, _LRUCache_valList, "f")[index]; if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v))
                return v; let ac = new AC, { signal } = options1; signal?.addEventListener("abort", () => ac.abort(signal.reason), { signal: ac.signal }); let fetchOpts = { signal: ac.signal, options: options1, context }, cb = (v, updateCache = !1) => { let { aborted } = ac.signal, ignoreAbort = options1.ignoreFetchAbort && void 0 !== v; return (options1.status && (aborted && !updateCache ? (options1.status.fetchAborted = !0, options1.status.fetchError = ac.signal.reason, ignoreAbort && (options1.status.fetchAbortIgnored = !0)) : options1.status.fetchResolved = !0), !aborted || ignoreAbort || updateCache) ? (__classPrivateFieldGet(this, _LRUCache_valList, "f")[index] === p && (void 0 === v ? p.__staleWhileFetching ? __classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = p.__staleWhileFetching : __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, k, "fetch") : (options1.status && (options1.status.fetchUpdated = !0), this.set(k, v, fetchOpts.options))), v) : fetchFail(ac.signal.reason); }, fetchFail = er => { let { aborted } = ac.signal, allowStaleAborted = aborted && options1.allowStaleOnFetchAbort, allowStale = allowStaleAborted || options1.allowStaleOnFetchRejection, noDelete = allowStale || options1.noDeleteOnFetchRejection; if (__classPrivateFieldGet(this, _LRUCache_valList, "f")[index] === p && (noDelete && void 0 !== p.__staleWhileFetching ? allowStaleAborted || (__classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = p.__staleWhileFetching) : __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_delete).call(this, k, "fetch")), allowStale)
                return options1.status && void 0 !== p.__staleWhileFetching && (options1.status.returnedStale = !0), p.__staleWhileFetching; if (p.__returned === p)
                throw er; }; options1.status && (options1.status.fetchDispatched = !0); let p = new Promise((res, rej) => { let fmp = __classPrivateFieldGet(this, _LRUCache_fetchMethod, "f")?.call(this, k, v, fetchOpts); fmp && fmp instanceof Promise && fmp.then(v => res(void 0 === v ? void 0 : v), rej), ac.signal.addEventListener("abort", () => { (!options1.ignoreFetchAbort || options1.allowStaleOnFetchAbort) && (res(void 0), options1.allowStaleOnFetchAbort && (res = v => cb(v, !0))); }); }).then(cb, er => (options1.status && (options1.status.fetchRejected = !0, options1.status.fetchError = er), fetchFail(er))), bf = Object.assign(p, { __abortController: ac, __staleWhileFetching: v, __returned: void 0 }); return void 0 === index ? (this.set(k, bf, { ...fetchOpts.options, status: void 0 }), index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k)) : __classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = bf, bf; }, _LRUCache_isBackgroundFetch = function _LRUCache_isBackgroundFetch(p) { return !!__classPrivateFieldGet(this, _LRUCache_hasFetchMethod, "f") && !!p && p instanceof Promise && p.hasOwnProperty("__staleWhileFetching") && p.__abortController instanceof AC; }, _LRUCache_connect = function _LRUCache_connect(p, n) { __classPrivateFieldGet(this, _LRUCache_prev, "f")[n] = p, __classPrivateFieldGet(this, _LRUCache_next, "f")[p] = n; }, _LRUCache_moveToTail = function _LRUCache_moveToTail(index) { index !== __classPrivateFieldGet(this, _LRUCache_tail, "f") && (index === __classPrivateFieldGet(this, _LRUCache_head, "f") ? __classPrivateFieldSet(this, _LRUCache_head, __classPrivateFieldGet(this, _LRUCache_next, "f")[index], "f") : __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_connect).call(this, __classPrivateFieldGet(this, _LRUCache_prev, "f")[index], __classPrivateFieldGet(this, _LRUCache_next, "f")[index]), __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_connect).call(this, __classPrivateFieldGet(this, _LRUCache_tail, "f"), index), __classPrivateFieldSet(this, _LRUCache_tail, index, "f")); }, _LRUCache_delete = function _LRUCache_delete(k, reason) { var _c, _d; let deleted = !1; if (0 !== __classPrivateFieldGet(this, _LRUCache_size, "f")) {
                let index = __classPrivateFieldGet(this, _LRUCache_keyMap, "f").get(k);
                if (void 0 !== index)
                    if (deleted = !0, 1 === __classPrivateFieldGet(this, _LRUCache_size, "f"))
                        __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_clear).call(this, reason);
                    else {
                        __classPrivateFieldGet(this, _LRUCache_removeItemSize, "f").call(this, index);
                        let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index];
                        if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v) ? v.__abortController.abort(Error("deleted")) : (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") || __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f")) && (__classPrivateFieldGet(this, _LRUCache_hasDispose, "f") && __classPrivateFieldGet(this, _LRUCache_dispose, "f")?.call(this, v, k, reason), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.push([v, k, reason])), __classPrivateFieldGet(this, _LRUCache_keyMap, "f").delete(k), __classPrivateFieldGet(this, _LRUCache_keyList, "f")[index] = void 0, __classPrivateFieldGet(this, _LRUCache_valList, "f")[index] = void 0, index === __classPrivateFieldGet(this, _LRUCache_tail, "f"))
                            __classPrivateFieldSet(this, _LRUCache_tail, __classPrivateFieldGet(this, _LRUCache_prev, "f")[index], "f");
                        else if (index === __classPrivateFieldGet(this, _LRUCache_head, "f"))
                            __classPrivateFieldSet(this, _LRUCache_head, __classPrivateFieldGet(this, _LRUCache_next, "f")[index], "f");
                        else {
                            let pi = __classPrivateFieldGet(this, _LRUCache_prev, "f")[index];
                            __classPrivateFieldGet(this, _LRUCache_next, "f")[pi] = __classPrivateFieldGet(this, _LRUCache_next, "f")[index];
                            let ni = __classPrivateFieldGet(this, _LRUCache_next, "f")[index];
                            __classPrivateFieldGet(this, _LRUCache_prev, "f")[ni] = __classPrivateFieldGet(this, _LRUCache_prev, "f")[index];
                        }
                        __classPrivateFieldSet(this, _LRUCache_size, (_d = __classPrivateFieldGet(this, _LRUCache_size, "f"), _c = _d--, _d), "f"), _c, __classPrivateFieldGet(this, _LRUCache_free, "f").push(index);
                    }
            } if (__classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.length) {
                let task, dt = __classPrivateFieldGet(this, _LRUCache_disposed, "f");
                for (; task = dt?.shift();)
                    __classPrivateFieldGet(this, _LRUCache_disposeAfter, "f")?.call(this, ...task);
            } return deleted; }, _LRUCache_clear = function _LRUCache_clear(reason) { for (let index of __classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_rindexes).call(this, { allowStale: !0 })) {
                let v = __classPrivateFieldGet(this, _LRUCache_valList, "f")[index];
                if (__classPrivateFieldGet(this, _LRUCache_instances, "m", _LRUCache_isBackgroundFetch).call(this, v))
                    v.__abortController.abort(Error("deleted"));
                else {
                    let k = __classPrivateFieldGet(this, _LRUCache_keyList, "f")[index];
                    __classPrivateFieldGet(this, _LRUCache_hasDispose, "f") && __classPrivateFieldGet(this, _LRUCache_dispose, "f")?.call(this, v, k, reason), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")?.push([v, k, reason]);
                }
            } if (__classPrivateFieldGet(this, _LRUCache_keyMap, "f").clear(), __classPrivateFieldGet(this, _LRUCache_valList, "f").fill(void 0), __classPrivateFieldGet(this, _LRUCache_keyList, "f").fill(void 0), __classPrivateFieldGet(this, _LRUCache_ttls, "f") && __classPrivateFieldGet(this, _LRUCache_starts, "f") && (__classPrivateFieldGet(this, _LRUCache_ttls, "f").fill(0), __classPrivateFieldGet(this, _LRUCache_starts, "f").fill(0)), __classPrivateFieldGet(this, _LRUCache_sizes, "f") && __classPrivateFieldGet(this, _LRUCache_sizes, "f").fill(0), __classPrivateFieldSet(this, _LRUCache_head, 0, "f"), __classPrivateFieldSet(this, _LRUCache_tail, 0, "f"), __classPrivateFieldGet(this, _LRUCache_free, "f").length = 0, __classPrivateFieldSet(this, _LRUCache_calculatedSize, 0, "f"), __classPrivateFieldSet(this, _LRUCache_size, 0, "f"), __classPrivateFieldGet(this, _LRUCache_hasDisposeAfter, "f") && __classPrivateFieldGet(this, _LRUCache_disposed, "f")) {
                let task, dt = __classPrivateFieldGet(this, _LRUCache_disposed, "f");
                for (; task = dt?.shift();)
                    __classPrivateFieldGet(this, _LRUCache_disposeAfter, "f")?.call(this, ...task);
            } };
        }, "./node_modules/math-intrinsics/abs.js": module1 => {
            "use strict";
            module1.exports = Math.abs;
        }, "./node_modules/math-intrinsics/floor.js": module1 => {
            "use strict";
            module1.exports = Math.floor;
        }, "./node_modules/math-intrinsics/isNaN.js": module1 => {
            "use strict";
            module1.exports = Number.isNaN || function (a) { return a != a; };
        }, "./node_modules/math-intrinsics/max.js": module1 => {
            "use strict";
            module1.exports = Math.max;
        }, "./node_modules/math-intrinsics/min.js": module1 => {
            "use strict";
            module1.exports = Math.min;
        }, "./node_modules/math-intrinsics/pow.js": module1 => {
            "use strict";
            module1.exports = Math.pow;
        }, "./node_modules/math-intrinsics/round.js": module1 => {
            "use strict";
            module1.exports = Math.round;
        }, "./node_modules/math-intrinsics/sign.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $isNaN = __webpack_require__("./node_modules/math-intrinsics/isNaN.js");
            module1.exports = function (number) { return $isNaN(number) || 0 === number ? number : number < 0 ? -1 : 1; };
        }, "./node_modules/md5/md5.js": (module1, __unused_webpack_exports, __webpack_require__) => { !function () { var crypt = __webpack_require__("./node_modules/crypt/crypt.js"), utf8 = __webpack_require__("./node_modules/charenc/charenc.js").utf8, isBuffer = __webpack_require__("./node_modules/is-buffer/index.js"), bin = __webpack_require__("./node_modules/charenc/charenc.js").bin, md5 = function (message, options1) { message.constructor == String ? message = options1 && "binary" === options1.encoding ? bin.stringToBytes(message) : utf8.stringToBytes(message) : isBuffer(message) ? message = Array.prototype.slice.call(message, 0) : Array.isArray(message) || message.constructor === Uint8Array || (message = message.toString()); for (var m = crypt.bytesToWords(message), l = 8 * message.length, a = 0x67452301, b = -0x10325477, c = -0x67452302, d = 0x10325476, i = 0; i < m.length; i++)
            m[i] = (m[i] << 8 | m[i] >>> 24) & 0xff00ff | (m[i] << 24 | m[i] >>> 8) & 0xff00ff00; m[l >>> 5] |= 128 << l % 32, m[(l + 64 >>> 9 << 4) + 14] = l; for (var FF = md5._ff, GG = md5._gg, HH = md5._hh, II = md5._ii, i = 0; i < m.length; i += 16) {
            var aa = a, bb = b, cc = c, dd = d;
            a = FF(a, b, c, d, m[i + 0], 7, -0x28955b88), d = FF(d, a, b, c, m[i + 1], 12, -0x173848aa), c = FF(c, d, a, b, m[i + 2], 17, 0x242070db), b = FF(b, c, d, a, m[i + 3], 22, -0x3e423112), a = FF(a, b, c, d, m[i + 4], 7, -0xa83f051), d = FF(d, a, b, c, m[i + 5], 12, 0x4787c62a), c = FF(c, d, a, b, m[i + 6], 17, -0x57cfb9ed), b = FF(b, c, d, a, m[i + 7], 22, -0x2b96aff), a = FF(a, b, c, d, m[i + 8], 7, 0x698098d8), d = FF(d, a, b, c, m[i + 9], 12, -0x74bb0851), c = FF(c, d, a, b, m[i + 10], 17, -42063), b = FF(b, c, d, a, m[i + 11], 22, -0x76a32842), a = FF(a, b, c, d, m[i + 12], 7, 0x6b901122), d = FF(d, a, b, c, m[i + 13], 12, -0x2678e6d), c = FF(c, d, a, b, m[i + 14], 17, -0x5986bc72), b = FF(b, c, d, a, m[i + 15], 22, 0x49b40821), a = GG(a, b, c, d, m[i + 1], 5, -0x9e1da9e), d = GG(d, a, b, c, m[i + 6], 9, -0x3fbf4cc0), c = GG(c, d, a, b, m[i + 11], 14, 0x265e5a51), b = GG(b, c, d, a, m[i + 0], 20, -0x16493856), a = GG(a, b, c, d, m[i + 5], 5, -0x29d0efa3), d = GG(d, a, b, c, m[i + 10], 9, 0x2441453), c = GG(c, d, a, b, m[i + 15], 14, -0x275e197f), b = GG(b, c, d, a, m[i + 4], 20, -0x182c0438), a = GG(a, b, c, d, m[i + 9], 5, 0x21e1cde6), d = GG(d, a, b, c, m[i + 14], 9, -0x3cc8f82a), c = GG(c, d, a, b, m[i + 3], 14, -0xb2af279), b = GG(b, c, d, a, m[i + 8], 20, 0x455a14ed), a = GG(a, b, c, d, m[i + 13], 5, -0x561c16fb), d = GG(d, a, b, c, m[i + 2], 9, -0x3105c08), c = GG(c, d, a, b, m[i + 7], 14, 0x676f02d9), b = GG(b, c, d, a, m[i + 12], 20, -0x72d5b376), a = HH(a, b, c, d, m[i + 5], 4, -378558), d = HH(d, a, b, c, m[i + 8], 11, -0x788e097f), c = HH(c, d, a, b, m[i + 11], 16, 0x6d9d6122), b = HH(b, c, d, a, m[i + 14], 23, -0x21ac7f4), a = HH(a, b, c, d, m[i + 1], 4, -0x5b4115bc), d = HH(d, a, b, c, m[i + 4], 11, 0x4bdecfa9), c = HH(c, d, a, b, m[i + 7], 16, -0x944b4a0), b = HH(b, c, d, a, m[i + 10], 23, -0x41404390), a = HH(a, b, c, d, m[i + 13], 4, 0x289b7ec6), d = HH(d, a, b, c, m[i + 0], 11, -0x155ed806), c = HH(c, d, a, b, m[i + 3], 16, -0x2b10cf7b), b = HH(b, c, d, a, m[i + 6], 23, 0x4881d05), a = HH(a, b, c, d, m[i + 9], 4, -0x262b2fc7), d = HH(d, a, b, c, m[i + 12], 11, -0x1924661b), c = HH(c, d, a, b, m[i + 15], 16, 0x1fa27cf8), b = HH(b, c, d, a, m[i + 2], 23, -0x3b53a99b), a = II(a, b, c, d, m[i + 0], 6, -0xbd6ddbc), d = II(d, a, b, c, m[i + 7], 10, 0x432aff97), c = II(c, d, a, b, m[i + 14], 15, -0x546bdc59), b = II(b, c, d, a, m[i + 5], 21, -0x36c5fc7), a = II(a, b, c, d, m[i + 12], 6, 0x655b59c3), d = II(d, a, b, c, m[i + 3], 10, -0x70f3336e), c = II(c, d, a, b, m[i + 10], 15, -1051523), b = II(b, c, d, a, m[i + 1], 21, -0x7a7ba22f), a = II(a, b, c, d, m[i + 8], 6, 0x6fa87e4f), d = II(d, a, b, c, m[i + 15], 10, -0x1d31920), c = II(c, d, a, b, m[i + 6], 15, -0x5cfebcec), b = II(b, c, d, a, m[i + 13], 21, 0x4e0811a1), a = II(a, b, c, d, m[i + 4], 6, -0x8ac817e), d = II(d, a, b, c, m[i + 11], 10, -0x42c50dcb), c = II(c, d, a, b, m[i + 2], 15, 0x2ad7d2bb), b = II(b, c, d, a, m[i + 9], 21, -0x14792c6f), a = a + aa >>> 0, b = b + bb >>> 0, c = c + cc >>> 0, d = d + dd >>> 0;
        } return crypt.endian([a, b, c, d]); }; md5._ff = function (a, b, c, d, x, s, t) { var n = a + (b & c | ~b & d) + (x >>> 0) + t; return (n << s | n >>> 32 - s) + b; }, md5._gg = function (a, b, c, d, x, s, t) { var n = a + (b & d | c & ~d) + (x >>> 0) + t; return (n << s | n >>> 32 - s) + b; }, md5._hh = function (a, b, c, d, x, s, t) { var n = a + (b ^ c ^ d) + (x >>> 0) + t; return (n << s | n >>> 32 - s) + b; }, md5._ii = function (a, b, c, d, x, s, t) { var n = a + (c ^ (b | ~d)) + (x >>> 0) + t; return (n << s | n >>> 32 - s) + b; }, md5._blocksize = 16, md5._digestsize = 16, module1.exports = function (message, options1) { if (null == message)
            throw Error("Illegal argument " + message); var digestbytes = crypt.wordsToBytes(md5(message, options1)); return options1 && options1.asBytes ? digestbytes : options1 && options1.asString ? bin.bytesToString(digestbytes) : crypt.bytesToHex(digestbytes); }; }(); }, "./node_modules/memoize-one/dist/memoize-one.esm.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => memoizeOne });
            var safeIsNaN = Number.isNaN || function (value) { return "number" == typeof value && value != value; };
            function areInputsEqual(newInputs, lastInputs) { if (newInputs.length !== lastInputs.length)
                return !1; for (var first, second, i = 0; i < newInputs.length; i++)
                if (!((first = newInputs[i]) === (second = lastInputs[i]) || safeIsNaN(first) && safeIsNaN(second)) && 1)
                    return !1; return !0; }
            function memoizeOne(resultFn, isEqual) { void 0 === isEqual && (isEqual = areInputsEqual); var cache = null; function memoized() { for (var newArgs = [], _i = 0; _i < arguments.length; _i++)
                newArgs[_i] = arguments[_i]; if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs))
                return cache.lastResult; var lastResult = resultFn.apply(this, newArgs); return cache = { lastResult: lastResult, lastArgs: newArgs, lastThis: this }, lastResult; } return memoized.clear = function () { cache = null; }, memoized; }
        }, "./node_modules/mitt/dist/mitt.mjs": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function __WEBPACK_DEFAULT_EXPORT__(n) { return { all: n = n || new Map, on: function (t, e) { var i = n.get(t); i ? i.push(e) : n.set(t, [e]); }, off: function (t, e) { var i = n.get(t); i && (e ? i.splice(i.indexOf(e) >>> 0, 1) : n.set(t, [])); }, emit: function (t, e) { var i = n.get(t); i && i.slice().map(function (n) { n(e); }), (i = n.get("*")) && i.slice().map(function (n) { n(t, e); }); } }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
        }, "./node_modules/object-inspect/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            var hasMap = "function" == typeof Map && Map.prototype, mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, mapSize = hasMap && mapSizeDescriptor && "function" == typeof mapSizeDescriptor.get ? mapSizeDescriptor.get : null, mapForEach = hasMap && Map.prototype.forEach, hasSet = "function" == typeof Set && Set.prototype, setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, setSize = hasSet && setSizeDescriptor && "function" == typeof setSizeDescriptor.get ? setSizeDescriptor.get : null, setForEach = hasSet && Set.prototype.forEach, weakMapHas = "function" == typeof WeakMap && WeakMap.prototype ? WeakMap.prototype.has : null, weakSetHas = "function" == typeof WeakSet && WeakSet.prototype ? WeakSet.prototype.has : null, weakRefDeref = "function" == typeof WeakRef && WeakRef.prototype ? WeakRef.prototype.deref : null, booleanValueOf = Boolean.prototype.valueOf, objectToString = Object.prototype.toString, functionToString = Function.prototype.toString, $match = String.prototype.match, $slice = String.prototype.slice, $replace = String.prototype.replace, $toUpperCase = String.prototype.toUpperCase, $toLowerCase = String.prototype.toLowerCase, $test = RegExp.prototype.test, $concat = Array.prototype.concat, $join = Array.prototype.join, $arrSlice = Array.prototype.slice, $floor = Math.floor, bigIntValueOf = "function" == typeof BigInt ? BigInt.prototype.valueOf : null, gOPS = Object.getOwnPropertySymbols, symToString = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? Symbol.prototype.toString : null, hasShammedSymbols = "function" == typeof Symbol && "object" == typeof Symbol.iterator, toStringTag = "function" == typeof Symbol && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? "object" : "symbol") ? Symbol.toStringTag : null, isEnumerable = Object.prototype.propertyIsEnumerable, gPO = ("function" == typeof Reflect ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function (O) { return O.__proto__; } : null);
            function addNumericSeparator(num, str) { if (num === 1 / 0 || num === -1 / 0 || num != num || num && num > -1e3 && num < 1e3 || $test.call(/e/, str))
                return str; var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g; if ("number" == typeof num) {
                var int = num < 0 ? -$floor(-num) : $floor(num);
                if (int !== num) {
                    var intStr = String(int), dec = $slice.call(str, intStr.length + 1);
                    return $replace.call(intStr, sepRegex, "$&_") + "." + $replace.call($replace.call(dec, /([0-9]{3})/g, "$&_"), /_$/, "");
                }
            } return $replace.call(str, sepRegex, "$&_"); }
            var utilInspect = __webpack_require__("./node_modules/object-inspect/util.inspect.js"), inspectCustom = utilInspect.custom, inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null, quotes = { __proto__: null, double: '"', single: "'" }, quoteREs = { __proto__: null, double: /(["\\])/g, single: /(['\\])/g };
            function wrapQuotes(s, defaultStyle, opts) { var quoteChar = quotes[opts.quoteStyle || defaultStyle]; return quoteChar + s + quoteChar; }
            function isArray(obj) { return "[object Array]" === toStr(obj) && (!toStringTag || !("object" == typeof obj && toStringTag in obj)); }
            function isRegExp(obj) { return "[object RegExp]" === toStr(obj) && (!toStringTag || !("object" == typeof obj && toStringTag in obj)); }
            function isSymbol(obj) { if (hasShammedSymbols)
                return obj && "object" == typeof obj && obj instanceof Symbol; if ("symbol" == typeof obj)
                return !0; if (!obj || "object" != typeof obj || !symToString)
                return !1; try {
                return symToString.call(obj), !0;
            }
            catch (e) { } return !1; }
            module1.exports = function inspect_(obj, options1, depth, seen) {
                var obj1, obj2, obj3, obj4, obj5, opts = options1 || {};
                if (has(opts, "quoteStyle") && !has(quotes, opts.quoteStyle))
                    throw TypeError('option "quoteStyle" must be "single" or "double"');
                if (has(opts, "maxStringLength") && ("number" == typeof opts.maxStringLength ? opts.maxStringLength < 0 && opts.maxStringLength !== 1 / 0 : null !== opts.maxStringLength))
                    throw TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
                var customInspect = !has(opts, "customInspect") || opts.customInspect;
                if ("boolean" != typeof customInspect && "symbol" !== customInspect)
                    throw TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
                if (has(opts, "indent") && null !== opts.indent && "	" !== opts.indent && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0))
                    throw TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
                if (has(opts, "numericSeparator") && "boolean" != typeof opts.numericSeparator)
                    throw TypeError('option "numericSeparator", if provided, must be `true` or `false`');
                var numericSeparator = opts.numericSeparator;
                if (void 0 === obj)
                    return "undefined";
                if (null === obj)
                    return "null";
                if ("boolean" == typeof obj)
                    return obj ? "true" : "false";
                if ("string" == typeof obj)
                    return function inspectString(str, opts) { if (str.length > opts.maxStringLength) {
                        var remaining = str.length - opts.maxStringLength;
                        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + ("... " + remaining) + " more character" + (remaining > 1 ? "s" : "");
                    } var quoteRE = quoteREs[opts.quoteStyle || "single"]; return quoteRE.lastIndex = 0, wrapQuotes($replace.call($replace.call(str, quoteRE, "\\$1"), /[\x00-\x1f]/g, lowbyte), "single", opts); }(obj, opts);
                if ("number" == typeof obj) {
                    if (0 === obj)
                        return 1 / 0 / obj > 0 ? "0" : "-0";
                    var str = String(obj);
                    return numericSeparator ? addNumericSeparator(obj, str) : str;
                }
                if ("bigint" == typeof obj) {
                    var bigIntStr = String(obj) + "n";
                    return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
                }
                var maxDepth = void 0 === opts.depth ? 5 : opts.depth;
                if (void 0 === depth && (depth = 0), depth >= maxDepth && maxDepth > 0 && "object" == typeof obj)
                    return isArray(obj) ? "[Array]" : "[Object]";
                var indent = function (opts, depth) { var baseIndent; if ("	" === opts.indent)
                    baseIndent = "	";
                else {
                    if ("number" != typeof opts.indent || !(opts.indent > 0))
                        return null;
                    baseIndent = $join.call(Array(opts.indent + 1), " ");
                } return { base: baseIndent, prev: $join.call(Array(depth + 1), baseIndent) }; }(opts, depth);
                if (void 0 === seen)
                    seen = [];
                else if (indexOf(seen, obj) >= 0)
                    return "[Circular]";
                function inspect(value, from, noIndent) { if (from && (seen = $arrSlice.call(seen)).push(from), noIndent) {
                    var newOpts = { depth: opts.depth };
                    return has(opts, "quoteStyle") && (newOpts.quoteStyle = opts.quoteStyle), inspect_(value, newOpts, depth + 1, seen);
                } return inspect_(value, opts, depth + 1, seen); }
                if ("function" == typeof obj && !isRegExp(obj)) {
                    var name = function (f) { if (f.name)
                        return f.name; var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/); return m ? m[1] : null; }(obj), keys = arrObjKeys(obj, inspect);
                    return "[Function" + (name ? ": " + name : " (anonymous)") + "]" + (keys.length > 0 ? " { " + $join.call(keys, ", ") + " }" : "");
                }
                if (isSymbol(obj)) {
                    var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, "$1") : symToString.call(obj);
                    return "object" != typeof obj || hasShammedSymbols ? symString : markBoxed(symString);
                }
                if ((x = obj) && "object" == typeof x && ("undefined" != typeof HTMLElement && x instanceof HTMLElement || "string" == typeof x.nodeName && "function" == typeof x.getAttribute)) {
                    for (var x, s, s1 = "<" + $toLowerCase.call(String(obj.nodeName)), attrs = obj.attributes || [], i = 0; i < attrs.length; i++) {
                        s1 += " " + attrs[i].name + "=" + wrapQuotes((s = attrs[i].value, $replace.call(String(s), /"/g, "&quot;")), "double", opts);
                    }
                    return s1 += ">", obj.childNodes && obj.childNodes.length && (s1 += "..."), s1 += "</" + $toLowerCase.call(String(obj.nodeName)) + ">";
                }
                if (isArray(obj)) {
                    if (0 === obj.length)
                        return "[]";
                    var xs = arrObjKeys(obj, inspect);
                    return indent && !function (xs) {
                        for (var i = 0; i < xs.length; i++)
                            if (indexOf(xs[i], `
`) >= 0)
                                return !1;
                        return !0;
                    }(xs) ? "[" + indentedJoin(xs, indent) + "]" : "[ " + $join.call(xs, ", ") + " ]";
                }
                if ("[object Error]" === toStr(obj1 = obj) && (!toStringTag || !("object" == typeof obj1 && toStringTag in obj1))) {
                    var parts = arrObjKeys(obj, inspect);
                    return "cause" in Error.prototype || !("cause" in obj) || isEnumerable.call(obj, "cause") ? 0 === parts.length ? "[" + String(obj) + "]" : "{ [" + String(obj) + "] " + $join.call(parts, ", ") + " }" : "{ [" + String(obj) + "] " + $join.call($concat.call("[cause]: " + inspect(obj.cause), parts), ", ") + " }";
                }
                if ("object" == typeof obj && customInspect) {
                    if (inspectSymbol && "function" == typeof obj[inspectSymbol] && utilInspect)
                        return utilInspect(obj, { depth: maxDepth - depth });
                    else if ("symbol" !== customInspect && "function" == typeof obj.inspect)
                        return obj.inspect();
                }
                if (function (x) { if (!mapSize || !x || "object" != typeof x)
                    return !1; try {
                    mapSize.call(x);
                    try {
                        setSize.call(x);
                    }
                    catch (s) {
                        return !0;
                    }
                    return x instanceof Map;
                }
                catch (e) { } return !1; }(obj)) {
                    var mapParts = [];
                    return mapForEach && mapForEach.call(obj, function (value, key) { mapParts.push(inspect(key, obj, !0) + " => " + inspect(value, obj)); }), collectionOf("Map", mapSize.call(obj), mapParts, indent);
                }
                if (function (x) { if (!setSize || !x || "object" != typeof x)
                    return !1; try {
                    setSize.call(x);
                    try {
                        mapSize.call(x);
                    }
                    catch (m) {
                        return !0;
                    }
                    return x instanceof Set;
                }
                catch (e) { } return !1; }(obj)) {
                    var setParts = [];
                    return setForEach && setForEach.call(obj, function (value) { setParts.push(inspect(value, obj)); }), collectionOf("Set", setSize.call(obj), setParts, indent);
                }
                if (function (x) { if (!weakMapHas || !x || "object" != typeof x)
                    return !1; try {
                    weakMapHas.call(x, weakMapHas);
                    try {
                        weakSetHas.call(x, weakSetHas);
                    }
                    catch (s) {
                        return !0;
                    }
                    return x instanceof WeakMap;
                }
                catch (e) { } return !1; }(obj))
                    return weakCollectionOf("WeakMap");
                if (function (x) { if (!weakSetHas || !x || "object" != typeof x)
                    return !1; try {
                    weakSetHas.call(x, weakSetHas);
                    try {
                        weakMapHas.call(x, weakMapHas);
                    }
                    catch (s) {
                        return !0;
                    }
                    return x instanceof WeakSet;
                }
                catch (e) { } return !1; }(obj))
                    return weakCollectionOf("WeakSet");
                if (function (x) { if (!weakRefDeref || !x || "object" != typeof x)
                    return !1; try {
                    return weakRefDeref.call(x), !0;
                }
                catch (e) { } return !1; }(obj))
                    return weakCollectionOf("WeakRef");
                if ("[object Number]" === toStr(obj2 = obj) && (!toStringTag || !("object" == typeof obj2 && toStringTag in obj2)))
                    return markBoxed(inspect(Number(obj)));
                if (function (obj) { if (!obj || "object" != typeof obj || !bigIntValueOf)
                    return !1; try {
                    return bigIntValueOf.call(obj), !0;
                }
                catch (e) { } return !1; }(obj))
                    return markBoxed(inspect(bigIntValueOf.call(obj)));
                if ("[object Boolean]" === toStr(obj3 = obj) && (!toStringTag || !("object" == typeof obj3 && toStringTag in obj3)))
                    return markBoxed(booleanValueOf.call(obj));
                if ("[object String]" === toStr(obj4 = obj) && (!toStringTag || !("object" == typeof obj4 && toStringTag in obj4)))
                    return markBoxed(inspect(String(obj)));
                if ("undefined" != typeof window && obj === window)
                    return "{ [object Window] }";
                if ("undefined" != typeof globalThis && obj === globalThis || "undefined" != typeof global && obj === global)
                    return "{ [object globalThis] }";
                if (!("[object Date]" === toStr(obj5 = obj) && (!toStringTag || !("object" == typeof obj5 && toStringTag in obj5))) && !isRegExp(obj)) {
                    var ys = arrObjKeys(obj, inspect), isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object, protoTag = obj instanceof Object ? "" : "null prototype", stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? "Object" : "", tag = (isPlainObject || "function" != typeof obj.constructor ? "" : obj.constructor.name ? obj.constructor.name + " " : "") + (stringTag || protoTag ? "[" + $join.call($concat.call([], stringTag || [], protoTag || []), ": ") + "] " : "");
                    return 0 === ys.length ? tag + "{}" : indent ? tag + "{" + indentedJoin(ys, indent) + "}" : tag + "{ " + $join.call(ys, ", ") + " }";
                }
                return String(obj);
            };
            var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
            function has(obj, key) { return hasOwn.call(obj, key); }
            function toStr(obj) { return objectToString.call(obj); }
            function indexOf(xs, x) { if (xs.indexOf)
                return xs.indexOf(x); for (var i = 0, l = xs.length; i < l; i++)
                if (xs[i] === x)
                    return i; return -1; }
            function lowbyte(c) { var n = c.charCodeAt(0), x = { 8: "b", 9: "t", 10: "n", 12: "f", 13: "r" }[n]; return x ? "\\" + x : "\\x" + (n < 16 ? "0" : "") + $toUpperCase.call(n.toString(16)); }
            function markBoxed(str) { return "Object(" + str + ")"; }
            function weakCollectionOf(type) { return type + " { ? }"; }
            function collectionOf(type, size, entries, indent) { return type + " (" + size + ") {" + (indent ? indentedJoin(entries, indent) : $join.call(entries, ", ")) + "}"; }
            function indentedJoin(xs, indent) {
                if (0 === xs.length)
                    return "";
                var lineJoiner = `
` + indent.prev + indent.base;
                return lineJoiner + $join.call(xs, "," + lineJoiner) + `
` + indent.prev;
            }
            function arrObjKeys(obj, inspect) { var symMap, isArr = isArray(obj), xs = []; if (isArr) {
                xs.length = obj.length;
                for (var i = 0; i < obj.length; i++)
                    xs[i] = has(obj, i) ? inspect(obj[i], obj) : "";
            } var syms = "function" == typeof gOPS ? gOPS(obj) : []; if (hasShammedSymbols) {
                symMap = {};
                for (var k = 0; k < syms.length; k++)
                    symMap["$" + syms[k]] = syms[k];
            } for (var key in obj)
                if (has(obj, key) && (!isArr || String(Number(key)) !== key || !(key < obj.length)))
                    if (hasShammedSymbols && symMap["$" + key] instanceof Symbol)
                        continue;
                    else
                        $test.call(/[^\w$]/, key) ? xs.push(inspect(key, obj) + ": " + inspect(obj[key], obj)) : xs.push(key + ": " + inspect(obj[key], obj)); if ("function" == typeof gOPS)
                for (var j = 0; j < syms.length; j++)
                    isEnumerable.call(obj, syms[j]) && xs.push("[" + inspect(syms[j]) + "]: " + inspect(obj[syms[j]], obj)); return xs; }
        }, "./node_modules/object-inspect/util.inspect.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("util").inspect; }, "./node_modules/object-is/implementation.js": module1 => {
            "use strict";
            var numberIsNaN = function (value) { return value != value; };
            module1.exports = function (a, b) { return 0 === a && 0 === b ? 1 / a == 1 / b : !!(a === b || numberIsNaN(a) && numberIsNaN(b)); };
        }, "./node_modules/object-is/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var define = __webpack_require__("./node_modules/define-properties/index.js"), callBind = __webpack_require__("./node_modules/call-bind/index.js"), implementation = __webpack_require__("./node_modules/object-is/implementation.js"), getPolyfill = __webpack_require__("./node_modules/object-is/polyfill.js"), shim = __webpack_require__("./node_modules/object-is/shim.js"), polyfill = callBind(getPolyfill(), Object);
            define(polyfill, { getPolyfill: getPolyfill, implementation: implementation, shim: shim }), module1.exports = polyfill;
        }, "./node_modules/object-is/polyfill.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var implementation = __webpack_require__("./node_modules/object-is/implementation.js");
            module1.exports = function () { return "function" == typeof Object.is ? Object.is : implementation; };
        }, "./node_modules/object-is/shim.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var getPolyfill = __webpack_require__("./node_modules/object-is/polyfill.js"), define = __webpack_require__("./node_modules/define-properties/index.js");
            module1.exports = function () { var polyfill = getPolyfill(); return define(Object, { is: polyfill }, { is: function () { return Object.is !== polyfill; } }), polyfill; };
        }, "./node_modules/object-keys/implementation.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var keysShim;
            if (!Object.keys) {
                var has = Object.prototype.hasOwnProperty, toStr = Object.prototype.toString, isArgs = __webpack_require__("./node_modules/object-keys/isArguments.js"), isEnumerable = Object.prototype.propertyIsEnumerable, hasDontEnumBug = !isEnumerable.call({ toString: null }, "toString"), hasProtoEnumBug = isEnumerable.call(function () { }, "prototype"), dontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], equalsConstructorPrototype = function (o) { var ctor = o.constructor; return ctor && ctor.prototype === o; }, excludedKeys = { $applicationCache: !0, $console: !0, $external: !0, $frame: !0, $frameElement: !0, $frames: !0, $innerHeight: !0, $innerWidth: !0, $onmozfullscreenchange: !0, $onmozfullscreenerror: !0, $outerHeight: !0, $outerWidth: !0, $pageXOffset: !0, $pageYOffset: !0, $parent: !0, $scrollLeft: !0, $scrollTop: !0, $scrollX: !0, $scrollY: !0, $self: !0, $webkitIndexedDB: !0, $webkitStorageInfo: !0, $window: !0 }, hasAutomationEqualityBug = function () { if ("undefined" == typeof window)
                    return !1; for (var k in window)
                    try {
                        if (!excludedKeys["$" + k] && has.call(window, k) && null !== window[k] && "object" == typeof window[k])
                            try {
                                equalsConstructorPrototype(window[k]);
                            }
                            catch (e) {
                                return !0;
                            }
                    }
                    catch (e) {
                        return !0;
                    } return !1; }(), equalsConstructorPrototypeIfNotBuggy = function (o) { if ("undefined" == typeof window || !hasAutomationEqualityBug)
                    return equalsConstructorPrototype(o); try {
                    return equalsConstructorPrototype(o);
                }
                catch (e) {
                    return !1;
                } };
                keysShim = function (object) { var isObject = null !== object && "object" == typeof object, isFunction = "[object Function]" === toStr.call(object), isArguments = isArgs(object), isString = isObject && "[object String]" === toStr.call(object), theKeys = []; if (!isObject && !isFunction && !isArguments)
                    throw TypeError("Object.keys called on a non-object"); var skipProto = hasProtoEnumBug && isFunction; if (isString && object.length > 0 && !has.call(object, 0))
                    for (var i = 0; i < object.length; ++i)
                        theKeys.push(String(i)); if (isArguments && object.length > 0)
                    for (var j = 0; j < object.length; ++j)
                        theKeys.push(String(j));
                else
                    for (var name in object)
                        !(skipProto && "prototype" === name) && has.call(object, name) && theKeys.push(String(name)); if (hasDontEnumBug)
                    for (var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object), k = 0; k < dontEnums.length; ++k)
                        !(skipConstructor && "constructor" === dontEnums[k]) && has.call(object, dontEnums[k]) && theKeys.push(dontEnums[k]); return theKeys; };
            }
            module1.exports = keysShim;
        }, "./node_modules/object-keys/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var slice = Array.prototype.slice, isArgs = __webpack_require__("./node_modules/object-keys/isArguments.js"), origKeys = Object.keys, keysShim = origKeys ? function (o) { return origKeys(o); } : __webpack_require__("./node_modules/object-keys/implementation.js"), originalKeys = Object.keys;
            keysShim.shim = function () { return Object.keys ? !function () { var args = Object.keys(arguments); return args && args.length === arguments.length; }(1, 2) && (Object.keys = function (object) { return isArgs(object) ? originalKeys(slice.call(object)) : originalKeys(object); }) : Object.keys = keysShim, Object.keys || keysShim; }, module1.exports = keysShim;
        }, "./node_modules/object-keys/isArguments.js": module1 => {
            "use strict";
            var toStr = Object.prototype.toString;
            module1.exports = function (value) { var str = toStr.call(value), isArgs = "[object Arguments]" === str; return isArgs || (isArgs = "[object Array]" !== str && null !== value && "object" == typeof value && "number" == typeof value.length && value.length >= 0 && "[object Function]" === toStr.call(value.callee)), isArgs; };
        }, "./node_modules/object.assign/implementation.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var objectKeys = __webpack_require__("./node_modules/object-keys/index.js"), hasSymbols = __webpack_require__("./node_modules/has-symbols/shams.js")(), callBound = __webpack_require__("./node_modules/call-bound/index.js"), $Object = __webpack_require__("./node_modules/es-object-atoms/index.js"), $push = callBound("Array.prototype.push"), $propIsEnumerable = callBound("Object.prototype.propertyIsEnumerable"), originalGetSymbols = hasSymbols ? $Object.getOwnPropertySymbols : null;
            module1.exports = function (target, source1) { if (null == target)
                throw TypeError("target must be an object"); var to = $Object(target); if (1 == arguments.length)
                return to; for (var s = 1; s < arguments.length; ++s) {
                var from = $Object(arguments[s]), keys = objectKeys(from), getSymbols = hasSymbols && ($Object.getOwnPropertySymbols || originalGetSymbols);
                if (getSymbols)
                    for (var syms = getSymbols(from), j = 0; j < syms.length; ++j) {
                        var key = syms[j];
                        $propIsEnumerable(from, key) && $push(keys, key);
                    }
                for (var i = 0; i < keys.length; ++i) {
                    var nextKey = keys[i];
                    if ($propIsEnumerable(from, nextKey)) {
                        var propValue = from[nextKey];
                        to[nextKey] = propValue;
                    }
                }
            } return to; };
        }, "./node_modules/object.assign/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var defineProperties = __webpack_require__("./node_modules/define-properties/index.js"), callBind = __webpack_require__("./node_modules/call-bind/index.js"), implementation = __webpack_require__("./node_modules/object.assign/implementation.js"), getPolyfill = __webpack_require__("./node_modules/object.assign/polyfill.js"), shim = __webpack_require__("./node_modules/object.assign/shim.js"), polyfill = callBind.apply(getPolyfill()), bound = function (target, source1) { return polyfill(Object, arguments); };
            defineProperties(bound, { getPolyfill: getPolyfill, implementation: implementation, shim: shim }), module1.exports = bound;
        }, "./node_modules/object.assign/polyfill.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var implementation = __webpack_require__("./node_modules/object.assign/implementation.js"), lacksProperEnumerationOrder = function () { if (!Object.assign)
                return !1; for (var str = "abcdefghijklmnopqrst", letters = str.split(""), map = {}, i = 0; i < letters.length; ++i)
                map[letters[i]] = letters[i]; var obj = Object.assign({}, map), actual = ""; for (var k in obj)
                actual += k; return str !== actual; }, assignHasPendingExceptions = function () { if (!Object.assign || !Object.preventExtensions)
                return !1; var thrower = Object.preventExtensions({ 1: 2 }); try {
                Object.assign(thrower, "xy");
            }
            catch (e) {
                return "y" === thrower[1];
            } return !1; };
            module1.exports = function () { return !Object.assign || lacksProperEnumerationOrder() || assignHasPendingExceptions() ? implementation : Object.assign; };
        }, "./node_modules/object.assign/shim.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var define = __webpack_require__("./node_modules/define-properties/index.js"), getPolyfill = __webpack_require__("./node_modules/object.assign/polyfill.js");
            module1.exports = function () { var polyfill = getPolyfill(); return define(Object, { assign: polyfill }, { assign: function () { return Object.assign !== polyfill; } }), polyfill; };
        }, "./node_modules/possible-typed-array-names/index.js": module1 => {
            "use strict";
            module1.exports = ["Float32Array", "Float64Array", "Int8Array", "Int16Array", "Int32Array", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "BigInt64Array", "BigUint64Array"];
        }, "./node_modules/promise-retry/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var errcode = __webpack_require__("./node_modules/err-code/index.js"), retry = __webpack_require__("./node_modules/retry/index.js"), hasOwn = Object.prototype.hasOwnProperty;
            function isRetryError(err) { return err && "EPROMISERETRY" === err.code && hasOwn.call(err, "retried"); }
            module1.exports = function (fn, options1) { var temp, operation; return "object" == typeof fn && "function" == typeof options1 && (temp = options1, options1 = fn, fn = temp), operation = retry.operation(options1), new Promise(function (resolve, reject) { operation.attempt(function (number) { Promise.resolve().then(function () { return fn(function (err) { throw isRetryError(err) && (err = err.retried), errcode(Error("Retrying"), "EPROMISERETRY", { retried: err }); }, number); }).then(resolve, function (err) { isRetryError(err) && (err = err.retried, operation.retry(err || Error())) || reject(err); }); }); }); };
        }, "./node_modules/regexp.prototype.flags/implementation.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var setFunctionName = __webpack_require__("./node_modules/set-function-name/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $Object = Object;
            module1.exports = setFunctionName(function () { if (this == null || this !== $Object(this))
                throw new $TypeError("RegExp.prototype.flags getter called on non-object"); var result = ""; return this.hasIndices && (result += "d"), this.global && (result += "g"), this.ignoreCase && (result += "i"), this.multiline && (result += "m"), this.dotAll && (result += "s"), this.unicode && (result += "u"), this.unicodeSets && (result += "v"), this.sticky && (result += "y"), result; }, "get flags", !0);
        }, "./node_modules/regexp.prototype.flags/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var define = __webpack_require__("./node_modules/define-properties/index.js"), callBind = __webpack_require__("./node_modules/call-bind/index.js"), implementation = __webpack_require__("./node_modules/regexp.prototype.flags/implementation.js"), getPolyfill = __webpack_require__("./node_modules/regexp.prototype.flags/polyfill.js"), shim = __webpack_require__("./node_modules/regexp.prototype.flags/shim.js"), flagsBound = callBind(getPolyfill());
            define(flagsBound, { getPolyfill: getPolyfill, implementation: implementation, shim: shim }), module1.exports = flagsBound;
        }, "./node_modules/regexp.prototype.flags/polyfill.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var implementation = __webpack_require__("./node_modules/regexp.prototype.flags/implementation.js"), supportsDescriptors = __webpack_require__("./node_modules/define-properties/index.js").supportsDescriptors, $gOPD = Object.getOwnPropertyDescriptor;
            module1.exports = function () { if (supportsDescriptors && "gim" === /a/mig.flags) {
                var descriptor = $gOPD(RegExp.prototype, "flags");
                if (descriptor && "function" == typeof descriptor.get && "dotAll" in RegExp.prototype && "hasIndices" in RegExp.prototype) {
                    var calls = "", o = {};
                    if (Object.defineProperty(o, "hasIndices", { get: function () { calls += "d"; } }), Object.defineProperty(o, "sticky", { get: function () { calls += "y"; } }), descriptor.get.call(o), "dy" === calls)
                        return descriptor.get;
                }
            } return implementation; };
        }, "./node_modules/regexp.prototype.flags/shim.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var supportsDescriptors = __webpack_require__("./node_modules/define-properties/index.js").supportsDescriptors, getPolyfill = __webpack_require__("./node_modules/regexp.prototype.flags/polyfill.js"), gOPD = Object.getOwnPropertyDescriptor, defineProperty = Object.defineProperty, TypeErr = TypeError, getProto = Object.getPrototypeOf, regex = /a/;
            module1.exports = function () { if (!supportsDescriptors || !getProto)
                throw new TypeErr("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors"); var polyfill = getPolyfill(), proto = getProto(regex), descriptor = gOPD(proto, "flags"); return descriptor && descriptor.get === polyfill || defineProperty(proto, "flags", { configurable: !0, enumerable: !1, get: polyfill }), polyfill; };
        }, "./node_modules/retry/index.js": (module1, __unused_webpack_exports, __webpack_require__) => { module1.exports = __webpack_require__("./node_modules/retry/lib/retry.js"); }, "./node_modules/retry/lib/retry.js": (__unused_webpack_module, exports, __webpack_require__) => { var RetryOperation = __webpack_require__("./node_modules/retry/lib/retry_operation.js"); exports.operation = function (options1) { return new RetryOperation(exports.timeouts(options1), { forever: options1 && options1.forever, unref: options1 && options1.unref, maxRetryTime: options1 && options1.maxRetryTime }); }, exports.timeouts = function (options1) { if (options1 instanceof Array)
            return [].concat(options1); var opts = { retries: 10, factor: 2, minTimeout: 1e3, maxTimeout: 1 / 0, randomize: !1 }; for (var key in options1)
            opts[key] = options1[key]; if (opts.minTimeout > opts.maxTimeout)
            throw Error("minTimeout is greater than maxTimeout"); for (var timeouts = [], i = 0; i < opts.retries; i++)
            timeouts.push(this.createTimeout(i, opts)); return options1 && options1.forever && !timeouts.length && timeouts.push(this.createTimeout(i, opts)), timeouts.sort(function (a, b) { return a - b; }), timeouts; }, exports.createTimeout = function (attempt, opts) { var timeout = Math.round((opts.randomize ? Math.random() + 1 : 1) * opts.minTimeout * Math.pow(opts.factor, attempt)); return Math.min(timeout, opts.maxTimeout); }, exports.wrap = function (obj, options1, methods) { if (options1 instanceof Array && (methods = options1, options1 = null), !methods)
            for (var key in methods = [], obj)
                "function" == typeof obj[key] && methods.push(key); for (var i = 0; i < methods.length; i++) {
            var method = methods[i], original = obj[method];
            obj[method] = (function (original) { var op = exports.operation(options1), args = Array.prototype.slice.call(arguments, 1), callback = args.pop(); args.push(function (err) { op.retry(err) || (err && (arguments[0] = op.mainError()), callback.apply(this, arguments)); }), op.attempt(function () { original.apply(obj, args); }); }).bind(obj, original), obj[method].options = options1;
        } }; }, "./node_modules/retry/lib/retry_operation.js": module1 => { function RetryOperation(timeouts, options1) { "boolean" == typeof options1 && (options1 = { forever: options1 }), this._originalTimeouts = JSON.parse(JSON.stringify(timeouts)), this._timeouts = timeouts, this._options = options1 || {}, this._maxRetryTime = options1 && options1.maxRetryTime || 1 / 0, this._fn = null, this._errors = [], this._attempts = 1, this._operationTimeout = null, this._operationTimeoutCb = null, this._timeout = null, this._operationStart = null, this._options.forever && (this._cachedTimeouts = this._timeouts.slice(0)); } module1.exports = RetryOperation, RetryOperation.prototype.reset = function () { this._attempts = 1, this._timeouts = this._originalTimeouts; }, RetryOperation.prototype.stop = function () { this._timeout && clearTimeout(this._timeout), this._timeouts = [], this._cachedTimeouts = null; }, RetryOperation.prototype.retry = function (err) { if (this._timeout && clearTimeout(this._timeout), !err)
            return !1; var currentTime = new Date().getTime(); if (err && currentTime - this._operationStart >= this._maxRetryTime)
            return this._errors.unshift(Error("RetryOperation timeout occurred")), !1; this._errors.push(err); var timeout = this._timeouts.shift(); if (void 0 === timeout)
            if (!this._cachedTimeouts)
                return !1;
            else
                this._errors.splice(this._errors.length - 1, this._errors.length), this._timeouts = this._cachedTimeouts.slice(0), timeout = this._timeouts.shift(); var self1 = this, timer = setTimeout(function () { self1._attempts++, self1._operationTimeoutCb && (self1._timeout = setTimeout(function () { self1._operationTimeoutCb(self1._attempts); }, self1._operationTimeout), self1._options.unref && self1._timeout.unref()), self1._fn(self1._attempts); }, timeout); return this._options.unref && timer.unref(), !0; }, RetryOperation.prototype.attempt = function (fn, timeoutOps) { this._fn = fn, timeoutOps && (timeoutOps.timeout && (this._operationTimeout = timeoutOps.timeout), timeoutOps.cb && (this._operationTimeoutCb = timeoutOps.cb)); var self1 = this; this._operationTimeoutCb && (this._timeout = setTimeout(function () { self1._operationTimeoutCb(); }, self1._operationTimeout)), this._operationStart = new Date().getTime(), this._fn(this._attempts); }, RetryOperation.prototype.try = function (fn) { console.log("Using RetryOperation.try() is deprecated"), this.attempt(fn); }, RetryOperation.prototype.start = function (fn) { console.log("Using RetryOperation.start() is deprecated"), this.attempt(fn); }, RetryOperation.prototype.start = RetryOperation.prototype.try, RetryOperation.prototype.errors = function () { return this._errors; }, RetryOperation.prototype.attempts = function () { return this._attempts; }, RetryOperation.prototype.mainError = function () { if (0 === this._errors.length)
            return null; for (var counts = {}, mainError = null, mainErrorCount = 0, i = 0; i < this._errors.length; i++) {
            var error = this._errors[i], message = error.message, count = (counts[message] || 0) + 1;
            counts[message] = count, count >= mainErrorCount && (mainError = error, mainErrorCount = count);
        } return mainError; }; }, "./node_modules/safe-regex-test/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var callBound = __webpack_require__("./node_modules/call-bound/index.js"), isRegex = __webpack_require__("./node_modules/is-regex/index.js"), $exec = callBound("RegExp.prototype.exec"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js");
            module1.exports = function (regex) { if (!isRegex(regex))
                throw new $TypeError("`regex` must be a RegExp"); return function (s) { return null !== $exec(regex, s); }; };
        }, "./node_modules/sax/lib/sax.js": (__unused_webpack_module, exports, __webpack_require__) => {
            !function (sax) {
                sax.parser = function (strict, opt) { return new SAXParser(strict, opt); }, sax.SAXParser = SAXParser, sax.SAXStream = SAXStream, sax.createStream = function (strict, opt) { return new SAXStream(strict, opt); }, sax.MAX_BUFFER_LENGTH = 65536;
                var stringFromCharCode, floor, fromCodePoint, Stream, buffers = ["comment", "sgmlDecl", "textNode", "tagName", "doctype", "procInstName", "procInstBody", "entity", "attribName", "attribValue", "cdata", "script"];
                function SAXParser(strict, opt) { if (!(this instanceof SAXParser))
                    return new SAXParser(strict, opt); (function (parser) { for (var i = 0, l = buffers.length; i < l; i++)
                    parser[buffers[i]] = ""; })(this), this.q = this.c = "", this.bufferCheckPosition = sax.MAX_BUFFER_LENGTH, this.opt = opt || {}, this.opt.lowercase = this.opt.lowercase || this.opt.lowercasetags, this.looseCase = this.opt.lowercase ? "toLowerCase" : "toUpperCase", this.tags = [], this.closed = this.closedRoot = this.sawRoot = !1, this.tag = this.error = null, this.strict = !!strict, this.noscript = !!(strict || this.opt.noscript), this.state = S.BEGIN, this.strictEntities = this.opt.strictEntities, this.ENTITIES = this.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES), this.attribList = [], this.opt.xmlns && (this.ns = Object.create(rootNS)), this.trackPosition = !1 !== this.opt.position, this.trackPosition && (this.position = this.line = this.column = 0), emit(this, "onready"); }
                sax.EVENTS = ["text", "processinginstruction", "sgmldeclaration", "doctype", "comment", "opentagstart", "attribute", "opentag", "closetag", "opencdata", "cdata", "closecdata", "error", "end", "ready", "script", "opennamespace", "closenamespace"], Object.create || (Object.create = function (o) { function F() { } return F.prototype = o, new F; }), Object.keys || (Object.keys = function (o) { var a = []; for (var i in o)
                    o.hasOwnProperty(i) && a.push(i); return a; }), SAXParser.prototype = { end: function () { end(this); }, write: function (chunk) {
                        if (this.error)
                            throw this.error;
                        if (this.closed)
                            return error(this, "Cannot write after close. Assign an onready handler.");
                        if (null === chunk)
                            return end(this);
                        "object" == typeof chunk && (chunk = chunk.toString());
                        for (var i = 0, c = ""; c = charAt(chunk, i++), this.c = c, c;)
                            switch (this.trackPosition && (this.position++, `
` === c ? (this.line++, this.column = 0) : this.column++), this.state) {
                                case S.BEGIN:
                                    if (this.state = S.BEGIN_WHITESPACE, "\uFEFF" === c)
                                        continue;
                                    beginWhiteSpace(this, c);
                                    continue;
                                case S.BEGIN_WHITESPACE:
                                    beginWhiteSpace(this, c);
                                    continue;
                                case S.TEXT:
                                    if (this.sawRoot && !this.closedRoot) {
                                        for (var c1, returnState, buffer, starti = i - 1; c && "<" !== c && "&" !== c;)
                                            (c = charAt(chunk, i++)) && this.trackPosition && (this.position++, `
` === c ? (this.line++, this.column = 0) : this.column++);
                                        this.textNode += chunk.substring(starti, i - 1);
                                    }
                                    "<" !== c || this.sawRoot && this.closedRoot && !this.strict ? (isWhitespace(c) || this.sawRoot && !this.closedRoot || strictFail(this, "Text data outside of root node."), "&" === c ? this.state = S.TEXT_ENTITY : this.textNode += c) : (this.state = S.OPEN_WAKA, this.startTagPosition = this.position);
                                    continue;
                                case S.SCRIPT:
                                    "<" === c ? this.state = S.SCRIPT_ENDING : this.script += c;
                                    continue;
                                case S.SCRIPT_ENDING:
                                    "/" === c ? this.state = S.CLOSE_TAG : (this.script += "<" + c, this.state = S.SCRIPT);
                                    continue;
                                case S.OPEN_WAKA:
                                    "!" === c ? (this.state = S.SGML_DECL, this.sgmlDecl = "") : isWhitespace(c) || (isMatch(nameStart, c) ? (this.state = S.OPEN_TAG, this.tagName = c) : "/" === c ? (this.state = S.CLOSE_TAG, this.tagName = "") : "?" === c ? (this.state = S.PROC_INST, this.procInstName = this.procInstBody = "") : (strictFail(this, "Unencoded <"), this.startTagPosition + 1 < this.position && (c = Array(this.position - this.startTagPosition).join(" ") + c), this.textNode += "<" + c, this.state = S.TEXT));
                                    continue;
                                case S.SGML_DECL:
                                    "[CDATA[" === (this.sgmlDecl + c).toUpperCase() ? (emitNode(this, "onopencdata"), this.state = S.CDATA, this.sgmlDecl = "", this.cdata = "") : this.sgmlDecl + c === "--" ? (this.state = S.COMMENT, this.comment = "", this.sgmlDecl = "") : "DOCTYPE" === (this.sgmlDecl + c).toUpperCase() ? (this.state = S.DOCTYPE, (this.doctype || this.sawRoot) && strictFail(this, "Inappropriately located doctype declaration"), this.doctype = "", this.sgmlDecl = "") : ">" === c ? (emitNode(this, "onsgmldeclaration", this.sgmlDecl), this.sgmlDecl = "", this.state = S.TEXT) : (isQuote(c) && (this.state = S.SGML_DECL_QUOTED), this.sgmlDecl += c);
                                    continue;
                                case S.SGML_DECL_QUOTED:
                                    c === this.q && (this.state = S.SGML_DECL, this.q = ""), this.sgmlDecl += c;
                                    continue;
                                case S.DOCTYPE:
                                    ">" === c ? (this.state = S.TEXT, emitNode(this, "ondoctype", this.doctype), this.doctype = !0) : (this.doctype += c, "[" === c ? this.state = S.DOCTYPE_DTD : isQuote(c) && (this.state = S.DOCTYPE_QUOTED, this.q = c));
                                    continue;
                                case S.DOCTYPE_QUOTED:
                                    this.doctype += c, c === this.q && (this.q = "", this.state = S.DOCTYPE);
                                    continue;
                                case S.DOCTYPE_DTD:
                                    this.doctype += c, "]" === c ? this.state = S.DOCTYPE : isQuote(c) && (this.state = S.DOCTYPE_DTD_QUOTED, this.q = c);
                                    continue;
                                case S.DOCTYPE_DTD_QUOTED:
                                    this.doctype += c, c === this.q && (this.state = S.DOCTYPE_DTD, this.q = "");
                                    continue;
                                case S.COMMENT:
                                    "-" === c ? this.state = S.COMMENT_ENDING : this.comment += c;
                                    continue;
                                case S.COMMENT_ENDING:
                                    "-" === c ? (this.state = S.COMMENT_ENDED, this.comment = textopts(this.opt, this.comment), this.comment && emitNode(this, "oncomment", this.comment), this.comment = "") : (this.comment += "-" + c, this.state = S.COMMENT);
                                    continue;
                                case S.COMMENT_ENDED:
                                    ">" !== c ? (strictFail(this, "Malformed comment"), this.comment += "--" + c, this.state = S.COMMENT) : this.state = S.TEXT;
                                    continue;
                                case S.CDATA:
                                    "]" === c ? this.state = S.CDATA_ENDING : this.cdata += c;
                                    continue;
                                case S.CDATA_ENDING:
                                    "]" === c ? this.state = S.CDATA_ENDING_2 : (this.cdata += "]" + c, this.state = S.CDATA);
                                    continue;
                                case S.CDATA_ENDING_2:
                                    ">" === c ? (this.cdata && emitNode(this, "oncdata", this.cdata), emitNode(this, "onclosecdata"), this.cdata = "", this.state = S.TEXT) : "]" === c ? this.cdata += "]" : (this.cdata += "]]" + c, this.state = S.CDATA);
                                    continue;
                                case S.PROC_INST:
                                    "?" === c ? this.state = S.PROC_INST_ENDING : isWhitespace(c) ? this.state = S.PROC_INST_BODY : this.procInstName += c;
                                    continue;
                                case S.PROC_INST_BODY:
                                    !this.procInstBody && isWhitespace(c) || ("?" === c ? this.state = S.PROC_INST_ENDING : this.procInstBody += c);
                                    continue;
                                case S.PROC_INST_ENDING:
                                    ">" === c ? (emitNode(this, "onprocessinginstruction", { name: this.procInstName, body: this.procInstBody }), this.procInstName = this.procInstBody = "", this.state = S.TEXT) : (this.procInstBody += "?" + c, this.state = S.PROC_INST_BODY);
                                    continue;
                                case S.OPEN_TAG:
                                    isMatch(nameBody, c) ? this.tagName += c : (!function (parser) { parser.strict || (parser.tagName = parser.tagName[parser.looseCase]()); var parent = parser.tags[parser.tags.length - 1] || parser, tag = parser.tag = { name: parser.tagName, attributes: {} }; parser.opt.xmlns && (tag.ns = parent.ns), parser.attribList.length = 0, emitNode(parser, "onopentagstart", tag); }(this), ">" === c ? openTag(this) : "/" === c ? this.state = S.OPEN_TAG_SLASH : (isWhitespace(c) || strictFail(this, "Invalid character in tag name"), this.state = S.ATTRIB));
                                    continue;
                                case S.OPEN_TAG_SLASH:
                                    ">" === c ? (openTag(this, !0), closeTag(this)) : (strictFail(this, "Forward-slash in opening tag not followed by >"), this.state = S.ATTRIB);
                                    continue;
                                case S.ATTRIB:
                                    isWhitespace(c) || (">" === c ? openTag(this) : "/" === c ? this.state = S.OPEN_TAG_SLASH : isMatch(nameStart, c) ? (this.attribName = c, this.attribValue = "", this.state = S.ATTRIB_NAME) : strictFail(this, "Invalid attribute name"));
                                    continue;
                                case S.ATTRIB_NAME:
                                    "=" === c ? this.state = S.ATTRIB_VALUE : ">" === c ? (strictFail(this, "Attribute without value"), this.attribValue = this.attribName, attrib(this), openTag(this)) : isWhitespace(c) ? this.state = S.ATTRIB_NAME_SAW_WHITE : isMatch(nameBody, c) ? this.attribName += c : strictFail(this, "Invalid attribute name");
                                    continue;
                                case S.ATTRIB_NAME_SAW_WHITE:
                                    if ("=" === c)
                                        this.state = S.ATTRIB_VALUE;
                                    else {
                                        if (isWhitespace(c))
                                            continue;
                                        strictFail(this, "Attribute without value"), this.tag.attributes[this.attribName] = "", this.attribValue = "", emitNode(this, "onattribute", { name: this.attribName, value: "" }), this.attribName = "", ">" === c ? openTag(this) : isMatch(nameStart, c) ? (this.attribName = c, this.state = S.ATTRIB_NAME) : (strictFail(this, "Invalid attribute name"), this.state = S.ATTRIB);
                                    }
                                    continue;
                                case S.ATTRIB_VALUE:
                                    isWhitespace(c) || (isQuote(c) ? (this.q = c, this.state = S.ATTRIB_VALUE_QUOTED) : (strictFail(this, "Unquoted attribute value"), this.state = S.ATTRIB_VALUE_UNQUOTED, this.attribValue = c));
                                    continue;
                                case S.ATTRIB_VALUE_QUOTED:
                                    if (c !== this.q) {
                                        "&" === c ? this.state = S.ATTRIB_VALUE_ENTITY_Q : this.attribValue += c;
                                        continue;
                                    }
                                    attrib(this), this.q = "", this.state = S.ATTRIB_VALUE_CLOSED;
                                    continue;
                                case S.ATTRIB_VALUE_CLOSED:
                                    isWhitespace(c) ? this.state = S.ATTRIB : ">" === c ? openTag(this) : "/" === c ? this.state = S.OPEN_TAG_SLASH : isMatch(nameStart, c) ? (strictFail(this, "No whitespace between attributes"), this.attribName = c, this.attribValue = "", this.state = S.ATTRIB_NAME) : strictFail(this, "Invalid attribute name");
                                    continue;
                                case S.ATTRIB_VALUE_UNQUOTED:
                                    if (!(">" === (c1 = c) || isWhitespace(c1))) {
                                        "&" === c ? this.state = S.ATTRIB_VALUE_ENTITY_U : this.attribValue += c;
                                        continue;
                                    }
                                    attrib(this), ">" === c ? openTag(this) : this.state = S.ATTRIB;
                                    continue;
                                case S.CLOSE_TAG:
                                    this.tagName ? ">" === c ? closeTag(this) : isMatch(nameBody, c) ? this.tagName += c : this.script ? (this.script += "</" + this.tagName, this.tagName = "", this.state = S.SCRIPT) : (isWhitespace(c) || strictFail(this, "Invalid tagname in closing tag"), this.state = S.CLOSE_TAG_SAW_WHITE) : isWhitespace(c) || (isMatch(nameStart, c) ? this.tagName = c : this.script ? (this.script += "</" + c, this.state = S.SCRIPT) : strictFail(this, "Invalid tagname in closing tag."));
                                    continue;
                                case S.CLOSE_TAG_SAW_WHITE:
                                    if (isWhitespace(c))
                                        continue;
                                    ">" === c ? closeTag(this) : strictFail(this, "Invalid characters in closing tag");
                                    continue;
                                case S.TEXT_ENTITY:
                                case S.ATTRIB_VALUE_ENTITY_Q:
                                case S.ATTRIB_VALUE_ENTITY_U:
                                    switch (this.state) {
                                        case S.TEXT_ENTITY:
                                            returnState = S.TEXT, buffer = "textNode";
                                            break;
                                        case S.ATTRIB_VALUE_ENTITY_Q:
                                            returnState = S.ATTRIB_VALUE_QUOTED, buffer = "attribValue";
                                            break;
                                        case S.ATTRIB_VALUE_ENTITY_U: returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = "attribValue";
                                    }
                                    ";" === c ? (this[buffer] += function (parser) { var num, entity = parser.entity, entityLC = entity.toLowerCase(), numStr = ""; return parser.ENTITIES[entity] ? parser.ENTITIES[entity] : parser.ENTITIES[entityLC] ? parser.ENTITIES[entityLC] : ("#" === (entity = entityLC).charAt(0) && (numStr = "x" === entity.charAt(1) ? (num = parseInt(entity = entity.slice(2), 16)).toString(16) : (num = parseInt(entity = entity.slice(1), 10)).toString(10)), entity = entity.replace(/^0+/, ""), isNaN(num) || numStr.toLowerCase() !== entity) ? (strictFail(parser, "Invalid character entity"), "&" + parser.entity + ";") : String.fromCodePoint(num); }(this), this.entity = "", this.state = returnState) : isMatch(this.entity.length ? entityBody : entityStart, c) ? this.entity += c : (strictFail(this, "Invalid character in entity name"), this[buffer] += "&" + this.entity + c, this.entity = "", this.state = returnState);
                                    continue;
                                default: throw Error(this, "Unknown state: " + this.state);
                            }
                        return this.position >= this.bufferCheckPosition && function (parser) { for (var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10), maxActual = 0, i = 0, l = buffers.length; i < l; i++) {
                            var len = parser[buffers[i]].length;
                            if (len > maxAllowed)
                                switch (buffers[i]) {
                                    case "textNode":
                                        closeText(parser);
                                        break;
                                    case "cdata":
                                        emitNode(parser, "oncdata", parser.cdata), parser.cdata = "";
                                        break;
                                    case "script":
                                        emitNode(parser, "onscript", parser.script), parser.script = "";
                                        break;
                                    default: error(parser, "Max buffer length exceeded: " + buffers[i]);
                                }
                            maxActual = Math.max(maxActual, len);
                        } parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH - maxActual + parser.position; }(this), this;
                    }, resume: function () { return this.error = null, this; }, close: function () { return this.write(null); }, flush: function () { closeText(this), "" !== this.cdata && (emitNode(this, "oncdata", this.cdata), this.cdata = ""), "" !== this.script && (emitNode(this, "onscript", this.script), this.script = ""); } };
                try {
                    Stream = __webpack_require__("stream").Stream;
                }
                catch (ex) {
                    Stream = function () { };
                }
                var streamWraps = sax.EVENTS.filter(function (ev) { return "error" !== ev && "end" !== ev; });
                function SAXStream(strict, opt) { if (!(this instanceof SAXStream))
                    return new SAXStream(strict, opt); Stream.apply(this), this._parser = new SAXParser(strict, opt), this.writable = !0, this.readable = !0; var me = this; this._parser.onend = function () { me.emit("end"); }, this._parser.onerror = function (er) { me.emit("error", er), me._parser.error = null; }, this._decoder = null, streamWraps.forEach(function (ev) { Object.defineProperty(me, "on" + ev, { get: function () { return me._parser["on" + ev]; }, set: function (h) { if (!h)
                        return me.removeAllListeners(ev), me._parser["on" + ev] = h, h; me.on(ev, h); }, enumerable: !0, configurable: !1 }); }); }
                SAXStream.prototype = Object.create(Stream.prototype, { constructor: { value: SAXStream } }), SAXStream.prototype.write = function (data1) { if ("function" == typeof Buffer && "function" == typeof Buffer.isBuffer && Buffer.isBuffer(data1)) {
                    if (!this._decoder) {
                        var SD = __webpack_require__("string_decoder").StringDecoder;
                        this._decoder = new SD("utf8");
                    }
                    data1 = this._decoder.write(data1);
                } return this._parser.write(data1.toString()), this.emit("data", data1), !0; }, SAXStream.prototype.end = function (chunk) { return chunk && chunk.length && this.write(chunk), this._parser.end(), !0; }, SAXStream.prototype.on = function (ev, handler) { var me = this; return me._parser["on" + ev] || -1 === streamWraps.indexOf(ev) || (me._parser["on" + ev] = function () { var args = 1 == arguments.length ? [arguments[0]] : Array.apply(null, arguments); args.splice(0, 0, ev), me.emit.apply(me, args); }), Stream.prototype.on.call(me, ev, handler); };
                var XML_NAMESPACE = "http://www.w3.org/XML/1998/namespace", XMLNS_NAMESPACE = "http://www.w3.org/2000/xmlns/", rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }, nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, entityStart = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, entityBody = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
                function isWhitespace(c) {
                    return " " === c || `
` === c || "\r" === c || "	" === c;
                }
                function isQuote(c) { return '"' === c || "'" === c; }
                function isMatch(regex, c) { return regex.test(c); }
                var S = 0;
                for (var s in sax.STATE = { BEGIN: S++, BEGIN_WHITESPACE: S++, TEXT: S++, TEXT_ENTITY: S++, OPEN_WAKA: S++, SGML_DECL: S++, SGML_DECL_QUOTED: S++, DOCTYPE: S++, DOCTYPE_QUOTED: S++, DOCTYPE_DTD: S++, DOCTYPE_DTD_QUOTED: S++, COMMENT_STARTING: S++, COMMENT: S++, COMMENT_ENDING: S++, COMMENT_ENDED: S++, CDATA: S++, CDATA_ENDING: S++, CDATA_ENDING_2: S++, PROC_INST: S++, PROC_INST_BODY: S++, PROC_INST_ENDING: S++, OPEN_TAG: S++, OPEN_TAG_SLASH: S++, ATTRIB: S++, ATTRIB_NAME: S++, ATTRIB_NAME_SAW_WHITE: S++, ATTRIB_VALUE: S++, ATTRIB_VALUE_QUOTED: S++, ATTRIB_VALUE_CLOSED: S++, ATTRIB_VALUE_UNQUOTED: S++, ATTRIB_VALUE_ENTITY_Q: S++, ATTRIB_VALUE_ENTITY_U: S++, CLOSE_TAG: S++, CLOSE_TAG_SAW_WHITE: S++, SCRIPT: S++, SCRIPT_ENDING: S++ }, sax.XML_ENTITIES = { amp: "&", gt: ">", lt: "<", quot: '"', apos: "'" }, sax.ENTITIES = { amp: "&", gt: ">", lt: "<", quot: '"', apos: "'", AElig: 198, Aacute: 193, Acirc: 194, Agrave: 192, Aring: 197, Atilde: 195, Auml: 196, Ccedil: 199, ETH: 208, Eacute: 201, Ecirc: 202, Egrave: 200, Euml: 203, Iacute: 205, Icirc: 206, Igrave: 204, Iuml: 207, Ntilde: 209, Oacute: 211, Ocirc: 212, Ograve: 210, Oslash: 216, Otilde: 213, Ouml: 214, THORN: 222, Uacute: 218, Ucirc: 219, Ugrave: 217, Uuml: 220, Yacute: 221, aacute: 225, acirc: 226, aelig: 230, agrave: 224, aring: 229, atilde: 227, auml: 228, ccedil: 231, eacute: 233, ecirc: 234, egrave: 232, eth: 240, euml: 235, iacute: 237, icirc: 238, igrave: 236, iuml: 239, ntilde: 241, oacute: 243, ocirc: 244, ograve: 242, oslash: 248, otilde: 245, ouml: 246, szlig: 223, thorn: 254, uacute: 250, ucirc: 251, ugrave: 249, uuml: 252, yacute: 253, yuml: 255, copy: 169, reg: 174, nbsp: 160, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, sect: 167, uml: 168, ordf: 170, laquo: 171, not: 172, shy: 173, macr: 175, deg: 176, plusmn: 177, sup1: 185, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, times: 215, divide: 247, OElig: 338, oelig: 339, Scaron: 352, scaron: 353, Yuml: 376, fnof: 402, circ: 710, tilde: 732, Alpha: 913, Beta: 914, Gamma: 915, Delta: 916, Epsilon: 917, Zeta: 918, Eta: 919, Theta: 920, Iota: 921, Kappa: 922, Lambda: 923, Mu: 924, Nu: 925, Xi: 926, Omicron: 927, Pi: 928, Rho: 929, Sigma: 931, Tau: 932, Upsilon: 933, Phi: 934, Chi: 935, Psi: 936, Omega: 937, alpha: 945, beta: 946, gamma: 947, delta: 948, epsilon: 949, zeta: 950, eta: 951, theta: 952, iota: 953, kappa: 954, lambda: 955, mu: 956, nu: 957, xi: 958, omicron: 959, pi: 960, rho: 961, sigmaf: 962, sigma: 963, tau: 964, upsilon: 965, phi: 966, chi: 967, psi: 968, omega: 969, thetasym: 977, upsih: 978, piv: 982, ensp: 8194, emsp: 8195, thinsp: 8201, zwnj: 8204, zwj: 8205, lrm: 8206, rlm: 8207, ndash: 8211, mdash: 8212, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, bull: 8226, hellip: 8230, permil: 8240, prime: 8242, Prime: 8243, lsaquo: 8249, rsaquo: 8250, oline: 8254, frasl: 8260, euro: 8364, image: 8465, weierp: 8472, real: 8476, trade: 8482, alefsym: 8501, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, harr: 8596, crarr: 8629, lArr: 8656, uArr: 8657, rArr: 8658, dArr: 8659, hArr: 8660, forall: 8704, part: 8706, exist: 8707, empty: 8709, nabla: 8711, isin: 8712, notin: 8713, ni: 8715, prod: 8719, sum: 8721, minus: 8722, lowast: 8727, radic: 8730, prop: 8733, infin: 8734, ang: 8736, and: 8743, or: 8744, cap: 8745, cup: 8746, int: 8747, there4: 8756, sim: 8764, cong: 8773, asymp: 8776, ne: 8800, equiv: 8801, le: 8804, ge: 8805, sub: 8834, sup: 8835, nsub: 8836, sube: 8838, supe: 8839, oplus: 8853, otimes: 8855, perp: 8869, sdot: 8901, lceil: 8968, rceil: 8969, lfloor: 8970, rfloor: 8971, lang: 9001, rang: 9002, loz: 9674, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830 }, Object.keys(sax.ENTITIES).forEach(function (key) { var e = sax.ENTITIES[key], s = "number" == typeof e ? String.fromCharCode(e) : e; sax.ENTITIES[key] = s; }), sax.STATE)
                    sax.STATE[sax.STATE[s]] = s;
                function emit(parser, event, data1) { parser[event] && parser[event](data1); }
                function emitNode(parser, nodeType, data1) { parser.textNode && closeText(parser), emit(parser, nodeType, data1); }
                function closeText(parser) { parser.textNode = textopts(parser.opt, parser.textNode), parser.textNode && emit(parser, "ontext", parser.textNode), parser.textNode = ""; }
                function textopts(opt, text) { return opt.trim && (text = text.trim()), opt.normalize && (text = text.replace(/\s+/g, " ")), text; }
                function error(parser, er) {
                    return closeText(parser), parser.trackPosition && (er += `
Line: ` + parser.line + `
Column: ` + parser.column + `
Char: ` + parser.c), parser.error = er = Error(er), emit(parser, "onerror", er), parser;
                }
                function end(parser) { return parser.sawRoot && !parser.closedRoot && strictFail(parser, "Unclosed root tag"), parser.state !== S.BEGIN && parser.state !== S.BEGIN_WHITESPACE && parser.state !== S.TEXT && error(parser, "Unexpected end"), closeText(parser), parser.c = "", parser.closed = !0, emit(parser, "onend"), SAXParser.call(parser, parser.strict, parser.opt), parser; }
                function strictFail(parser, message) { if ("object" != typeof parser || !(parser instanceof SAXParser))
                    throw Error("bad call to strictFail"); parser.strict && error(parser, message); }
                function qname(name, attribute) { var qualName = 0 > name.indexOf(":") ? ["", name] : name.split(":"), prefix = qualName[0], local = qualName[1]; return attribute && "xmlns" === name && (prefix = "xmlns", local = ""), { prefix: prefix, local: local }; }
                function attrib(parser) {
                    if (parser.strict || (parser.attribName = parser.attribName[parser.looseCase]()), -1 !== parser.attribList.indexOf(parser.attribName) || parser.tag.attributes.hasOwnProperty(parser.attribName)) {
                        parser.attribName = parser.attribValue = "";
                        return;
                    }
                    if (parser.opt.xmlns) {
                        var qn = qname(parser.attribName, !0), prefix = qn.prefix, local = qn.local;
                        if ("xmlns" === prefix)
                            if ("xml" === local && parser.attribValue !== XML_NAMESPACE)
                                strictFail(parser, "xml: prefix must be bound to " + XML_NAMESPACE + `
Actual: ` + parser.attribValue);
                            else if ("xmlns" === local && parser.attribValue !== XMLNS_NAMESPACE)
                                strictFail(parser, "xmlns: prefix must be bound to " + XMLNS_NAMESPACE + `
Actual: ` + parser.attribValue);
                            else {
                                var tag = parser.tag, parent = parser.tags[parser.tags.length - 1] || parser;
                                tag.ns === parent.ns && (tag.ns = Object.create(parent.ns)), tag.ns[local] = parser.attribValue;
                            }
                        parser.attribList.push([parser.attribName, parser.attribValue]);
                    }
                    else
                        parser.tag.attributes[parser.attribName] = parser.attribValue, emitNode(parser, "onattribute", { name: parser.attribName, value: parser.attribValue });
                    parser.attribName = parser.attribValue = "";
                }
                function openTag(parser, selfClosing) { if (parser.opt.xmlns) {
                    var tag = parser.tag, qn = qname(parser.tagName);
                    tag.prefix = qn.prefix, tag.local = qn.local, tag.uri = tag.ns[qn.prefix] || "", tag.prefix && !tag.uri && (strictFail(parser, "Unbound namespace prefix: " + JSON.stringify(parser.tagName)), tag.uri = qn.prefix);
                    var parent = parser.tags[parser.tags.length - 1] || parser;
                    tag.ns && parent.ns !== tag.ns && Object.keys(tag.ns).forEach(function (p) { emitNode(parser, "onopennamespace", { prefix: p, uri: tag.ns[p] }); });
                    for (var i = 0, l = parser.attribList.length; i < l; i++) {
                        var nv = parser.attribList[i], name = nv[0], value = nv[1], qualName = qname(name, !0), prefix = qualName.prefix, local = qualName.local, uri = "" === prefix ? "" : tag.ns[prefix] || "", a = { name: name, value: value, prefix: prefix, local: local, uri: uri };
                        prefix && "xmlns" !== prefix && !uri && (strictFail(parser, "Unbound namespace prefix: " + JSON.stringify(prefix)), a.uri = prefix), parser.tag.attributes[name] = a, emitNode(parser, "onattribute", a);
                    }
                    parser.attribList.length = 0;
                } parser.tag.isSelfClosing = !!selfClosing, parser.sawRoot = !0, parser.tags.push(parser.tag), emitNode(parser, "onopentag", parser.tag), selfClosing || (parser.noscript || "script" !== parser.tagName.toLowerCase() ? parser.state = S.TEXT : parser.state = S.SCRIPT, parser.tag = null, parser.tagName = ""), parser.attribName = parser.attribValue = "", parser.attribList.length = 0; }
                function closeTag(parser) { if (!parser.tagName) {
                    strictFail(parser, "Weird empty close tag."), parser.textNode += "</>", parser.state = S.TEXT;
                    return;
                } if (parser.script) {
                    if ("script" !== parser.tagName) {
                        parser.script += "</" + parser.tagName + ">", parser.tagName = "", parser.state = S.SCRIPT;
                        return;
                    }
                    emitNode(parser, "onscript", parser.script), parser.script = "";
                } var t = parser.tags.length, tagName = parser.tagName; parser.strict || (tagName = tagName[parser.looseCase]()); for (var closeTo = tagName; t--;)
                    if (parser.tags[t].name !== closeTo)
                        strictFail(parser, "Unexpected close tag");
                    else
                        break; if (t < 0) {
                    strictFail(parser, "Unmatched closing tag: " + parser.tagName), parser.textNode += "</" + parser.tagName + ">", parser.state = S.TEXT;
                    return;
                } parser.tagName = tagName; for (var s = parser.tags.length; s-- > t;) {
                    var tag = parser.tag = parser.tags.pop();
                    parser.tagName = parser.tag.name, emitNode(parser, "onclosetag", parser.tagName);
                    var x = {};
                    for (var i in tag.ns)
                        x[i] = tag.ns[i];
                    var parent = parser.tags[parser.tags.length - 1] || parser;
                    parser.opt.xmlns && tag.ns !== parent.ns && Object.keys(tag.ns).forEach(function (p) { var n = tag.ns[p]; emitNode(parser, "onclosenamespace", { prefix: p, uri: n }); });
                } 0 === t && (parser.closedRoot = !0), parser.tagName = parser.attribValue = parser.attribName = "", parser.attribList.length = 0, parser.state = S.TEXT; }
                function beginWhiteSpace(parser, c) { "<" === c ? (parser.state = S.OPEN_WAKA, parser.startTagPosition = parser.position) : isWhitespace(c) || (strictFail(parser, "Non-whitespace before first tag."), parser.textNode = c, parser.state = S.TEXT); }
                function charAt(chunk, i) { var result = ""; return i < chunk.length && (result = chunk.charAt(i)), result; }
                S = sax.STATE, String.fromCodePoint || (stringFromCharCode = String.fromCharCode, floor = Math.floor, fromCodePoint = function () { var highSurrogate, lowSurrogate, codeUnits = [], index = -1, length = arguments.length; if (!length)
                    return ""; for (var result = ""; ++index < length;) {
                    var codePoint = Number(arguments[index]);
                    if (!isFinite(codePoint) || codePoint < 0 || codePoint > 1114111 || floor(codePoint) !== codePoint)
                        throw RangeError("Invalid code point: " + codePoint);
                    codePoint <= 65535 ? codeUnits.push(codePoint) : (codePoint -= 65536, highSurrogate = (codePoint >> 10) + 55296, lowSurrogate = codePoint % 1024 + 56320, codeUnits.push(highSurrogate, lowSurrogate)), (index + 1 === length || codeUnits.length > 16384) && (result += stringFromCharCode.apply(null, codeUnits), codeUnits.length = 0);
                } return result; }, Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", { value: fromCodePoint, configurable: !0, writable: !0 }) : String.fromCodePoint = fromCodePoint);
            }(exports);
        }, "./node_modules/set-function-length/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), define = __webpack_require__("./node_modules/define-data-property/index.js"), hasDescriptors = __webpack_require__("./node_modules/has-property-descriptors/index.js")(), gOPD = __webpack_require__("./node_modules/gopd/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $floor = GetIntrinsic("%Math.floor%");
            module1.exports = function (fn, length) { if ("function" != typeof fn)
                throw new $TypeError("`fn` is not a function"); if ("number" != typeof length || length < 0 || length > 0xffffffff || $floor(length) !== length)
                throw new $TypeError("`length` must be a positive 32-bit integer"); var loose = arguments.length > 2 && !!arguments[2], functionLengthIsConfigurable = !0, functionLengthIsWritable = !0; if ("length" in fn && gOPD) {
                var desc = gOPD(fn, "length");
                desc && !desc.configurable && (functionLengthIsConfigurable = !1), desc && !desc.writable && (functionLengthIsWritable = !1);
            } return (functionLengthIsConfigurable || functionLengthIsWritable || !loose) && (hasDescriptors ? define(fn, "length", length, !0, !0) : define(fn, "length", length)), fn; };
        }, "./node_modules/set-function-name/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var define = __webpack_require__("./node_modules/define-data-property/index.js"), hasDescriptors = __webpack_require__("./node_modules/has-property-descriptors/index.js")(), functionsHaveConfigurableNames = __webpack_require__("./node_modules/functions-have-names/index.js").functionsHaveConfigurableNames(), $TypeError = __webpack_require__("./node_modules/es-errors/type.js");
            module1.exports = function (fn, name) { if ("function" != typeof fn)
                throw new $TypeError("`fn` is not a function"); var loose = arguments.length > 2 && !!arguments[2]; return (!loose || functionsHaveConfigurableNames) && (hasDescriptors ? define(fn, "name", name, !0, !0) : define(fn, "name", name)), fn; };
        }, "./node_modules/side-channel-list/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var inspect = __webpack_require__("./node_modules/object-inspect/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), listGetNode = function (list, key, isDelete) { for (var curr, prev = list; null != (curr = prev.next); prev = curr)
                if (curr.key === key)
                    return prev.next = curr.next, isDelete || (curr.next = list.next, list.next = curr), curr; }, listGet = function (objects, key) { if (objects) {
                var node = listGetNode(objects, key);
                return node && node.value;
            } }, listSet = function (objects, key, value) { var node = listGetNode(objects, key); node ? node.value = value : objects.next = { key: key, next: objects.next, value: value }; }, listDelete = function (objects, key) { if (objects)
                return listGetNode(objects, key, !0); };
            module1.exports = function () { var $o, channel = { assert: function (key) { if (!channel.has(key))
                    throw new $TypeError("Side channel does not contain " + inspect(key)); }, delete: function (key) { var root = $o && $o.next, deletedNode = listDelete($o, key); return deletedNode && root && root === deletedNode && ($o = void 0), !!deletedNode; }, get: function (key) { return listGet($o, key); }, has: function (key) { var objects; return !!(objects = $o) && !!listGetNode(objects, key); }, set: function (key, value) { $o || ($o = { next: void 0 }), listSet($o, key, value); } }; return channel; };
        }, "./node_modules/side-channel-map/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), callBound = __webpack_require__("./node_modules/call-bound/index.js"), inspect = __webpack_require__("./node_modules/object-inspect/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $Map = GetIntrinsic("%Map%", !0), $mapGet = callBound("Map.prototype.get", !0), $mapSet = callBound("Map.prototype.set", !0), $mapHas = callBound("Map.prototype.has", !0), $mapDelete = callBound("Map.prototype.delete", !0), $mapSize = callBound("Map.prototype.size", !0);
            module1.exports = !!$Map && function () { var $m, channel = { assert: function (key) { if (!channel.has(key))
                    throw new $TypeError("Side channel does not contain " + inspect(key)); }, delete: function (key) { if ($m) {
                    var result = $mapDelete($m, key);
                    return 0 === $mapSize($m) && ($m = void 0), result;
                } return !1; }, get: function (key) { if ($m)
                    return $mapGet($m, key); }, has: function (key) { return !!$m && $mapHas($m, key); }, set: function (key, value) { $m || ($m = new $Map), $mapSet($m, key, value); } }; return channel; };
        }, "./node_modules/side-channel-weakmap/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var GetIntrinsic = __webpack_require__("./node_modules/get-intrinsic/index.js"), callBound = __webpack_require__("./node_modules/call-bound/index.js"), inspect = __webpack_require__("./node_modules/object-inspect/index.js"), getSideChannelMap = __webpack_require__("./node_modules/side-channel-map/index.js"), $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), $WeakMap = GetIntrinsic("%WeakMap%", !0), $weakMapGet = callBound("WeakMap.prototype.get", !0), $weakMapSet = callBound("WeakMap.prototype.set", !0), $weakMapHas = callBound("WeakMap.prototype.has", !0), $weakMapDelete = callBound("WeakMap.prototype.delete", !0);
            module1.exports = $WeakMap ? function () { var $wm, $m, channel = { assert: function (key) { if (!channel.has(key))
                    throw new $TypeError("Side channel does not contain " + inspect(key)); }, delete: function (key) { if ($WeakMap && key && ("object" == typeof key || "function" == typeof key)) {
                    if ($wm)
                        return $weakMapDelete($wm, key);
                }
                else if (getSideChannelMap && $m)
                    return $m.delete(key); return !1; }, get: function (key) { return $WeakMap && key && ("object" == typeof key || "function" == typeof key) && $wm ? $weakMapGet($wm, key) : $m && $m.get(key); }, has: function (key) { return $WeakMap && key && ("object" == typeof key || "function" == typeof key) && $wm ? $weakMapHas($wm, key) : !!$m && $m.has(key); }, set: function (key, value) { $WeakMap && key && ("object" == typeof key || "function" == typeof key) ? ($wm || ($wm = new $WeakMap), $weakMapSet($wm, key, value)) : getSideChannelMap && ($m || ($m = getSideChannelMap()), $m.set(key, value)); } }; return channel; } : getSideChannelMap;
        }, "./node_modules/side-channel/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $TypeError = __webpack_require__("./node_modules/es-errors/type.js"), inspect = __webpack_require__("./node_modules/object-inspect/index.js"), getSideChannelList = __webpack_require__("./node_modules/side-channel-list/index.js"), getSideChannelMap = __webpack_require__("./node_modules/side-channel-map/index.js"), makeChannel = __webpack_require__("./node_modules/side-channel-weakmap/index.js") || getSideChannelMap || getSideChannelList;
            module1.exports = function () { var $channelData, channel = { assert: function (key) { if (!channel.has(key))
                    throw new $TypeError("Side channel does not contain " + inspect(key)); }, delete: function (key) { return !!$channelData && $channelData.delete(key); }, get: function (key) { return $channelData && $channelData.get(key); }, has: function (key) { return !!$channelData && $channelData.has(key); }, set: function (key, value) { $channelData || ($channelData = makeChannel()), $channelData.set(key, value); } }; return channel; };
        }, "./node_modules/slash/index.js": module1 => {
            "use strict";
            module1.exports = path => { let isExtendedLengthPath = /^\\\\\?\\/.test(path), hasNonAscii = /[^\u0000-\u0080]+/.test(path); return isExtendedLengthPath || hasNonAscii ? path : path.replace(/\\/g, "/"); };
        }, "./node_modules/uuid/dist/esm/native.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
            let __WEBPACK_DEFAULT_EXPORT__ = { randomUUID: __webpack_require__("crypto").randomUUID };
        }, "./node_modules/uuid/dist/esm/regex.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
            let __WEBPACK_DEFAULT_EXPORT__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;
        }, "./node_modules/uuid/dist/esm/rng.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => rng });
            var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("crypto");
            let rnds8Pool = new Uint8Array(256), poolPtr = rnds8Pool.length;
            function rng() { return poolPtr > rnds8Pool.length - 16 && ((0, crypto__WEBPACK_IMPORTED_MODULE_0__.randomFillSync)(rnds8Pool), poolPtr = 0), rnds8Pool.slice(poolPtr, poolPtr += 16); }
        }, "./node_modules/uuid/dist/esm/stringify.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__, unsafeStringify: () => unsafeStringify });
            var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm/validate.js");
            let byteToHex = [];
            for (let i = 0; i < 256; ++i)
                byteToHex.push((i + 256).toString(16).slice(1));
            function unsafeStringify(arr, offset = 0) { return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); }
            let __WEBPACK_DEFAULT_EXPORT__ = function (arr, offset = 0) { let uuid = unsafeStringify(arr, offset); if (!(0, _validate_js__WEBPACK_IMPORTED_MODULE_0__.default)(uuid))
                throw TypeError("Stringified UUID is invalid"); return uuid; };
        }, "./node_modules/uuid/dist/esm/v4.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm/native.js"), _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/uuid/dist/esm/rng.js"), _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/uuid/dist/esm/stringify.js");
            let __WEBPACK_DEFAULT_EXPORT__ = function (options1, buf, offset) { if (_native_js__WEBPACK_IMPORTED_MODULE_0__.default.randomUUID && !buf && !options1)
                return _native_js__WEBPACK_IMPORTED_MODULE_0__.default.randomUUID(); let rnds = (options1 = options1 || {}).random ?? options1.rng?.() ?? (0, _rng_js__WEBPACK_IMPORTED_MODULE_1__.default)(); if (rnds.length < 16)
                throw Error("Random bytes length must be >= 16"); if (rnds[6] = 15 & rnds[6] | 64, rnds[8] = 63 & rnds[8] | 128, buf) {
                if ((offset = offset || 0) < 0 || offset + 16 > buf.length)
                    throw RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);
                for (let i = 0; i < 16; ++i)
                    buf[offset + i] = rnds[i];
                return buf;
            } return (0, _stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds); };
        }, "./node_modules/uuid/dist/esm/validate.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => __WEBPACK_DEFAULT_EXPORT__ });
            var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm/regex.js");
            let __WEBPACK_DEFAULT_EXPORT__ = function (uuid) { return "string" == typeof uuid && _regex_js__WEBPACK_IMPORTED_MODULE_0__.default.test(uuid); };
        }, "./node_modules/which-boxed-primitive/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var isString = __webpack_require__("./node_modules/is-string/index.js"), isNumber = __webpack_require__("./node_modules/is-number-object/index.js"), isBoolean = __webpack_require__("./node_modules/is-boolean-object/index.js"), isSymbol = __webpack_require__("./node_modules/is-symbol/index.js"), isBigInt = __webpack_require__("./node_modules/is-bigint/index.js");
            module1.exports = function (value) { return null == value || "object" != typeof value && "function" != typeof value ? null : isString(value) ? "String" : isNumber(value) ? "Number" : isBoolean(value) ? "Boolean" : isSymbol(value) ? "Symbol" : isBigInt(value) ? "BigInt" : void 0; };
        }, "./node_modules/which-collection/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var isMap = __webpack_require__("./node_modules/is-map/index.js"), isSet = __webpack_require__("./node_modules/is-set/index.js"), isWeakMap = __webpack_require__("./node_modules/is-weakmap/index.js"), isWeakSet = __webpack_require__("./node_modules/is-weakset/index.js");
            module1.exports = function (value) { if (value && "object" == typeof value) {
                if (isMap(value))
                    return "Map";
                if (isSet(value))
                    return "Set";
                if (isWeakMap(value))
                    return "WeakMap";
                if (isWeakSet(value))
                    return "WeakSet";
            } return !1; };
        }, "./node_modules/which-typed-array/index.js": (module1, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var forEach = __webpack_require__("./node_modules/for-each/index.js"), availableTypedArrays = __webpack_require__("./node_modules/available-typed-arrays/index.js"), callBind = __webpack_require__("./node_modules/call-bind/index.js"), callBound = __webpack_require__("./node_modules/call-bound/index.js"), gOPD = __webpack_require__("./node_modules/gopd/index.js"), getProto = __webpack_require__("./node_modules/get-proto/index.js"), $toString = callBound("Object.prototype.toString"), hasToStringTag = __webpack_require__("./node_modules/has-tostringtag/shams.js")(), g = "undefined" == typeof globalThis ? global : globalThis, typedArrays = availableTypedArrays(), $slice = callBound("String.prototype.slice"), $indexOf = callBound("Array.prototype.indexOf", !0) || function (array, value) { for (var i = 0; i < array.length; i += 1)
                if (array[i] === value)
                    return i; return -1; }, cache = { __proto__: null };
            hasToStringTag && gOPD && getProto ? forEach(typedArrays, function (typedArray) { var arr = new g[typedArray]; if (Symbol.toStringTag in arr && getProto) {
                var proto = getProto(arr), descriptor = gOPD(proto, Symbol.toStringTag);
                !descriptor && proto && (descriptor = gOPD(getProto(proto), Symbol.toStringTag)), cache["$" + typedArray] = callBind(descriptor.get);
            } }) : forEach(typedArrays, function (typedArray) { var arr = new g[typedArray], fn = arr.slice || arr.set; fn && (cache["$" + typedArray] = callBind(fn)); });
            var tryTypedArrays = function (value) { var found = !1; return forEach(cache, function (getter, typedArray) { if (!found)
                try {
                    "$" + getter(value) === typedArray && (found = $slice(typedArray, 1));
                }
                catch (e) { } }), found; }, trySlices = function (value) { var found = !1; return forEach(cache, function (getter, name) { if (!found)
                try {
                    getter(value), found = $slice(name, 1);
                }
                catch (e) { } }), found; };
            module1.exports = function (value) { if (!value || "object" != typeof value)
                return !1; if (!hasToStringTag) {
                var tag = $slice($toString(value), 8, -1);
                return $indexOf(typedArrays, tag) > -1 ? tag : "Object" === tag && trySlices(value);
            } return gOPD ? tryTypedArrays(value) : null; };
        }, "./node_modules/xml2js/lib/bom.js": function (__unused_webpack_module, exports) { (function () {
            "use strict";
            exports.stripBOM = function (str) { return "\uFEFF" === str[0] ? str.substring(1) : str; };
        }).call(this); }, "./node_modules/xml2js/lib/builder.js": function (__unused_webpack_module, exports, __webpack_require__) { (function () {
            "use strict";
            var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA, hasProp = {}.hasOwnProperty;
            builder = __webpack_require__("./node_modules/xmlbuilder/lib/index.js"), defaults = __webpack_require__("./node_modules/xml2js/lib/defaults.js").defaults, requiresCDATA = function (entry) { return "string" == typeof entry && (entry.indexOf("&") >= 0 || entry.indexOf(">") >= 0 || entry.indexOf("<") >= 0); }, wrapCDATA = function (entry) { return "<![CDATA[" + escapeCDATA(entry) + "]]>"; }, escapeCDATA = function (entry) { return entry.replace("]]>", "]]]]><![CDATA[>"); }, exports.Builder = function () { function Builder(opts) { var key, ref, value; for (key in this.options = {}, ref = defaults["0.2"])
                hasProp.call(ref, key) && (value = ref[key], this.options[key] = value); for (key in opts)
                hasProp.call(opts, key) && (value = opts[key], this.options[key] = value); } return Builder.prototype.buildObject = function (rootObj) { var attrkey, charkey, render, rootElement, rootName, _this; return attrkey = this.options.attrkey, charkey = this.options.charkey, 1 === Object.keys(rootObj).length && this.options.rootName === defaults["0.2"].rootName ? (rootName = Object.keys(rootObj)[0], rootObj = rootObj[rootName]) : rootName = this.options.rootName, _this = this, render = function (element, obj) { var attr1, child, entry, index, key, value; if ("object" != typeof obj)
                _this.options.cdata && requiresCDATA(obj) ? element.raw(wrapCDATA(obj)) : element.txt(obj);
            else if (Array.isArray(obj)) {
                for (index in obj)
                    if (hasProp.call(obj, index))
                        for (key in child = obj[index])
                            entry = child[key], element = render(element.ele(key), entry).up();
            }
            else
                for (key in obj)
                    if (hasProp.call(obj, key))
                        if (child = obj[key], key === attrkey) {
                            if ("object" == typeof child)
                                for (attr1 in child)
                                    value = child[attr1], element = element.att(attr1, value);
                        }
                        else if (key === charkey)
                            element = _this.options.cdata && requiresCDATA(child) ? element.raw(wrapCDATA(child)) : element.txt(child);
                        else if (Array.isArray(child))
                            for (index in child)
                                hasProp.call(child, index) && (element = "string" == typeof (entry = child[index]) ? _this.options.cdata && requiresCDATA(entry) ? element.ele(key).raw(wrapCDATA(entry)).up() : element.ele(key, entry).up() : render(element.ele(key), entry).up());
                        else
                            "object" == typeof child ? element = render(element.ele(key), child).up() : "string" == typeof child && _this.options.cdata && requiresCDATA(child) ? element = element.ele(key).raw(wrapCDATA(child)).up() : (null == child && (child = ""), element = element.ele(key, child.toString()).up()); return element; }, rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, { headless: this.options.headless, allowSurrogateChars: this.options.allowSurrogateChars }), render(rootElement, rootObj).end(this.options.renderOpts); }, Builder; }();
        }).call(this); }, "./node_modules/xml2js/lib/defaults.js": function (__unused_webpack_module, exports) {
            (function () {
                exports.defaults = { "0.1": { explicitCharkey: !1, trim: !0, normalize: !0, normalizeTags: !1, attrkey: "@", charkey: "#", explicitArray: !1, ignoreAttrs: !1, mergeAttrs: !1, explicitRoot: !1, validator: null, xmlns: !1, explicitChildren: !1, childkey: "@@", charsAsChildren: !1, includeWhiteChars: !1, async: !1, strict: !0, attrNameProcessors: null, attrValueProcessors: null, tagNameProcessors: null, valueProcessors: null, emptyTag: "" }, "0.2": { explicitCharkey: !1, trim: !1, normalize: !1, normalizeTags: !1, attrkey: "$", charkey: "_", explicitArray: !0, ignoreAttrs: !1, mergeAttrs: !1, explicitRoot: !0, validator: null, xmlns: !1, explicitChildren: !1, preserveChildrenOrder: !1, childkey: "$$", charsAsChildren: !1, includeWhiteChars: !1, async: !1, strict: !0, attrNameProcessors: null, attrValueProcessors: null, tagNameProcessors: null, valueProcessors: null, rootName: "root", xmldec: { version: "1.0", encoding: "UTF-8", standalone: !0 }, doctype: null, renderOpts: { pretty: !0, indent: "  ", newline: `
` }, headless: !1, chunkSize: 1e4, emptyTag: "", cdata: !1 } };
            }).call(this);
        }, "./node_modules/xml2js/lib/parser.js": function (__unused_webpack_module, exports, __webpack_require__) { (function () {
            "use strict";
            var bom, defaults, defineProperty, events, processItem, processors, sax, setImmediate1, bind = function (fn, me) { return function () { return fn.apply(me, arguments); }; }, extend = function (child, parent) { for (var key in parent)
                hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty;
            sax = __webpack_require__("./node_modules/sax/lib/sax.js"), events = __webpack_require__("events"), bom = __webpack_require__("./node_modules/xml2js/lib/bom.js"), processors = __webpack_require__("./node_modules/xml2js/lib/processors.js"), setImmediate1 = __webpack_require__("timers").setImmediate, defaults = __webpack_require__("./node_modules/xml2js/lib/defaults.js").defaults, processItem = function (processors, item, key) { var i, len; for (i = 0, len = processors.length; i < len; i++)
                item = (0, processors[i])(item, key); return item; }, defineProperty = function (obj, key, value) { var descriptor; return (descriptor = Object.create(null)).value = value, descriptor.writable = !0, descriptor.enumerable = !0, descriptor.configurable = !0, Object.defineProperty(obj, key, descriptor); }, exports.Parser = function (superClass) { function Parser(opts) { var key, ref, value; if (this.parseStringPromise = bind(this.parseStringPromise, this), this.parseString = bind(this.parseString, this), this.reset = bind(this.reset, this), this.assignOrPush = bind(this.assignOrPush, this), this.processAsync = bind(this.processAsync, this), !(this instanceof exports.Parser))
                return new exports.Parser(opts); for (key in this.options = {}, ref = defaults["0.2"])
                hasProp.call(ref, key) && (value = ref[key], this.options[key] = value); for (key in opts)
                hasProp.call(opts, key) && (value = opts[key], this.options[key] = value); this.options.xmlns && (this.options.xmlnskey = this.options.attrkey + "ns"), this.options.normalizeTags && (this.options.tagNameProcessors || (this.options.tagNameProcessors = []), this.options.tagNameProcessors.unshift(processors.normalize)), this.reset(); } return extend(Parser, superClass), Parser.prototype.processAsync = function () { var chunk; try {
                if (this.remaining.length <= this.options.chunkSize)
                    return chunk = this.remaining, this.remaining = "", this.saxParser = this.saxParser.write(chunk), this.saxParser.close();
                return chunk = this.remaining.substr(0, this.options.chunkSize), this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length), this.saxParser = this.saxParser.write(chunk), setImmediate1(this.processAsync);
            }
            catch (error1) {
                if (!this.saxParser.errThrown)
                    return this.saxParser.errThrown = !0, this.emit(error1);
            } }, Parser.prototype.assignOrPush = function (obj, key, newValue) { return key in obj ? (obj[key] instanceof Array || defineProperty(obj, key, [obj[key]]), obj[key].push(newValue)) : this.options.explicitArray ? defineProperty(obj, key, [newValue]) : defineProperty(obj, key, newValue); }, Parser.prototype.reset = function () { var attrkey, charkey, ontext, stack, _this, _this1, _this2, _this3, _this4; return this.removeAllListeners(), this.saxParser = sax.parser(this.options.strict, { trim: !1, normalize: !1, xmlns: this.options.xmlns }), this.saxParser.errThrown = !1, this.saxParser.onerror = (_this = this, function (error) { if (_this.saxParser.resume(), !_this.saxParser.errThrown)
                return _this.saxParser.errThrown = !0, _this.emit("error", error); }), this.saxParser.onend = (_this1 = this, function () { if (!_this1.saxParser.ended)
                return _this1.saxParser.ended = !0, _this1.emit("end", _this1.resultObject); }), this.saxParser.ended = !1, this.EXPLICIT_CHARKEY = this.options.explicitCharkey, this.resultObject = null, stack = [], attrkey = this.options.attrkey, charkey = this.options.charkey, this.saxParser.onopentag = (_this2 = this, function (node) { var key, newValue, obj, processedKey, ref; if ((obj = {})[charkey] = "", !_this2.options.ignoreAttrs)
                for (key in ref = node.attributes)
                    hasProp.call(ref, key) && (attrkey in obj || _this2.options.mergeAttrs || (obj[attrkey] = {}), newValue = _this2.options.attrValueProcessors ? processItem(_this2.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key], processedKey = _this2.options.attrNameProcessors ? processItem(_this2.options.attrNameProcessors, key) : key, _this2.options.mergeAttrs ? _this2.assignOrPush(obj, processedKey, newValue) : defineProperty(obj[attrkey], processedKey, newValue)); return obj["#name"] = _this2.options.tagNameProcessors ? processItem(_this2.options.tagNameProcessors, node.name) : node.name, _this2.options.xmlns && (obj[_this2.options.xmlnskey] = { uri: node.uri, local: node.local }), stack.push(obj); }), this.saxParser.onclosetag = (_this3 = this, function () { var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath, thing; if (nodeName = (obj = stack.pop())["#name"], _this3.options.explicitChildren && _this3.options.preserveChildrenOrder || delete obj["#name"], !0 === obj.cdata && (cdata = obj.cdata, delete obj.cdata), s = stack[stack.length - 1], obj[charkey].match(/^\s*$/) && !cdata ? (emptyStr = obj[charkey], delete obj[charkey]) : (_this3.options.trim && (obj[charkey] = obj[charkey].trim()), _this3.options.normalize && (obj[charkey] = obj[charkey].replace(/\s{2,}/g, " ").trim()), obj[charkey] = _this3.options.valueProcessors ? processItem(_this3.options.valueProcessors, obj[charkey], nodeName) : obj[charkey], 1 === Object.keys(obj).length && charkey in obj && !_this3.EXPLICIT_CHARKEY && (obj = obj[charkey])), "object" == typeof (thing = obj) && null != thing && 0 === Object.keys(thing).length && (obj = "function" == typeof _this3.options.emptyTag ? _this3.options.emptyTag() : "" !== _this3.options.emptyTag ? _this3.options.emptyTag : emptyStr), null != _this3.options.validator && (xpath = "/" + (function () { var i, len, results; for (i = 0, results = [], len = stack.length; i < len; i++)
                node = stack[i], results.push(node["#name"]); return results; })().concat(nodeName).join("/"), !function () { try {
                obj = _this3.options.validator(xpath, s && s[nodeName], obj);
            }
            catch (error1) {
                return _this3.emit("error", error1);
            } }()), _this3.options.explicitChildren && !_this3.options.mergeAttrs && "object" == typeof obj)
                if (_this3.options.preserveChildrenOrder) {
                    if (s) {
                        for (key in s[_this3.options.childkey] = s[_this3.options.childkey] || [], objClone = {}, obj)
                            hasProp.call(obj, key) && defineProperty(objClone, key, obj[key]);
                        s[_this3.options.childkey].push(objClone), delete obj["#name"], 1 === Object.keys(obj).length && charkey in obj && !_this3.EXPLICIT_CHARKEY && (obj = obj[charkey]);
                    }
                }
                else
                    node = {}, _this3.options.attrkey in obj && (node[_this3.options.attrkey] = obj[_this3.options.attrkey], delete obj[_this3.options.attrkey]), !_this3.options.charsAsChildren && _this3.options.charkey in obj && (node[_this3.options.charkey] = obj[_this3.options.charkey], delete obj[_this3.options.charkey]), Object.getOwnPropertyNames(obj).length > 0 && (node[_this3.options.childkey] = obj), obj = node; return stack.length > 0 ? _this3.assignOrPush(s, nodeName, obj) : (_this3.options.explicitRoot && (old = obj, defineProperty(obj = {}, nodeName, old)), _this3.resultObject = obj, _this3.saxParser.ended = !0, _this3.emit("end", _this3.resultObject)); }), _this4 = this, ontext = function (text) { var charChild, s; if (s = stack[stack.length - 1])
                return s[charkey] += text, _this4.options.explicitChildren && _this4.options.preserveChildrenOrder && _this4.options.charsAsChildren && (_this4.options.includeWhiteChars || "" !== text.replace(/\\n/g, "").trim()) && (s[_this4.options.childkey] = s[_this4.options.childkey] || [], (charChild = { "#name": "__text__" })[charkey] = text, _this4.options.normalize && (charChild[charkey] = charChild[charkey].replace(/\s{2,}/g, " ").trim()), s[_this4.options.childkey].push(charChild)), s; }, this.saxParser.ontext = ontext, this.saxParser.oncdata = function (text) { var s; if (s = ontext(text))
                return s.cdata = !0; }; }, Parser.prototype.parseString = function (str, cb) { null != cb && "function" == typeof cb && (this.on("end", function (result) { return this.reset(), cb(null, result); }), this.on("error", function (err) { return this.reset(), cb(err); })); try {
                if (str = str.toString(), "" === str.trim())
                    return this.emit("end", null), !0;
                if (str = bom.stripBOM(str), this.options.async)
                    return this.remaining = str, setImmediate1(this.processAsync), this.saxParser;
                return this.saxParser.write(str).close();
            }
            catch (error1) {
                if (!(this.saxParser.errThrown || this.saxParser.ended))
                    return this.emit("error", error1), this.saxParser.errThrown = !0;
                if (this.saxParser.ended)
                    throw error1;
            } }, Parser.prototype.parseStringPromise = function (str) { var _this; return new Promise((_this = this, function (resolve, reject) { return _this.parseString(str, function (err, value) { return err ? reject(err) : resolve(value); }); })); }, Parser; }(events), exports.parseString = function (str, a, b) { var cb, options1; return null != b ? ("function" == typeof b && (cb = b), "object" == typeof a && (options1 = a)) : ("function" == typeof a && (cb = a), options1 = {}), new exports.Parser(options1).parseString(str, cb); }, exports.parseStringPromise = function (str, a) { var options1; return "object" == typeof a && (options1 = a), new exports.Parser(options1).parseStringPromise(str); };
        }).call(this); }, "./node_modules/xml2js/lib/processors.js": function (__unused_webpack_module, exports) { (function () {
            "use strict";
            var prefixMatch;
            prefixMatch = new RegExp(/(?!xmlns)^.*:/), exports.normalize = function (str) { return str.toLowerCase(); }, exports.firstCharLowerCase = function (str) { return str.charAt(0).toLowerCase() + str.slice(1); }, exports.stripPrefix = function (str) { return str.replace(prefixMatch, ""); }, exports.parseNumbers = function (str) { return isNaN(str) || (str = str % 1 == 0 ? parseInt(str, 10) : parseFloat(str)), str; }, exports.parseBooleans = function (str) { return /^(?:true|false)$/i.test(str) && (str = "true" === str.toLowerCase()), str; };
        }).call(this); }, "./node_modules/xml2js/lib/xml2js.js": function (__unused_webpack_module, exports, __webpack_require__) { (function () {
            "use strict";
            var builder, defaults, parser, processors, extend = function (child, parent) { for (var key in parent)
                hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty;
            defaults = __webpack_require__("./node_modules/xml2js/lib/defaults.js"), builder = __webpack_require__("./node_modules/xml2js/lib/builder.js"), parser = __webpack_require__("./node_modules/xml2js/lib/parser.js"), processors = __webpack_require__("./node_modules/xml2js/lib/processors.js"), exports.defaults = defaults.defaults, exports.processors = processors, exports.ValidationError = function (superClass) { function ValidationError(message) { this.message = message; } return extend(ValidationError, superClass), ValidationError; }(Error), exports.Builder = builder.Builder, exports.Parser = parser.Parser, exports.parseString = parser.parseString, exports.parseStringPromise = parser.parseStringPromise;
        }).call(this); }, "./node_modules/xmlbuilder/lib/DocumentPosition.js": function (module1) { (function () { module1.exports = { Disconnected: 1, Preceding: 2, Following: 4, Contains: 8, ContainedBy: 16, ImplementationSpecific: 32 }; }).call(this); }, "./node_modules/xmlbuilder/lib/NodeType.js": function (module1) { (function () { module1.exports = { Element: 1, Attribute: 2, Text: 3, CData: 4, EntityReference: 5, EntityDeclaration: 6, ProcessingInstruction: 7, Comment: 8, Document: 9, DocType: 10, DocumentFragment: 11, NotationDeclaration: 12, Declaration: 201, Raw: 202, AttributeDeclaration: 203, ElementDeclaration: 204, Dummy: 205 }; }).call(this); }, "./node_modules/xmlbuilder/lib/Utility.js": function (module1) { (function () { var isArray, isFunction, isObject, slice = [].slice, hasProp = {}.hasOwnProperty; isFunction = function (val1) { return !!val1 && "[object Function]" === Object.prototype.toString.call(val1); }, isObject = function (val1) { var ref; return !!val1 && ("function" == (ref = typeof val1) || "object" === ref); }, isArray = function (val1) { return isFunction(Array.isArray) ? Array.isArray(val1) : "[object Array]" === Object.prototype.toString.call(val1); }, module1.exports.assign = function () { var i, key, len, source, sources, target; if (target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [], isFunction(Object.assign))
            Object.assign.apply(null, arguments);
        else
            for (i = 0, len = sources.length; i < len; i++)
                if (null != (source = sources[i]))
                    for (key in source)
                        hasProp.call(source, key) && (target[key] = source[key]); return target; }, module1.exports.isFunction = isFunction, module1.exports.isObject = isObject, module1.exports.isArray = isArray, module1.exports.isEmpty = function (val1) { var key; if (isArray(val1))
            return !val1.length; for (key in val1)
            if (hasProp.call(val1, key))
                return !1; return !0; }, module1.exports.isPlainObject = function (val1) { var ctor, proto; return isObject(val1) && (proto = Object.getPrototypeOf(val1)) && (ctor = proto.constructor) && "function" == typeof ctor && ctor instanceof ctor && Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object); }, module1.exports.getValue = function (obj) { return isFunction(obj.valueOf) ? obj.valueOf() : obj; }; }).call(this); }, "./node_modules/xmlbuilder/lib/WriterState.js": function (module1) { (function () { module1.exports = { None: 0, OpenTag: 1, InsideTag: 2, CloseTag: 3 }; }).call(this); }, "./node_modules/xmlbuilder/lib/XMLAttribute.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), module1.exports = function () { function XMLAttribute(parent, name, value) { if (this.parent = parent, this.parent && (this.options = this.parent.options, this.stringify = this.parent.stringify), null == name)
            throw Error("Missing attribute name. " + this.debugInfo(name)); this.name = this.stringify.name(name), this.value = this.stringify.attValue(value), this.type = NodeType.Attribute, this.isId = !1, this.schemaTypeInfo = null; } return Object.defineProperty(XMLAttribute.prototype, "nodeType", { get: function () { return this.type; } }), Object.defineProperty(XMLAttribute.prototype, "ownerElement", { get: function () { return this.parent; } }), Object.defineProperty(XMLAttribute.prototype, "textContent", { get: function () { return this.value; }, set: function (value) { return this.value = value || ""; } }), Object.defineProperty(XMLAttribute.prototype, "namespaceURI", { get: function () { return ""; } }), Object.defineProperty(XMLAttribute.prototype, "prefix", { get: function () { return ""; } }), Object.defineProperty(XMLAttribute.prototype, "localName", { get: function () { return this.name; } }), Object.defineProperty(XMLAttribute.prototype, "specified", { get: function () { return !0; } }), XMLAttribute.prototype.clone = function () { return Object.create(this); }, XMLAttribute.prototype.toString = function (options1) { return this.options.writer.attribute(this, this.options.writer.filterOptions(options1)); }, XMLAttribute.prototype.debugInfo = function (name) { return null == (name = name || this.name) ? "parent: <" + this.parent.name + ">" : "attribute: {" + name + "}, parent: <" + this.parent.name + ">"; }, XMLAttribute.prototype.isEqualNode = function (node) { return node.namespaceURI === this.namespaceURI && node.prefix === this.prefix && node.localName === this.localName && node.value === this.value; }, XMLAttribute; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLCData.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLCData(parent, text) { if (XMLCData.__super__.constructor.call(this, parent), null == text)
            throw Error("Missing CDATA text. " + this.debugInfo()); this.name = "#cdata-section", this.type = NodeType.CData, this.value = this.stringify.cdata(text); } return extend(XMLCData, superClass), XMLCData.prototype.clone = function () { return Object.create(this); }, XMLCData.prototype.toString = function (options1) { return this.options.writer.cdata(this, this.options.writer.filterOptions(options1)); }, XMLCData; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLCharacterData.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLCharacterData.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; module1.exports = function (superClass) { function XMLCharacterData(parent) { XMLCharacterData.__super__.constructor.call(this, parent), this.value = ""; } return extend(XMLCharacterData, superClass), Object.defineProperty(XMLCharacterData.prototype, "data", { get: function () { return this.value; }, set: function (value) { return this.value = value || ""; } }), Object.defineProperty(XMLCharacterData.prototype, "length", { get: function () { return this.value.length; } }), Object.defineProperty(XMLCharacterData.prototype, "textContent", { get: function () { return this.value; }, set: function (value) { return this.value = value || ""; } }), XMLCharacterData.prototype.clone = function () { return Object.create(this); }, XMLCharacterData.prototype.substringData = function (offset, count) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLCharacterData.prototype.appendData = function (arg) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLCharacterData.prototype.insertData = function (offset, arg) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLCharacterData.prototype.deleteData = function (offset, count) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLCharacterData.prototype.replaceData = function (offset, count, arg) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLCharacterData.prototype.isEqualNode = function (node) { return !!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node) && node.data === this.data; }, XMLCharacterData; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLComment.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLComment(parent, text) { if (XMLComment.__super__.constructor.call(this, parent), null == text)
            throw Error("Missing comment text. " + this.debugInfo()); this.name = "#comment", this.type = NodeType.Comment, this.value = this.stringify.comment(text); } return extend(XMLComment, superClass), XMLComment.prototype.clone = function () { return Object.create(this); }, XMLComment.prototype.toString = function (options1) { return this.options.writer.comment(this, this.options.writer.filterOptions(options1)); }, XMLComment; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLCharacterData.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var XMLDOMErrorHandler, XMLDOMStringList; XMLDOMErrorHandler = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js"), XMLDOMStringList = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDOMStringList.js"), module1.exports = function () { function XMLDOMConfiguration() { this.defaultParams = { "canonical-form": !1, "cdata-sections": !1, comments: !1, "datatype-normalization": !1, "element-content-whitespace": !0, entities: !0, "error-handler": new XMLDOMErrorHandler, infoset: !0, "validate-if-schema": !1, namespaces: !0, "namespace-declarations": !0, "normalize-characters": !1, "schema-location": "", "schema-type": "", "split-cdata-sections": !0, validate: !1, "well-formed": !0 }, this.params = Object.create(this.defaultParams); } return Object.defineProperty(XMLDOMConfiguration.prototype, "parameterNames", { get: function () { return new XMLDOMStringList(Object.keys(this.defaultParams)); } }), XMLDOMConfiguration.prototype.getParameter = function (name) { return this.params.hasOwnProperty(name) ? this.params[name] : null; }, XMLDOMConfiguration.prototype.canSetParameter = function (name, value) { return !0; }, XMLDOMConfiguration.prototype.setParameter = function (name, value) { return null != value ? this.params[name] = value : delete this.params[name]; }, XMLDOMConfiguration; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js": function (module1) { (function () { module1.exports = function () { function XMLDOMErrorHandler() { } return XMLDOMErrorHandler.prototype.handleError = function (error) { throw Error(error); }, XMLDOMErrorHandler; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDOMImplementation.js": function (module1) { (function () { module1.exports = function () { function XMLDOMImplementation() { } return XMLDOMImplementation.prototype.hasFeature = function (feature, version) { return !0; }, XMLDOMImplementation.prototype.createDocumentType = function (qualifiedName, publicId, systemId) { throw Error("This DOM method is not implemented."); }, XMLDOMImplementation.prototype.createDocument = function (namespaceURI, qualifiedName, doctype) { throw Error("This DOM method is not implemented."); }, XMLDOMImplementation.prototype.createHTMLDocument = function (title) { throw Error("This DOM method is not implemented."); }, XMLDOMImplementation.prototype.getFeature = function (feature, version) { throw Error("This DOM method is not implemented."); }, XMLDOMImplementation; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDOMStringList.js": function (module1) { (function () { module1.exports = function () { function XMLDOMStringList(arr) { this.arr = arr || []; } return Object.defineProperty(XMLDOMStringList.prototype, "length", { get: function () { return this.arr.length; } }), XMLDOMStringList.prototype.item = function (index) { return this.arr[index] || null; }, XMLDOMStringList.prototype.contains = function (str) { return -1 !== this.arr.indexOf(str); }, XMLDOMStringList; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDTDAttList.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) { if (XMLDTDAttList.__super__.constructor.call(this, parent), null == elementName)
            throw Error("Missing DTD element name. " + this.debugInfo()); if (null == attributeName)
            throw Error("Missing DTD attribute name. " + this.debugInfo(elementName)); if (!attributeType)
            throw Error("Missing DTD attribute type. " + this.debugInfo(elementName)); if (!defaultValueType)
            throw Error("Missing DTD attribute default. " + this.debugInfo(elementName)); if (0 !== defaultValueType.indexOf("#") && (defaultValueType = "#" + defaultValueType), !defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/))
            throw Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. " + this.debugInfo(elementName)); if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/))
            throw Error("Default value only applies to #FIXED or #DEFAULT. " + this.debugInfo(elementName)); this.elementName = this.stringify.name(elementName), this.type = NodeType.AttributeDeclaration, this.attributeName = this.stringify.name(attributeName), this.attributeType = this.stringify.dtdAttType(attributeType), defaultValue && (this.defaultValue = this.stringify.dtdAttDefault(defaultValue)), this.defaultValueType = defaultValueType; } return extend(XMLDTDAttList, superClass), XMLDTDAttList.prototype.toString = function (options1) { return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options1)); }, XMLDTDAttList; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDTDElement.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDTDElement(parent, name, value) { if (XMLDTDElement.__super__.constructor.call(this, parent), null == name)
            throw Error("Missing DTD element name. " + this.debugInfo()); value || (value = "(#PCDATA)"), Array.isArray(value) && (value = "(" + value.join(",") + ")"), this.name = this.stringify.name(name), this.type = NodeType.ElementDeclaration, this.value = this.stringify.dtdElementValue(value); } return extend(XMLDTDElement, superClass), XMLDTDElement.prototype.toString = function (options1) { return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options1)); }, XMLDTDElement; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDTDEntity.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, isObject, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; isObject = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js").isObject, XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDTDEntity(parent, pe, name, value) { if (XMLDTDEntity.__super__.constructor.call(this, parent), null == name)
            throw Error("Missing DTD entity name. " + this.debugInfo(name)); if (null == value)
            throw Error("Missing DTD entity value. " + this.debugInfo(name)); if (this.pe = !!pe, this.name = this.stringify.name(name), this.type = NodeType.EntityDeclaration, isObject(value)) {
            if (!value.pubID && !value.sysID)
                throw Error("Public and/or system identifiers are required for an external entity. " + this.debugInfo(name));
            if (value.pubID && !value.sysID)
                throw Error("System identifier is required for a public external entity. " + this.debugInfo(name));
            if (this.internal = !1, null != value.pubID && (this.pubID = this.stringify.dtdPubID(value.pubID)), null != value.sysID && (this.sysID = this.stringify.dtdSysID(value.sysID)), null != value.nData && (this.nData = this.stringify.dtdNData(value.nData)), this.pe && this.nData)
                throw Error("Notation declaration is not allowed in a parameter entity. " + this.debugInfo(name));
        }
        else
            this.value = this.stringify.dtdEntityValue(value), this.internal = !0; } return extend(XMLDTDEntity, superClass), Object.defineProperty(XMLDTDEntity.prototype, "publicId", { get: function () { return this.pubID; } }), Object.defineProperty(XMLDTDEntity.prototype, "systemId", { get: function () { return this.sysID; } }), Object.defineProperty(XMLDTDEntity.prototype, "notationName", { get: function () { return this.nData || null; } }), Object.defineProperty(XMLDTDEntity.prototype, "inputEncoding", { get: function () { return null; } }), Object.defineProperty(XMLDTDEntity.prototype, "xmlEncoding", { get: function () { return null; } }), Object.defineProperty(XMLDTDEntity.prototype, "xmlVersion", { get: function () { return null; } }), XMLDTDEntity.prototype.toString = function (options1) { return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options1)); }, XMLDTDEntity; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDTDNotation.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDTDNotation(parent, name, value) { if (XMLDTDNotation.__super__.constructor.call(this, parent), null == name)
            throw Error("Missing DTD notation name. " + this.debugInfo(name)); if (!value.pubID && !value.sysID)
            throw Error("Public or system identifiers are required for an external entity. " + this.debugInfo(name)); this.name = this.stringify.name(name), this.type = NodeType.NotationDeclaration, null != value.pubID && (this.pubID = this.stringify.dtdPubID(value.pubID)), null != value.sysID && (this.sysID = this.stringify.dtdSysID(value.sysID)); } return extend(XMLDTDNotation, superClass), Object.defineProperty(XMLDTDNotation.prototype, "publicId", { get: function () { return this.pubID; } }), Object.defineProperty(XMLDTDNotation.prototype, "systemId", { get: function () { return this.sysID; } }), XMLDTDNotation.prototype.toString = function (options1) { return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options1)); }, XMLDTDNotation; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDeclaration.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, isObject, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; isObject = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js").isObject, XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDeclaration(parent, version, encoding, standalone) { var ref; XMLDeclaration.__super__.constructor.call(this, parent), isObject(version) && (version = (ref = version).version, encoding = ref.encoding, standalone = ref.standalone), version || (version = "1.0"), this.type = NodeType.Declaration, this.version = this.stringify.xmlVersion(version), null != encoding && (this.encoding = this.stringify.xmlEncoding(encoding)), null != standalone && (this.standalone = this.stringify.xmlStandalone(standalone)); } return extend(XMLDeclaration, superClass), XMLDeclaration.prototype.toString = function (options1) { return this.options.writer.declaration(this, this.options.writer.filterOptions(options1)); }, XMLDeclaration; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDocType.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLNamedNodeMap, XMLNode, isObject, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; isObject = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js").isObject, XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLDTDAttList = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDAttList.js"), XMLDTDEntity = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDEntity.js"), XMLDTDElement = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDElement.js"), XMLDTDNotation = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDNotation.js"), XMLNamedNodeMap = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js"), module1.exports = function (superClass) { function XMLDocType(parent, pubID, sysID) { var child, i, len, ref, ref1, ref2; if (XMLDocType.__super__.constructor.call(this, parent), this.type = NodeType.DocType, parent.children) {
            for (i = 0, len = (ref = parent.children).length; i < len; i++)
                if ((child = ref[i]).type === NodeType.Element) {
                    this.name = child.name;
                    break;
                }
        } this.documentObject = parent, isObject(pubID) && (pubID = (ref1 = pubID).pubID, sysID = ref1.sysID), null == sysID && (sysID = (ref2 = [pubID, sysID])[0], pubID = ref2[1]), null != pubID && (this.pubID = this.stringify.dtdPubID(pubID)), null != sysID && (this.sysID = this.stringify.dtdSysID(sysID)); } return extend(XMLDocType, superClass), Object.defineProperty(XMLDocType.prototype, "entities", { get: function () { var child, i, len, nodes, ref; for (i = 0, nodes = {}, len = (ref = this.children).length; i < len; i++)
                (child = ref[i]).type !== NodeType.EntityDeclaration || child.pe || (nodes[child.name] = child); return new XMLNamedNodeMap(nodes); } }), Object.defineProperty(XMLDocType.prototype, "notations", { get: function () { var child, i, len, nodes, ref; for (i = 0, nodes = {}, len = (ref = this.children).length; i < len; i++)
                (child = ref[i]).type === NodeType.NotationDeclaration && (nodes[child.name] = child); return new XMLNamedNodeMap(nodes); } }), Object.defineProperty(XMLDocType.prototype, "publicId", { get: function () { return this.pubID; } }), Object.defineProperty(XMLDocType.prototype, "systemId", { get: function () { return this.sysID; } }), Object.defineProperty(XMLDocType.prototype, "internalSubset", { get: function () { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), XMLDocType.prototype.element = function (name, value) { var child; return child = new XMLDTDElement(this, name, value), this.children.push(child), this; }, XMLDocType.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { var child; return child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue), this.children.push(child), this; }, XMLDocType.prototype.entity = function (name, value) { var child; return child = new XMLDTDEntity(this, !1, name, value), this.children.push(child), this; }, XMLDocType.prototype.pEntity = function (name, value) { var child; return child = new XMLDTDEntity(this, !0, name, value), this.children.push(child), this; }, XMLDocType.prototype.notation = function (name, value) { var child; return child = new XMLDTDNotation(this, name, value), this.children.push(child), this; }, XMLDocType.prototype.toString = function (options1) { return this.options.writer.docType(this, this.options.writer.filterOptions(options1)); }, XMLDocType.prototype.ele = function (name, value) { return this.element(name, value); }, XMLDocType.prototype.att = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue); }, XMLDocType.prototype.ent = function (name, value) { return this.entity(name, value); }, XMLDocType.prototype.pent = function (name, value) { return this.pEntity(name, value); }, XMLDocType.prototype.not = function (name, value) { return this.notation(name, value); }, XMLDocType.prototype.up = function () { return this.root() || this.documentObject; }, XMLDocType.prototype.isEqualNode = function (node) { return !!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node) && node.name === this.name && node.publicId === this.publicId && node.systemId === this.systemId; }, XMLDocType; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDocument.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; isPlainObject = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js").isPlainObject, XMLDOMImplementation = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDOMImplementation.js"), XMLDOMConfiguration = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js"), XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLStringifier = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStringifier.js"), XMLStringWriter = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStringWriter.js"), module1.exports = function (superClass) { function XMLDocument(options1) { XMLDocument.__super__.constructor.call(this, null), this.name = "#document", this.type = NodeType.Document, this.documentURI = null, this.domConfig = new XMLDOMConfiguration, options1 || (options1 = {}), options1.writer || (options1.writer = new XMLStringWriter), this.options = options1, this.stringify = new XMLStringifier(options1); } return extend(XMLDocument, superClass), Object.defineProperty(XMLDocument.prototype, "implementation", { value: new XMLDOMImplementation }), Object.defineProperty(XMLDocument.prototype, "doctype", { get: function () { var child, i, len, ref; for (i = 0, len = (ref = this.children).length; i < len; i++)
                if ((child = ref[i]).type === NodeType.DocType)
                    return child; return null; } }), Object.defineProperty(XMLDocument.prototype, "documentElement", { get: function () { return this.rootObject || null; } }), Object.defineProperty(XMLDocument.prototype, "inputEncoding", { get: function () { return null; } }), Object.defineProperty(XMLDocument.prototype, "strictErrorChecking", { get: function () { return !1; } }), Object.defineProperty(XMLDocument.prototype, "xmlEncoding", { get: function () { return 0 !== this.children.length && this.children[0].type === NodeType.Declaration ? this.children[0].encoding : null; } }), Object.defineProperty(XMLDocument.prototype, "xmlStandalone", { get: function () { return 0 !== this.children.length && this.children[0].type === NodeType.Declaration && "yes" === this.children[0].standalone; } }), Object.defineProperty(XMLDocument.prototype, "xmlVersion", { get: function () { return 0 !== this.children.length && this.children[0].type === NodeType.Declaration ? this.children[0].version : "1.0"; } }), Object.defineProperty(XMLDocument.prototype, "URL", { get: function () { return this.documentURI; } }), Object.defineProperty(XMLDocument.prototype, "origin", { get: function () { return null; } }), Object.defineProperty(XMLDocument.prototype, "compatMode", { get: function () { return null; } }), Object.defineProperty(XMLDocument.prototype, "characterSet", { get: function () { return null; } }), Object.defineProperty(XMLDocument.prototype, "contentType", { get: function () { return null; } }), XMLDocument.prototype.end = function (writer) { var writerOptions; return writerOptions = {}, writer ? isPlainObject(writer) && (writerOptions = writer, writer = this.options.writer) : writer = this.options.writer, writer.document(this, writer.filterOptions(writerOptions)); }, XMLDocument.prototype.toString = function (options1) { return this.options.writer.document(this, this.options.writer.filterOptions(options1)); }, XMLDocument.prototype.createElement = function (tagName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createDocumentFragment = function () { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createTextNode = function (data1) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createComment = function (data1) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createCDATASection = function (data1) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createProcessingInstruction = function (target, data1) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createAttribute = function (name) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createEntityReference = function (name) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.getElementsByTagName = function (tagname) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.importNode = function (importedNode, deep) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createElementNS = function (namespaceURI, qualifiedName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createAttributeNS = function (namespaceURI, qualifiedName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.getElementsByTagNameNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.getElementById = function (elementId) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.adoptNode = function (source) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.normalizeDocument = function () { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.renameNode = function (node, namespaceURI, qualifiedName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.getElementsByClassName = function (classNames) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createEvent = function (eventInterface) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createRange = function () { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createNodeIterator = function (root, whatToShow, filter) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument.prototype.createTreeWalker = function (root, whatToShow, filter) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLDocument; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDocumentCB.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref, hasProp = {}.hasOwnProperty; isObject = (ref = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js")).isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue, NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLDocument = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocument.js"), XMLElement = __webpack_require__("./node_modules/xmlbuilder/lib/XMLElement.js"), XMLCData = __webpack_require__("./node_modules/xmlbuilder/lib/XMLCData.js"), XMLComment = __webpack_require__("./node_modules/xmlbuilder/lib/XMLComment.js"), XMLRaw = __webpack_require__("./node_modules/xmlbuilder/lib/XMLRaw.js"), XMLText = __webpack_require__("./node_modules/xmlbuilder/lib/XMLText.js"), XMLProcessingInstruction = __webpack_require__("./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js"), XMLDeclaration = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDeclaration.js"), XMLDocType = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocType.js"), XMLDTDAttList = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDAttList.js"), XMLDTDEntity = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDEntity.js"), XMLDTDElement = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDElement.js"), XMLDTDNotation = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDNotation.js"), XMLAttribute = __webpack_require__("./node_modules/xmlbuilder/lib/XMLAttribute.js"), XMLStringifier = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStringifier.js"), XMLStringWriter = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStringWriter.js"), WriterState = __webpack_require__("./node_modules/xmlbuilder/lib/WriterState.js"), module1.exports = function () { function XMLDocumentCB(options1, onData, onEnd) { var writerOptions; this.name = "?xml", this.type = NodeType.Document, options1 || (options1 = {}), writerOptions = {}, options1.writer ? isPlainObject(options1.writer) && (writerOptions = options1.writer, options1.writer = new XMLStringWriter) : options1.writer = new XMLStringWriter, this.options = options1, this.writer = options1.writer, this.writerOptions = this.writer.filterOptions(writerOptions), this.stringify = new XMLStringifier(options1), this.onDataCallback = onData || function () { }, this.onEndCallback = onEnd || function () { }, this.currentNode = null, this.currentLevel = -1, this.openTags = {}, this.documentStarted = !1, this.documentCompleted = !1, this.root = null; } return XMLDocumentCB.prototype.createChildNode = function (node) { var att, attName, attributes, child, i, len, ref1, ref2; switch (node.type) {
            case NodeType.CData:
                this.cdata(node.value);
                break;
            case NodeType.Comment:
                this.comment(node.value);
                break;
            case NodeType.Element:
                for (attName in attributes = {}, ref1 = node.attribs)
                    hasProp.call(ref1, attName) && (att = ref1[attName], attributes[attName] = att.value);
                this.node(node.name, attributes);
                break;
            case NodeType.Dummy:
                this.dummy();
                break;
            case NodeType.Raw:
                this.raw(node.value);
                break;
            case NodeType.Text:
                this.text(node.value);
                break;
            case NodeType.ProcessingInstruction:
                this.instruction(node.target, node.value);
                break;
            default: throw Error("This XML node type is not supported in a JS object: " + node.constructor.name);
        } for (i = 0, len = (ref2 = node.children).length; i < len; i++)
            child = ref2[i], this.createChildNode(child), child.type === NodeType.Element && this.up(); return this; }, XMLDocumentCB.prototype.dummy = function () { return this; }, XMLDocumentCB.prototype.node = function (name, attributes, text) { var ref1; if (null == name)
            throw Error("Missing node name."); if (this.root && -1 === this.currentLevel)
            throw Error("Document can only have one root node. " + this.debugInfo(name)); return this.openCurrent(), name = getValue(name), null == attributes && (attributes = {}), isObject(attributes = getValue(attributes)) || (text = (ref1 = [attributes, text])[0], attributes = ref1[1]), this.currentNode = new XMLElement(this, name, attributes), this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, null != text && this.text(text), this; }, XMLDocumentCB.prototype.element = function (name, attributes, text) { var child, i, len, oldValidationFlag, ref1, root; if (this.currentNode && this.currentNode.type === NodeType.DocType)
            this.dtdElement.apply(this, arguments);
        else if (Array.isArray(name) || isObject(name) || isFunction(name))
            for (oldValidationFlag = this.options.noValidation, this.options.noValidation = !0, (root = new XMLDocument(this.options).element("TEMP_ROOT")).element(name), this.options.noValidation = oldValidationFlag, i = 0, len = (ref1 = root.children).length; i < len; i++)
                child = ref1[i], this.createChildNode(child), child.type === NodeType.Element && this.up();
        else
            this.node(name, attributes, text); return this; }, XMLDocumentCB.prototype.attribute = function (name, value) { var attName, attValue; if (!this.currentNode || this.currentNode.children)
            throw Error("att() can only be used immediately after an ele() call in callback mode. " + this.debugInfo(name)); if (null != name && (name = getValue(name)), isObject(name))
            for (attName in name)
                hasProp.call(name, attName) && (attValue = name[attName], this.attribute(attName, attValue));
        else
            isFunction(value) && (value = value.apply()), this.options.keepNullAttributes && null == value ? this.currentNode.attribs[name] = new XMLAttribute(this, name, "") : null != value && (this.currentNode.attribs[name] = new XMLAttribute(this, name, value)); return this; }, XMLDocumentCB.prototype.text = function (value) { var node; return this.openCurrent(), node = new XMLText(this, value), this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.cdata = function (value) { var node; return this.openCurrent(), node = new XMLCData(this, value), this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.comment = function (value) { var node; return this.openCurrent(), node = new XMLComment(this, value), this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.raw = function (value) { var node; return this.openCurrent(), node = new XMLRaw(this, value), this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.instruction = function (target, value) { var i, insTarget, insValue, len, node; if (this.openCurrent(), null != target && (target = getValue(target)), null != value && (value = getValue(value)), Array.isArray(target))
            for (i = 0, len = target.length; i < len; i++)
                insTarget = target[i], this.instruction(insTarget);
        else if (isObject(target))
            for (insTarget in target)
                hasProp.call(target, insTarget) && (insValue = target[insTarget], this.instruction(insTarget, insValue));
        else
            isFunction(value) && (value = value.apply()), node = new XMLProcessingInstruction(this, target, value), this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1); return this; }, XMLDocumentCB.prototype.declaration = function (version, encoding, standalone) { var node; if (this.openCurrent(), this.documentStarted)
            throw Error("declaration() must be the first node."); return node = new XMLDeclaration(this, version, encoding, standalone), this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.doctype = function (root, pubID, sysID) { if (this.openCurrent(), null == root)
            throw Error("Missing root node name."); if (this.root)
            throw Error("dtd() must come before the root node."); return this.currentNode = new XMLDocType(this, pubID, sysID), this.currentNode.rootNodeName = root, this.currentNode.children = !1, this.currentLevel++, this.openTags[this.currentLevel] = this.currentNode, this; }, XMLDocumentCB.prototype.dtdElement = function (name, value) { var node; return this.openCurrent(), node = new XMLDTDElement(this, name, value), this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.attList = function (elementName, attributeName, attributeType, defaultValueType, defaultValue) { var node; return this.openCurrent(), node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue), this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.entity = function (name, value) { var node; return this.openCurrent(), node = new XMLDTDEntity(this, !1, name, value), this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.pEntity = function (name, value) { var node; return this.openCurrent(), node = new XMLDTDEntity(this, !0, name, value), this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.notation = function (name, value) { var node; return this.openCurrent(), node = new XMLDTDNotation(this, name, value), this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1), this; }, XMLDocumentCB.prototype.up = function () { if (this.currentLevel < 0)
            throw Error("The document node has no parent."); return this.currentNode ? (this.currentNode.children ? this.closeNode(this.currentNode) : this.openNode(this.currentNode), this.currentNode = null) : this.closeNode(this.openTags[this.currentLevel]), delete this.openTags[this.currentLevel], this.currentLevel--, this; }, XMLDocumentCB.prototype.end = function () { for (; this.currentLevel >= 0;)
            this.up(); return this.onEnd(); }, XMLDocumentCB.prototype.openCurrent = function () { if (this.currentNode)
            return this.currentNode.children = !0, this.openNode(this.currentNode); }, XMLDocumentCB.prototype.openNode = function (node) { var att, chunk, name, ref1; if (!node.isOpen) {
            if (this.root || 0 !== this.currentLevel || node.type !== NodeType.Element || (this.root = node), chunk = "", node.type === NodeType.Element) {
                for (name in this.writerOptions.state = WriterState.OpenTag, chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + "<" + node.name, ref1 = node.attribs)
                    hasProp.call(ref1, name) && (att = ref1[name], chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel));
                chunk += (node.children ? ">" : "/>") + this.writer.endline(node, this.writerOptions, this.currentLevel), this.writerOptions.state = WriterState.InsideTag;
            }
            else
                this.writerOptions.state = WriterState.OpenTag, chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + "<!DOCTYPE " + node.rootNodeName, node.pubID && node.sysID ? chunk += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"' : node.sysID && (chunk += ' SYSTEM "' + node.sysID + '"'), node.children ? (chunk += " [", this.writerOptions.state = WriterState.InsideTag) : (this.writerOptions.state = WriterState.CloseTag, chunk += ">"), chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);
            return this.onData(chunk, this.currentLevel), node.isOpen = !0;
        } }, XMLDocumentCB.prototype.closeNode = function (node) { var chunk; if (!node.isClosed)
            return chunk = "", this.writerOptions.state = WriterState.CloseTag, chunk = node.type === NodeType.Element ? this.writer.indent(node, this.writerOptions, this.currentLevel) + "</" + node.name + ">" + this.writer.endline(node, this.writerOptions, this.currentLevel) : this.writer.indent(node, this.writerOptions, this.currentLevel) + "]>" + this.writer.endline(node, this.writerOptions, this.currentLevel), this.writerOptions.state = WriterState.None, this.onData(chunk, this.currentLevel), node.isClosed = !0; }, XMLDocumentCB.prototype.onData = function (chunk, level) { return this.documentStarted = !0, this.onDataCallback(chunk, level + 1); }, XMLDocumentCB.prototype.onEnd = function () { return this.documentCompleted = !0, this.onEndCallback(); }, XMLDocumentCB.prototype.debugInfo = function (name) { return null == name ? "" : "node: <" + name + ">"; }, XMLDocumentCB.prototype.ele = function () { return this.element.apply(this, arguments); }, XMLDocumentCB.prototype.nod = function (name, attributes, text) { return this.node(name, attributes, text); }, XMLDocumentCB.prototype.txt = function (value) { return this.text(value); }, XMLDocumentCB.prototype.dat = function (value) { return this.cdata(value); }, XMLDocumentCB.prototype.com = function (value) { return this.comment(value); }, XMLDocumentCB.prototype.ins = function (target, value) { return this.instruction(target, value); }, XMLDocumentCB.prototype.dec = function (version, encoding, standalone) { return this.declaration(version, encoding, standalone); }, XMLDocumentCB.prototype.dtd = function (root, pubID, sysID) { return this.doctype(root, pubID, sysID); }, XMLDocumentCB.prototype.e = function (name, attributes, text) { return this.element(name, attributes, text); }, XMLDocumentCB.prototype.n = function (name, attributes, text) { return this.node(name, attributes, text); }, XMLDocumentCB.prototype.t = function (value) { return this.text(value); }, XMLDocumentCB.prototype.d = function (value) { return this.cdata(value); }, XMLDocumentCB.prototype.c = function (value) { return this.comment(value); }, XMLDocumentCB.prototype.r = function (value) { return this.raw(value); }, XMLDocumentCB.prototype.i = function (target, value) { return this.instruction(target, value); }, XMLDocumentCB.prototype.att = function () { return this.currentNode && this.currentNode.type === NodeType.DocType ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments); }, XMLDocumentCB.prototype.a = function () { return this.currentNode && this.currentNode.type === NodeType.DocType ? this.attList.apply(this, arguments) : this.attribute.apply(this, arguments); }, XMLDocumentCB.prototype.ent = function (name, value) { return this.entity(name, value); }, XMLDocumentCB.prototype.pent = function (name, value) { return this.pEntity(name, value); }, XMLDocumentCB.prototype.not = function (name, value) { return this.notation(name, value); }, XMLDocumentCB; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLDummy.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLNode, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLDummy(parent) { XMLDummy.__super__.constructor.call(this, parent), this.type = NodeType.Dummy; } return extend(XMLDummy, superClass), XMLDummy.prototype.clone = function () { return Object.create(this); }, XMLDummy.prototype.toString = function (options1) { return ""; }, XMLDummy; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLElement.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, XMLAttribute, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; isObject = (ref = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js")).isObject, isFunction = ref.isFunction, getValue = ref.getValue, XMLNode = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLAttribute = __webpack_require__("./node_modules/xmlbuilder/lib/XMLAttribute.js"), XMLNamedNodeMap = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js"), module1.exports = function (superClass) { function XMLElement(parent, name, attributes) { var child, j, len, ref1; if (XMLElement.__super__.constructor.call(this, parent), null == name)
            throw Error("Missing element name. " + this.debugInfo()); if (this.name = this.stringify.name(name), this.type = NodeType.Element, this.attribs = {}, this.schemaTypeInfo = null, null != attributes && this.attribute(attributes), parent.type === NodeType.Document && (this.isRoot = !0, this.documentObject = parent, parent.rootObject = this, parent.children)) {
            for (j = 0, len = (ref1 = parent.children).length; j < len; j++)
                if ((child = ref1[j]).type === NodeType.DocType) {
                    child.name = this.name;
                    break;
                }
        } } return extend(XMLElement, superClass), Object.defineProperty(XMLElement.prototype, "tagName", { get: function () { return this.name; } }), Object.defineProperty(XMLElement.prototype, "namespaceURI", { get: function () { return ""; } }), Object.defineProperty(XMLElement.prototype, "prefix", { get: function () { return ""; } }), Object.defineProperty(XMLElement.prototype, "localName", { get: function () { return this.name; } }), Object.defineProperty(XMLElement.prototype, "id", { get: function () { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), Object.defineProperty(XMLElement.prototype, "className", { get: function () { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), Object.defineProperty(XMLElement.prototype, "classList", { get: function () { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), Object.defineProperty(XMLElement.prototype, "attributes", { get: function () { return this.attributeMap && this.attributeMap.nodes || (this.attributeMap = new XMLNamedNodeMap(this.attribs)), this.attributeMap; } }), XMLElement.prototype.clone = function () { var att, attName, clonedSelf, ref1; for (attName in (clonedSelf = Object.create(this)).isRoot && (clonedSelf.documentObject = null), clonedSelf.attribs = {}, ref1 = this.attribs)
            hasProp.call(ref1, attName) && (att = ref1[attName], clonedSelf.attribs[attName] = att.clone()); return clonedSelf.children = [], this.children.forEach(function (child) { var clonedChild; return (clonedChild = child.clone()).parent = clonedSelf, clonedSelf.children.push(clonedChild); }), clonedSelf; }, XMLElement.prototype.attribute = function (name, value) { var attName, attValue; if (null != name && (name = getValue(name)), isObject(name))
            for (attName in name)
                hasProp.call(name, attName) && (attValue = name[attName], this.attribute(attName, attValue));
        else
            isFunction(value) && (value = value.apply()), this.options.keepNullAttributes && null == value ? this.attribs[name] = new XMLAttribute(this, name, "") : null != value && (this.attribs[name] = new XMLAttribute(this, name, value)); return this; }, XMLElement.prototype.removeAttribute = function (name) { var attName, j, len; if (null == name)
            throw Error("Missing attribute name. " + this.debugInfo()); if (Array.isArray(name = getValue(name)))
            for (j = 0, len = name.length; j < len; j++)
                attName = name[j], delete this.attribs[attName];
        else
            delete this.attribs[name]; return this; }, XMLElement.prototype.toString = function (options1) { return this.options.writer.element(this, this.options.writer.filterOptions(options1)); }, XMLElement.prototype.att = function (name, value) { return this.attribute(name, value); }, XMLElement.prototype.a = function (name, value) { return this.attribute(name, value); }, XMLElement.prototype.getAttribute = function (name) { return this.attribs.hasOwnProperty(name) ? this.attribs[name].value : null; }, XMLElement.prototype.setAttribute = function (name, value) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getAttributeNode = function (name) { return this.attribs.hasOwnProperty(name) ? this.attribs[name] : null; }, XMLElement.prototype.setAttributeNode = function (newAttr) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.removeAttributeNode = function (oldAttr) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getElementsByTagName = function (name) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getAttributeNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.setAttributeNS = function (namespaceURI, qualifiedName, value) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.removeAttributeNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getAttributeNodeNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.setAttributeNodeNS = function (newAttr) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getElementsByTagNameNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.hasAttribute = function (name) { return this.attribs.hasOwnProperty(name); }, XMLElement.prototype.hasAttributeNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.setIdAttribute = function (name, isId) { return this.attribs.hasOwnProperty(name) ? this.attribs[name].isId : isId; }, XMLElement.prototype.setIdAttributeNS = function (namespaceURI, localName, isId) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.setIdAttributeNode = function (idAttr, isId) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getElementsByTagName = function (tagname) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getElementsByTagNameNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.getElementsByClassName = function (classNames) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLElement.prototype.isEqualNode = function (node) { var i, j, ref1; if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node) || node.namespaceURI !== this.namespaceURI || node.prefix !== this.prefix || node.localName !== this.localName || node.attribs.length !== this.attribs.length)
            return !1; for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j)
            if (!this.attribs[i].isEqualNode(node.attribs[i]))
                return !1; return !0; }, XMLElement; }(XMLNode); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js": function (module1) { (function () { module1.exports = function () { function XMLNamedNodeMap(nodes) { this.nodes = nodes; } return Object.defineProperty(XMLNamedNodeMap.prototype, "length", { get: function () { return Object.keys(this.nodes).length || 0; } }), XMLNamedNodeMap.prototype.clone = function () { return this.nodes = null; }, XMLNamedNodeMap.prototype.getNamedItem = function (name) { return this.nodes[name]; }, XMLNamedNodeMap.prototype.setNamedItem = function (node) { var oldNode; return oldNode = this.nodes[node.nodeName], this.nodes[node.nodeName] = node, oldNode || null; }, XMLNamedNodeMap.prototype.removeNamedItem = function (name) { var oldNode; return oldNode = this.nodes[name], delete this.nodes[name], oldNode || null; }, XMLNamedNodeMap.prototype.item = function (index) { return this.nodes[Object.keys(this.nodes)[index]] || null; }, XMLNamedNodeMap.prototype.getNamedItemNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented."); }, XMLNamedNodeMap.prototype.setNamedItemNS = function (node) { throw Error("This DOM method is not implemented."); }, XMLNamedNodeMap.prototype.removeNamedItemNS = function (namespaceURI, localName) { throw Error("This DOM method is not implemented."); }, XMLNamedNodeMap; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLNode.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1, hasProp = {}.hasOwnProperty; isObject = (ref1 = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js")).isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue, XMLElement = null, XMLCData = null, XMLComment = null, XMLDeclaration = null, XMLDocType = null, XMLRaw = null, XMLText = null, XMLProcessingInstruction = null, XMLDummy = null, NodeType = null, XMLNodeList = null, DocumentPosition = null, module1.exports = function () { function XMLNode(parent1) { this.parent = parent1, this.parent && (this.options = this.parent.options, this.stringify = this.parent.stringify), this.value = null, this.children = [], this.baseURI = null, XMLElement || (XMLElement = __webpack_require__("./node_modules/xmlbuilder/lib/XMLElement.js"), XMLCData = __webpack_require__("./node_modules/xmlbuilder/lib/XMLCData.js"), XMLComment = __webpack_require__("./node_modules/xmlbuilder/lib/XMLComment.js"), XMLDeclaration = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDeclaration.js"), XMLDocType = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocType.js"), XMLRaw = __webpack_require__("./node_modules/xmlbuilder/lib/XMLRaw.js"), XMLText = __webpack_require__("./node_modules/xmlbuilder/lib/XMLText.js"), XMLProcessingInstruction = __webpack_require__("./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js"), XMLDummy = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDummy.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLNodeList = __webpack_require__("./node_modules/xmlbuilder/lib/XMLNodeList.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js"), DocumentPosition = __webpack_require__("./node_modules/xmlbuilder/lib/DocumentPosition.js")); } return Object.defineProperty(XMLNode.prototype, "nodeName", { get: function () { return this.name; } }), Object.defineProperty(XMLNode.prototype, "nodeType", { get: function () { return this.type; } }), Object.defineProperty(XMLNode.prototype, "nodeValue", { get: function () { return this.value; } }), Object.defineProperty(XMLNode.prototype, "parentNode", { get: function () { return this.parent; } }), Object.defineProperty(XMLNode.prototype, "childNodes", { get: function () { return this.childNodeList && this.childNodeList.nodes || (this.childNodeList = new XMLNodeList(this.children)), this.childNodeList; } }), Object.defineProperty(XMLNode.prototype, "firstChild", { get: function () { return this.children[0] || null; } }), Object.defineProperty(XMLNode.prototype, "lastChild", { get: function () { return this.children[this.children.length - 1] || null; } }), Object.defineProperty(XMLNode.prototype, "previousSibling", { get: function () { var i; return i = this.parent.children.indexOf(this), this.parent.children[i - 1] || null; } }), Object.defineProperty(XMLNode.prototype, "nextSibling", { get: function () { var i; return i = this.parent.children.indexOf(this), this.parent.children[i + 1] || null; } }), Object.defineProperty(XMLNode.prototype, "ownerDocument", { get: function () { return this.document() || null; } }), Object.defineProperty(XMLNode.prototype, "textContent", { get: function () { var child, j, len, ref2, str; if (this.nodeType !== NodeType.Element && this.nodeType !== NodeType.DocumentFragment)
                return null; for (j = 0, str = "", len = (ref2 = this.children).length; j < len; j++)
                (child = ref2[j]).textContent && (str += child.textContent); return str; }, set: function (value) { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), XMLNode.prototype.setParent = function (parent) { var child, j, len, ref2, results; for (this.parent = parent, parent && (this.options = parent.options, this.stringify = parent.stringify), ref2 = this.children, results = [], j = 0, len = ref2.length; j < len; j++)
            child = ref2[j], results.push(child.setParent(this)); return results; }, XMLNode.prototype.element = function (name, attributes, text) { var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val1; if (lastChild = null, null === attributes && null == text && (attributes = (ref2 = [{}, null])[0], text = ref2[1]), null == attributes && (attributes = {}), isObject(attributes = getValue(attributes)) || (text = (ref3 = [attributes, text])[0], attributes = ref3[1]), null != name && (name = getValue(name)), Array.isArray(name))
            for (j = 0, len = name.length; j < len; j++)
                item = name[j], lastChild = this.element(item);
        else if (isFunction(name))
            lastChild = this.element(name.apply());
        else if (isObject(name)) {
            for (key in name)
                if (hasProp.call(name, key))
                    if (isFunction(val1 = name[key]) && (val1 = val1.apply()), !this.options.ignoreDecorators && this.stringify.convertAttKey && 0 === key.indexOf(this.stringify.convertAttKey))
                        lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val1);
                    else if (!this.options.separateArrayItems && Array.isArray(val1) && isEmpty(val1))
                        lastChild = this.dummy();
                    else if (isObject(val1) && isEmpty(val1))
                        lastChild = this.element(key);
                    else if (this.options.keepNullNodes || null != val1)
                        if (!this.options.separateArrayItems && Array.isArray(val1))
                            for (k = 0, len1 = val1.length; k < len1; k++)
                                item = val1[k], (childNode = {})[key] = item, lastChild = this.element(childNode);
                        else
                            isObject(val1) ? !this.options.ignoreDecorators && this.stringify.convertTextKey && 0 === key.indexOf(this.stringify.convertTextKey) ? lastChild = this.element(val1) : (lastChild = this.element(key)).element(val1) : lastChild = this.element(key, val1);
                    else
                        lastChild = this.dummy();
        }
        else
            lastChild = this.options.keepNullNodes || null !== text ? !this.options.ignoreDecorators && this.stringify.convertTextKey && 0 === name.indexOf(this.stringify.convertTextKey) ? this.text(text) : !this.options.ignoreDecorators && this.stringify.convertCDataKey && 0 === name.indexOf(this.stringify.convertCDataKey) ? this.cdata(text) : !this.options.ignoreDecorators && this.stringify.convertCommentKey && 0 === name.indexOf(this.stringify.convertCommentKey) ? this.comment(text) : !this.options.ignoreDecorators && this.stringify.convertRawKey && 0 === name.indexOf(this.stringify.convertRawKey) ? this.raw(text) : !this.options.ignoreDecorators && this.stringify.convertPIKey && 0 === name.indexOf(this.stringify.convertPIKey) ? this.instruction(name.substr(this.stringify.convertPIKey.length), text) : this.node(name, attributes, text) : this.dummy(); if (null == lastChild)
            throw Error("Could not create any elements with: " + name + ". " + this.debugInfo()); return lastChild; }, XMLNode.prototype.insertBefore = function (name, attributes, text) { var child, i, removed; if (null != name ? name.type : void 0)
            return name.setParent(this), attributes ? (i = children.indexOf(attributes), removed = children.splice(i), children.push(name), Array.prototype.push.apply(children, removed)) : children.push(name), name; if (this.isRoot)
            throw Error("Cannot insert elements at root level. " + this.debugInfo(name)); return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i), child = this.parent.element(name, attributes, text), Array.prototype.push.apply(this.parent.children, removed), child; }, XMLNode.prototype.insertAfter = function (name, attributes, text) { var child, i, removed; if (this.isRoot)
            throw Error("Cannot insert elements at root level. " + this.debugInfo(name)); return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i + 1), child = this.parent.element(name, attributes, text), Array.prototype.push.apply(this.parent.children, removed), child; }, XMLNode.prototype.remove = function () { var i; if (this.isRoot)
            throw Error("Cannot remove the root element. " + this.debugInfo()); return i = this.parent.children.indexOf(this), [].splice.apply(this.parent.children, [i, i - i + 1].concat([])), this.parent; }, XMLNode.prototype.node = function (name, attributes, text) { var child, ref2; return null != name && (name = getValue(name)), attributes || (attributes = {}), isObject(attributes = getValue(attributes)) || (text = (ref2 = [attributes, text])[0], attributes = ref2[1]), child = new XMLElement(this, name, attributes), null != text && child.text(text), this.children.push(child), child; }, XMLNode.prototype.text = function (value) { var child; return isObject(value) && this.element(value), child = new XMLText(this, value), this.children.push(child), this; }, XMLNode.prototype.cdata = function (value) { var child; return child = new XMLCData(this, value), this.children.push(child), this; }, XMLNode.prototype.comment = function (value) { var child; return child = new XMLComment(this, value), this.children.push(child), this; }, XMLNode.prototype.commentBefore = function (value) { var i, removed; return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i), this.parent.comment(value), Array.prototype.push.apply(this.parent.children, removed), this; }, XMLNode.prototype.commentAfter = function (value) { var i, removed; return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i + 1), this.parent.comment(value), Array.prototype.push.apply(this.parent.children, removed), this; }, XMLNode.prototype.raw = function (value) { var child; return child = new XMLRaw(this, value), this.children.push(child), this; }, XMLNode.prototype.dummy = function () { return new XMLDummy(this); }, XMLNode.prototype.instruction = function (target, value) { var insTarget, insValue, instruction, j, len; if (null != target && (target = getValue(target)), null != value && (value = getValue(value)), Array.isArray(target))
            for (j = 0, len = target.length; j < len; j++)
                insTarget = target[j], this.instruction(insTarget);
        else if (isObject(target))
            for (insTarget in target)
                hasProp.call(target, insTarget) && (insValue = target[insTarget], this.instruction(insTarget, insValue));
        else
            isFunction(value) && (value = value.apply()), instruction = new XMLProcessingInstruction(this, target, value), this.children.push(instruction); return this; }, XMLNode.prototype.instructionBefore = function (target, value) { var i, removed; return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i), this.parent.instruction(target, value), Array.prototype.push.apply(this.parent.children, removed), this; }, XMLNode.prototype.instructionAfter = function (target, value) { var i, removed; return i = this.parent.children.indexOf(this), removed = this.parent.children.splice(i + 1), this.parent.instruction(target, value), Array.prototype.push.apply(this.parent.children, removed), this; }, XMLNode.prototype.declaration = function (version, encoding, standalone) { var doc, xmldec; return doc = this.document(), xmldec = new XMLDeclaration(doc, version, encoding, standalone), 0 === doc.children.length ? doc.children.unshift(xmldec) : doc.children[0].type === NodeType.Declaration ? doc.children[0] = xmldec : doc.children.unshift(xmldec), doc.root() || doc; }, XMLNode.prototype.dtd = function (pubID, sysID) { var child, doc, doctype, i, j, k, len, len1, ref2, ref3; for (doc = this.document(), doctype = new XMLDocType(doc, pubID, sysID), ref2 = doc.children, i = j = 0, len = ref2.length; j < len; i = ++j)
            if (ref2[i].type === NodeType.DocType)
                return doc.children[i] = doctype, doctype; for (ref3 = doc.children, i = k = 0, len1 = ref3.length; k < len1; i = ++k)
            if (ref3[i].isRoot)
                return doc.children.splice(i, 0, doctype), doctype; return doc.children.push(doctype), doctype; }, XMLNode.prototype.up = function () { if (this.isRoot)
            throw Error("The root node has no parent. Use doc() if you need to get the document object."); return this.parent; }, XMLNode.prototype.root = function () { var node; for (node = this; node;)
            if (node.type === NodeType.Document)
                return node.rootObject;
            else {
                if (node.isRoot)
                    return node;
                node = node.parent;
            } }, XMLNode.prototype.document = function () { var node; for (node = this; node;)
            if (node.type === NodeType.Document)
                return node;
            else
                node = node.parent; }, XMLNode.prototype.end = function (options1) { return this.document().end(options1); }, XMLNode.prototype.prev = function () { var i; if ((i = this.parent.children.indexOf(this)) < 1)
            throw Error("Already at the first node. " + this.debugInfo()); return this.parent.children[i - 1]; }, XMLNode.prototype.next = function () { var i; if (-1 === (i = this.parent.children.indexOf(this)) || i === this.parent.children.length - 1)
            throw Error("Already at the last node. " + this.debugInfo()); return this.parent.children[i + 1]; }, XMLNode.prototype.importDocument = function (doc) { var clonedRoot; return (clonedRoot = doc.root().clone()).parent = this, clonedRoot.isRoot = !1, this.children.push(clonedRoot), this; }, XMLNode.prototype.debugInfo = function (name) { var ref2, ref3; return null != (name = name || this.name) || (null != (ref2 = this.parent) ? ref2.name : void 0) ? null == name ? "parent: <" + this.parent.name + ">" : (null != (ref3 = this.parent) ? ref3.name : void 0) ? "node: <" + name + ">, parent: <" + this.parent.name + ">" : "node: <" + name + ">" : ""; }, XMLNode.prototype.ele = function (name, attributes, text) { return this.element(name, attributes, text); }, XMLNode.prototype.nod = function (name, attributes, text) { return this.node(name, attributes, text); }, XMLNode.prototype.txt = function (value) { return this.text(value); }, XMLNode.prototype.dat = function (value) { return this.cdata(value); }, XMLNode.prototype.com = function (value) { return this.comment(value); }, XMLNode.prototype.ins = function (target, value) { return this.instruction(target, value); }, XMLNode.prototype.doc = function () { return this.document(); }, XMLNode.prototype.dec = function (version, encoding, standalone) { return this.declaration(version, encoding, standalone); }, XMLNode.prototype.e = function (name, attributes, text) { return this.element(name, attributes, text); }, XMLNode.prototype.n = function (name, attributes, text) { return this.node(name, attributes, text); }, XMLNode.prototype.t = function (value) { return this.text(value); }, XMLNode.prototype.d = function (value) { return this.cdata(value); }, XMLNode.prototype.c = function (value) { return this.comment(value); }, XMLNode.prototype.r = function (value) { return this.raw(value); }, XMLNode.prototype.i = function (target, value) { return this.instruction(target, value); }, XMLNode.prototype.u = function () { return this.up(); }, XMLNode.prototype.importXMLBuilder = function (doc) { return this.importDocument(doc); }, XMLNode.prototype.replaceChild = function (newChild, oldChild) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.removeChild = function (oldChild) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.appendChild = function (newChild) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.hasChildNodes = function () { return 0 !== this.children.length; }, XMLNode.prototype.cloneNode = function (deep) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.normalize = function () { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.isSupported = function (feature, version) { return !0; }, XMLNode.prototype.hasAttributes = function () { return 0 !== this.attribs.length; }, XMLNode.prototype.compareDocumentPosition = function (other) { var res; if (this === other)
            return 0; if (this.document() !== other.document())
            return res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific, .5 > Math.random() ? res |= DocumentPosition.Preceding : res |= DocumentPosition.Following, res; if (this.isAncestor(other))
            return DocumentPosition.Contains | DocumentPosition.Preceding; if (this.isDescendant(other))
            return DocumentPosition.Contains | DocumentPosition.Following; if (this.isPreceding(other))
            return DocumentPosition.Preceding;
        else
            return DocumentPosition.Following; }, XMLNode.prototype.isSameNode = function (other) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.lookupPrefix = function (namespaceURI) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.isDefaultNamespace = function (namespaceURI) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.lookupNamespaceURI = function (prefix) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.isEqualNode = function (node) { var i, j, ref2; if (node.nodeType !== this.nodeType || node.children.length !== this.children.length)
            return !1; for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j)
            if (!this.children[i].isEqualNode(node.children[i]))
                return !1; return !0; }, XMLNode.prototype.getFeature = function (feature, version) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.setUserData = function (key, data1, handler) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.getUserData = function (key) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLNode.prototype.contains = function (other) { return !!other && (other === this || this.isDescendant(other)); }, XMLNode.prototype.isDescendant = function (node) { var child, j, len, ref2; for (j = 0, len = (ref2 = this.children).length; j < len; j++)
            if (node === (child = ref2[j]) || child.isDescendant(node))
                return !0; return !1; }, XMLNode.prototype.isAncestor = function (node) { return node.isDescendant(this); }, XMLNode.prototype.isPreceding = function (node) { var nodePos, thisPos; return nodePos = this.treePosition(node), thisPos = this.treePosition(this), -1 !== nodePos && -1 !== thisPos && nodePos < thisPos; }, XMLNode.prototype.isFollowing = function (node) { var nodePos, thisPos; return nodePos = this.treePosition(node), thisPos = this.treePosition(this), -1 !== nodePos && -1 !== thisPos && nodePos > thisPos; }, XMLNode.prototype.treePosition = function (node) { var found, pos; return (pos = 0, found = !1, this.foreachTreeNode(this.document(), function (childNode) { if (pos++, !found && childNode === node)
            return found = !0; }), found) ? pos : -1; }, XMLNode.prototype.foreachTreeNode = function (node, func) { var child, j, len, ref2, res; for (node || (node = this.document()), j = 0, len = (ref2 = node.children).length; j < len; j++)
            if ((res = func(child = ref2[j])) || (res = this.foreachTreeNode(child, func)))
                return res; }, XMLNode; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLNodeList.js": function (module1) { (function () { module1.exports = function () { function XMLNodeList(nodes) { this.nodes = nodes; } return Object.defineProperty(XMLNodeList.prototype, "length", { get: function () { return this.nodes.length || 0; } }), XMLNodeList.prototype.clone = function () { return this.nodes = null; }, XMLNodeList.prototype.item = function (index) { return this.nodes[index] || null; }, XMLNodeList; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLProcessingInstruction(parent, target, value) { if (XMLProcessingInstruction.__super__.constructor.call(this, parent), null == target)
            throw Error("Missing instruction target. " + this.debugInfo()); this.type = NodeType.ProcessingInstruction, this.target = this.stringify.insTarget(target), this.name = this.target, value && (this.value = this.stringify.insValue(value)); } return extend(XMLProcessingInstruction, superClass), XMLProcessingInstruction.prototype.clone = function () { return Object.create(this); }, XMLProcessingInstruction.prototype.toString = function (options1) { return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options1)); }, XMLProcessingInstruction.prototype.isEqualNode = function (node) { return !!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node) && node.target === this.target; }, XMLProcessingInstruction; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLCharacterData.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLRaw.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLRaw(parent, text) { if (XMLRaw.__super__.constructor.call(this, parent), null == text)
            throw Error("Missing raw text. " + this.debugInfo()); this.type = NodeType.Raw, this.value = this.stringify.raw(text); } return extend(XMLRaw, superClass), XMLRaw.prototype.clone = function () { return Object.create(this); }, XMLRaw.prototype.toString = function (options1) { return this.options.writer.raw(this, this.options.writer.filterOptions(options1)); }, XMLRaw; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLNode.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLStreamWriter.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, WriterState, XMLWriterBase, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), XMLWriterBase = __webpack_require__("./node_modules/xmlbuilder/lib/XMLWriterBase.js"), WriterState = __webpack_require__("./node_modules/xmlbuilder/lib/WriterState.js"), module1.exports = function (superClass) { function XMLStreamWriter(stream, options1) { this.stream = stream, XMLStreamWriter.__super__.constructor.call(this, options1); } return extend(XMLStreamWriter, superClass), XMLStreamWriter.prototype.endline = function (node, options1, level) { return node.isLastRootNode && options1.state === WriterState.CloseTag ? "" : XMLStreamWriter.__super__.endline.call(this, node, options1, level); }, XMLStreamWriter.prototype.document = function (doc, options1) { var child, i, j, k, len, len1, ref, ref1, results; for (ref = doc.children, i = j = 0, len = ref.length; j < len; i = ++j)
            (child = ref[i]).isLastRootNode = i === doc.children.length - 1; for (k = 0, options1 = this.filterOptions(options1), ref1 = doc.children, results = [], len1 = ref1.length; k < len1; k++)
            child = ref1[k], results.push(this.writeChildNode(child, options1, 0)); return results; }, XMLStreamWriter.prototype.attribute = function (att, options1, level) { return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options1, level)); }, XMLStreamWriter.prototype.cdata = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options1, level)); }, XMLStreamWriter.prototype.comment = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options1, level)); }, XMLStreamWriter.prototype.declaration = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options1, level)); }, XMLStreamWriter.prototype.docType = function (node, options1, level) { var child, j, len, ref; if (level || (level = 0), this.openNode(node, options1, level), options1.state = WriterState.OpenTag, this.stream.write(this.indent(node, options1, level)), this.stream.write("<!DOCTYPE " + node.root().name), node.pubID && node.sysID ? this.stream.write(' PUBLIC "' + node.pubID + '" "' + node.sysID + '"') : node.sysID && this.stream.write(' SYSTEM "' + node.sysID + '"'), node.children.length > 0) {
            for (this.stream.write(" ["), this.stream.write(this.endline(node, options1, level)), options1.state = WriterState.InsideTag, j = 0, len = (ref = node.children).length; j < len; j++)
                child = ref[j], this.writeChildNode(child, options1, level + 1);
            options1.state = WriterState.CloseTag, this.stream.write("]");
        } return options1.state = WriterState.CloseTag, this.stream.write(options1.spaceBeforeSlash + ">"), this.stream.write(this.endline(node, options1, level)), options1.state = WriterState.None, this.closeNode(node, options1, level); }, XMLStreamWriter.prototype.element = function (node, options1, level) { var att, child, childNodeCount, firstChildNode, j, len, name, ref, ref1; for (name in level || (level = 0), this.openNode(node, options1, level), options1.state = WriterState.OpenTag, this.stream.write(this.indent(node, options1, level) + "<" + node.name), ref = node.attribs)
            hasProp.call(ref, name) && (att = ref[name], this.attribute(att, options1, level)); if (firstChildNode = 0 === (childNodeCount = node.children.length) ? null : node.children[0], 0 === childNodeCount || node.children.every(function (e) { return (e.type === NodeType.Text || e.type === NodeType.Raw) && "" === e.value; }))
            options1.allowEmpty ? (this.stream.write(">"), options1.state = WriterState.CloseTag, this.stream.write("</" + node.name + ">")) : (options1.state = WriterState.CloseTag, this.stream.write(options1.spaceBeforeSlash + "/>"));
        else if (options1.pretty && 1 === childNodeCount && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && null != firstChildNode.value)
            this.stream.write(">"), options1.state = WriterState.InsideTag, options1.suppressPrettyCount++, this.writeChildNode(firstChildNode, options1, level + 1), options1.suppressPrettyCount--, options1.state = WriterState.CloseTag, this.stream.write("</" + node.name + ">");
        else {
            for (this.stream.write(">" + this.endline(node, options1, level)), options1.state = WriterState.InsideTag, j = 0, len = (ref1 = node.children).length; j < len; j++)
                child = ref1[j], this.writeChildNode(child, options1, level + 1);
            options1.state = WriterState.CloseTag, this.stream.write(this.indent(node, options1, level) + "</" + node.name + ">");
        } return this.stream.write(this.endline(node, options1, level)), options1.state = WriterState.None, this.closeNode(node, options1, level); }, XMLStreamWriter.prototype.processingInstruction = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options1, level)); }, XMLStreamWriter.prototype.raw = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options1, level)); }, XMLStreamWriter.prototype.text = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options1, level)); }, XMLStreamWriter.prototype.dtdAttList = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options1, level)); }, XMLStreamWriter.prototype.dtdElement = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options1, level)); }, XMLStreamWriter.prototype.dtdEntity = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options1, level)); }, XMLStreamWriter.prototype.dtdNotation = function (node, options1, level) { return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options1, level)); }, XMLStreamWriter; }(XMLWriterBase); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLStringWriter.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; module1.exports = function (superClass) { function XMLStringWriter(options1) { XMLStringWriter.__super__.constructor.call(this, options1); } return extend(XMLStringWriter, superClass), XMLStringWriter.prototype.document = function (doc, options1) { var child, i, len, r, ref; for (i = 0, options1 = this.filterOptions(options1), r = "", len = (ref = doc.children).length; i < len; i++)
            child = ref[i], r += this.writeChildNode(child, options1, 0); return options1.pretty && r.slice(-options1.newline.length) === options1.newline && (r = r.slice(0, -options1.newline.length)), r; }, XMLStringWriter; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLWriterBase.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLStringifier.js": function (module1) { (function () { var bind = function (fn, me) { return function () { return fn.apply(me, arguments); }; }, hasProp = {}.hasOwnProperty; module1.exports = function () { function XMLStringifier(options1) { var key, ref, value; for (key in this.assertLegalName = bind(this.assertLegalName, this), this.assertLegalChar = bind(this.assertLegalChar, this), options1 || (options1 = {}), this.options = options1, this.options.version || (this.options.version = "1.0"), ref = options1.stringify || {})
            hasProp.call(ref, key) && (value = ref[key], this[key] = value); } return XMLStringifier.prototype.name = function (val1) { return this.options.noValidation ? val1 : this.assertLegalName("" + val1 || ""); }, XMLStringifier.prototype.text = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar(this.textEscape("" + val1 || "")); }, XMLStringifier.prototype.cdata = function (val1) { return this.options.noValidation ? val1 : (val1 = (val1 = "" + val1 || "").replace("]]>", "]]]]><![CDATA[>"), this.assertLegalChar(val1)); }, XMLStringifier.prototype.comment = function (val1) { if (this.options.noValidation)
            return val1; if ((val1 = "" + val1 || "").match(/--/))
            throw Error("Comment text cannot contain double-hypen: " + val1); return this.assertLegalChar(val1); }, XMLStringifier.prototype.raw = function (val1) { return this.options.noValidation ? val1 : "" + val1 || ""; }, XMLStringifier.prototype.attValue = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar(this.attEscape(val1 = "" + val1 || "")); }, XMLStringifier.prototype.insTarget = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.insValue = function (val1) { if (this.options.noValidation)
            return val1; if ((val1 = "" + val1 || "").match(/\?>/))
            throw Error("Invalid processing instruction value: " + val1); return this.assertLegalChar(val1); }, XMLStringifier.prototype.xmlVersion = function (val1) { if (this.options.noValidation)
            return val1; if (!(val1 = "" + val1 || "").match(/1\.[0-9]+/))
            throw Error("Invalid version number: " + val1); return val1; }, XMLStringifier.prototype.xmlEncoding = function (val1) { if (this.options.noValidation)
            return val1; if (!(val1 = "" + val1 || "").match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/))
            throw Error("Invalid encoding: " + val1); return this.assertLegalChar(val1); }, XMLStringifier.prototype.xmlStandalone = function (val1) { return this.options.noValidation ? val1 : val1 ? "yes" : "no"; }, XMLStringifier.prototype.dtdPubID = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdSysID = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdElementValue = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdAttType = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdAttDefault = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdEntityValue = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.dtdNData = function (val1) { return this.options.noValidation ? val1 : this.assertLegalChar("" + val1 || ""); }, XMLStringifier.prototype.convertAttKey = "@", XMLStringifier.prototype.convertPIKey = "?", XMLStringifier.prototype.convertTextKey = "#text", XMLStringifier.prototype.convertCDataKey = "#cdata", XMLStringifier.prototype.convertCommentKey = "#comment", XMLStringifier.prototype.convertRawKey = "#raw", XMLStringifier.prototype.assertLegalChar = function (str) { var regex, res; if (this.options.noValidation)
            return str; if (regex = "", "1.0" === this.options.version) {
            if (regex = /[\0-\x08\x0B\f\x0E-\x1F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, res = str.match(regex))
                throw Error("Invalid character in string: " + str + " at index " + res.index);
        }
        else if ("1.1" === this.options.version && (regex = /[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/, res = str.match(regex)))
            throw Error("Invalid character in string: " + str + " at index " + res.index); return str; }, XMLStringifier.prototype.assertLegalName = function (str) { if (this.options.noValidation)
            return str; if (this.assertLegalChar(str), !str.match(/^([:A-Z_a-z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])([\x2D\.0-:A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*$/))
            throw Error("Invalid character in name"); return str; }, XMLStringifier.prototype.textEscape = function (str) { var ampregex; return this.options.noValidation ? str : (ampregex = this.options.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, str.replace(ampregex, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r/g, "&#xD;")); }, XMLStringifier.prototype.attEscape = function (str) { var ampregex; return this.options.noValidation ? str : (ampregex = this.options.noDoubleEncoding ? /(?!&\S+;)&/g : /&/g, str.replace(ampregex, "&amp;").replace(/</g, "&lt;").replace(/"/g, "&quot;").replace(/\t/g, "&#x9;").replace(/\n/g, "&#xA;").replace(/\r/g, "&#xD;")); }, XMLStringifier; }(); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLText.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, extend = function (child, parent) { for (var key in parent)
            hasProp.call(parent, key) && (child[key] = parent[key]); function ctor() { this.constructor = child; } return ctor.prototype = parent.prototype, child.prototype = new ctor, child.__super__ = parent.prototype, child; }, hasProp = {}.hasOwnProperty; NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), module1.exports = function (superClass) { function XMLText(parent, text) { if (XMLText.__super__.constructor.call(this, parent), null == text)
            throw Error("Missing element text. " + this.debugInfo()); this.name = "#text", this.type = NodeType.Text, this.value = this.stringify.text(text); } return extend(XMLText, superClass), Object.defineProperty(XMLText.prototype, "isElementContentWhitespace", { get: function () { throw Error("This DOM method is not implemented." + this.debugInfo()); } }), Object.defineProperty(XMLText.prototype, "wholeText", { get: function () { var next, prev, str; for (str = "", prev = this.previousSibling; prev;)
                str = prev.data + str, prev = prev.previousSibling; for (str += this.data, next = this.nextSibling; next;)
                str += next.data, next = next.nextSibling; return str; } }), XMLText.prototype.clone = function () { return Object.create(this); }, XMLText.prototype.toString = function (options1) { return this.options.writer.text(this, this.options.writer.filterOptions(options1)); }, XMLText.prototype.splitText = function (offset) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLText.prototype.replaceWholeText = function (content) { throw Error("This DOM method is not implemented." + this.debugInfo()); }, XMLText; }(__webpack_require__("./node_modules/xmlbuilder/lib/XMLCharacterData.js")); }).call(this); }, "./node_modules/xmlbuilder/lib/XMLWriterBase.js": function (module1, __unused_webpack_exports, __webpack_require__) {
            (function () {
                var NodeType, WriterState, assign, hasProp = {}.hasOwnProperty;
                assign = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js").assign, NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDeclaration.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocType.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLCData.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLComment.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLElement.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLRaw.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLText.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDummy.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDAttList.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDElement.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDEntity.js"), __webpack_require__("./node_modules/xmlbuilder/lib/XMLDTDNotation.js"), WriterState = __webpack_require__("./node_modules/xmlbuilder/lib/WriterState.js"), module1.exports = function () {
                    function XMLWriterBase(options1) { var key, ref, value; for (key in options1 || (options1 = {}), this.options = options1, ref = options1.writer || {})
                        hasProp.call(ref, key) && (value = ref[key], this["_" + key] = this[key], this[key] = value); }
                    return XMLWriterBase.prototype.filterOptions = function (options1) {
                        var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;
                        return options1 || (options1 = {}), options1 = assign({}, this.options, options1), (filteredOptions = { writer: this }).pretty = options1.pretty || !1, filteredOptions.allowEmpty = options1.allowEmpty || !1, filteredOptions.indent = null != (ref = options1.indent) ? ref : "  ", filteredOptions.newline = null != (ref1 = options1.newline) ? ref1 : `
`, filteredOptions.offset = null != (ref2 = options1.offset) ? ref2 : 0, filteredOptions.dontPrettyTextNodes = null != (ref3 = null != (ref4 = options1.dontPrettyTextNodes) ? ref4 : options1.dontprettytextnodes) ? ref3 : 0, filteredOptions.spaceBeforeSlash = null != (ref5 = null != (ref6 = options1.spaceBeforeSlash) ? ref6 : options1.spacebeforeslash) ? ref5 : "", !0 === filteredOptions.spaceBeforeSlash && (filteredOptions.spaceBeforeSlash = " "), filteredOptions.suppressPrettyCount = 0, filteredOptions.user = {}, filteredOptions.state = WriterState.None, filteredOptions;
                    }, XMLWriterBase.prototype.indent = function (node, options1, level) { var indentLevel; if (!options1.pretty || options1.suppressPrettyCount)
                        ;
                    else if (options1.pretty && (indentLevel = (level || 0) + options1.offset + 1) > 0)
                        return Array(indentLevel).join(options1.indent); return ""; }, XMLWriterBase.prototype.endline = function (node, options1, level) { return !options1.pretty || options1.suppressPrettyCount ? "" : options1.newline; }, XMLWriterBase.prototype.attribute = function (att, options1, level) { var r; return this.openAttribute(att, options1, level), r = " " + att.name + '="' + att.value + '"', this.closeAttribute(att, options1, level), r; }, XMLWriterBase.prototype.cdata = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<![CDATA[", options1.state = WriterState.InsideTag, r += node.value, options1.state = WriterState.CloseTag, r += "]]>" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.comment = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "\x3c!-- ", options1.state = WriterState.InsideTag, r += node.value, options1.state = WriterState.CloseTag, r += " --\x3e" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.declaration = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<?xml", options1.state = WriterState.InsideTag, r += ' version="' + node.version + '"', null != node.encoding && (r += ' encoding="' + node.encoding + '"'), null != node.standalone && (r += ' standalone="' + node.standalone + '"'), options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + "?>", r += this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.docType = function (node, options1, level) { var child, i, len, r, ref; if (level || (level = 0), this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<!DOCTYPE " + node.root().name, node.pubID && node.sysID ? r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"' : node.sysID && (r += ' SYSTEM "' + node.sysID + '"'), node.children.length > 0) {
                        for (r += " [", r += this.endline(node, options1, level), options1.state = WriterState.InsideTag, i = 0, len = (ref = node.children).length; i < len; i++)
                            child = ref[i], r += this.writeChildNode(child, options1, level + 1);
                        options1.state = WriterState.CloseTag, r += "]";
                    } return options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + ">", r += this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.element = function (node, options1, level) { var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2; for (name in level || (level = 0), prettySuppressed = !1, r = "", this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r += this.indent(node, options1, level) + "<" + node.name, ref = node.attribs)
                        hasProp.call(ref, name) && (att = ref[name], r += this.attribute(att, options1, level)); if (firstChildNode = 0 === (childNodeCount = node.children.length) ? null : node.children[0], 0 === childNodeCount || node.children.every(function (e) { return (e.type === NodeType.Text || e.type === NodeType.Raw) && "" === e.value; }))
                        options1.allowEmpty ? (r += ">", options1.state = WriterState.CloseTag, r += "</" + node.name + ">" + this.endline(node, options1, level)) : (options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + "/>" + this.endline(node, options1, level));
                    else if (options1.pretty && 1 === childNodeCount && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && null != firstChildNode.value)
                        r += ">", options1.state = WriterState.InsideTag, options1.suppressPrettyCount++, prettySuppressed = !0, r += this.writeChildNode(firstChildNode, options1, level + 1), options1.suppressPrettyCount--, prettySuppressed = !1, options1.state = WriterState.CloseTag, r += "</" + node.name + ">" + this.endline(node, options1, level);
                    else {
                        if (options1.dontPrettyTextNodes) {
                            for (i = 0, len = (ref1 = node.children).length; i < len; i++)
                                if (((child = ref1[i]).type === NodeType.Text || child.type === NodeType.Raw) && null != child.value) {
                                    options1.suppressPrettyCount++, prettySuppressed = !0;
                                    break;
                                }
                        }
                        for (r += ">" + this.endline(node, options1, level), options1.state = WriterState.InsideTag, j = 0, len1 = (ref2 = node.children).length; j < len1; j++)
                            child = ref2[j], r += this.writeChildNode(child, options1, level + 1);
                        options1.state = WriterState.CloseTag, r += this.indent(node, options1, level) + "</" + node.name + ">", prettySuppressed && options1.suppressPrettyCount--, r += this.endline(node, options1, level), options1.state = WriterState.None;
                    } return this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.writeChildNode = function (node, options1, level) { switch (node.type) {
                        case NodeType.CData: return this.cdata(node, options1, level);
                        case NodeType.Comment: return this.comment(node, options1, level);
                        case NodeType.Element: return this.element(node, options1, level);
                        case NodeType.Raw: return this.raw(node, options1, level);
                        case NodeType.Text: return this.text(node, options1, level);
                        case NodeType.ProcessingInstruction: return this.processingInstruction(node, options1, level);
                        case NodeType.Dummy: return "";
                        case NodeType.Declaration: return this.declaration(node, options1, level);
                        case NodeType.DocType: return this.docType(node, options1, level);
                        case NodeType.AttributeDeclaration: return this.dtdAttList(node, options1, level);
                        case NodeType.ElementDeclaration: return this.dtdElement(node, options1, level);
                        case NodeType.EntityDeclaration: return this.dtdEntity(node, options1, level);
                        case NodeType.NotationDeclaration: return this.dtdNotation(node, options1, level);
                        default: throw Error("Unknown XML node type: " + node.constructor.name);
                    } }, XMLWriterBase.prototype.processingInstruction = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<?", options1.state = WriterState.InsideTag, r += node.target, node.value && (r += " " + node.value), options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + "?>", r += this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.raw = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level), options1.state = WriterState.InsideTag, r += node.value, options1.state = WriterState.CloseTag, r += this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.text = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level), options1.state = WriterState.InsideTag, r += node.value, options1.state = WriterState.CloseTag, r += this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.dtdAttList = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<!ATTLIST", options1.state = WriterState.InsideTag, r += " " + node.elementName + " " + node.attributeName + " " + node.attributeType, "#DEFAULT" !== node.defaultValueType && (r += " " + node.defaultValueType), node.defaultValue && (r += ' "' + node.defaultValue + '"'), options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + ">" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.dtdElement = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<!ELEMENT", options1.state = WriterState.InsideTag, r += " " + node.name + " " + node.value, options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + ">" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.dtdEntity = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<!ENTITY", options1.state = WriterState.InsideTag, node.pe && (r += " %"), r += " " + node.name, node.value ? r += ' "' + node.value + '"' : (node.pubID && node.sysID ? r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"' : node.sysID && (r += ' SYSTEM "' + node.sysID + '"'), node.nData && (r += " NDATA " + node.nData)), options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + ">" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.dtdNotation = function (node, options1, level) { var r; return this.openNode(node, options1, level), options1.state = WriterState.OpenTag, r = this.indent(node, options1, level) + "<!NOTATION", options1.state = WriterState.InsideTag, r += " " + node.name, node.pubID && node.sysID ? r += ' PUBLIC "' + node.pubID + '" "' + node.sysID + '"' : node.pubID ? r += ' PUBLIC "' + node.pubID + '"' : node.sysID && (r += ' SYSTEM "' + node.sysID + '"'), options1.state = WriterState.CloseTag, r += options1.spaceBeforeSlash + ">" + this.endline(node, options1, level), options1.state = WriterState.None, this.closeNode(node, options1, level), r; }, XMLWriterBase.prototype.openNode = function (node, options1, level) { }, XMLWriterBase.prototype.closeNode = function (node, options1, level) { }, XMLWriterBase.prototype.openAttribute = function (att, options1, level) { }, XMLWriterBase.prototype.closeAttribute = function (att, options1, level) { }, XMLWriterBase;
                }();
            }).call(this);
        }, "./node_modules/xmlbuilder/lib/index.js": function (module1, __unused_webpack_exports, __webpack_require__) { (function () { var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref; assign = (ref = __webpack_require__("./node_modules/xmlbuilder/lib/Utility.js")).assign, isFunction = ref.isFunction, XMLDOMImplementation = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDOMImplementation.js"), XMLDocument = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocument.js"), XMLDocumentCB = __webpack_require__("./node_modules/xmlbuilder/lib/XMLDocumentCB.js"), XMLStringWriter = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStringWriter.js"), XMLStreamWriter = __webpack_require__("./node_modules/xmlbuilder/lib/XMLStreamWriter.js"), NodeType = __webpack_require__("./node_modules/xmlbuilder/lib/NodeType.js"), WriterState = __webpack_require__("./node_modules/xmlbuilder/lib/WriterState.js"), module1.exports.create = function (name, xmldec, doctype, options1) { var doc, root; if (null == name)
            throw Error("Root element needs a name."); return root = (doc = new XMLDocument(options1 = assign({}, xmldec, doctype, options1))).element(name), options1.headless || (doc.declaration(options1), (null != options1.pubID || null != options1.sysID) && doc.dtd(options1)), root; }, module1.exports.begin = function (options1, onData, onEnd) { var ref1; return (isFunction(options1) && (onData = (ref1 = [options1, onData])[0], onEnd = ref1[1], options1 = {}), onData) ? new XMLDocumentCB(options1, onData, onEnd) : new XMLDocument(options1); }, module1.exports.stringWriter = function (options1) { return new XMLStringWriter(options1); }, module1.exports.streamWriter = function (stream, options1) { return new XMLStreamWriter(stream, options1); }, module1.exports.implementation = new XMLDOMImplementation, module1.exports.nodeType = NodeType, module1.exports.writerState = WriterState; }).call(this); }, "./packages/api/app/query.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function _array_like_to_array(arr, len) { (null == len || len > arr.length) && (len = arr.length); for (var i = 0, arr2 = Array(len); i < len; i++)
                arr2[i] = arr[i]; return arr2; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { q: () => q });
            function _object_spread(target) { for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {}, ownKeys = Object.keys(source);
                "function" == typeof Object.getOwnPropertySymbols && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; }))), ownKeys.forEach(function (key) { var value; value = source[key], key in target ? Object.defineProperty(target, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }) : target[key] = value; });
            } return target; }
            function _object_spread_props(target, source) { return source = null != source ? source : {}, Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : (function (object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                keys.push.apply(keys, symbols);
            } return keys; })(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }), target; }
            function _to_consumable_array(arr) { return function (arr) { if (Array.isArray(arr))
                return _array_like_to_array(arr); }(arr) || function (iter) { if ("undefined" != typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"])
                return Array.from(iter); }(arr) || function (o, minLen) { if (o) {
                if ("string" == typeof o)
                    return _array_like_to_array(o, void 0);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                if ("Object" === n && o.constructor && (n = o.constructor.name), "Map" === n || "Set" === n)
                    return Array.from(n);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                    return _array_like_to_array(o, minLen);
            } }(arr) || function () { throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }(); }
            var Query = function () { var protoProps; function Query(state) { if (!(this instanceof Query))
                throw TypeError("Cannot call a class as a function"); this.state = _object_spread({ filterExpressions: state.filterExpressions || [], selectExpressions: state.selectExpressions || [], groupExpressions: state.groupExpressions || [], orderExpressions: state.orderExpressions || [], calculation: !1, rawMode: !1, withDead: !1, validateRefs: !0, limit: null, offset: null }, state); } return protoProps = [{ key: "filter", value: function (expr) { return new Query(_object_spread_props(_object_spread({}, this.state), { filterExpressions: _to_consumable_array(this.state.filterExpressions).concat([expr]) })); } }, { key: "unfilter", value: function (exprs) { var exprSet = new Set(exprs); return new Query(_object_spread_props(_object_spread({}, this.state), { filterExpressions: this.state.filterExpressions.filter(function (expr) { return !exprSet.has(Object.keys(expr)[0]); }) })); } }, { key: "select", value: function () { var exprs = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; Array.isArray(exprs) || (exprs = [exprs]); var query = new Query(_object_spread_props(_object_spread({}, this.state), { selectExpressions: exprs })); return query.state.calculation = !1, query; } }, { key: "calculate", value: function (expr) { var query = this.select({ result: expr }); return query.state.calculation = !0, query; } }, { key: "groupBy", value: function (exprs) { return Array.isArray(exprs) || (exprs = [exprs]), new Query(_object_spread_props(_object_spread({}, this.state), { groupExpressions: _to_consumable_array(this.state.groupExpressions).concat(_to_consumable_array(exprs)) })); } }, { key: "orderBy", value: function (exprs) { return Array.isArray(exprs) || (exprs = [exprs]), new Query(_object_spread_props(_object_spread({}, this.state), { orderExpressions: _to_consumable_array(this.state.orderExpressions).concat(_to_consumable_array(exprs)) })); } }, { key: "limit", value: function (num) { return new Query(_object_spread_props(_object_spread({}, this.state), { limit: num })); } }, { key: "offset", value: function (num) { return new Query(_object_spread_props(_object_spread({}, this.state), { offset: num })); } }, { key: "raw", value: function () { return new Query(_object_spread_props(_object_spread({}, this.state), { rawMode: !0 })); } }, { key: "withDead", value: function () { return new Query(_object_spread_props(_object_spread({}, this.state), { withDead: !0 })); } }, { key: "withoutValidatedRefs", value: function () { return new Query(_object_spread_props(_object_spread({}, this.state), { validateRefs: !1 })); } }, { key: "options", value: function (opts) { return new Query(_object_spread_props(_object_spread({}, this.state), { tableOptions: opts })); } }, { key: "serialize", value: function () { return this.state; } }], function (target, props) { for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
            } }(Query.prototype, protoProps), Query; }();
            function q(table) { return new Query({ table: table }); }
        }, "./packages/api/injected.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            var send;
            function override(sendImplementation) { send = sendImplementation; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { override: () => override, send: () => send });
        }, "./packages/api/methods.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addTransactions: () => addTransactions, aqlQuery: () => aqlQuery, batchBudgetUpdates: () => batchBudgetUpdates, closeAccount: () => closeAccount, createAccount: () => createAccount, createCategory: () => createCategory, createCategoryGroup: () => createCategoryGroup, createPayee: () => createPayee, createRule: () => createRule, deleteAccount: () => deleteAccount, deleteCategory: () => deleteCategory, deleteCategoryGroup: () => deleteCategoryGroup, deletePayee: () => deletePayee, deleteRule: () => deleteRule, deleteTransaction: () => deleteTransaction, downloadBudget: () => downloadBudget, getAccountBalance: () => getAccountBalance, getAccounts: () => getAccounts, getBudgetMonth: () => getBudgetMonth, getBudgetMonths: () => getBudgetMonths, getBudgets: () => getBudgets, getCategories: () => getCategories, getCategoryGroups: () => getCategoryGroups, getCommonPayees: () => getCommonPayees, getPayeeRules: () => getPayeeRules, getPayees: () => getPayees, getRules: () => getRules, getTransactions: () => getTransactions, holdBudgetForNextMonth: () => holdBudgetForNextMonth, importTransactions: () => importTransactions, loadBudget: () => loadBudget, mergePayees: () => mergePayees, q: () => _app_query__WEBPACK_IMPORTED_MODULE_1__.q, reopenAccount: () => reopenAccount, resetBudgetHold: () => resetBudgetHold, runBankSync: () => runBankSync, runImport: () => runImport, runQuery: () => runQuery, setBudgetAmount: () => setBudgetAmount, setBudgetCarryover: () => setBudgetCarryover, sync: () => sync, updateAccount: () => updateAccount, updateCategory: () => updateCategory, updateCategoryGroup: () => updateCategoryGroup, updatePayee: () => updatePayee, updateRule: () => updateRule, updateTransaction: () => updateTransaction });
            var _injected__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/api/injected.js"), _app_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/api/app/query.js");
            function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try {
                var info = gen[key](arg), value = info.value;
            }
            catch (error) {
                reject(error);
                return;
            } info.done ? resolve(value) : Promise.resolve(value).then(_next, _throw); }
            function _async_to_generator(fn) { return function () { var self1 = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self1, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(void 0); }); }; }
            function _ts_generator(thisArg, body) { var f, y, t, _ = { label: 0, sent: function () { if (1 & t[0])
                    throw t[1]; return t[1]; }, trys: [], ops: [] }, g = Object.create(("function" == typeof Iterator ? Iterator : Object).prototype); return g.next = verb(0), g.throw = verb(1), g.return = verb(2), "function" == typeof Symbol && (g[Symbol.iterator] = function () { return this; }), g; function verb(n) { return function (v) { var op = [n, v]; if (f)
                throw TypeError("Generator is already executing."); for (; g && (g = 0, op[0] && (_ = 0)), _;)
                try {
                    if (f = 1, y && (t = 2 & op[0] ? y.return : op[0] ? y.throw || ((t = y.return) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    switch (y = 0, t && (op = [2 & op[0], t.value]), op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4: return _.label++, { value: op[1], done: !1 };
                        case 5:
                            _.label++, y = op[1], op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop(), _.trys.pop();
                            continue;
                        default:
                            if (!(t = (t = _.trys).length > 0 && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {
                                _ = 0;
                                continue;
                            }
                            if (3 === op[0] && (!t || op[1] > t[0] && op[1] < t[3])) {
                                _.label = op[1];
                                break;
                            }
                            if (6 === op[0] && _.label < t[1]) {
                                _.label = t[1], t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2], _.ops.push(op);
                                break;
                            }
                            t[2] && _.ops.pop(), _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e], y = 0;
                }
                finally {
                    f = t = 0;
                } if (5 & op[0])
                throw op[1]; return { value: op[0] ? op[1] : void 0, done: !0 }; }; } }
            function send(name, args) { return _injected__WEBPACK_IMPORTED_MODULE_0__.send(name, args); }
            function runImport(name, func) { return _async_to_generator(function () { var e; return _ts_generator(this, function (_state) { switch (_state.label) {
                case 0: return [4, send("api/start-import", { budgetName: name })];
                case 1: _state.sent(), _state.label = 2;
                case 2: return _state.trys.push([2, 4, , 6]), [4, func()];
                case 3: return _state.sent(), [3, 6];
                case 4: return e = _state.sent(), [4, send("api/abort-import")];
                case 5: throw _state.sent(), e;
                case 6: return [4, send("api/finish-import")];
                case 7: return _state.sent(), [2];
            } }); })(); }
            function loadBudget(budgetId) { return _async_to_generator(function () { return _ts_generator(this, function (_state) { return [2, send("api/load-budget", { id: budgetId })]; }); })(); }
            function downloadBudget(_0) { return _async_to_generator(function (syncId) { var _arguments = arguments; return _ts_generator(this, function (_state) { return [2, send("api/download-budget", { syncId: syncId, password: (_arguments.length > 1 && void 0 !== _arguments[1] ? _arguments[1] : {}).password })]; }); }).apply(this, arguments); }
            function getBudgets() { return _async_to_generator(function () { return _ts_generator(this, function (_state) { return [2, send("api/get-budgets")]; }); })(); }
            function sync() { return _async_to_generator(function () { return _ts_generator(this, function (_state) { return [2, send("api/sync")]; }); })(); }
            function runBankSync(args) { return _async_to_generator(function () { return _ts_generator(this, function (_state) { return [2, send("api/bank-sync", args)]; }); })(); }
            function batchBudgetUpdates(func) { return _async_to_generator(function () { return _ts_generator(this, function (_state) { switch (_state.label) {
                case 0: return [4, send("api/batch-budget-start")];
                case 1: _state.sent(), _state.label = 2;
                case 2: return _state.trys.push([2, , 4, 6]), [4, func()];
                case 3: return _state.sent(), [3, 6];
                case 4: return [4, send("api/batch-budget-end")];
                case 5: return _state.sent(), [7];
                case 6: return [2];
            } }); })(); }
            function runQuery(query) { return send("api/query", { query: query.serialize() }); }
            function aqlQuery(query) { return send("api/query", { query: query.serialize() }); }
            function getBudgetMonths() { return send("api/budget-months"); }
            function getBudgetMonth(month) { return send("api/budget-month", { month: month }); }
            function setBudgetAmount(month, categoryId, value) { return send("api/budget-set-amount", { month: month, categoryId: categoryId, amount: value }); }
            function setBudgetCarryover(month, categoryId, flag) { return send("api/budget-set-carryover", { month: month, categoryId: categoryId, flag: flag }); }
            function addTransactions(accountId, transactions) { var _ref = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, _ref_learnCategories = _ref.learnCategories, _ref_runTransfers = _ref.runTransfers; return send("api/transactions-add", { accountId: accountId, transactions: transactions, learnCategories: void 0 !== _ref_learnCategories && _ref_learnCategories, runTransfers: void 0 !== _ref_runTransfers && _ref_runTransfers }); }
            function importTransactions(accountId, transactions) { var opts = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : { defaultCleared: !0 }; return send("api/transactions-import", { accountId: accountId, transactions: transactions, opts: opts }); }
            function getTransactions(accountId, startDate, endDate) { return send("api/transactions-get", { accountId: accountId, startDate: startDate, endDate: endDate }); }
            function updateTransaction(id, fields) { return send("api/transaction-update", { id: id, fields: fields }); }
            function deleteTransaction(id) { return send("api/transaction-delete", { id: id }); }
            function getAccounts() { return send("api/accounts-get"); }
            function createAccount(account, initialBalance) { return send("api/account-create", { account: account, initialBalance: initialBalance }); }
            function updateAccount(id, fields) { return send("api/account-update", { id: id, fields: fields }); }
            function closeAccount(id, transferAccountId, transferCategoryId) { return send("api/account-close", { id: id, transferAccountId: transferAccountId, transferCategoryId: transferCategoryId }); }
            function reopenAccount(id) { return send("api/account-reopen", { id: id }); }
            function deleteAccount(id) { return send("api/account-delete", { id: id }); }
            function getAccountBalance(id, cutoff) { return send("api/account-balance", { id: id, cutoff: cutoff }); }
            function getCategoryGroups() { return send("api/category-groups-get"); }
            function createCategoryGroup(group) { return send("api/category-group-create", { group: group }); }
            function updateCategoryGroup(id, fields) { return send("api/category-group-update", { id: id, fields: fields }); }
            function deleteCategoryGroup(id, transferCategoryId) { return send("api/category-group-delete", { id: id, transferCategoryId: transferCategoryId }); }
            function getCategories() { return send("api/categories-get", { grouped: !1 }); }
            function createCategory(category) { return send("api/category-create", { category: category }); }
            function updateCategory(id, fields) { return send("api/category-update", { id: id, fields: fields }); }
            function deleteCategory(id, transferCategoryId) { return send("api/category-delete", { id: id, transferCategoryId: transferCategoryId }); }
            function getCommonPayees() { return send("api/common-payees-get"); }
            function getPayees() { return send("api/payees-get"); }
            function createPayee(payee) { return send("api/payee-create", { payee: payee }); }
            function updatePayee(id, fields) { return send("api/payee-update", { id: id, fields: fields }); }
            function deletePayee(id) { return send("api/payee-delete", { id: id }); }
            function mergePayees(targetId, mergeIds) { return send("api/payees-merge", { targetId: targetId, mergeIds: mergeIds }); }
            function getRules() { return send("api/rules-get"); }
            function getPayeeRules(id) { return send("api/payee-rules-get", { id: id }); }
            function createRule(rule) { return send("api/rule-create", { rule: rule }); }
            function updateRule(rule) { return send("api/rule-update", { rule: rule }); }
            function deleteRule(id) { return send("api/rule-delete", id); }
            function holdBudgetForNextMonth(month, amount) { return send("api/budget-hold-for-next-month", { month: month, amount: amount }); }
            function resetBudgetHold(month) { return send("api/budget-reset-hold", { month: month }); }
        }, "./packages/api/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function amountToInteger(n) { return Math.round(100 * n); }
            function integerToAmount(n) { return parseFloat((n / 100).toFixed(2)); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { amountToInteger: () => amountToInteger, integerToAmount: () => integerToAmount });
        }, "./packages/loot-core/migrations/1632571489012_remove_cache.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            async function runMigration(db) {
                function getValue(node) { return null != node.expr ? node.expr : node.cachedValue; }
                db.execQuery(`
CREATE TABLE zero_budget_months
  (id TEXT PRIMARY KEY,
   buffered INTEGER DEFAULT 0);

CREATE TABLE zero_budgets
  (id TEXT PRIMARY KEY,
   month INTEGER,
   category TEXT,
   amount INTEGER DEFAULT 0,
   carryover INTEGER DEFAULT 0);

CREATE TABLE reflect_budgets
  (id TEXT PRIMARY KEY,
   month INTEGER,
   category TEXT,
   amount INTEGER DEFAULT 0,
   carryover INTEGER DEFAULT 0);

CREATE TABLE notes
  (id TEXT PRIMARY KEY,
   note TEXT);

CREATE TABLE kvcache (key TEXT PRIMARY KEY, value TEXT);
CREATE TABLE kvcache_key (id INTEGER PRIMARY KEY, key REAL);
`);
                let budget = db.runQuery("SELECT * FROM spreadsheet_cells WHERE name LIKE 'budget%!budget-%'", [], !0);
                db.transaction(() => { budget.forEach(monthBudget => { let match = monthBudget.name.match(/^(budget-report|budget)(\d+)!budget-(.+)$/); if (null == match)
                    return void console.log("Warning: invalid budget month name", monthBudget.name); let type = match[1], month = match[2].slice(0, 4) + "-" + match[2].slice(4), dbmonth = parseInt(match[2]), cat = match[3], amount = parseInt(getValue(monthBudget)); isNaN(amount) && (amount = 0); let sheetName = monthBudget.name.split("!")[0], carryover = db.runQuery("SELECT * FROM spreadsheet_cells WHERE name = ?", [`${sheetName}!carryover-${cat}`], !0); db.runQuery(`INSERT INTO ${"budget-report" === type ? "reflect_budgets" : "zero_budgets"} (id, month, category, amount, carryover) VALUES (?, ?, ?, ?, ?)`, [`${month}-${cat}`, dbmonth, cat, amount, +(carryover.length > 0 && "true" === getValue(carryover[0]))]); }); });
                let buffers = db.runQuery("SELECT * FROM spreadsheet_cells WHERE name LIKE 'budget%!buffered'", [], !0);
                db.transaction(() => { buffers.forEach(buffer => { let match = buffer.name.match(/^budget(\d+)!buffered$/); if (match) {
                    let month = match[1].slice(0, 4) + "-" + match[1].slice(4), amount = parseInt(getValue(buffer));
                    isNaN(amount) && (amount = 0), db.runQuery("INSERT INTO zero_budget_months (id, buffered) VALUES (?, ?)", [month, amount]);
                } }); });
                let notes = db.runQuery("SELECT * FROM spreadsheet_cells WHERE name LIKE 'notes!%'", [], !0), parseNote = str => { try {
                    let value = JSON.parse(str);
                    return value && "" !== value ? value : null;
                }
                catch (e) {
                    return null;
                } };
                db.transaction(() => { notes.forEach(note => { let parsed = parseNote(getValue(note)); if (parsed) {
                    let [, id] = note.name.split("!");
                    db.runQuery("INSERT INTO notes (id, note) VALUES (?, ?)", [id, parsed]);
                } }); }), db.execQuery(`
    DROP TABLE spreadsheet_cells;
    ANALYZE;
    VACUUM;
  `);
            }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => runMigration });
        }, "./packages/loot-core/migrations/1722717601000_reports_move_selected_categories.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            async function runMigration(db) { let categories = await db.runQuery("SELECT id FROM categories WHERE tombstone = 0", [], !0); for (let report of (await db.runQuery("SELECT id, selected_categories, conditions FROM custom_reports WHERE tombstone = 0 AND selected_categories IS NOT NULL", [], !0))) {
                let conditions = report.conditions ? JSON.parse(report.conditions) : [], selectedCategoryIds = (report.selected_categories ? JSON.parse(report.selected_categories) : []).map(({ id }) => id);
                categories.find(({ id }) => !selectedCategoryIds.includes(id)) && (conditions.find(({ field }) => "category" === field) || await db.runQuery("UPDATE custom_reports SET conditions = ? WHERE id = ?", [JSON.stringify([...conditions, { field: "category", op: "oneOf", value: selectedCategoryIds, type: "id" }]), report.id]));
            } await db.runQuery("UPDATE custom_reports SET selected_categories = NULL WHERE tombstone = 0"); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => runMigration });
        }, "./packages/loot-core/migrations/1722804019000_create_dashboard_table.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => runMigration });
            var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js");
            async function runMigration(db) {
                db.transaction(() => {
                    db.execQuery(`
      CREATE TABLE dashboard
        (id TEXT PRIMARY KEY,
         type TEXT,
         width INTEGER,
         height INTEGER,
         x INTEGER,
         y INTEGER,
         meta TEXT,
         tombstone INTEGER DEFAULT 0);

      INSERT INTO dashboard (id, type, width, height, x, y)
      VALUES
        ('${(0, uuid__WEBPACK_IMPORTED_MODULE_0__.default)()}','net-worth-card', 8, 2, 0, 0),
        ('${(0, uuid__WEBPACK_IMPORTED_MODULE_0__.default)()}', 'cash-flow-card', 4, 2, 8, 0),
        ('${(0, uuid__WEBPACK_IMPORTED_MODULE_0__.default)()}', 'spending-card', 4, 2, 0, 2);
    `), db.runQuery("SELECT id FROM custom_reports WHERE tombstone = 0 ORDER BY name COLLATE NOCASE ASC", [], !0).forEach((report, id) => { db.runQuery("INSERT INTO dashboard (id, type, width, height, x, y, meta) VALUES (?, ?, ?, ?, ?, ?, ?)", [(0, uuid__WEBPACK_IMPORTED_MODULE_0__.default)(), "custom-report", 4, 2, 4 * id % 12, 2 + 2 * Math.floor(id / 3), JSON.stringify({ id: report.id })]); });
                });
            }
        }, "./packages/loot-core/migrations/1723665565000_prefs.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { default: () => runMigration });
            let SYNCED_PREF_KEYS = ["firstDayOfWeekIdx", "dateFormat", "numberFormat", "hideFraction", "isPrivacyEnabled", /^show-extra-balances-/, /^hide-cleared-/, /^parse-date-/, /^csv-mappings-/, /^csv-delimiter-/, /^csv-has-header-/, /^ofx-fallback-missing-payee-/, /^flip-amount-/, "budgetType", /^flags\./];
            async function runMigration(db, { fs, fileId }) {
                await db.execQuery(`
    CREATE TABLE preferences
       (id TEXT PRIMARY KEY,
        value TEXT);
  `);
                try {
                    let budgetDir = fs.getBudgetDir(fileId), fullpath = fs.join(budgetDir, "metadata.json"), prefs = JSON.parse(await fs.readFile(fullpath));
                    if ("object" != typeof prefs)
                        return;
                    await Promise.all(Object.keys(prefs).map(async (key) => { SYNCED_PREF_KEYS.find(keyMatcher => keyMatcher instanceof RegExp ? keyMatcher.test(key) : keyMatcher === key) && await db.runQuery("INSERT INTO preferences (id, value) VALUES (?, ?)", [key, String(prefs[key])]); }));
                }
                catch (e) { }
            }
        }, "./packages/loot-core/src/mocks/budget.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createTestBudget: () => createTestBudget });
            var uuid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _server_accounts_sync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/accounts/sync.ts"), _server_aql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _server_budget_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _server_budget_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _server_db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _server_mutators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _server_sheet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _server_sync__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _random__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/mocks/random.ts");
            function pickRandom(list) { return list[Math.floor((0, _random__WEBPACK_IMPORTED_MODULE_10__.random)() * list.length) % list.length]; }
            function integer(start, end) { return Math.round(start + (end - start) * (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)()); }
            function getStartingBalanceCat(categories) { return categories.find(c => "Starting Balances" === c.name).id; }
            function extractCommonThings(payees, groups) { let incomePayee = payees.find(p => "Deposit" === p.name), expensePayees = payees.filter(p => "Deposit" !== p.name && "Starting Balance" !== p.name), expenseGroup = groups.find(g => !g.is_income), incomeGroup = groups.find(g => g.is_income), categories = expenseGroup.categories.filter(c => -1 !== ["Food", "Restaurants", "Entertainment", "Clothing", "General", "Gift", "Medical"].indexOf(c.name)); return { incomePayee, expensePayees: expensePayees.filter(p => !p.bill), incomeGroup, expenseCategories: categories, billCategories: groups.find(g => "Bills" === g.name).categories, billPayees: expensePayees.filter(p => p.bill) }; }
            async function fillPrimaryChecking(handlers, account, payees, groups) { let { incomePayee, expensePayees, incomeGroup, expenseCategories, billCategories, billPayees } = extractCommonThings(payees, groups), numTransactions = integer(100, 200), transactions = []; for (let i = 0; i < numTransactions; i++) {
                let payee, category, amount;
                category = "Deposit" === (payee = .09 > (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)() ? incomePayee : pickRandom(expensePayees)).name ? incomeGroup.categories.find(c => "Income" === c.name) : pickRandom(expenseCategories), amount = "Deposit" === payee.name ? integer(5e4, 7e4) : integer(0, .05 > (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)() ? -8e3 : -700);
                let currentDate = _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), Math.floor(i / 3)), transaction = { id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), amount, payee: payee.id, account: account.id, date: currentDate, category: category.id };
                if (transactions.push(transaction), .2 > (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)()) {
                    let a = Math.round(transaction.amount / 3), pick = () => payee === incomePayee ? incomeGroup.categories.find(c => "Income" === c.name).id : pickRandom(expenseCategories).id;
                    transaction.subtransactions = [{ id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), date: currentDate, account: account.id, amount: a, category: pick() }, { id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), date: currentDate, account: account.id, amount: a, category: pick() }, { id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), date: currentDate, account: account.id, amount: transaction.amount - 2 * a, category: pick() }];
                }
            } let earliestMonth = _shared_months__WEBPACK_IMPORTED_MODULE_8__.monthFromDate(transactions[transactions.length - 1].date), months = _shared_months__WEBPACK_IMPORTED_MODULE_8__.rangeInclusive(earliestMonth, _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentMonth()), currentDay = _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(); for (let month of months) {
                let date = _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(month, 12);
                _shared_months__WEBPACK_IMPORTED_MODULE_8__.isBefore(date, currentDay) && transactions.push({ amount: -1e4, payee: billPayees.find(p => p.name.toLowerCase().includes("power")).id, account: account.id, date, category: billCategories.find(c => "Power" === c.name).id }), date = _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(month, 18), _shared_months__WEBPACK_IMPORTED_MODULE_8__.isBefore(date, currentDay) && transactions.push({ amount: -9e3, payee: billPayees.find(p => p.name.toLowerCase().includes("water")).id, account: account.id, date, category: billCategories.find(c => "Water" === c.name).id }), date = _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(month, 2), _shared_months__WEBPACK_IMPORTED_MODULE_8__.isBefore(date, currentDay) && transactions.push({ amount: -12e4, payee: billPayees.find(p => p.name.toLowerCase().includes("housy")).id, account: account.id, date, category: billCategories.find(c => "Mortgage" === c.name).id }), date = _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(month, 20), _shared_months__WEBPACK_IMPORTED_MODULE_8__.isBefore(date, currentDay) && transactions.push({ amount: -6e3, payee: billPayees.find(p => p.name.toLowerCase().includes("internet")).id, account: account.id, date, category: billCategories.find(c => "Internet" === c.name).id }), date = _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(month, 23), _shared_months__WEBPACK_IMPORTED_MODULE_8__.isBefore(date, currentDay) && transactions.push({ amount: -7500, payee: billPayees.find(p => p.name.toLowerCase().includes("t-mobile")).id, account: account.id, date, category: billCategories.find(c => "Cell" === c.name).id });
            } let earliestDate = null; return transactions.forEach(t => { (null == earliestDate || t.date < earliestDate) && (earliestDate = t.date); }), transactions.unshift({ amount: 1e5, payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: earliestDate, category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }), (0, _server_accounts_sync__WEBPACK_IMPORTED_MODULE_0__.addTransactions)(account.id, transactions); }
            async function fillChecking(handlers, account, payees, groups) { let { incomePayee, expensePayees, incomeGroup, expenseCategories } = extractCommonThings(payees, groups), numTransactions = integer(20, 40), transactions = []; for (let i = 0; i < numTransactions; i++) {
                let payee, category;
                category = "Deposit" === (payee = .04 > (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)() ? incomePayee : pickRandom(expensePayees)).name ? incomeGroup.categories.find(c => "Income" === c.name) : pickRandom(expenseCategories);
                let amount = "Deposit" === payee.name ? integer(5e4, 7e4) : integer(0, -1e4);
                transactions.push({ amount, payee: payee.id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), 2 * i), category: category.id });
            } transactions.unshift({ amount: integer(9e4, 12e4), payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: transactions[transactions.length - 1].date, category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }), await handlers["transactions-batch-update"]({ added: transactions, fastMode: !0 }); }
            async function fillInvestment(handlers, account, payees, groups) { let { incomePayee, incomeGroup } = extractCommonThings(payees, groups), numTransactions = integer(10, 30), transactions = []; for (let i = 0; i < numTransactions; i++) {
                let category = incomeGroup.categories.find(c => "Income" === c.name), amount = integer(1e4, 2e4);
                transactions.push({ amount, payee: incomePayee.id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), integer(10, 360)), category: category.id });
            } transactions.unshift({ amount: integer(1e4, 2e4), payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: function (items, field) { let item = items[0]; for (let i = 0; i < items.length; i++)
                    items[i][field] < item[field] && (item = items[i]); return item; }(transactions, "date").date, category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }), await handlers["transactions-batch-update"]({ added: transactions, fastMode: !0 }); }
            async function fillSavings(handlers, account, payees, groups) { let { incomePayee, expensePayees, incomeGroup, expenseCategories } = extractCommonThings(payees, groups), numTransactions = integer(15, 40), transactions = []; for (let i = 0; i < numTransactions; i++) {
                let payee, category = (payee = .3 > (0, _random__WEBPACK_IMPORTED_MODULE_10__.random)() ? incomePayee : pickRandom(expensePayees)) === incomePayee ? incomeGroup.categories.find(c => "Income" === c.name) : pickRandom(expenseCategories), amount = payee === incomePayee ? integer(1e4, 8e4) : integer(-1e4, -2e3);
                transactions.push({ amount, payee: payee.id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), 5 * i), category: category.id });
            } transactions.unshift({ amount: 3e4, payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: transactions[transactions.length - 1].date, category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }), await handlers["transactions-batch-update"]({ added: transactions, fastMode: !0 }); }
            async function fillMortgage(handlers, account, payees, groups) { let { incomePayee, incomeGroup } = extractCommonThings(payees, groups), numTransactions = integer(7, 10), amount = integer(1e5, 2e5), category = incomeGroup.categories.find(c => "Income" === c.name), transactions = [{ amount: 100 * integer(-3e3, -3500) * 100, payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subMonths(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), numTransactions) + "-02", category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }]; for (let i = 0; i < numTransactions; i++)
                transactions.push({ amount, payee: incomePayee.id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subMonths(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), i) + "-02", category: category.id, starting_balance_flag: !0 }); await handlers["transactions-batch-update"]({ added: transactions, fastMode: !0 }); }
            async function fillOther(handlers, account, payees, groups) { let { incomePayee, incomeGroup } = extractCommonThings(payees, groups), numTransactions = integer(3, 6), category = incomeGroup.categories.find(c => "Income" === c.name), transactions = [{ id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), amount: 100 * integer(3250, 3700) * 100, payee: payees.find(p => "Starting Balance" === p.name).id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subMonths(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), numTransactions) + "-02", category: getStartingBalanceCat(incomeGroup.categories), starting_balance_flag: !0 }]; for (let i = 0; i < numTransactions; i++) {
                let amount = 100 * integer(4, 9) * 100;
                transactions.push({ id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)(), amount, payee: incomePayee.id, account: account.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subMonths(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), i) + "-02", category: category.id });
            } await handlers["transactions-batch-update"]({ added: transactions, fastMode: !0 }); }
            async function createBudget(accounts, payees, groups) {
                let primaryAccount = accounts.find(a => a.name = "Bank of America"), earliestDate = (await _server_db__WEBPACK_IMPORTED_MODULE_4__.first(`SELECT t.date FROM v_transactions t LEFT JOIN accounts a ON t.account = a.id
       WHERE a.offbudget = 0 AND t.is_child = 0 ORDER BY date ASC LIMIT 1`)).date, earliestPrimaryDate = (await _server_db__WEBPACK_IMPORTED_MODULE_4__.first(`SELECT t.date FROM v_transactions t LEFT JOIN accounts a ON t.account = a.id
       WHERE a.id = ? AND a.offbudget = 0 AND t.is_child = 0 ORDER BY date ASC LIMIT 1`, [primaryAccount.id])).date, start = _shared_months__WEBPACK_IMPORTED_MODULE_8__.monthFromDate(_server_db__WEBPACK_IMPORTED_MODULE_4__.fromDateRepr(earliestDate)), end = _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentMonth(), months = _shared_months__WEBPACK_IMPORTED_MODULE_8__.rangeInclusive(start, end);
                function category(name) { for (let group of groups) {
                    let cat = group.categories.find(c => c.name === name);
                    if (cat)
                        return cat;
                } }
                function setBudget(month, category, amount) { return _server_budget_actions__WEBPACK_IMPORTED_MODULE_2__.setBudget({ month, category: category.id, amount }); }
                function setBudgetIfSpent(month, cat) { let spent = _server_sheet__WEBPACK_IMPORTED_MODULE_6__.getCellValue(_shared_months__WEBPACK_IMPORTED_MODULE_8__.sheetForMonth(month), `sum-amount-${cat.id}`); spent < 0 && setBudget(month, cat, -spent); }
                await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(() => (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.batchMessages)(async () => { for (let month of months)
                    month >= _shared_months__WEBPACK_IMPORTED_MODULE_8__.monthFromDate(_server_db__WEBPACK_IMPORTED_MODULE_4__.fromDateRepr(earliestPrimaryDate)) ? (setBudget(month, category("Food"), 4e4), setBudget(month, category("Restaurants"), 3e4), setBudget(month, category("Entertainment"), 1e4), setBudget(month, category("Clothing"), 3e3), setBudget(month, category("General"), 5e4), setBudget(month, category("Gift"), 7500), setBudget(month, category("Medical"), 1e4), setBudget(month, category("Cell"), 7500), setBudget(month, category("Internet"), 6e3), setBudget(month, category("Mortgage"), 12e4), setBudget(month, category("Water"), 9e3), setBudget(month, category("Power"), 1e4)) : (setBudgetIfSpent(month, category("Food")), setBudgetIfSpent(month, category("Restaurants")), setBudgetIfSpent(month, category("Entertainment")), setBudgetIfSpent(month, category("Clothing")), setBudgetIfSpent(month, category("General")), setBudgetIfSpent(month, category("Gift")), setBudgetIfSpent(month, category("Medical")), setBudgetIfSpent(month, category("Cell")), setBudgetIfSpent(month, category("Internet")), setBudgetIfSpent(month, category("Mortgage")), setBudgetIfSpent(month, category("Water")), setBudgetIfSpent(month, category("Power"))); })), await _server_sheet__WEBPACK_IMPORTED_MODULE_6__.waitOnSpreadsheet(), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(() => (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.batchMessages)(async () => { let prevSaved = 0; for (let month of months)
                    if (month >= _shared_months__WEBPACK_IMPORTED_MODULE_8__.monthFromDate(_server_db__WEBPACK_IMPORTED_MODULE_4__.fromDateRepr(earliestPrimaryDate)) && month <= _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentMonth()) {
                        let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_8__.sheetForMonth(month), available = _server_sheet__WEBPACK_IMPORTED_MODULE_6__.getCellValue(sheetName, "to-budget") - prevSaved;
                        available - 403e3 > 0 ? (setBudget(month, category("Savings"), available - 403e3), _server_budget_actions__WEBPACK_IMPORTED_MODULE_2__.setBuffer(month, 403e3), prevSaved += available - 403e3) : available > 0 && _server_budget_actions__WEBPACK_IMPORTED_MODULE_2__.setBuffer(month, available);
                    } })), await _server_sheet__WEBPACK_IMPORTED_MODULE_6__.waitOnSpreadsheet();
                let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_8__.sheetForMonth(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentMonth()), toBudget = _server_sheet__WEBPACK_IMPORTED_MODULE_6__.getCellValue(sheetName, "to-budget");
                toBudget < 0 && await (0, _server_accounts_sync__WEBPACK_IMPORTED_MODULE_0__.addTransactions)(primaryAccount.id, [{ amount: -toBudget, category: category("Income").id, date: _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentMonth() + "-01" }]), await _server_sheet__WEBPACK_IMPORTED_MODULE_6__.waitOnSpreadsheet();
            }
            async function createTestBudget(handlers) { (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.setSyncingMode)("import"), await _server_db__WEBPACK_IMPORTED_MODULE_4__.execQuery("PRAGMA journal_mode = OFF"), await _server_db__WEBPACK_IMPORTED_MODULE_4__.runQuery("DELETE FROM categories;"), await _server_db__WEBPACK_IMPORTED_MODULE_4__.runQuery("DELETE FROM category_groups"); let accounts = [{ name: "Bank of America" }, { name: "Ally Savings" }, { name: "Capital One Checking" }, { name: "HSBC" }, { name: "Vanguard 401k", offBudget: !0 }, { name: "Mortgage", offBudget: !0 }, { name: "House Asset", offBudget: !0 }, { name: "Roth IRA", offBudget: !0 }]; await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(async () => { for (let account of accounts)
                account.id = await handlers["account-create"](account); }); let newPayees = [{ name: "Starting Balance" }, { name: "Kroger" }, { name: "Publix" }, { name: "Home Depot" }, { name: "Movies" }, { name: "Online store" }, { name: "Deposit" }, { name: "Dominion Power", bill: !0 }, { name: "Extra Watery", bill: !0 }, { name: "Housy House", bill: !0 }, { name: "Fast Internet", bill: !0 }, { name: "T-mobile", bill: !0 }], payees = []; await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(() => (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.batchMessages)(async () => { for (let newPayee of newPayees) {
                let id = await handlers["payee-create"]({ name: newPayee.name });
                payees.push({ id, name: newPayee.name, ...newPayee });
            } })); let newCategoryGroups = [{ name: "Usual Expenses", categories: [{ name: "Savings" }, { name: "Medical" }, { name: "Gift" }, { name: "General" }, { name: "Clothing" }, { name: "Entertainment" }, { name: "Restaurants" }, { name: "Food" }] }, { name: "Bills", categories: [{ name: "Power" }, { name: "Water" }, { name: "Mortgage" }, { name: "Internet" }, { name: "Cell" }] }, { name: "Income", is_income: !0, categories: [{ name: "Income", is_income: !0 }, { name: "Misc", is_income: !0 }, { name: "Starting Balances", is_income: !0 }] }], categoryGroups = []; await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(async () => { for (let group of newCategoryGroups) {
                let groupId = await handlers["category-group-create"]({ name: group.name, isIncome: group.is_income });
                for (let category of (categoryGroups.push({ ...group, id: groupId, categories: [] }), group.categories)) {
                    let categoryId = await handlers["category-create"]({ ...category, isIncome: category.is_income, groupId });
                    categoryGroups[categoryGroups.length - 1].categories.push({ ...category, id: categoryId, group: groupId });
                }
            } }); let allGroups = (await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["get-categories"])).grouped; (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.setSyncingMode)("import"), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(() => (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.batchMessages)(async () => { for (let account of accounts)
                "Bank of America" === account.name ? await fillPrimaryChecking(handlers, account, payees, allGroups) : "Capital One Checking" === account.name || "HSBC" === account.name ? await fillChecking(handlers, account, payees, allGroups) : "Ally Savings" === account.name ? await fillSavings(handlers, account, payees, allGroups) : "Vanguard 401k" === account.name || "Roth IRA" === account.name ? await fillInvestment(handlers, account, payees, allGroups) : "Mortgage" === account.name ? await fillMortgage(handlers, account, payees, allGroups) : "House Asset" === account.name ? await fillOther(handlers, account, payees, allGroups) : (console.error("Unknown account name for test budget: ", account.name), await fillChecking(handlers, account, payees, allGroups)); })), (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.setSyncingMode)("import"); let primaryAccount = accounts.find(a => a.name = "Bank of America"), { data: primaryBalance } = await (0, _server_aql__WEBPACK_IMPORTED_MODULE_1__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_9__.q)("transactions").filter({ account: primaryAccount.id }).calculate({ $sum: "$amount" }).serialize()); if (primaryBalance < 0) {
                let { data: results } = await (0, _server_aql__WEBPACK_IMPORTED_MODULE_1__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_9__.q)("transactions").filter({ account: primaryAccount.id, amount: { $gt: 0 } }).limit(1).select(["id", "amount"]).serialize()), lastDeposit = results[0];
                await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["transaction-update"], { ...lastDeposit, amount: lastDeposit.amount + -primaryBalance + integer(1e4, 2e4) });
            } (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.setSyncingMode)("disabled"), await _server_sheet__WEBPACK_IMPORTED_MODULE_6__.reloadSpreadsheet(_server_db__WEBPACK_IMPORTED_MODULE_4__), await _server_budget_base__WEBPACK_IMPORTED_MODULE_3__.createAllBudgets(), await _server_sheet__WEBPACK_IMPORTED_MODULE_6__.waitOnSpreadsheet(), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(() => (0, _server_sync__WEBPACK_IMPORTED_MODULE_7__.batchMessages)(async () => { let account = accounts.find(acc => "Bank of America" === acc.name); await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["schedule/create"], { schedule: { name: "Phone bills", posts_transaction: !1 }, conditions: [{ op: "is", field: "payee", value: payees.find(item => "Dominion Power" === item.name).id }, { op: "is", field: "account", value: account.id }, { op: "is", field: "date", value: { start: _shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), frequency: "monthly", patterns: [], skipWeekend: !1, weekendSolveMode: "after" } }, { op: "isapprox", field: "amount", value: -12e3 }] }), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["schedule/create"], { schedule: { name: "Internet bill", posts_transaction: !1 }, conditions: [{ op: "is", field: "payee", value: payees.find(item => "Fast Internet" === item.name).id }, { op: "is", field: "account", value: account.id }, { op: "is", field: "date", value: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), 1) }, { op: "isapprox", field: "amount", value: -14e3 }] }), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["schedule/create"], { schedule: { name: "Wedding", posts_transaction: !1 }, conditions: [{ op: "is", field: "date", value: { start: _shared_months__WEBPACK_IMPORTED_MODULE_8__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), 3), frequency: "monthly", patterns: [], skipWeekend: !1, weekendSolveMode: "after" } }, { op: "is", field: "amount", value: -27e5 }] }), await (0, _server_mutators__WEBPACK_IMPORTED_MODULE_5__.runHandler)(handlers["schedule/create"], { schedule: { name: "Utilities", posts_transaction: !1 }, conditions: [{ op: "is", field: "account", value: account.id }, { op: "is", field: "date", value: { start: _shared_months__WEBPACK_IMPORTED_MODULE_8__.addDays(_shared_months__WEBPACK_IMPORTED_MODULE_8__.currentDay(), 1), frequency: "monthly", patterns: [], skipWeekend: !1, weekendSolveMode: "after" } }, { op: "is", field: "amount", value: -19e4 }] }); })), await createBudget(accounts, payees, allGroups); }
        }, "./packages/loot-core/src/mocks/random.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { random: () => random });
            var _shared_platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/platform.electron.ts");
            let pseudoRandomIterator = 0, random = _shared_platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright ? function () { return (pseudoRandomIterator += .45) > 1 && (pseudoRandomIterator = 0), pseudoRandomIterator; } : Math.random;
        }, "./packages/loot-core/src/platform/exceptions/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { captureBreadcrumb: () => captureBreadcrumb, captureException: () => captureException });
            let captureException = function (exc) { console.error("[Exception]", exc); }, captureBreadcrumb = function (crumb) { };
        }, "./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let store;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getItem: () => getItem, init: () => init, multiGet: () => multiGet, multiRemove: () => multiRemove, multiSet: () => multiSet, removeItem: () => removeItem, setItem: () => setItem });
            var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("fs"), path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("path"), _fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts");
            let getStorePath = () => (0, path__WEBPACK_IMPORTED_MODULE_1__.join)(_fs__WEBPACK_IMPORTED_MODULE_2__.getDataDir(), "global-store.json"), persisted = !0, init = function ({ persist = !0 } = {}) { if (persist)
                try {
                    store = JSON.parse(fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(getStorePath(), "utf8"));
                }
                catch (e) {
                    store = {};
                }
            else
                store = {}; persisted = persist; };
            function _saveStore() { if (persisted)
                return new Promise(function (resolve, reject) { fs__WEBPACK_IMPORTED_MODULE_0__.writeFile(getStorePath(), JSON.stringify(store), "utf8", function (err) { return err ? reject(err) : resolve(); }); }); }
            let getItem = function (key) { return new Promise(function (resolve) { return resolve(store[key]); }); }, setItem = function (key, value) { return store[key] = value, _saveStore(); }, removeItem = function (key) { return delete store[key], _saveStore(); };
            async function multiGet(keys) { return keys.map(key => [key, store[key]]).reduce((acc, [key, value]) => (acc[key] = value, acc), {}); }
            let multiSet = function (keyValues) { return keyValues.forEach(function ([key, value]) { store[key] = value; }), _saveStore(); }, multiRemove = function (keys) { return keys.forEach(function (key) { delete store[key]; }), _saveStore(); };
        }, "./packages/loot-core/src/platform/server/connection/index.api.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getNumClients: () => getNumClients, init: () => init, send: () => send });
            let init = function () { }, send = function () { }, getNumClients = function () { return 1; };
        }, "./packages/loot-core/src/platform/server/fetch/index.api.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { fetch: () => fetch1 });
            let fetch1 = globalThis.fetch;
        }, "./packages/loot-core/src/platform/server/fs/index.electron.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { _setDocumentDir: () => _shared__WEBPACK_IMPORTED_MODULE_3__._setDocumentDir, basename: () => basename, bundledDatabasePath: () => bundledDatabasePath, copyFile: () => copyFile, demoBudgetPath: () => demoBudgetPath, exists: () => exists, getBudgetDir: () => _shared__WEBPACK_IMPORTED_MODULE_3__.getBudgetDir, getDataDir: () => getDataDir, getDocumentDir: () => _shared__WEBPACK_IMPORTED_MODULE_3__.getDocumentDir, getModifiedTime: () => getModifiedTime, init: () => init, join: () => join, listDir: () => listDir, migrationsPath: () => migrationsPath, mkdir: () => mkdir, readFile: () => readFile, removeDir: () => removeDir, removeDirRecursively: () => removeDirRecursively, removeFile: () => removeFile, size: () => size, writeFile: () => writeFile });
            var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("fs"), path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("path"), promise_retry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/promise-retry/index.js"), promise_retry__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(promise_retry__WEBPACK_IMPORTED_MODULE_2__), _shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/shared.ts");
            let rootPath = path__WEBPACK_IMPORTED_MODULE_1__.join(__dirname, "..", "..", "..", "..");
            switch (path__WEBPACK_IMPORTED_MODULE_1__.basename(__filename)) {
                case "bundle.api.js":
                    rootPath = path__WEBPACK_IMPORTED_MODULE_1__.join(__dirname, "..");
                    break;
                case "bundle.desktop.js": rootPath = path__WEBPACK_IMPORTED_MODULE_1__.join(__dirname, "..", "..");
            }
            let init = () => { }, getDataDir = () => { if (!process.env.ACTUAL_DATA_DIR)
                throw Error("ACTUAL_DATA_DIR env variable is required"); return process.env.ACTUAL_DATA_DIR; }, bundledDatabasePath = path__WEBPACK_IMPORTED_MODULE_1__.join(rootPath, "default-db.sqlite"), migrationsPath = path__WEBPACK_IMPORTED_MODULE_1__.join(rootPath, "migrations"), demoBudgetPath = path__WEBPACK_IMPORTED_MODULE_1__.join(rootPath, "demo-budget"), join = path__WEBPACK_IMPORTED_MODULE_1__.join, basename = filepath => path__WEBPACK_IMPORTED_MODULE_1__.basename(filepath), listDir = filepath => new Promise((resolve, reject) => { fs__WEBPACK_IMPORTED_MODULE_0__.readdir(filepath, (err, files) => { err ? reject(err) : resolve(files); }); }), exists = filepath => new Promise(resolve => { fs__WEBPACK_IMPORTED_MODULE_0__.access(filepath, fs__WEBPACK_IMPORTED_MODULE_0__.constants.F_OK, err => resolve(!err)); }), mkdir = filepath => new Promise((resolve, reject) => { fs__WEBPACK_IMPORTED_MODULE_0__.mkdir(filepath, err => { err ? reject(err) : resolve(void 0); }); }), size = filepath => new Promise((resolve, reject) => { fs__WEBPACK_IMPORTED_MODULE_0__.stat(filepath, (err, stats) => { err ? reject(err) : resolve(stats.size); }); }), copyFile = (frompath, topath) => new Promise((resolve, reject) => { let readStream = fs__WEBPACK_IMPORTED_MODULE_0__.createReadStream(frompath), writeStream = fs__WEBPACK_IMPORTED_MODULE_0__.createWriteStream(topath); readStream.on("error", reject), writeStream.on("error", reject), writeStream.on("open", () => readStream.pipe(writeStream)), writeStream.once("close", () => resolve(!0)); }), readFile = (filepath, encoding = "utf8") => ("binary" === encoding && (encoding = null), new Promise((resolve, reject) => { fs__WEBPACK_IMPORTED_MODULE_0__.readFile(filepath, encoding, (err, data1) => { err ? reject(err) : resolve(data1); }); })), writeFile = async (filepath, contents) => { try {
                await promise_retry__WEBPACK_IMPORTED_MODULE_2___default()((retry, attempt) => new Promise((resolve, reject) => { fs__WEBPACK_IMPORTED_MODULE_0__.writeFile(filepath, contents, "utf8", err => { err ? (console.error(`Failed to write to ${filepath}. Attempted ${attempt} times. Something is locking the file - potentially a virus scanner or backup software.`), reject(err)) : (attempt > 1 && console.info(`Successfully recovered from file lock. It took ${attempt} retries`), resolve(void 0)); }); }).catch(retry), { retries: 20, minTimeout: 100, maxTimeout: 500, factor: 1.5 });
                return;
            }
            catch (err) {
                throw console.error(`Unable to recover from file lock on file ${filepath}`), err;
            } }, removeFile = filepath => new Promise(function (resolve, reject) { fs__WEBPACK_IMPORTED_MODULE_0__.unlink(filepath, err => err ? reject(err) : resolve(void 0)); }), removeDir = dirpath => new Promise(function (resolve, reject) { fs__WEBPACK_IMPORTED_MODULE_0__.rmdir(dirpath, err => err ? reject(err) : resolve(void 0)); }), removeDirRecursively = async (dirpath) => { if (await exists(dirpath)) {
                for (let file of (await listDir(dirpath))) {
                    let fullpath = join(dirpath, file);
                    fs__WEBPACK_IMPORTED_MODULE_0__.statSync(fullpath).isDirectory() ? await removeDirRecursively(fullpath) : await removeFile(fullpath);
                }
                await removeDir(dirpath);
            } }, getModifiedTime = filepath => new Promise(function (resolve, reject) { fs__WEBPACK_IMPORTED_MODULE_0__.stat(filepath, (err, stats) => { err ? reject(err) : resolve(new Date(stats.mtime)); }); });
        }, "./packages/loot-core/src/platform/server/fs/path-join.electron.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { join: () => path__WEBPACK_IMPORTED_MODULE_0__.join });
            var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("path");
        }, "./packages/loot-core/src/platform/server/fs/shared.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let documentDir;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { _setDocumentDir: () => _setDocumentDir, getBudgetDir: () => getBudgetDir, getDocumentDir: () => getDocumentDir });
            var _path_join__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/path-join.electron.ts");
            let _setDocumentDir = dir => documentDir = dir, getDocumentDir = () => { if (!documentDir)
                throw Error("Document directory is not set"); return documentDir; }, getBudgetDir = id => { if (!id)
                throw Error("getDocumentDir: id is falsy: " + id); if (id.match(/[^A-Za-z0-9\-_]/))
                throw Error(`Invalid budget id “${id}”. Check the id of your budget in the Advanced section of the settings page.`); return (0, _path_join__WEBPACK_IMPORTED_MODULE_0__.join)(getDocumentDir(), id); };
        }, "./packages/loot-core/src/platform/server/log/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { logger: () => logger });
            let logger = { info: (...args) => { console.log(...args); }, warn: (...args) => { console.warn(...args); } };
        }, "./packages/loot-core/src/platform/server/sqlite/index.electron.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { asyncTransaction: () => asyncTransaction, closeDatabase: () => closeDatabase, execQuery: () => execQuery, exportDatabase: () => exportDatabase, init: () => init, openDatabase: () => openDatabase, prepare: () => prepare, runQuery: () => runQuery, transaction: () => transaction });
            var better_sqlite3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("better-sqlite3"), better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_0__), uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _normalise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/normalise.ts"), _unicodeLike__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/unicodeLike.ts");
            async function init() { }
            function prepare(db, sql) { return db.prepare(sql); }
            function runQuery(db, sql, params = [], fetchAll = !1) { let stmt; params && params.forEach(val1 => { if ("string" != typeof val1 && "number" != typeof val1 && null !== val1)
                throw console.log(sql, params), Error("Invalid field type " + val1 + " for sql " + sql); }); try {
                stmt = "string" == typeof sql ? db.prepare(sql) : sql;
            }
            catch (e) {
                throw console.log("error", sql), e;
            } if (fetchAll)
                try {
                    return stmt.all(...params);
                }
                catch (e) {
                    throw console.log("error", sql), e;
                } try {
                let info = stmt.run(...params);
                return { changes: info.changes, insertId: info.lastInsertRowid };
            }
            catch (e) {
                throw e;
            } }
            function execQuery(db, sql) { db.exec(sql); }
            function transaction(db, fn) { db.transaction(fn)(); }
            let transactionDepth = 0;
            async function asyncTransaction(db, fn) { 0 === transactionDepth && db.exec("BEGIN TRANSACTION"), transactionDepth++; try {
                await fn();
            }
            finally {
                0 == --transactionDepth && db.exec("COMMIT");
            } }
            function regexp(regex, text) { return +!!new RegExp(regex).test(text || ""); }
            function openDatabase(pathOrBuffer) { let db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_0___default())(pathOrBuffer); return db.function("UNICODE_LOWER", { deterministic: !0 }, arg => arg?.toLowerCase()), db.function("UNICODE_UPPER", { deterministic: !0 }, arg => arg?.toUpperCase()), db.function("UNICODE_LIKE", { deterministic: !0 }, _unicodeLike__WEBPACK_IMPORTED_MODULE_3__.unicodeLike), db.function("REGEXP", { deterministic: !0 }, regexp), db.function("NORMALISE", { deterministic: !0 }, _normalise__WEBPACK_IMPORTED_MODULE_2__.normalise), db; }
            function closeDatabase(db) { return db.close(); }
            async function exportDatabase(db) { let name = `${process.env.ACTUAL_DATA_DIR}/backup-for-export-${(0, uuid__WEBPACK_IMPORTED_MODULE_4__.default)()}.db`; await db.backup(name); let data1 = await (0, _fs__WEBPACK_IMPORTED_MODULE_1__.readFile)(name, "binary"); return await (0, _fs__WEBPACK_IMPORTED_MODULE_1__.removeFile)(name), data1; }
        }, "./packages/loot-core/src/platform/server/sqlite/normalise.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { normalise: () => normalise });
            var _shared_normalisation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/normalisation.ts");
            function normalise(value) { return value ? (0, _shared_normalisation__WEBPACK_IMPORTED_MODULE_0__.getNormalisedString)(value) : null; }
        }, "./packages/loot-core/src/platform/server/sqlite/unicodeLike.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { unicodeLike: () => unicodeLike });
            let likePatternCache = new (__webpack_require__("./node_modules/lru-cache/dist/esm/index.js")).LRUCache({ max: 500 });
            function unicodeLike(pattern, value) { if (!pattern)
                return 0; value || (value = ""); let cachedRegExp = likePatternCache.get(pattern); return cachedRegExp || (cachedRegExp = RegExp(pattern.replace(/[.*+^${}()|[\]\\]/g, "\\$&").replaceAll("?", ".").replaceAll("%", ".*"), "i"), likePatternCache.set(pattern, cachedRegExp)), +!!cachedRegExp.test(value); }
        }, "./packages/loot-core/src/server/accounts/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/i18next/dist/esm/i18next.js"), uuid__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _shared_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/environment.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _main_app__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/main-app.ts"), _mutators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _post__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _server_config__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _sync__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _undo__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _link__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/accounts/link.ts"), _payees__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./packages/loot-core/src/server/accounts/payees.ts"), _sync__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./packages/loot-core/src/server/accounts/sync.ts");
            async function updateAccount({ id, name, last_reconciled }) { return await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, name, ...last_reconciled && { last_reconciled } }), {}; }
            async function getAccounts() { return _db__WEBPACK_IMPORTED_MODULE_8__.getAccounts(); }
            async function getAccountBalance({ id, cutoff }) { let result = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT sum(amount) as balance FROM transactions WHERE acct = ? AND isParent = 0 AND tombstone = 0 AND date <= ?", [id, _db__WEBPACK_IMPORTED_MODULE_8__.toDateRepr((0, _shared_months__WEBPACK_IMPORTED_MODULE_5__.dayFromDate)(cutoff))]); return result?.balance ? result.balance : 0; }
            async function getAccountProperties({ id }) { let balanceResult = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT sum(amount) as balance FROM transactions WHERE acct = ? AND isParent = 0 AND tombstone = 0", [id]), countResult = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT count(id) as count FROM transactions WHERE acct = ? AND tombstone = 0", [id]); return { balance: balanceResult?.balance || 0, numTransactions: countResult?.count || 0 }; }
            async function linkGoCardlessAccount({ requisitionId, account, upgradingId, offBudget = !1 }) { let id, bank = await _link__WEBPACK_IMPORTED_MODULE_16__.findOrCreateBank(account.institution, requisitionId); if (upgradingId) {
                let accRow = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT * FROM accounts WHERE id = ?", [upgradingId]);
                if (!accRow)
                    throw Error(`Account with ID ${upgradingId} not found.`);
                id = accRow.id, await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, account_id: account.account_id, bank: bank.id, account_sync_source: "goCardless" });
            }
            else
                id = (0, uuid__WEBPACK_IMPORTED_MODULE_19__.default)(), await _db__WEBPACK_IMPORTED_MODULE_8__.insertWithUUID("accounts", { id, account_id: account.account_id, mask: account.mask, name: account.name, official_name: account.official_name, bank: bank.id, offbudget: +!!offBudget, account_sync_source: "goCardless" }), await _db__WEBPACK_IMPORTED_MODULE_8__.insertPayee({ name: "", transfer_acct: id }); return await _sync__WEBPACK_IMPORTED_MODULE_18__.syncAccount(void 0, void 0, id, account.account_id, bank.bank_id), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("sync-event", { type: "success", tables: ["transactions"] }), "ok"; }
            async function linkSimpleFinAccount({ externalAccount, upgradingId, offBudget = !1 }) { let id, institution = { name: externalAccount.institution ?? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unknown") }, bank = await _link__WEBPACK_IMPORTED_MODULE_16__.findOrCreateBank(institution, externalAccount.orgDomain ?? externalAccount.orgId); if (upgradingId) {
                let accRow = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT * FROM accounts WHERE id = ?", [upgradingId]);
                if (!accRow)
                    throw Error(`Account with ID ${upgradingId} not found.`);
                id = accRow.id, await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, account_id: externalAccount.account_id, bank: bank.id, account_sync_source: "simpleFin" });
            }
            else
                id = (0, uuid__WEBPACK_IMPORTED_MODULE_19__.default)(), await _db__WEBPACK_IMPORTED_MODULE_8__.insertWithUUID("accounts", { id, account_id: externalAccount.account_id, name: externalAccount.name, official_name: externalAccount.name, bank: bank.id, offbudget: +!!offBudget, account_sync_source: "simpleFin" }), await _db__WEBPACK_IMPORTED_MODULE_8__.insertPayee({ name: "", transfer_acct: id }); return await _sync__WEBPACK_IMPORTED_MODULE_18__.syncAccount(void 0, void 0, id, externalAccount.account_id, bank.bank_id), await _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("sync-event", { type: "success", tables: ["transactions"] }), "ok"; }
            async function linkPluggyAiAccount({ externalAccount, upgradingId, offBudget = !1 }) { let id, institution = { name: externalAccount.institution ?? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unknown") }, bank = await _link__WEBPACK_IMPORTED_MODULE_16__.findOrCreateBank(institution, externalAccount.orgDomain ?? externalAccount.orgId); if (upgradingId) {
                let accRow = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT * FROM accounts WHERE id = ?", [upgradingId]);
                if (!accRow)
                    throw Error(`Account with ID ${upgradingId} not found.`);
                id = accRow.id, await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, account_id: externalAccount.account_id, bank: bank.id, account_sync_source: "pluggyai" });
            }
            else
                id = (0, uuid__WEBPACK_IMPORTED_MODULE_19__.default)(), await _db__WEBPACK_IMPORTED_MODULE_8__.insertWithUUID("accounts", { id, account_id: externalAccount.account_id, name: externalAccount.name, official_name: externalAccount.name, bank: bank.id, offbudget: +!!offBudget, account_sync_source: "pluggyai" }), await _db__WEBPACK_IMPORTED_MODULE_8__.insertPayee({ name: "", transfer_acct: id }); return await _sync__WEBPACK_IMPORTED_MODULE_18__.syncAccount(void 0, void 0, id, externalAccount.account_id, bank.bank_id), await _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("sync-event", { type: "success", tables: ["transactions"] }), "ok"; }
            async function createAccount({ name, balance = 0, offBudget = !1, closed = !1 }) { let id = await _db__WEBPACK_IMPORTED_MODULE_8__.insertAccount({ name, offbudget: +!!offBudget, closed: +!!closed }); if (await _db__WEBPACK_IMPORTED_MODULE_8__.insertPayee({ name: "", transfer_acct: id }), null != balance && 0 !== balance) {
                let payee = await (0, _payees__WEBPACK_IMPORTED_MODULE_17__.getStartingBalancePayee)();
                await _db__WEBPACK_IMPORTED_MODULE_8__.insertTransaction({ account: id, amount: (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.amountToInteger)(balance), category: offBudget ? null : payee.category, payee: payee.id, date: _shared_months__WEBPACK_IMPORTED_MODULE_5__.currentDay(), cleared: !0, starting_balance_flag: !0 });
            } return id; }
            async function closeAccount({ id, transferAccountId, categoryId, forced = !1 }) { return await unlinkAccount({ id }), (0, _undo__WEBPACK_IMPORTED_MODULE_15__.withUndo)(async () => { let account = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT * FROM accounts WHERE id = ? AND tombstone = 0", [id]); if (!account || 1 === account.closed)
                return; let { balance, numTransactions } = await getAccountProperties({ id }); if (0 === numTransactions)
                await _db__WEBPACK_IMPORTED_MODULE_8__.deleteAccount({ id });
            else if (forced) {
                let rows = await _db__WEBPACK_IMPORTED_MODULE_8__.runQuery("SELECT id, transfer_id FROM v_transactions WHERE account = ?", [id], !0), transferPayee = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT id FROM payees WHERE transfer_acct = ?", [id]);
                if (!transferPayee)
                    throw Error(`Transfer payee with account ID ${id} not found.`);
                await (0, _sync__WEBPACK_IMPORTED_MODULE_14__.batchMessages)(async () => { rows.forEach(row => { row.transfer_id && _db__WEBPACK_IMPORTED_MODULE_8__.updateTransaction({ id: row.transfer_id, payee: null, transfer_id: null }), _db__WEBPACK_IMPORTED_MODULE_8__.deleteTransaction({ id: row.id }); }), _db__WEBPACK_IMPORTED_MODULE_8__.deleteAccount({ id }), _db__WEBPACK_IMPORTED_MODULE_8__.deleteTransferPayee({ id: transferPayee.id }); });
            }
            else {
                if (0 !== balance && null == transferAccountId)
                    throw (0, _errors__WEBPACK_IMPORTED_MODULE_9__.APIError)("balance is non-zero: transferAccountId is required");
                if (await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, closed: 1 }), 0 !== balance && transferAccountId) {
                    let transferPayee = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT id FROM payees WHERE transfer_acct = ?", [transferAccountId]);
                    if (!transferPayee)
                        throw Error(`Transfer payee with account ID ${transferAccountId} not found.`);
                    await _main_app__WEBPACK_IMPORTED_MODULE_10__.app.handlers["transaction-add"]({ id: (0, uuid__WEBPACK_IMPORTED_MODULE_19__.default)(), payee: transferPayee.id, amount: -balance, account: id, date: _shared_months__WEBPACK_IMPORTED_MODULE_5__.currentDay(), notes: "Closing account", category: categoryId });
                }
            } }); }
            async function reopenAccount({ id }) { await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id, closed: 0 }); }
            async function moveAccount({ id, targetId }) { await _db__WEBPACK_IMPORTED_MODULE_8__.moveAccount(id, targetId); }
            async function setSecret({ name, value }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); try {
                return await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.BASE_SERVER + "/secret", { name, value }, { "X-ACTUAL-TOKEN": userToken });
            }
            catch (error) {
                return { error: "failed", reason: error instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.PostError ? error.reason : void 0 };
            } }
            async function checkSecret(name) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); try {
                return await (0, _post__WEBPACK_IMPORTED_MODULE_12__.get)(serverConfig.BASE_SERVER + "/secret/" + name, { "X-ACTUAL-TOKEN": userToken });
            }
            catch (error) {
                return console.error(error), { error: "failed" };
            } }
            let stopPolling = !1;
            async function pollGoCardlessWebToken({ requisitionId }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unknown" }; let startTime = Date.now(); async function getData(cb) { if (stopPolling)
                return; if (Date.now() - startTime >= 6e5)
                return void cb({ status: "timeout" }); let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); let data1 = await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.GOCARDLESS_SERVER + "/get-accounts", { requisitionId }, { "X-ACTUAL-TOKEN": userToken }); data1 ? data1.error_code ? (console.error("Failed linking gocardless account:", data1), cb({ status: "unknown", message: data1.error_type })) : cb({ status: "success", data: data1 }) : setTimeout(() => getData(cb), 3e3); } return stopPolling = !1, new Promise(resolve => { getData(data1 => "success" === data1.status ? void resolve({ data: data1.data }) : "timeout" === data1.status ? void resolve({ error: data1.status }) : void resolve({ error: data1.status, message: data1.message })); }); }
            async function stopGoCardlessWebTokenPolling() { return stopPolling = !0, "ok"; }
            async function goCardlessStatus() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); return (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.GOCARDLESS_SERVER + "/status", {}, { "X-ACTUAL-TOKEN": userToken }); }
            async function simpleFinStatus() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); return (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.SIMPLEFIN_SERVER + "/status", {}, { "X-ACTUAL-TOKEN": userToken }); }
            async function pluggyAiStatus() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); return (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.PLUGGYAI_SERVER + "/status", {}, { "X-ACTUAL-TOKEN": userToken }); }
            async function simpleFinAccounts() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); try {
                return await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.SIMPLEFIN_SERVER + "/accounts", {}, { "X-ACTUAL-TOKEN": userToken }, 6e4);
            }
            catch (error) {
                return { error_code: "TIMED_OUT" };
            } }
            async function pluggyAiAccounts() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); try {
                return await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.PLUGGYAI_SERVER + "/accounts", {}, { "X-ACTUAL-TOKEN": userToken }, 6e4);
            }
            catch (error) {
                return { error_code: "TIMED_OUT" };
            } }
            async function getGoCardlessBanks(country) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); return (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.GOCARDLESS_SERVER + "/get-banks", { country, showDemo: (0, _shared_environment__WEBPACK_IMPORTED_MODULE_4__.isNonProductionEnvironment)() }, { "X-ACTUAL-TOKEN": userToken }); }
            async function createGoCardlessWebToken({ institutionId, accessValidForDays }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return { error: "unauthorized" }; let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)(); if (!serverConfig)
                throw Error("Failed to get server config."); try {
                return await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.GOCARDLESS_SERVER + "/create-web-token", { institutionId, accessValidForDays }, { "X-ACTUAL-TOKEN": userToken });
            }
            catch (error) {
                return console.error(error), { error: "failed" };
            } }
            async function handleSyncResponse(res, acct) { let { added, updated } = res, newTransactions = [], matchedTransactions = [], updatedAccounts = []; newTransactions.push(...added), matchedTransactions.push(...updated), added.length > 0 && updatedAccounts.push(acct.id); let ts = new Date().getTime().toString(); return await _db__WEBPACK_IMPORTED_MODULE_8__.update("accounts", { id: acct.id, last_sync: ts }), { newTransactions, matchedTransactions, updatedAccounts }; }
            function handleSyncError(err, acct) { if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.BankSyncError || err?.type === "BankSyncError") {
                let syncError = { type: "SyncError", accountId: acct.id, message: "Failed syncing account “" + acct.name + ".”", category: err.category, code: err.code };
                return "RATE_LIMIT_EXCEEDED" === err.category ? { ...syncError, message: `Failed syncing account ${acct.name}. Rate limit exceeded. Please try again later.` } : syncError;
            } return err instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.PostError && "internal" !== err.reason ? { accountId: acct.id, message: err.reason ? err.reason : `Account “${acct.name}” is not linked properly. Please link it again.` } : { accountId: acct.id, message: "There was an internal error. Please get in touch https://actualbudget.org/contact for support.", internal: err.stack }; }
            async function accountsBankSync({ ids = [] }) {
                let { "user-id": userId, "user-key": userKey } = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.multiGet(["user-id", "user-key"]), accounts = await _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(`
    SELECT a.*, b.bank_id as bankId
    FROM accounts a
    LEFT JOIN banks b ON a.bank = b.id
    WHERE a.tombstone = 0 AND a.closed = 0
      ${ids.length ? `AND a.id IN (${ids.map(() => "?").join(", ")})` : ""}
    ORDER BY a.offbudget, a.sort_order
  `, ids, !0), errors = [], newTransactions = [], matchedTransactions = [], updatedAccounts = [];
                for (let acct of accounts)
                    if (acct.bankId && acct.account_id)
                        try {
                            console.group("Bank Sync operation for account:", acct.name);
                            let syncResponse = await _sync__WEBPACK_IMPORTED_MODULE_18__.syncAccount(userId, userKey, acct.id, acct.account_id, acct.bankId), syncResponseData = await handleSyncResponse(syncResponse, acct);
                            newTransactions.push(...syncResponseData.newTransactions), matchedTransactions.push(...syncResponseData.matchedTransactions), updatedAccounts.push(...syncResponseData.updatedAccounts);
                        }
                        catch (err) {
                            errors.push(handleSyncError(err, acct)), (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureException)({ ...err, message: "Failed syncing account “" + acct.name + ".”" });
                        }
                        finally {
                            console.groupEnd();
                        }
                return updatedAccounts.length > 0 && _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("sync-event", { type: "success", tables: ["transactions"] }), { errors, newTransactions, matchedTransactions, updatedAccounts };
            }
            async function simpleFinBatchSync({ ids = [] }) {
                let accounts = await _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(`SELECT a.*, b.bank_id as bankId FROM accounts a
         LEFT JOIN banks b ON a.bank = b.id
         WHERE
          a.tombstone = 0
          AND a.closed = 0
          AND a.account_sync_source = 'simpleFin'
          ${ids.length ? `AND a.id IN (${ids.map(() => "?").join(", ")})` : ""}
         ORDER BY a.offbudget, a.sort_order`, ids.length ? ids : [], !0), retVal = [];
                console.group("Bank Sync operation for all SimpleFin accounts");
                try {
                    for (let syncResponse of (await _sync__WEBPACK_IMPORTED_MODULE_18__.simpleFinBatchSync(accounts.map(a => ({ id: a.id, account_id: a.account_id || null }))))) {
                        let account = accounts.find(a => a.id === syncResponse.accountId);
                        if (!account) {
                            console.error(`Invalid account ID found in response: ${syncResponse.accountId}. Proceeding to the next account...`);
                            continue;
                        }
                        let errors = [], newTransactions = [], matchedTransactions = [], updatedAccounts = [];
                        if (syncResponse.res.error_code)
                            errors.push(handleSyncError({ type: "BankSyncError", reason: "Failed syncing account “" + account.name + ".”", category: syncResponse.res.error_type, code: syncResponse.res.error_code }, account));
                        else {
                            let syncResponseData = await handleSyncResponse(syncResponse.res, account);
                            newTransactions.push(...syncResponseData.newTransactions), matchedTransactions.push(...syncResponseData.matchedTransactions), updatedAccounts.push(...syncResponseData.updatedAccounts);
                        }
                        retVal.push({ accountId: syncResponse.accountId, res: { errors, newTransactions, matchedTransactions, updatedAccounts } });
                    }
                }
                catch (err) {
                    let errors = [];
                    for (let account of accounts)
                        retVal.push({ accountId: account.id, res: { errors, newTransactions: [], matchedTransactions: [], updatedAccounts: [] } }), errors.push(handleSyncError(err, account));
                }
                return retVal.some(a => a.res.updatedAccounts.length > 0) && _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("sync-event", { type: "success", tables: ["transactions"] }), console.groupEnd(), retVal;
            }
            async function importTransactions({ accountId, transactions, isPreview, opts }) { if ("string" != typeof accountId)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_9__.APIError)("transactions-import: accountId must be an id"); try {
                let reconciled = await _sync__WEBPACK_IMPORTED_MODULE_18__.reconcileTransactions(accountId, transactions, !1, !0, isPreview, opts?.defaultCleared);
                return { errors: [], added: reconciled.added, updated: reconciled.updated, updatedPreview: reconciled.updatedPreview };
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.TransactionError)
                    return { errors: [{ message: err.message }], added: [], updated: [], updatedPreview: [] };
                throw err;
            } }
            async function unlinkAccount({ id }) { let accRow = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT * FROM accounts WHERE id = ?", [id]); if (!accRow)
                throw Error(`Account with ID ${id} not found.`); let bankId = accRow.bank; if (!bankId)
                return "ok"; let isGoCardless = "goCardless" === accRow.account_sync_source; if (await _db__WEBPACK_IMPORTED_MODULE_8__.updateAccount({ id, account_id: null, bank: null, balance_current: null, balance_available: null, balance_limit: null, account_sync_source: null }), !1 === isGoCardless)
                return; let accountWithBankResult = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT COUNT(*) as count FROM accounts WHERE bank = ?", [bankId]), userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); if (!userToken)
                return "ok"; if (!accountWithBankResult || 0 === accountWithBankResult.count) {
                let bank = await _db__WEBPACK_IMPORTED_MODULE_8__.first("SELECT bank_id FROM banks WHERE id = ?", [bankId]);
                if (!bank)
                    throw Error(`Bank with ID ${bankId} not found.`);
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_13__.getServer)();
                if (!serverConfig)
                    throw Error("Failed to get server config.");
                let requisitionId = bank.bank_id;
                try {
                    await (0, _post__WEBPACK_IMPORTED_MODULE_12__.post)(serverConfig.GOCARDLESS_SERVER + "/remove-account", { requisitionId }, { "X-ACTUAL-TOKEN": userToken });
                }
                catch (error) {
                    console.log({ error });
                }
            } return "ok"; }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_7__.createApp)();
            app.method("account-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_15__.undoable)(updateAccount))), app.method("accounts-get", getAccounts), app.method("account-balance", getAccountBalance), app.method("account-properties", getAccountProperties), app.method("gocardless-accounts-link", linkGoCardlessAccount), app.method("simplefin-accounts-link", linkSimpleFinAccount), app.method("pluggyai-accounts-link", linkPluggyAiAccount), app.method("account-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_15__.undoable)(createAccount))), app.method("account-close", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)(closeAccount)), app.method("account-reopen", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_15__.undoable)(reopenAccount))), app.method("account-move", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_15__.undoable)(moveAccount))), app.method("secret-set", setSecret), app.method("secret-check", checkSecret), app.method("gocardless-poll-web-token", pollGoCardlessWebToken), app.method("gocardless-poll-web-token-stop", stopGoCardlessWebTokenPolling), app.method("gocardless-status", goCardlessStatus), app.method("simplefin-status", simpleFinStatus), app.method("pluggyai-status", pluggyAiStatus), app.method("simplefin-accounts", simpleFinAccounts), app.method("pluggyai-accounts", pluggyAiAccounts), app.method("gocardless-get-banks", getGoCardlessBanks), app.method("gocardless-create-web-token", createGoCardlessWebToken), app.method("accounts-bank-sync", accountsBankSync), app.method("simplefin-batch-sync", simpleFinBatchSync), app.method("transactions-import", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_15__.undoable)(importTransactions))), app.method("account-unlink", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)(unlinkAccount));
        }, "./packages/loot-core/src/server/accounts/link.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { findOrCreateBank: () => findOrCreateBank });
            var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            async function findOrCreateBank(institution, requisitionId) { let bank = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT id, bank_id FROM banks WHERE bank_id = ?", [requisitionId]); if (bank)
                return bank; let bankData = { id: (0, uuid__WEBPACK_IMPORTED_MODULE_1__.default)(), bank_id: requisitionId, name: institution.name }; return await _db__WEBPACK_IMPORTED_MODULE_0__.insertWithUUID("banks", bankData), bankData; }
        }, "./packages/loot-core/src/server/accounts/payees.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createPayee: () => createPayee, getStartingBalancePayee: () => getStartingBalancePayee });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            async function createPayee(description) { let row = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT id FROM payees WHERE UNICODE_LOWER(name) = ? AND tombstone = 0", [description.toLowerCase()]); return row ? row.id : await _db__WEBPACK_IMPORTED_MODULE_0__.insertPayee({ name: description }); }
            async function getStartingBalancePayee() {
                let category = await _db__WEBPACK_IMPORTED_MODULE_0__.first(`
    SELECT * FROM categories
      WHERE is_income = 1 AND
      LOWER(name) = 'starting balances' AND
      tombstone = 0
  `);
                return null === category && (category = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT * FROM categories WHERE is_income = 1 AND tombstone = 0")), { id: await createPayee("Starting Balance"), category: category ? category.id : null };
            }
        }, "./packages/loot-core/src/server/accounts/sync.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addTransactions: () => addTransactions, getGoCardlessAccounts: () => getGoCardlessAccounts, matchTransactions: () => matchTransactions, reconcileTransactions: () => reconcileTransactions, simpleFinBatchSync: () => simpleFinBatchSync, syncAccount: () => syncAccount });
            var date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/max.js"), date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/date-fns/differenceInMilliseconds.js"), date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/date-fns/parseISO.js"), uuid__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_transactions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/transactions.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _mutators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _post__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _server_config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _sync__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _transactions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/transactions/index.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _util_custom_sync_mapping__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/util/custom-sync-mapping.ts"), _payees__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/accounts/payees.ts"), _title__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/accounts/title/index.ts");
            function BankSyncError(type, code, details) { return { type: "BankSyncError", category: type, code, details }; }
            function makeSplitTransaction(trans, subtransactions) { let { subtransactions: sub, ...parent } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_3__.recalculateSplit)({ ...trans, is_parent: !0, subtransactions: subtransactions.map((transaction, idx) => (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_3__.makeChild)(trans, { ...transaction, sort_order: 0 - idx })) }); return [parent, ...sub]; }
            async function updateAccountBalance(id, balance) { await _db__WEBPACK_IMPORTED_MODULE_6__.runQuery("UPDATE accounts SET balance_current = ? WHERE id = ?", [balance, id]); }
            async function getAccountOldestTransaction(id) { return (await (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_2__.q)("transactions").filter({ account: id, date: { $lte: _shared_months__WEBPACK_IMPORTED_MODULE_1__.currentDay() } }).select("date").orderBy("date").limit(1))).data?.[0]; }
            async function getAccountSyncStartDate(id) { let dates = [_shared_months__WEBPACK_IMPORTED_MODULE_1__.subDays(_shared_months__WEBPACK_IMPORTED_MODULE_1__.currentDay(), 90)], oldestTransaction = await getAccountOldestTransaction(id); return oldestTransaction && dates.push(oldestTransaction.date), _shared_months__WEBPACK_IMPORTED_MODULE_1__.dayFromDate(date_fns__WEBPACK_IMPORTED_MODULE_16__.max(dates.map(d => _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate(d)))); }
            async function getGoCardlessAccounts(userId, userKey, id) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return; let { accounts } = await (0, _post__WEBPACK_IMPORTED_MODULE_8__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_9__.getServer)().GOCARDLESS_SERVER + "/accounts", { userId, key: userKey, item_id: id }, { "X-ACTUAL-TOKEN": userToken }); return accounts.forEach(acct => { acct.balances.current = function (account) { switch (account.type) {
                case "credit":
                case "loan": return -account.balances.current;
                default: return account.balances.current;
            } }(acct); }), accounts; }
            async function downloadGoCardlessTransactions(userId, userKey, acctId, bankId, since, includeBalance = !0) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return; console.log("Pulling transactions from GoCardless"); let res = await (0, _post__WEBPACK_IMPORTED_MODULE_8__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_9__.getServer)().GOCARDLESS_SERVER + "/transactions", { userId, key: userKey, requisitionId: bankId, accountId: acctId, startDate: since, includeBalance }, { "X-ACTUAL-TOKEN": userToken }); if (res.error_code) {
                let errorDetails = { rateLimitHeaders: res.rateLimitHeaders };
                throw BankSyncError(res.error_type, res.error_code, errorDetails);
            } if (!includeBalance)
                return console.log("Response:", res), { transactions: res.transactions.all }; {
                let { transactions: { all }, balances, startingBalance } = res;
                return console.log("Response:", res), { transactions: all, accountBalance: balances, startingBalance };
            } }
            async function downloadSimpleFinTransactions(acctId, since) { let res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return; let batchSync = Array.isArray(acctId); console.log("Pulling transactions from SimpleFin"); try {
                res = await (0, _post__WEBPACK_IMPORTED_MODULE_8__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_9__.getServer)().SIMPLEFIN_SERVER + "/transactions", { accountId: acctId, startDate: since }, { "X-ACTUAL-TOKEN": userToken }, Array.isArray(acctId) ? 3e5 : 6e4);
            }
            catch (error) {
                throw console.error("Suspected timeout during bank sync:", error), BankSyncError("TIMED_OUT", "TIMED_OUT");
            } if (0 === Object.keys(res).length)
                throw BankSyncError("NO_DATA", "NO_DATA"); if (res.error_code)
                throw BankSyncError(res.error_type, res.error_code); let retVal = {}; if (batchSync)
                for (let [accountId, data1] of Object.entries(res)) {
                    if ("errors" === accountId)
                        continue;
                    let error = res?.errors?.[accountId]?.[0];
                    retVal[accountId] = { transactions: data1?.transactions?.all, accountBalance: data1?.balances, startingBalance: data1?.startingBalance }, error && (retVal[accountId].error_type = error.error_type, retVal[accountId].error_code = error.error_code);
                }
            else {
                let singleRes = res;
                retVal = { transactions: singleRes.transactions.all, accountBalance: singleRes.balances, startingBalance: singleRes.startingBalance };
            } return console.log("Response:", retVal), retVal; }
            async function downloadPluggyAiTransactions(acctId, since) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return; console.log("Pulling transactions from Pluggy.ai"); let res = await (0, _post__WEBPACK_IMPORTED_MODULE_8__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_9__.getServer)().PLUGGYAI_SERVER + "/transactions", { accountId: acctId, startDate: since }, { "X-ACTUAL-TOKEN": userToken }, 6e4); if (res.error_code)
                throw BankSyncError(res.error_type, res.error_code); if ("error" in res)
                throw BankSyncError("Connection", res.error); let retVal = {}; return console.log("Response:", retVal = { transactions: res.transactions.all, accountBalance: res.balances, startingBalance: res.startingBalance }), retVal; }
            async function resolvePayee(trans, payeeName, payeesToCreate) { if (null == trans.payee && payeeName) {
                let payee = payeesToCreate.get(payeeName.toLowerCase());
                if (null != (payee = payee || await _db__WEBPACK_IMPORTED_MODULE_6__.getPayeeByName(payeeName)))
                    return payee.id;
                {
                    let newPayee = { id: (0, uuid__WEBPACK_IMPORTED_MODULE_17__.default)(), name: payeeName };
                    return payeesToCreate.set(payeeName.toLowerCase(), newPayee), newPayee.id;
                }
            } return trans.payee; }
            async function normalizeTransactions(transactions, acctId, { rawPayeeName = !1 } = {}) { let payeesToCreate = new Map, normalized = []; for (let trans of transactions) {
                if (null == trans.date)
                    throw Error("`date` is required when adding a transaction");
                let { payee_name: originalPayeeName, subtransactions, ...rest } = trans;
                trans = rest;
                let payee_name = originalPayeeName;
                if (payee_name) {
                    let trimmed = payee_name.trim();
                    payee_name = "" === trimmed ? null : rawPayeeName ? trimmed : (0, _title__WEBPACK_IMPORTED_MODULE_15__.title)(trimmed);
                }
                trans.imported_payee = trans.imported_payee || payee_name, trans.imported_payee && (trans.imported_payee = trans.imported_payee.trim()), trans.account = acctId, trans.payee = await resolvePayee(trans, payee_name, payeesToCreate), trans.category = trans.category ?? null, normalized.push({ payee_name, subtransactions: subtransactions ? subtransactions.map(t => ({ ...t, account: acctId })) : null, trans });
            } return { normalized, payeesToCreate }; }
            async function normalizeBankSyncTransactions(transactions, acctId) { let payeesToCreate = new Map, [customMappingsRaw, importPending, importNotes] = await Promise.all([(0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_2__.q)("preferences").filter({ id: `custom-sync-mappings-${acctId}` }).select("value")).then(data1 => data1?.data?.[0]?.value), (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_2__.q)("preferences").filter({ id: `sync-import-pending-${acctId}` }).select("value")).then(data1 => "true" === String(data1?.data?.[0]?.value ?? "true")), (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_2__.q)("preferences").filter({ id: `sync-import-notes-${acctId}` }).select("value")).then(data1 => "true" === String(data1?.data?.[0]?.value ?? "true"))]), mappings = customMappingsRaw ? (0, _util_custom_sync_mapping__WEBPACK_IMPORTED_MODULE_13__.mappingsFromString)(customMappingsRaw) : _util_custom_sync_mapping__WEBPACK_IMPORTED_MODULE_13__.defaultMappings, normalized = []; for (let trans of transactions) {
                if (trans.cleared = !!trans.booked, !importPending && !trans.cleared)
                    continue;
                trans.amount || (trans.amount = trans.transactionAmount.amount);
                let mapping = mappings.get(trans.amount <= 0 ? "payment" : "deposit"), date = trans[mapping.get("date")] ?? trans.date, payeeName = trans[mapping.get("payee")], notes = trans[mapping.get("notes")];
                if (null == date)
                    throw Error("`date` is required when adding a transaction");
                if (null == payeeName)
                    throw Error("`payeeName` is required when adding a transaction");
                trans.imported_payee = trans.imported_payee || payeeName, trans.imported_payee && (trans.imported_payee = trans.imported_payee.trim());
                let imported_id = trans.transactionId;
                trans.cleared && !trans.transactionId && trans.internalTransactionId && (imported_id = `${trans.account}-${trans.internalTransactionId}`), trans.account = acctId, trans.payee = await resolvePayee(trans, payeeName, payeesToCreate), normalized.push({ payee_name: payeeName, trans: { amount: (0, _shared_util__WEBPACK_IMPORTED_MODULE_4__.amountToInteger)(trans.amount), payee: trans.payee, account: trans.account, date, notes: importNotes && notes ? notes.trim().replace(/#/g, "##") : null, category: trans.category ?? null, imported_id, imported_payee: trans.imported_payee, cleared: trans.cleared, raw_synced_data: JSON.stringify(trans) } });
            } return { normalized, payeesToCreate }; }
            async function createNewPayees(payeesToCreate, addsAndUpdates) { let usedPayeeIds = new Set(addsAndUpdates.map(t => t.payee)); await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { for (let payee of payeesToCreate.values())
                usedPayeeIds.has(payee.id) && await _db__WEBPACK_IMPORTED_MODULE_6__.insertPayee(payee); }); }
            async function reconcileTransactions(acctId, transactions, isBankSyncAccount = !1, strictIdChecking = !0, isPreview = !1, defaultCleared = !0) { console.log("Performing transaction reconciliation"); let updated = [], added = [], updatedPreview = [], existingPayeeMap = new Map, { payeesToCreate, transactionsStep1, transactionsStep2, transactionsStep3 } = await matchTransactions(acctId, transactions, isBankSyncAccount, strictIdChecking); for (let { trans, subtransactions, match } of transactionsStep3)
                if (match && !trans.forceAddTransaction) {
                    if (match.reconciled) {
                        updatedPreview.push({ transaction: trans, ignored: !0 });
                        continue;
                    }
                    let existing = { ...match, cleared: 1 === match.cleared, date: _db__WEBPACK_IMPORTED_MODULE_6__.fromDateRepr(match.date) }, updates = { imported_id: trans.imported_id || null, payee: existing.payee || trans.payee || null, category: existing.category || trans.category || null, imported_payee: trans.imported_payee || null, notes: existing.notes || trans.notes || null, cleared: trans.cleared ?? existing.cleared, raw_synced_data: existing.raw_synced_data ?? trans.raw_synced_data ?? null }, fieldsToMarkUpdated = Object.keys(updates).filter(k => !!existing.raw_synced_data || !!trans.raw_synced_data || "raw_synced_data" !== k);
                    if ((0, _shared_util__WEBPACK_IMPORTED_MODULE_4__.hasFieldsChanged)(existing, updates, fieldsToMarkUpdated)) {
                        if (updated.push({ id: existing.id, ...updates }), !existingPayeeMap.has(existing.payee)) {
                            let payee = await _db__WEBPACK_IMPORTED_MODULE_6__.getPayee(existing.payee);
                            existingPayeeMap.set(existing.payee, payee?.name);
                        }
                        existing.payee_name = existingPayeeMap.get(existing.payee), existing.amount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_4__.integerToAmount)(existing.amount), updatedPreview.push({ transaction: trans, existing });
                    }
                    else
                        updatedPreview.push({ transaction: trans, ignored: !0 });
                    if (existing.is_parent && existing.cleared !== updates.cleared)
                        for (let child of (await _db__WEBPACK_IMPORTED_MODULE_6__.all("SELECT id FROM v_transactions WHERE parent_id = ?", [existing.id])))
                            updated.push({ id: child.id, cleared: updates.cleared });
                }
                else {
                    let { forceAddTransaction, ...newTrans } = trans, finalTransaction = { ...newTrans, id: (0, uuid__WEBPACK_IMPORTED_MODULE_17__.default)(), category: trans.category || null, cleared: trans.cleared ?? defaultCleared };
                    subtransactions && subtransactions.length > 0 ? added.push(...makeSplitTransaction(finalTransaction, subtransactions)) : added.push(finalTransaction);
                } let now = Date.now(); return added.forEach((t, index) => { t.sort_order ??= now - index; }), isPreview || (await createNewPayees(payeesToCreate, [...added, ...updated]), await (0, _transactions__WEBPACK_IMPORTED_MODULE_11__.batchUpdateTransactions)({ added, updated })), console.log("Debug data for the operations:", { transactionsStep1, transactionsStep2, transactionsStep3, added, updated, updatedPreview }), { added: added.map(trans => trans.id), updated: updated.map(trans => trans.id), updatedPreview }; }
            async function matchTransactions(acctId, transactions, isBankSyncAccount = !1, strictIdChecking = !0) {
                console.log("Performing transaction reconciliation matching");
                let reimportDeleted = await (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_2__.q)("preferences").filter({ id: `sync-reimport-deleted-${acctId}` }).select("value")).then(data1 => "true" === String(data1?.data?.[0]?.value ?? "true")), hasMatched = new Set, { normalized, payeesToCreate } = await (isBankSyncAccount ? normalizeBankSyncTransactions : normalizeTransactions)(transactions, acctId), accountsMap = new Map((await _db__WEBPACK_IMPORTED_MODULE_6__.getAccounts()).map(account => [account.id, account])), transactionsStep1 = [];
                for (let { payee_name, trans: originalTrans, subtransactions } of normalized) {
                    let trans = await (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_12__.runRules)(originalTrans, accountsMap), match = null, fuzzyDataset = null;
                    if (trans.imported_id) {
                        let table = reimportDeleted ? "v_transactions" : "v_transactions_internal";
                        (match = await _db__WEBPACK_IMPORTED_MODULE_6__.first(`SELECT * FROM ${table} WHERE imported_id = ? AND account = ?`, [trans.imported_id, acctId])) && hasMatched.add(match.id);
                    }
                    if (!match) {
                        let sevenDaysBefore = _db__WEBPACK_IMPORTED_MODULE_6__.toDateRepr(_shared_months__WEBPACK_IMPORTED_MODULE_1__.subDays(trans.date, 7)), sevenDaysAfter = _db__WEBPACK_IMPORTED_MODULE_6__.toDateRepr(_shared_months__WEBPACK_IMPORTED_MODULE_1__.addDays(trans.date, 7));
                        fuzzyDataset = (fuzzyDataset = strictIdChecking ? await _db__WEBPACK_IMPORTED_MODULE_6__.all(`SELECT id, is_parent, date, imported_id, payee, imported_payee, category, notes, reconciled, cleared, amount
          FROM v_transactions
          WHERE
            -- If both ids are set, and we didn't match earlier then skip dedup
            (imported_id IS NULL OR ? IS NULL)
            AND date >= ? AND date <= ? AND amount = ?
            AND account = ?`, [trans.imported_id || null, sevenDaysBefore, sevenDaysAfter, trans.amount || 0, acctId]) : await _db__WEBPACK_IMPORTED_MODULE_6__.all(`SELECT id, is_parent, date, imported_id, payee, imported_payee, category, notes, reconciled, cleared, amount
          FROM v_transactions
          WHERE date >= ? AND date <= ? AND amount = ? AND account = ?`, [sevenDaysBefore, sevenDaysAfter, trans.amount || 0, acctId])).sort((a, b) => Math.abs(date_fns__WEBPACK_IMPORTED_MODULE_18__.differenceInMilliseconds(date_fns__WEBPACK_IMPORTED_MODULE_19__.parseISO(trans.date), date_fns__WEBPACK_IMPORTED_MODULE_19__.parseISO(_db__WEBPACK_IMPORTED_MODULE_6__.fromDateRepr(a.date)))) > Math.abs(date_fns__WEBPACK_IMPORTED_MODULE_18__.differenceInMilliseconds(date_fns__WEBPACK_IMPORTED_MODULE_19__.parseISO(trans.date), date_fns__WEBPACK_IMPORTED_MODULE_19__.parseISO(_db__WEBPACK_IMPORTED_MODULE_6__.fromDateRepr(b.date)))) ? 1 : -1);
                    }
                    transactionsStep1.push({ payee_name, trans, subtransactions: trans.subtransactions || subtransactions, match, fuzzyDataset });
                }
                let transactionsStep2 = transactionsStep1.map(data1 => { if (!data1.match && data1.fuzzyDataset) {
                    let match = data1.fuzzyDataset.find(row => !hasMatched.has(row.id) && data1.trans.payee === row.payee);
                    if (match)
                        return hasMatched.add(match.id), { ...data1, match };
                } return data1; }), transactionsStep3 = transactionsStep2.map(data1 => { if (!data1.match && data1.fuzzyDataset) {
                    let match = data1.fuzzyDataset.find(row => !hasMatched.has(row.id));
                    if (match)
                        return hasMatched.add(match.id), { ...data1, match };
                } return data1; });
                return { payeesToCreate, transactionsStep1, transactionsStep2, transactionsStep3 };
            }
            async function addTransactions(acctId, transactions, { runTransfers = !0, learnCategories = !1 } = {}) { let newTransactions, added = [], { normalized, payeesToCreate } = await normalizeTransactions(transactions, acctId, { rawPayeeName: !0 }), accountsMap = new Map((await _db__WEBPACK_IMPORTED_MODULE_6__.getAccounts()).map(account => [account.id, account])); for (let { trans: originalTrans, subtransactions } of normalized) {
                let trans = await (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_12__.runRules)(originalTrans, accountsMap), finalTransaction = { id: (0, uuid__WEBPACK_IMPORTED_MODULE_17__.default)(), ...trans, account: acctId, cleared: null == trans.cleared || trans.cleared }, updatedSubtransactions = finalTransaction.subtransactions || subtransactions;
                updatedSubtransactions && updatedSubtransactions.length > 0 ? added.push(...makeSplitTransaction(finalTransaction, updatedSubtransactions)) : added.push(finalTransaction);
            } return await createNewPayees(payeesToCreate, added), runTransfers || learnCategories ? newTransactions = (await (0, _transactions__WEBPACK_IMPORTED_MODULE_11__.batchUpdateTransactions)({ added, learnCategories, runTransfers })).added.map(t => t.id) : await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { newTransactions = await Promise.all(added.map(async (trans) => _db__WEBPACK_IMPORTED_MODULE_6__.insertTransaction(trans))); }), newTransactions; }
            async function processBankSyncDownload(download, id, acctRow, initialSync = !1) { let useStrictIdChecking = !acctRow.account_sync_source, { transactions: originalTransactions, startingBalance: currentBalance } = download; if (initialSync) {
                let { transactions } = download, balanceToUse = currentBalance;
                if ("simpleFin" === acctRow.account_sync_source && (balanceToUse = transactions.reduce((total, trans) => total - parseInt(trans.transactionAmount.amount.replace(".", "")), currentBalance)), "pluggyai" === acctRow.account_sync_source) {
                    let currentBalance = download.startingBalance;
                    balanceToUse = Math.round(transactions.reduce((total, trans) => total - 100 * trans.transactionAmount.amount, currentBalance));
                }
                let oldestTransaction = transactions[transactions.length - 1], oldestDate = transactions.length > 0 ? oldestTransaction.date : _shared_months__WEBPACK_IMPORTED_MODULE_1__.currentDay(), payee = await (0, _payees__WEBPACK_IMPORTED_MODULE_14__.getStartingBalancePayee)();
                return (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.runMutator)(async () => { let initialId = await _db__WEBPACK_IMPORTED_MODULE_6__.insertTransaction({ account: id, amount: balanceToUse, category: 0 === acctRow.offbudget ? payee.category : null, payee: payee.id, date: oldestDate, cleared: !0, starting_balance_flag: !0 }), result = await reconcileTransactions(id, transactions, !0, useStrictIdChecking); return { ...result, added: [initialId, ...result.added] }; });
            } if (0 === originalTransactions.length)
                return { added: [], updated: [] }; let transactions = originalTransactions.map(trans => ({ ...trans, account: id })); return (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.runMutator)(async () => { let result = await reconcileTransactions(id, transactions, !0, useStrictIdChecking); return currentBalance && await updateAccountBalance(id, currentBalance), result; }); }
            async function syncAccount(userId, userKey, id, acctId, bankId) { let download, acctRow = await _db__WEBPACK_IMPORTED_MODULE_6__.select("accounts", id), syncStartDate = await getAccountSyncStartDate(id), newAccount = null == await getAccountOldestTransaction(id); if ("simpleFin" === acctRow.account_sync_source)
                download = await downloadSimpleFinTransactions(acctId, syncStartDate);
            else if ("pluggyai" === acctRow.account_sync_source)
                download = await downloadPluggyAiTransactions(acctId, syncStartDate);
            else if ("goCardless" === acctRow.account_sync_source)
                download = await downloadGoCardlessTransactions(userId, userKey, acctId, bankId, syncStartDate, newAccount);
            else
                throw Error(`Unrecognized bank-sync provider: ${acctRow.account_sync_source}`); return processBankSyncDownload(download, id, acctRow, newAccount); }
            async function simpleFinBatchSync(accounts) { let startDates = await Promise.all(accounts.map(async (a) => getAccountSyncStartDate(a.id))), res = await downloadSimpleFinTransactions(accounts.map(a => a.account_id), startDates), promises = []; for (let i = 0; i < accounts.length; i++) {
                let account = accounts[i], download = res[account.account_id], acctRow = await _db__WEBPACK_IMPORTED_MODULE_6__.select("accounts", account.id), newAccount = null == await getAccountOldestTransaction(account.id);
                if (download.error_code) {
                    promises.push(Promise.resolve({ accountId: account.id, res: download }));
                    continue;
                }
                promises.push(processBankSyncDownload(download, account.id, acctRow, newAccount).then(res => ({ accountId: account.id, res })));
            } return await Promise.all(promises); }
        }, "./packages/loot-core/src/server/accounts/title/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { title: () => title });
            var _lower_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/accounts/title/lower-case.ts"), _specials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/accounts/title/specials.ts");
            let character = "[0-9A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶ-ͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԣԱ-Ֆՙա-ևא-תװ-ײء-يٮ-ٯٱ-ۓەۥ-ۦۮ-ۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴ-ߵߺऄ-हऽॐक़-ॡॱ-ॲॻ-ॿঅ-ঌএ-ঐও-নপ-রলশ-হঽৎড়-ঢ়য়-ৡৰ-ৱਅ-ਊਏ-ਐਓ-ਨਪ-ਰਲ-ਲ਼ਵ-ਸ਼ਸ-ਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલ-ળવ-હઽૐૠ-ૡଅ-ଌଏ-ଐଓ-ନପ-ରଲ-ଳଵ-ହଽଡ଼-ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கங-சஜஞ-டண-தந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘ-ౙౠ-ౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠ-ೡഅ-ഌഎ-ഐഒ-നപ-ഹഽൠ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะา-ำเ-ๆກ-ຂຄງ-ຈຊຍດ-ທນ-ຟມ-ຣລວສ-ຫອ-ະາ-ຳຽເ-ໄໆໜ-ໝༀཀ-ཇཉ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥ-ၦၮ-ၰၵ-ႁႎႠ-Ⴥა-ჺჼᄀ-ᅙᅟ-ᆢᆨ-ᇹሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙶᚁ-ᚚᚠ-ᛪᛮ-ᛰᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦩᧁ-ᧇᨀ-ᨖᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮ-ᮯᰀ-ᰣᱍ-ᱏᱚ-ᱽᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₔℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-Ⱞⰰ-ⱞⱠ-Ɐⱱ-ⱽⲀ-ⳤⴀ-ⴥⴰ-ⵥⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆷㇰ-ㇿ㐀䶵一鿃ꀀ-ꒌꔀ-ꘌꘐ-ꘟꘪ-ꘫꙀ-ꙟꙢ-ꙮꙿ-ꚗꜗ-ꜟꜢ-ꞈꞋ-ꞌꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꤊ-ꤥꤰ-ꥆꨀ-ꨨꩀ-ꩂꩄ-ꩋ가힣豈-鶴侮-頻並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]", regex = RegExp(`(?:(?:(\\s?(?:^|[.\\(\\)!?;:"-])\\s*)(${character}))|(${character}))(${character}*[’']*${character}*)`, "g"), convertToRegExp = specials => specials.map(s => [RegExp(`\\b${s}\\b`, "gi"), s]);
            function title(str, options1 = { special: void 0 }) { str = str.toLowerCase().replace(regex, (m, lead = "", forced, lower, rest) => { let parsedMatch = function (match) { let firstCharacter = match[0]; return /\s/.test(firstCharacter) ? match.substr(1) : /[()]/.test(firstCharacter) ? null : match; }(m); if (!parsedMatch)
                return m; if (!forced) {
                let fullLower = lower + rest;
                if (_lower_case__WEBPACK_IMPORTED_MODULE_0__.lowerCaseSet.has(fullLower))
                    return parsedMatch;
            } return lead + (lower || forced).toUpperCase() + rest; }); let customSpecials = options1.special || []; return convertToRegExp([..._specials__WEBPACK_IMPORTED_MODULE_1__.specials, ...customSpecials]).forEach(([pattern, s]) => { str = str.replace(pattern, s); }), str; }
        }, "./packages/loot-core/src/server/accounts/title/lower-case.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { lowerCaseSet: () => lowerCaseSet });
            let lowerCaseSet = new Set(["for", "and", "nor", "but", "or", "yet", "so", "a", "an", "the", "aboard", "about", "above", "across", "after", "against", "along", "amid", "among", "anti", "around", "as", "at", "before", "behind", "below", "beneath", "beside", "besides", "between", "beyond", "but", "by", "concerning", "considering", "despite", "down", "during", "except", "excepting", "excluding", "following", "for", "from", "in", "inside", "into", "like", "minus", "near", "of", "off", "on", "onto", "opposite", "over", "past", "per", "plus", "regarding", "round", "save", "since", "than", "through", "to", "toward", "towards", "under", "underneath", "unlike", "until", "up", "upon", "versus", "via", "with", "within", "without"]);
        }, "./packages/loot-core/src/server/accounts/title/specials.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { specials: () => specials });
            let specials = ["CLI", "API", "HTTP", "HTTPS", "JSX", "DNS", "URL", "CI", "CDN", "GitHub", "CSS", "JS", "JavaScript", "TypeScript", "HTML", "WordPress", "JavaScript", "Next.js", "Node.js"];
        }, "./packages/loot-core/src/server/admin/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _post__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _server_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_1__.createApp)();
            async function getUsers() { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken) {
                let res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.get)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/users/", { headers: { "X-ACTUAL-TOKEN": userToken } });
                if (res)
                    try {
                        return JSON.parse(res);
                    }
                    catch (err) {
                        return { error: "Failed to parse response: " + err.message };
                    }
            } return null; }
            async function deleteAllUsers(ids) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    let res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.del)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/users", { ids }, { "X-ACTUAL-TOKEN": userToken });
                    if (res)
                        return res;
                }
                catch (err) {
                    return { error: err.reason };
                } return { someDeletionsFailed: !0 }; }
            async function addUser(user) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    return await (0, _post__WEBPACK_IMPORTED_MODULE_2__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/users/", user, { "X-ACTUAL-TOKEN": userToken });
                }
                catch (err) {
                    return { error: err.reason };
                } return null; }
            async function updateUser(user) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    return await (0, _post__WEBPACK_IMPORTED_MODULE_2__.patch)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/users/", user, { "X-ACTUAL-TOKEN": userToken });
                }
                catch (err) {
                    return { error: err.reason };
                } return null; }
            async function addAccess(access) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    return await (0, _post__WEBPACK_IMPORTED_MODULE_2__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/access/", access, { "X-ACTUAL-TOKEN": userToken }), {};
                }
                catch (err) {
                    return { error: err.reason };
                } return null; }
            async function deleteAllAccess({ fileId, ids }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    let res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.del)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + `/admin/access?fileId=${fileId}`, { token: userToken, ids });
                    if (res)
                        return res;
                }
                catch (err) {
                    return { error: err.reason };
                } return { someDeletionsFailed: !0 }; }
            async function accessGetAvailableUsers(fileId) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken) {
                let res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.get)(`${(0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/access/users"}?fileId=${fileId}`, { headers: { "X-ACTUAL-TOKEN": userToken } });
                if (res)
                    try {
                        return JSON.parse(res);
                    }
                    catch (err) {
                        return { error: "Failed to parse response: " + err.message };
                    }
            } return []; }
            async function transferOwnership({ fileId, newUserId }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (userToken)
                try {
                    await (0, _post__WEBPACK_IMPORTED_MODULE_2__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/access/transfer-ownership/", { fileId, newUserId }, { "X-ACTUAL-TOKEN": userToken });
                }
                catch (err) {
                    return { error: err.reason };
                } return {}; }
            async function ownerCreated() { let res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.get)((0, _server_config__WEBPACK_IMPORTED_MODULE_3__.getServer)().BASE_SERVER + "/admin/owner-created/"); return res ? JSON.parse(res) : null; }
            app.method("users-get", getUsers), app.method("user-delete-all", deleteAllUsers), app.method("user-add", addUser), app.method("user-update", updateUser), app.method("access-add", addAccess), app.method("access-delete-all", deleteAllAccess), app.method("access-get-available-users", accessGetAvailableUsers), app.method("transfer-ownership", transferOwnership), app.method("owner-created", ownerCreated);
        }, "./packages/loot-core/src/server/api-models.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { accountModel: () => accountModel, budgetModel: () => budgetModel, categoryGroupModel: () => categoryGroupModel, categoryModel: () => categoryModel, payeeModel: () => payeeModel, remoteFileModel: () => remoteFileModel });
            var _models__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/models.ts");
            let accountModel = { ..._models__WEBPACK_IMPORTED_MODULE_0__.accountModel, toExternal: account => ({ id: account.id, name: account.name, offbudget: !!account.offbudget, closed: !!account.closed }), fromExternal(account) { let result = { ...account }; return "offbudget" in account && (result.offbudget = +!!account.offbudget), "closed" in account && (result.closed = +!!account.closed), result; } }, categoryModel = { ..._models__WEBPACK_IMPORTED_MODULE_0__.categoryModel, toExternal: category => ({ id: category.id, name: category.name, is_income: !!category.is_income, hidden: !!category.hidden, group_id: category.group }), fromExternal(category) { let { group_id, ...apiCategory } = category; return { ...apiCategory, group: group_id }; } }, categoryGroupModel = { ..._models__WEBPACK_IMPORTED_MODULE_0__.categoryGroupModel, toExternal: group => ({ id: group.id, name: group.name, is_income: !!group.is_income, hidden: !!group.hidden, categories: group.categories?.map(categoryModel.toExternal) || [] }), fromExternal(group) { let result = { ...group }; return "categories" in group && (result.categories = group.categories.map(categoryModel.fromExternal)), result; } }, payeeModel = { ..._models__WEBPACK_IMPORTED_MODULE_0__.payeeModel, toExternal: payee => ({ id: payee.id, name: payee.name, transfer_acct: payee.transfer_acct }), fromExternal: payee => payee }, remoteFileModel = { toExternal: file => file.deleted ? null : { cloudFileId: file.fileId, state: "remote", groupId: file.groupId, name: file.name, encryptKeyId: file.encryptKeyId, hasKey: file.hasKey, owner: file.owner, usersWithAccess: file.usersWithAccess }, fromExternal: file => ({ deleted: !1, fileId: file.cloudFileId, ...file }) }, budgetModel = { toExternal: file => file, fromExternal: file => file };
        }, "./packages/loot-core/src/server/api.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { installAPI: () => installAPI });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _shared_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/errors.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_transactions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/transactions.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _accounts_sync__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/accounts/sync.ts"), _api_models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/api-models.ts"), _aql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _cloud_storage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/cloud-storage.ts"), _db__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _mutators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _prefs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _sheet__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _sync__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            let IMPORT_MODE = !1;
            function withMutation(handler) { return (...args) => (0, _mutators__WEBPACK_IMPORTED_MODULE_13__.runMutator)(async () => { let latestTimestamp = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString(), result = await handler(...args), rows = await _db__WEBPACK_IMPORTED_MODULE_11__.all("SELECT DISTINCT dataset FROM messages_crdt WHERE timestamp > ?", [latestTimestamp]); return _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.getNumClients() > 1 && _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("sync-event", { type: "success", tables: rows.map(row => row.dataset) }), result; }, { undoDisabled: !0 }); }
            let handlers = {};
            async function validateMonth(month) { if (!month.match(/^\d{4}-\d{2}$/))
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Invalid month format, use YYYY-MM: " + month); if (!IMPORT_MODE) {
                let { start, end } = await handlers["get-budget-bounds"]();
                if (!_shared_months__WEBPACK_IMPORTED_MODULE_3__.range(start, end).includes(month))
                    throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("No budget exists for month: " + month);
            } }
            async function validateExpenseCategory(debug, id) { if (null == id)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)(`${debug}: category id is required`); let row = await _db__WEBPACK_IMPORTED_MODULE_11__.first("SELECT is_income FROM categories WHERE id = ?", [id]); if (!row)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)(`${debug}: category “${id}” does not exist`); if (0 !== row.is_income)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)(`${debug}: category “${id}” is not an expense category`); }
            function checkFileOpen() { if (!(_prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs() || {}).id)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("No budget file is open"); }
            let batchPromise = null;
            function installAPI(serverHandlers) { let merged = Object.assign({}, serverHandlers, handlers); return handlers = merged, merged; }
            handlers["api/batch-budget-start"] = async function () { if (batchPromise)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Cannot start a batch process: batch already started"); IMPORT_MODE ? _db__WEBPACK_IMPORTED_MODULE_11__.asyncTransaction(() => new Promise((resolve, reject) => { batchPromise = { resolve, reject }; })) : (0, _sync__WEBPACK_IMPORTED_MODULE_16__.batchMessages)(() => new Promise((resolve, reject) => { batchPromise = { resolve, reject }; })); }, handlers["api/batch-budget-end"] = async function () { if (!batchPromise)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Cannot end a batch process: no batch started"); batchPromise.resolve(), batchPromise = null; }, handlers["api/load-budget"] = async function ({ id }) { let { id: currentId } = _prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs() || {}; if (currentId !== id) {
                _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("start-load");
                let { error } = await handlers["load-budget"]({ id });
                if (error)
                    throw _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("show-budgets"), Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getSyncError)(error, id));
                _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("finish-load");
            } }, handlers["api/download-budget"] = async function ({ syncId, password }) { let remoteBudget, { id: currentId } = _prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs() || {}; currentId && await handlers["close-budget"](); let localBudget = (await handlers["get-budgets"]()).find(b => b.groupId === syncId); if (!localBudget) {
                let files = await handlers["get-remote-files"]();
                if (!files)
                    throw Error("Could not get remote files");
                let file = files.find(f => f.groupId === syncId);
                if (!file)
                    throw Error(`Budget “${syncId}” not found. Check the sync id of your budget in the Advanced section of the settings page.`);
                remoteBudget = file;
            } let activeFile = remoteBudget || localBudget; if (activeFile.encryptKeyId) {
                if (!password)
                    throw Error(`File ${activeFile.name} is encrypted. Please provide a password.`);
                let result = await handlers["key-test"]({ cloudFileId: remoteBudget ? remoteBudget.fileId : localBudget.cloudFileId, password });
                if (result.error)
                    throw Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getTestKeyError)(result.error));
            } if (localBudget) {
                await handlers["load-budget"]({ id: localBudget.id });
                let result = await handlers["sync-budget"]();
                if (result.error)
                    throw Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getSyncError)(result.error, localBudget.id));
                return;
            } let result = await handlers["download-budget"]({ cloudFileId: remoteBudget.fileId }); if (result.error)
                throw console.log("Full error details", result.error), Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getDownloadError)(result.error)); await handlers["load-budget"]({ id: result.id }); }, handlers["api/get-budgets"] = async function () { let budgets = await handlers["get-budgets"](), files = await handlers["get-remote-files"]() || []; return [...budgets.map(file => _api_models__WEBPACK_IMPORTED_MODULE_8__.budgetModel.toExternal(file)), ...files.map(file => _api_models__WEBPACK_IMPORTED_MODULE_8__.remoteFileModel.toExternal(file)).filter(file => file)]; }, handlers["api/sync"] = async function () { let { id } = _prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs(), result = await handlers["sync-budget"](); if (result.error)
                throw Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getSyncError)(result.error, id)); }, handlers["api/bank-sync"] = async function (args) { let batchSync = args?.accountId == null, allErrors = []; if (batchSync) {
                let accountsData = await handlers["accounts-get"](), accountIdsToSync = accountsData.map(a => a.id), simpleFinAccounts = accountsData.filter(a => "simpleFin" === a.account_sync_source), simpleFinAccountIds = simpleFinAccounts.map(a => a.id);
                simpleFinAccounts.length > 1 && (await handlers["simplefin-batch-sync"]({ ids: simpleFinAccountIds })).forEach(a => allErrors.push(...a.res.errors));
                let { errors } = await handlers["accounts-bank-sync"]({ ids: accountIdsToSync.filter(a => !simpleFinAccountIds.includes(a)) });
                allErrors.push(...errors);
            }
            else {
                let { errors } = await handlers["accounts-bank-sync"]({ ids: [args.accountId] });
                allErrors.push(...errors);
            } let errors = allErrors.filter(e => null != e); if (errors.length > 0)
                throw Error((0, _shared_errors__WEBPACK_IMPORTED_MODULE_2__.getBankSyncError)(errors[0])); }, handlers["api/start-import"] = async function ({ budgetName }) { await handlers["close-budget"](), await handlers["create-budget"]({ budgetName, avoidUpload: !0 }), await _db__WEBPACK_IMPORTED_MODULE_11__.runQuery("DELETE FROM categories WHERE is_income = 0"), await _db__WEBPACK_IMPORTED_MODULE_11__.runQuery("DELETE FROM category_groups WHERE is_income = 0"), (0, _sync__WEBPACK_IMPORTED_MODULE_16__.setSyncingMode)("import"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("start-import"), IMPORT_MODE = !0; }, handlers["api/finish-import"] = async function () { checkFileOpen(), _sheet__WEBPACK_IMPORTED_MODULE_15__.get().markCacheDirty(); let { id } = _prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs(); await handlers["close-budget"](), await handlers["load-budget"]({ id }), await handlers["get-budget-bounds"](), await _sheet__WEBPACK_IMPORTED_MODULE_15__.waitOnSpreadsheet(), await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.upload().catch(() => { }), _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("finish-import"), IMPORT_MODE = !1; }, handlers["api/abort-import"] = async function () { if (IMPORT_MODE) {
                checkFileOpen();
                let { id } = _prefs__WEBPACK_IMPORTED_MODULE_14__.getPrefs();
                await handlers["close-budget"](), await handlers["delete-budget"]({ id }), _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("show-budgets");
            } IMPORT_MODE = !1; }, handlers["api/query"] = async function ({ query }) { return checkFileOpen(), (0, _aql__WEBPACK_IMPORTED_MODULE_9__.aqlQuery)(query); }, handlers["api/budget-months"] = async function () { checkFileOpen(); let { start, end } = await handlers["get-budget-bounds"](); return _shared_months__WEBPACK_IMPORTED_MODULE_3__.range(start, end); }, handlers["api/budget-month"] = async function ({ month }) { checkFileOpen(), await validateMonth(month); let { data: groups } = await (0, _aql__WEBPACK_IMPORTED_MODULE_9__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("category_groups").select("*")), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_3__.sheetForMonth(month); function value(name) { let v = _sheet__WEBPACK_IMPORTED_MODULE_15__.get().getCellValue(sheetName, name); return "" === v ? 0 : v; } return { month, incomeAvailable: value("available-funds"), lastMonthOverspent: value("last-month-overspent"), forNextMonth: value("buffered"), totalBudgeted: value("total-budgeted"), toBudget: value("to-budget"), fromLastMonth: value("from-last-month"), totalIncome: value("total-income"), totalSpent: value("total-spent"), totalBalance: value("total-leftover"), categoryGroups: groups.map(group => group.is_income ? { ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryGroupModel.toExternal(group), received: value("total-income"), categories: group.categories.map(cat => ({ ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryModel.toExternal(cat), received: value(`sum-amount-${cat.id}`) })) } : { ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryGroupModel.toExternal(group), budgeted: value(`group-budget-${group.id}`), spent: value(`group-sum-amount-${group.id}`), balance: value(`group-leftover-${group.id}`), categories: group.categories.map(cat => ({ ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryModel.toExternal(cat), budgeted: value(`budget-${cat.id}`), spent: value(`sum-amount-${cat.id}`), balance: value(`leftover-${cat.id}`), carryover: value(`carryover-${cat.id}`) })) }) }; }, handlers["api/budget-set-amount"] = withMutation(async function ({ month, categoryId, amount }) { return checkFileOpen(), handlers["budget/budget-amount"]({ month, category: categoryId, amount }); }), handlers["api/budget-set-carryover"] = withMutation(async function ({ month, categoryId, flag }) { return checkFileOpen(), await validateMonth(month), await validateExpenseCategory("budget-set-carryover", categoryId), handlers["budget/set-carryover"]({ startMonth: month, category: categoryId, flag }); }), handlers["api/budget-hold-for-next-month"] = withMutation(async function ({ month, amount }) { if (checkFileOpen(), await validateMonth(month), amount <= 0)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Amount to hold needs to be greater than 0"); return handlers["budget/hold-for-next-month"]({ month, amount }); }), handlers["api/budget-reset-hold"] = withMutation(async function ({ month }) { return checkFileOpen(), await validateMonth(month), handlers["budget/reset-hold"]({ month }); }), handlers["api/transactions-export"] = async function ({ transactions, categoryGroups, payees, accounts }) { return checkFileOpen(), handlers["transactions-export"]({ transactions, categoryGroups, payees, accounts }); }, handlers["api/transactions-import"] = withMutation(async function ({ accountId, transactions, isPreview = !1, opts }) { return checkFileOpen(), handlers["transactions-import"]({ accountId, transactions, isPreview, opts }); }), handlers["api/transactions-add"] = withMutation(async function ({ accountId, transactions, runTransfers = !1, learnCategories = !1 }) { return checkFileOpen(), await (0, _accounts_sync__WEBPACK_IMPORTED_MODULE_7__.addTransactions)(accountId, transactions, { runTransfers, learnCategories }), "ok"; }), handlers["api/transactions-get"] = async function ({ accountId, startDate, endDate }) { checkFileOpen(); let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_9__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("transactions").filter({ $and: [accountId && { account: accountId }, startDate && { date: { $gte: startDate } }, endDate && { date: { $lte: endDate } }].filter(Boolean) }).select("*").options({ splits: "grouped" })); return data1; }, handlers["api/transaction-update"] = withMutation(async function ({ id, fields }) { checkFileOpen(); let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_9__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("transactions").filter({ id }).select("*").options({ splits: "grouped" })), transactions = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_5__.ungroupTransactions)(data1); if (0 === transactions.length)
                return []; let { diff } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_5__.updateTransaction)(transactions, { id, ...fields }); return handlers["transactions-batch-update"](diff).updated; }), handlers["api/transaction-delete"] = withMutation(async function ({ id }) { checkFileOpen(); let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_9__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("transactions").filter({ id }).select("*").options({ splits: "grouped" })), transactions = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_5__.ungroupTransactions)(data1); if (0 === transactions.length)
                return []; let { diff } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_5__.deleteTransaction)(transactions, id); return handlers["transactions-batch-update"](diff).deleted; }), handlers["api/accounts-get"] = async function () { return checkFileOpen(), (await _db__WEBPACK_IMPORTED_MODULE_11__.getAccounts()).map(account => _api_models__WEBPACK_IMPORTED_MODULE_8__.accountModel.toExternal(account)); }, handlers["api/account-create"] = withMutation(async function ({ account, initialBalance = null }) { return checkFileOpen(), handlers["account-create"]({ name: account.name, offBudget: account.offbudget, closed: account.closed, balance: null != initialBalance ? (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.integerToAmount)(initialBalance) : null }); }), handlers["api/account-update"] = withMutation(async function ({ id, fields }) { return checkFileOpen(), _db__WEBPACK_IMPORTED_MODULE_11__.updateAccount({ id, ..._api_models__WEBPACK_IMPORTED_MODULE_8__.accountModel.fromExternal(fields) }); }), handlers["api/account-close"] = withMutation(async function ({ id, transferAccountId, transferCategoryId }) { return checkFileOpen(), handlers["account-close"]({ id, transferAccountId, categoryId: transferCategoryId }); }), handlers["api/account-reopen"] = withMutation(async function ({ id }) { return checkFileOpen(), handlers["account-reopen"]({ id }); }), handlers["api/account-delete"] = withMutation(async function ({ id }) { return checkFileOpen(), handlers["account-close"]({ id, forced: !0 }); }), handlers["api/account-balance"] = withMutation(async function ({ id, cutoff = new Date }) { return checkFileOpen(), handlers["account-balance"]({ id, cutoff }); }), handlers["api/categories-get"] = async function ({ grouped } = {}) { checkFileOpen(); let result = await handlers["get-categories"](); return grouped ? result.grouped.map(_api_models__WEBPACK_IMPORTED_MODULE_8__.categoryGroupModel.toExternal) : result.list.map(_api_models__WEBPACK_IMPORTED_MODULE_8__.categoryModel.toExternal); }, handlers["api/category-groups-get"] = async function () { return checkFileOpen(), (await handlers["get-category-groups"]()).map(_api_models__WEBPACK_IMPORTED_MODULE_8__.categoryGroupModel.toExternal); }, handlers["api/category-group-create"] = withMutation(async function ({ group }) { return checkFileOpen(), handlers["category-group-create"]({ name: group.name, hidden: group.hidden }); }), handlers["api/category-group-update"] = withMutation(async function ({ id, fields }) { return checkFileOpen(), handlers["category-group-update"]({ id, ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryGroupModel.fromExternal(fields) }); }), handlers["api/category-group-delete"] = withMutation(async function ({ id, transferCategoryId }) { return checkFileOpen(), handlers["category-group-delete"]({ id, transferId: transferCategoryId }); }), handlers["api/category-create"] = withMutation(async function ({ category }) { return checkFileOpen(), handlers["category-create"]({ name: category.name, groupId: category.group_id, isIncome: category.is_income, hidden: category.hidden }); }), handlers["api/category-update"] = withMutation(async function ({ id, fields }) { return checkFileOpen(), handlers["category-update"]({ id, ..._api_models__WEBPACK_IMPORTED_MODULE_8__.categoryModel.fromExternal(fields) }); }), handlers["api/category-delete"] = withMutation(async function ({ id, transferCategoryId }) { return checkFileOpen(), handlers["category-delete"]({ id, transferId: transferCategoryId }); }), handlers["api/common-payees-get"] = async function () { return checkFileOpen(), (await handlers["common-payees-get"]()).map(_api_models__WEBPACK_IMPORTED_MODULE_8__.payeeModel.toExternal); }, handlers["api/payees-get"] = async function () { return checkFileOpen(), (await handlers["payees-get"]()).map(_api_models__WEBPACK_IMPORTED_MODULE_8__.payeeModel.toExternal); }, handlers["api/payee-create"] = withMutation(async function ({ payee }) { return checkFileOpen(), handlers["payee-create"]({ name: payee.name }); }), handlers["api/payee-update"] = withMutation(async function ({ id, fields }) { return checkFileOpen(), handlers["payees-batch-change"]({ updated: [{ id, ..._api_models__WEBPACK_IMPORTED_MODULE_8__.payeeModel.fromExternal(fields) }] }); }), handlers["api/payee-delete"] = withMutation(async function ({ id }) { return checkFileOpen(), handlers["payees-batch-change"]({ deleted: [{ id }] }); }), handlers["api/payees-merge"] = withMutation(async function ({ targetId, mergeIds }) { return checkFileOpen(), handlers["payees-merge"]({ targetId, mergeIds }); }), handlers["api/rules-get"] = async function () { return checkFileOpen(), handlers["rules-get"](); }, handlers["api/payee-rules-get"] = async function ({ id }) { return checkFileOpen(), handlers["payees-get-rules"]({ id }); }, handlers["api/rule-create"] = withMutation(async function ({ rule }) { checkFileOpen(); let addedRule = await handlers["rule-add"](rule); if ("error" in addedRule)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Failed creating a new rule", addedRule.error); return addedRule; }), handlers["api/rule-update"] = withMutation(async function ({ rule }) { checkFileOpen(); let updatedRule = await handlers["rule-update"](rule); if ("error" in updatedRule)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_12__.APIError)("Failed updating the rule", updatedRule.error); return updatedRule; }), handlers["api/rule-delete"] = withMutation(async function (id) { return checkFileOpen(), handlers["rule-delete"](id); });
        }, "./packages/loot-core/src/server/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createApp: () => createApp });
            var mitt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/mitt/dist/mitt.mjs"), _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts");
            class App {
                constructor() { this.handlers = {}, this.services = [], this.events = (0, mitt__WEBPACK_IMPORTED_MODULE_0__.default)(), this.unlistenServices = []; }
                method(name, func) { if (null != this.handlers[name])
                    throw Error("Conflicting method name, names must be globally unique: " + name); this.handlers[name] = func; }
                service(func) { this.services.push(func); }
                combine(...apps) { for (let app of apps)
                    for (let [name, listeners] of (Object.keys(app.handlers).forEach(name => { this.method(name, app.handlers[name]); }), app.services.forEach(service => { this.service(service); }), app.events.all.entries()))
                        for (let listener of listeners)
                            this.events.on(name, listener); }
                startServices() { this.unlistenServices.length > 0 && (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureException)(Error("App: startServices called while services are already running")), this.unlistenServices = this.services.map(service => service()); }
                stopServices() { this.unlistenServices.forEach(unlisten => { unlisten && unlisten(); }), this.unlistenServices = []; }
            }
            function createApp() { return new App; }
        }, "./packages/loot-core/src/server/aql/compiler.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { compileQuery: () => compileQuery, defaultConstructQuery: () => defaultConstructQuery, generateSQLWithState: () => generateSQLWithState, isAggregateQuery: () => isAggregateQuery, quoteAlias: () => quoteAlias });
            var _shared_normalisation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/normalisation.ts");
            let _uid = 0;
            class CompileError extends Error {
            }
            function dateToInt(date) { return parseInt(date.replace(/-/g, "")); }
            function addTombstone(schema, tableName, tableId, whereStr) { return null != schema[tableName].tombstone ? `${whereStr} AND ${tableId}.tombstone = 0` : whereStr; }
            function popPath(path) { let parts = path.split("."); return { path: parts.slice(0, -1).join("."), field: parts[parts.length - 1] }; }
            function quoteAlias(alias) { return -1 !== alias.indexOf(".") || "group" === alias ? `"${alias}"` : alias; }
            function typed(value, type, { literal = !1 } = {}) { return { value, type, literal }; }
            function makePath(state, path) { let joinTable, { schema, paths } = state, parts = path.split("."); if (parts.length < 2)
                throw new CompileError("Invalid path: " + path); let initialTable = parts[0], tableName = parts.slice(1).reduce((tableName, field) => { let table = schema[tableName]; if (null == table)
                throw new CompileError(`Path error: ${tableName} table does not exist`); if (!table[field] || null == table[field].ref)
                throw new CompileError(`Field not joinable on table ${tableName}: “${field}”`); return table[field].ref; }, initialTable), parentParts = parts.slice(0, -1); if (1 === parentParts.length)
                joinTable = parentParts[0];
            else {
                let parentPath = parentParts.join("."), parentDesc = paths.get(parentPath);
                if (!parentDesc)
                    throw new CompileError("Path does not exist: " + parentPath);
                joinTable = parentDesc.tableId;
            } return { tableName, tableId: tableName + ++_uid, joinField: parts[parts.length - 1], joinTable }; }
            function resolvePath(state, path) { let paths = path.split("."); return (paths = paths.reduce((acc, name) => { let fullName = acc.context + "." + name; return { context: fullName, path: [...acc.path, fullName] }; }, { context: state.implicitTableName, path: [] }).path).forEach(path => { state.paths.get(path) || state.paths.set(path, makePath(state, path)); }), state.paths.get(paths[paths.length - 1]); }
            function parseDate(str) { let m = str.match(/^(\d{4}-\d{2}-\d{2})$/); return m ? typed(dateToInt(m[1]), "date", { literal: !0 }) : null; }
            function parseMonth(str) { let m = str.match(/^(\d{4}-\d{2})$/); return m ? typed(dateToInt(m[1]), "date", { literal: !0 }) : null; }
            function badDateFormat(str, type) { throw new CompileError(`Bad ${type} format: ${str}`); }
            function castInput(state, expr, type) { if (expr.type === type)
                return expr; if ("param" === expr.type) {
                let existingType = expr.paramType;
                if (existingType) {
                    let casts = { date: ["string"], "date-month": ["date"], "date-year": ["date", "date-month"], id: ["string"], float: ["integer"] };
                    if (existingType !== type && (!casts[type] || !casts[type].includes(existingType)))
                        throw Error(`Parameter “${expr.paramName}” can’t convert to ${type} (already inferred as ${existingType})`);
                }
                else
                    expr.paramType = type;
                return typed(expr.value, type);
            } if ("null" === expr.type) {
                if (!expr.literal)
                    throw new CompileError("A non-literal null doesn’t make sense");
                return "boolean" === type ? typed(0, "boolean", { literal: !0 }) : expr;
            } if ("date" === type) {
                if ("string" === expr.type)
                    if (expr.literal)
                        return parseDate(expr.value) || badDateFormat(expr.value, "date");
                    else
                        throw new CompileError("Casting string fields to dates is not supported");
                throw new CompileError(`Can’t cast ${expr.type} to date`);
            } if ("date-month" === type) {
                let expr2;
                if ("date" === expr.type)
                    expr2 = expr;
                else if ("string" === expr.type || "any" === expr.type)
                    expr2 = parseMonth(expr.value) || parseDate(expr.value) || badDateFormat(expr.value, "date-month");
                else
                    throw new CompileError(`Can’t cast ${expr.type} to date-month`);
                return expr2.literal ? typed(dateToInt(expr2.value.toString().slice(0, 6)), "date-month", { literal: !0 }) : typed(`CAST(SUBSTR(${expr2.value}, 1, 6) AS integer)`, "date-month");
            } if ("date-year" === type) {
                let expr2;
                if ("date" === expr.type || "date-month" === expr.type)
                    expr2 = expr;
                else if ("string" === expr.type)
                    expr2 = function (str) { let m = str.match(/^(\d{4})$/); return m ? typed(dateToInt(m[1]), "date", { literal: !0 }) : null; }(expr.value) || parseMonth(expr.value) || parseDate(expr.value) || badDateFormat(expr.value, "date-year");
                else
                    throw new CompileError(`Can’t cast ${expr.type} to date-year`);
                return expr2.literal ? typed(dateToInt(expr2.value.toString().slice(0, 4)), "date-year", { literal: !0 }) : typed(`CAST(SUBSTR(${expr2.value}, 1, 4) AS integer)`, "date-year");
            } if ("id" === type) {
                if ("string" === expr.type)
                    return typed(expr.value, "id", { literal: expr.literal });
            }
            else if ("float" === type && "integer" === expr.type)
                return typed(expr.value, "float", { literal: expr.literal }); if ("any" === expr.type)
                return typed(expr.value, type, { literal: expr.literal }); throw new CompileError(`Can’t convert ${expr.type} to ${type}`); }
            function val1(state, expr, type) { let castedExpr = expr; if (type && (castedExpr = castInput(state, expr, type)), castedExpr.literal) {
                if ("id" === castedExpr.type)
                    return `'${castedExpr.value}'`;
                else if ("string" === castedExpr.type) {
                    let value = castedExpr.value.replace(/'/g, "''");
                    return `'${value}'`;
                }
            } return castedExpr.value; }
            function valArray(state, arr, types) { return arr.map((value, idx) => val1(state, value, types ? types[idx] : null)); }
            function validateArgLength(arr, min, max) { if (null == max && (max = min), null != min && arr.length < min)
                throw new CompileError("Too few arguments"); if (null != max && arr.length > max)
                throw new CompileError("Too many arguments"); }
            function saveStack(type, func) { return (state, ...args) => { if (null == state || null == state.compileStack)
                throw new CompileError("This function cannot track error data. It needs to accept the compiler state as the first argument."); state.compileStack.push({ type, args }); let ret = func(state, ...args); return state.compileStack.pop(), ret; }; }
            function prettyValue(value) {
                if ("string" == typeof value)
                    return value;
                if (void 0 === value)
                    return "undefined";
                let str = JSON.stringify(value);
                return str.length > 70 ? JSON.stringify(value, null, 2).split(`
`).join(`
  `) : str;
            }
            let compileExpr = saveStack("expr", (state, expr) => { if ("string" == typeof expr) {
                if ("$" === expr[0]) {
                    let fieldRef = "$" === expr ? state.implicitField : expr.slice(1);
                    if (null == fieldRef || "" === fieldRef)
                        throw new CompileError("Invalid field reference: " + expr);
                    return function (state, name) { let pathInfo; if ("string" != typeof name)
                        throw new CompileError("Invalid field name, must be a string"); let { path, field: originalField } = popPath(name), field = originalField; pathInfo = "" === path ? { tableName: state.implicitTableName, tableId: state.implicitTableId } : resolvePath(state, path); let fieldDesc = function (schema, tableName, field) { if (null == schema[tableName])
                        throw new CompileError(`Table “${tableName}” does not exist in the schema`); let fieldDesc = schema[tableName][field]; if (null == fieldDesc)
                        throw new CompileError(`Field “${field}” does not exist in table “${tableName}”`); return fieldDesc; }(state.schema, pathInfo.tableName, field); if (state.validateRefs && fieldDesc.ref && "id" === fieldDesc.type && "id" !== field) {
                        let refPath = state.implicitTableName + "." + name, refPathInfo = state.paths.get(refPath);
                        refPathInfo || ((refPathInfo = makePath(state, refPath)).noMapping = !0, state.paths.set(refPath, refPathInfo)), field = "id", pathInfo = refPathInfo;
                    } return typed(pathInfo.tableId + "." + field, fieldDesc.type); }(state, fieldRef);
                }
                if (":" === expr[0]) {
                    let param = { value: "?", type: "param", paramName: expr.slice(1) };
                    return state.namedParameters.push(param), param;
                }
            } if (null !== expr) {
                if (Array.isArray(expr))
                    ;
                else if ("object" == typeof expr && Object.keys(expr).find(k => "$" === k[0]))
                    return compileFunction(state, expr);
            } return function (value) { if (void 0 === value)
                throw new CompileError("`undefined` is not a valid query value"); if (null === value)
                return typed("NULL", "null", { literal: !0 }); if (value instanceof Date)
                return typed(function (date) { let pad = x => (x < 10 ? "0" : "") + x; return date.getFullYear() + pad(date.getMonth() + 1) + pad(date.getDate()); }(value), "date", { literal: !0 }); if ("string" == typeof value)
                return typed(value = value.replace(/\\\$/g, "$"), "string", { literal: !0 }); if ("boolean" == typeof value)
                return typed(+!!value, "boolean", { literal: !0 });
            else if ("number" == typeof value)
                return typed(value, Number.isInteger(value) ? "integer" : "float", { literal: !0 });
            else if (Array.isArray(value))
                return typed(value, "array", { literal: !0 });
            else
                throw new CompileError("Unsupported type of expression: " + JSON.stringify(value)); }(expr); }), compileFunction = saveStack("function", (state, func) => { let [name] = Object.keys(func), argExprs = func[name]; if (Array.isArray(argExprs) || (argExprs = [argExprs]), "$" !== name[0])
                throw new CompileError(`Unknown property “${name}.” Did you mean to call a function? Try prefixing it with $`); let args = argExprs; switch ("$condition" !== name && (args = argExprs.map(arg => compileExpr(state, arg))), name) {
                case "$sum": {
                    validateArgLength(args, 1);
                    let [arg1] = valArray(state, args, ["float"]);
                    return typed(`SUM(${arg1})`, args[0].type);
                }
                case "$sumOver": {
                    let [arg1] = valArray(state, args, ["float"]), order = state.orders ? "ORDER BY " + compileOrderBy(state, state.orders) : "";
                    return typed(`(SUM(${arg1}) OVER (${order} ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING))`, args[0].type);
                }
                case "$count": {
                    validateArgLength(args, 1);
                    let [arg1] = valArray(state, args);
                    return typed(`COUNT(${arg1})`, "integer");
                }
                case "$substr": {
                    validateArgLength(args, 2, 3);
                    let [arg1, arg2, arg3] = valArray(state, args, ["string", "integer", "integer"]);
                    return typed(`SUBSTR(${arg1}, ${arg2}, ${arg3})`, "string");
                }
                case "$lower": {
                    validateArgLength(args, 1);
                    let [arg1] = valArray(state, args, ["string"]);
                    return typed(`UNICODE_LOWER(${arg1})`, "string");
                }
                case "$neg": return validateArgLength(args, 1), valArray(state, args, ["float"]), typed(`(-${val1(state, args[0])})`, args[0].type);
                case "$abs": return validateArgLength(args, 1), valArray(state, args, ["float"]), typed(`ABS(${val1(state, args[0])})`, args[0].type);
                case "$idiv": return validateArgLength(args, 2), valArray(state, args, ["integer", "integer"]), typed(`(${val1(state, args[0])} / ${val1(state, args[1])})`, args[0].type);
                case "$id": return validateArgLength(args, 1), typed(val1(state, args[0]), args[0].type);
                case "$day": return validateArgLength(args, 1), castInput(state, args[0], "date");
                case "$month": return validateArgLength(args, 1), castInput(state, args[0], "date-month");
                case "$year": return validateArgLength(args, 1), castInput(state, args[0], "date-year");
                case "$condition": return validateArgLength(args, 1), typed(compileConditions(state, args[0]).join(" AND "), "boolean");
                case "$nocase":
                    validateArgLength(args, 1);
                    let [arg1] = valArray(state, args, ["string"]);
                    return typed(`${arg1} COLLATE NOCASE`, args[0].type);
                case "$literal":
                    if (validateArgLength(args, 1), !args[0].literal)
                        throw new CompileError("Literal not passed to $literal");
                    return args[0];
                default: throw new CompileError(`Unknown function: ${name}`);
            } }), compileOp = saveStack("op", (state, fieldRef, opData) => {
                let lhs, { $transform, ...opExpr } = opData, [op] = Object.keys(opExpr), rhs = compileExpr(state, opData[op]);
                switch (lhs = $transform ? compileFunction({ ...state, implicitField: fieldRef }, "string" == typeof $transform ? { [$transform]: "$" } : $transform) : compileExpr(state, "$" + fieldRef), op) {
                    case "$gte": {
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        return `${left} >= ${right}`;
                    }
                    case "$lte": {
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        return `${left} <= ${right}`;
                    }
                    case "$gt": {
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        return `${left} > ${right}`;
                    }
                    case "$lt": {
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        return `${left} < ${right}`;
                    }
                    case "$eq": {
                        if ("null" === castInput(state, rhs, lhs.type).type)
                            return `${val1(state, lhs)} IS NULL`;
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        if ("param" === rhs.type) {
                            let orders = state.namedParameters.map(param => param === rhs || param === lhs ? [param, { ...param }] : param);
                            return state.namedParameters = [].concat.apply([], orders), `CASE
          WHEN ${left} IS NULL THEN ${right} IS NULL
          ELSE ${left} = ${right}
        END`;
                        }
                        return `${left} = ${right}`;
                    }
                    case "$ne": {
                        if ("null" === castInput(state, rhs, lhs.type).type)
                            return `${val1(state, lhs)} IS NOT NULL`;
                        let [left, right] = valArray(state, [lhs, rhs], [null, lhs.type]);
                        if ("param" === rhs.type) {
                            let orders = state.namedParameters.map(param => param === rhs || param === lhs ? [param, { ...param }] : param);
                            return state.namedParameters = [].concat.apply([], orders), `CASE
          WHEN ${left} IS NULL THEN ${right} IS NOT NULL
          ELSE ${left} IS NOT ${right}
        END`;
                        }
                        return `(${left} != ${right} OR ${left} IS NULL)`;
                    }
                    case "$oneof": {
                        let [left, right] = valArray(state, [lhs, rhs], [null, "array"]);
                        return `${left} IN (` + [...new Set(right)].map(id => `'${id}'`).join(",") + ")";
                    }
                    case "$like": {
                        let [left, right] = valArray(state, [lhs, rhs], ["string", "string"]);
                        return `UNICODE_LIKE(${(0, _shared_normalisation__WEBPACK_IMPORTED_MODULE_0__.getNormalisedString)(right)}, NORMALISE(${left}))`;
                    }
                    case "$regexp": {
                        let [left, right] = valArray(state, [lhs, rhs], ["string", "string"]);
                        return `REGEXP(${right}, ${left})`;
                    }
                    case "$notlike": {
                        let [left, right] = valArray(state, [lhs, rhs], ["string", "string"]);
                        return `(NOT UNICODE_LIKE(${(0, _shared_normalisation__WEBPACK_IMPORTED_MODULE_0__.getNormalisedString)(right)}, NORMALISE(${left}))
 OR ${left} IS NULL)`;
                    }
                    default: throw new CompileError(`Unknown operator: ${op}`);
                }
            });
            function compileConditions(state, conds) {
                return Array.isArray(conds) || (conds = Object.entries(conds).map(cond => ({ [cond[0]]: cond[1] }))), conds.filter(Boolean).reduce((res, condsObj) => [...res, ...Object.entries(condsObj).map(([field, cond]) => "$and" === field ? cond ? compileAnd(state, cond) : null : "$or" === field ? !cond || Array.isArray(cond) && 0 === cond.length ? null : function (state, conds) {
                        if (!conds)
                            return "0";
                        let res = compileConditions(state, conds);
                        return 0 === res.length ? "0" : "(" + res.join(`
  OR `) + ")";
                    }(state, cond) : "string" == typeof cond || "number" == typeof cond || "boolean" == typeof cond || cond instanceof Date || null == cond ? compileOp(state, field, { $eq: cond }) : Array.isArray(cond) ? cond.map(c => compileOp(state, field, c)).join(" AND ") : compileOp(state, field, cond)).filter(Boolean)], []);
            }
            function compileAnd(state, conds) {
                if (!conds)
                    return "1";
                let res = compileConditions(state, conds);
                return 0 === res.length ? "1" : "(" + res.join(`
  AND `) + ")";
            }
            let compileWhere = saveStack("filter", (state, conds) => compileAnd(state, conds)), compileSelect = saveStack("select", (state, exprs, isAggregate, orders) => (isAggregate || exprs.includes("id") || exprs.includes("*") || (exprs = exprs.concat(["id"])), exprs.map(expr => { if ("string" == typeof expr) {
                if (-1 !== expr.indexOf("*"))
                    return (function (state, expr) { let path, pathInfo; if ("*" === expr)
                        pathInfo = { tableName: state.implicitTableName, tableId: state.implicitTableId };
                    else if (expr.match(/\.\*$/)) {
                        let result = popPath(expr);
                        path = result.path, pathInfo = resolvePath(state, result.path);
                    } let table = state.schema[pathInfo.tableName]; if (null == table)
                        throw Error(`Table “${pathInfo.tableName}” does not exist`); return Object.keys(table).map(field => path ? `${path}.${field}` : field); })(state, expr).map(field => { let compiled = compileExpr(state, "$" + field); return state.outputTypes.set(field, compiled.type), compiled.value + " AS " + quoteAlias(field); }).join(", ");
                let compiled = compileExpr(state, "$" + expr);
                return state.outputTypes.set(expr, compiled.type), compiled.value + " AS " + quoteAlias(expr);
            } let [name, value] = Object.entries(expr)[0]; if ("$" === name[0])
                throw state.compileStack.push({ type: "value", value: expr }), new CompileError(`Invalid field “${name}”, are you trying to select a function? You need to name the expression`); if ("string" == typeof value) {
                let compiled = compileExpr(state, "$" + value);
                return state.outputTypes.set(name, compiled.type), `${compiled.value} AS ${quoteAlias(name)}`;
            } let compiled = compileFunction({ ...state, orders }, value); return state.outputTypes.set(name, compiled.type), compiled.value + ` AS ${quoteAlias(name)}`; }).join(", "))), compileGroupBy = saveStack("groupBy", (state, exprs) => exprs.map(expr => "string" == typeof expr ? compileExpr(state, "$" + expr).value : compileFunction(state, expr).value).join(", ")), compileOrderBy = saveStack("orderBy", (state, exprs) => exprs.map(expr => { let compiled, dir = null; if ("string" == typeof expr)
                compiled = compileExpr(state, "$" + expr).value;
            else {
                let entries = Object.entries(expr), entry = entries[0];
                if (1 === entries.length && "$" !== entry[0][0])
                    dir = entry[1], compiled = compileExpr(state, "$" + entry[0]).value;
                else {
                    let { $dir, ...func } = expr;
                    dir = $dir, compiled = compileFunction(state, func).value;
                }
            } if (null != dir) {
                if ("desc" !== dir && "asc" !== dir)
                    throw new CompileError("Invalid order direction: " + dir);
                return `${compiled} ${dir}`;
            } return compiled; }).join(", ")), AGGREGATE_FUNCTIONS = ["$sum", "$count"];
            function isAggregateQuery(queryState) { return queryState.groupExpressions.length > 0 || !!queryState.selectExpressions.find(expr => { if ("string" != typeof expr) {
                let [_, value] = Object.entries(expr)[0];
                return function isAggregateFunction(expr) { if ("object" != typeof expr || Array.isArray(expr))
                    return !1; let [name, originalArgExprs] = Object.entries(expr)[0], argExprs = originalArgExprs; return Array.isArray(argExprs) || (argExprs = [argExprs]), -1 !== AGGREGATE_FUNCTIONS.indexOf(name) || !!argExprs.find(ex => isAggregateFunction(ex)); }(value);
            } return !1; }); }
            function compileQuery(queryState, schema, schemaConfig = {}) {
                let { withDead, validateRefs = !0, tableOptions, rawMode } = queryState, { tableViews = {}, tableFilters = () => [], customizeQuery = queryState => queryState } = schemaConfig, internalTableFilters = name => { let filters = tableFilters(name); for (let filter of filters) {
                    if (Array.isArray(filter))
                        throw new CompileError("Invalid internal table filter: only object filters are supported");
                    if (-1 !== Object.keys(filter)[0].indexOf("."))
                        throw new CompileError("Invalid internal table filter: field names cannot contain paths");
                } return filters; }, tableRef = (name, isJoin) => ("function" == typeof tableViews ? tableViews(name, { withDead, isJoin, tableOptions }) : tableViews[name]) || name, tableName = queryState.table, { filterExpressions, selectExpressions, groupExpressions, orderExpressions, limit, offset } = customizeQuery(queryState), select = "", where = "", joins = "", groupBy = "", orderBy = "", state = { schema, implicitTableName: tableName, implicitTableId: tableRef(tableName), paths: new Map, dependencies: [tableName], compileStack: [], outputTypes: new Map, validateRefs, namedParameters: [] };
                _uid = 0;
                try {
                    if (select = compileSelect(state, selectExpressions, isAggregateQuery(queryState), orderExpressions), filterExpressions.length > 0) {
                        let result = compileWhere(state, filterExpressions);
                        where = "WHERE " + result;
                    }
                    else
                        where = "WHERE 1";
                    if (!rawMode) {
                        let filters = internalTableFilters(tableName);
                        filters.length > 0 && (where += " AND " + compileAnd(state, filters));
                    }
                    if (groupExpressions.length > 0) {
                        let result = compileGroupBy(state, groupExpressions);
                        groupBy = "GROUP BY " + result;
                    }
                    if (orderExpressions.length > 0) {
                        let result = compileOrderBy(state, orderExpressions);
                        orderBy = "ORDER BY " + result;
                    }
                    state.paths.size > 0 && (joins = function (state, tableRef, internalTableFilters) {
                        let joins = [];
                        return state.paths.forEach((desc, path) => { let { tableName, tableId, joinField, joinTable, noMapping } = state.paths.get(path), on = `${tableId}.id = ${tableRef(joinTable)}.${quoteAlias(joinField)}`, filters = internalTableFilters(tableName); filters.length > 0 && (on += " AND " + compileAnd({ ...state, implicitTableName: tableName, implicitTableId: tableId }, filters)), joins.push(`LEFT JOIN ${noMapping ? tableName : tableRef(tableName, !0)} ${tableId} ON ${addTombstone(state.schema, tableName, tableId, on)}`), -1 === state.dependencies.indexOf(tableName) && state.dependencies.push(tableName); }), joins.join(`
`);
                    }(state, tableRef, internalTableFilters));
                }
                catch (e) {
                    if (e instanceof CompileError)
                        throw function (error, stack) {
                            if (0 === stack.length)
                                return error;
                            let stackStr = stack.slice(1).reverse().map(entry => { switch (entry.type) {
                                case "expr":
                                case "function": return prettyValue(entry.args[0]);
                                case "op": {
                                    let [fieldRef, opData] = entry.args;
                                    return prettyValue({ [fieldRef]: opData });
                                }
                                case "value": return prettyValue(entry.value);
                                default: return "";
                            } }).map(str => `
  ` + str).join(""), rootMethod = stack[0].type, methodArgs = stack[0].args[0];
                            return stackStr += `
  ${rootMethod}(${prettyValue(1 === methodArgs.length ? methodArgs[0] : methodArgs)})`, error.message = `${error.message}

Expression stack:` + stackStr, error;
                        }(e, state.compileStack);
                    throw e;
                }
                return { sqlPieces: { select, from: tableRef(tableName), joins, where, groupBy, orderBy, limit, offset }, state };
            }
            function defaultConstructQuery(queryState, compilerState, sqlPieces) {
                let where = queryState.withDead ? sqlPieces.where : addTombstone(compilerState.schema, compilerState.implicitTableName, compilerState.implicitTableId, sqlPieces.where);
                return `
    SELECT ${sqlPieces.select} FROM ${sqlPieces.from}
    ${sqlPieces.joins}
    ${where}
    ${sqlPieces.groupBy}
    ${sqlPieces.orderBy}
    ${null != sqlPieces.limit ? `LIMIT ${sqlPieces.limit}` : ""}
    ${null != sqlPieces.offset ? `OFFSET ${sqlPieces.offset}` : ""}
  `;
            }
            function generateSQLWithState(queryState, schema, schemaConfig) { let { sqlPieces, state } = compileQuery(queryState, schema, schemaConfig); return { sql: defaultConstructQuery(queryState, state, sqlPieces), state }; }
        }, "./packages/loot-core/src/server/aql/exec.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { compileAndRunAqlQuery: () => compileAndRunAqlQuery, execQuery: () => execQuery, runCompiledAqlQuery: () => runCompiledAqlQuery });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _compiler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/aql/compiler.ts"), _schema_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/schema-helpers.ts");
            async function execQuery(queryState, compilerState, sqlPieces, params, outputTypes) { let sql = (0, _compiler__WEBPACK_IMPORTED_MODULE_1__.defaultConstructQuery)(queryState, compilerState, sqlPieces), data1 = await _db__WEBPACK_IMPORTED_MODULE_0__.all(sql, params); for (let i = 0; i < data1.length; i++) {
                let item = data1[i];
                Object.keys(item).forEach(name => { item[name] = (0, _schema_helpers__WEBPACK_IMPORTED_MODULE_2__.convertOutputType)(item[name], outputTypes.get(name)); });
            } return data1; }
            async function runCompiledAqlQuery(queryState, sqlPieces, compilerState, { params = {}, executors = {} } = {}) { let paramArray = compilerState.namedParameters.map(param => { let name = param.paramName; if (void 0 === params[name])
                throw Error(`Parameter ${name} not provided to query`); return (0, _schema_helpers__WEBPACK_IMPORTED_MODULE_2__.convertInputType)(params[name], param.paramType); }), data1 = []; if (data1 = executors[compilerState.implicitTableName] ? await executors[compilerState.implicitTableName](compilerState, queryState, sqlPieces, paramArray, compilerState.outputTypes) : await execQuery(queryState, compilerState, sqlPieces, paramArray, compilerState.outputTypes), queryState.calculation)
                if (!(data1.length > 0))
                    return null;
                else {
                    let row = data1[0], k = Object.keys(row)[0];
                    return row[k] || 0;
                } return data1; }
            async function compileAndRunAqlQuery(schema, schemaConfig, queryState, options1) { let { sqlPieces, state } = (0, _compiler__WEBPACK_IMPORTED_MODULE_1__.compileQuery)(queryState, schema, schemaConfig); return { data: await runCompiledAqlQuery(queryState, sqlPieces, state, options1), dependencies: state.dependencies }; }
        }, "./packages/loot-core/src/server/aql/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { aqlCompiledQuery: () => aqlCompiledQuery, aqlQuery: () => aqlQuery, compileQuery: () => _compiler__WEBPACK_IMPORTED_MODULE_5__.compileQuery, convertForInsert: () => _schema_helpers__WEBPACK_IMPORTED_MODULE_4__.convertForInsert, convertForUpdate: () => _schema_helpers__WEBPACK_IMPORTED_MODULE_4__.convertForUpdate, convertFromSelect: () => _schema_helpers__WEBPACK_IMPORTED_MODULE_4__.convertFromSelect, convertInputType: () => _schema_helpers__WEBPACK_IMPORTED_MODULE_4__.convertInputType, makeViews: () => _views__WEBPACK_IMPORTED_MODULE_6__.makeViews, schema: () => _schema__WEBPACK_IMPORTED_MODULE_2__.schema, schemaConfig: () => _schema__WEBPACK_IMPORTED_MODULE_2__.schemaConfig });
            var _shared_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _exec__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/aql/exec.ts"), _schema__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/schema/index.ts"), _schema_executors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/aql/schema/executors.ts"), _schema_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/aql/schema-helpers.ts"), _compiler__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/aql/compiler.ts"), _views__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/aql/views.ts");
            function aqlCompiledQuery(queryState, sqlPieces, compilerState, params) { return (0, _exec__WEBPACK_IMPORTED_MODULE_1__.runCompiledAqlQuery)(queryState, sqlPieces, compilerState, { params, executors: _schema_executors__WEBPACK_IMPORTED_MODULE_3__.schemaExecutors }); }
            function aqlQuery(query, params) { return query instanceof _shared_query__WEBPACK_IMPORTED_MODULE_0__.Query && (query = query.serialize()), (0, _exec__WEBPACK_IMPORTED_MODULE_1__.compileAndRunAqlQuery)(_schema__WEBPACK_IMPORTED_MODULE_2__.schema, _schema__WEBPACK_IMPORTED_MODULE_2__.schemaConfig, query, { params, executors: _schema_executors__WEBPACK_IMPORTED_MODULE_3__.schemaExecutors }); }
        }, "./packages/loot-core/src/server/aql/schema-helpers.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { conform: () => conform, convertForInsert: () => convertForInsert, convertForUpdate: () => convertForUpdate, convertFromSelect: () => convertFromSelect, convertInputType: () => convertInputType, convertOutputType: () => convertOutputType });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/models.ts");
            function isRequired(name, fieldDesc) { return fieldDesc.required || "id" === name; }
            function convertInputType(value, type) { if (void 0 === value)
                throw Error("Query value cannot be undefined"); if (null === value)
                return "boolean" === type ? 0 : null; switch (type) {
                case "date":
                    if (value instanceof Date)
                        return (0, _models__WEBPACK_IMPORTED_MODULE_1__.toDateRepr)((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(value));
                    if (null == value.match(/^\d{4}-\d{2}-\d{2}$/) || value.date < "2000-01-01")
                        throw Error("Invalid date: " + value);
                    return (0, _models__WEBPACK_IMPORTED_MODULE_1__.toDateRepr)(value);
                case "date-month": return (0, _models__WEBPACK_IMPORTED_MODULE_1__.toDateRepr)(value.slice(0, 7));
                case "date-year": return (0, _models__WEBPACK_IMPORTED_MODULE_1__.toDateRepr)(value.slice(0, 4));
                case "boolean": return +!!value;
                case "id":
                    if ("string" != typeof value && null !== value)
                        throw Error("Invalid id, must be string: " + value);
                    break;
                case "integer":
                    if ("number" == typeof value && Number.isInteger(value))
                        break;
                    throw Error("Can’t convert to integer: " + JSON.stringify(value));
                case "json": return JSON.stringify(value);
            } return value; }
            function convertOutputType(value, type) { if (null === value)
                return "boolean" !== type && null; switch (type) {
                case "date": return (0, _models__WEBPACK_IMPORTED_MODULE_1__.fromDateRepr)(value);
                case "date-month": return (0, _models__WEBPACK_IMPORTED_MODULE_1__.fromDateRepr)(value).slice(0, 7);
                case "date-year": return (0, _models__WEBPACK_IMPORTED_MODULE_1__.fromDateRepr)(value).slice(0, 4);
                case "boolean": return 1 === value;
                case "json":
                case "json/fallback": try {
                    return JSON.parse(value);
                }
                catch (e) {
                    return "json/fallback" === type ? value : null;
                }
            } return value; }
            function conform(schema, schemaConfig, table, obj, { skipNull = !1 } = {}) { let tableSchema = schema[table]; if (null == tableSchema)
                throw Error(`Table “${table}” does not exist`); let views = schemaConfig.views || {}, fieldRef = field => views[table] && views[table].fields && views[table].fields[field] || field; return Object.fromEntries(Object.keys(obj).map(field => { if ("_" === field[0])
                return null; let fieldDesc = tableSchema[field]; if (null == fieldDesc)
                throw Error(`Field “${field}” does not exist on table ${table}: ${JSON.stringify(obj)}`); if (isRequired(field, fieldDesc) && null == obj[field])
                throw Error(`“${field}” is required for table “${table}”: ${JSON.stringify(obj)}`); return skipNull && null == obj[field] ? null : [fieldRef(field), convertInputType(obj[field], fieldDesc.type)]; }).filter(Boolean)); }
            function convertForInsert(schema, schemaConfig, table, rawObj) { let obj = { ...rawObj }, tableSchema = schema[table]; if (null == tableSchema)
                throw Error(`Error inserting: table “${table}” does not exist`); return Object.keys(tableSchema).forEach(field => { let fieldDesc = tableSchema[field]; if (null == obj[field]) {
                if (void 0 !== fieldDesc.default)
                    obj[field] = "function" == typeof fieldDesc.default ? fieldDesc.default() : fieldDesc.default;
                else if (isRequired(field, fieldDesc))
                    throw Error(`“${field}” is required for table “${table}”: ${JSON.stringify(obj)}`);
            } }), conform(schema, schemaConfig, table, obj, { skipNull: !0 }); }
            function convertForUpdate(schema, schemaConfig, table, rawObj) { let obj = { ...rawObj }; if (null == schema[table])
                throw Error(`Error updating: table “${table}” does not exist`); return conform(schema, schemaConfig, table, obj); }
            function convertFromSelect(schema, schemaConfig, table, obj) { let tableSchema = schema[table]; if (null == tableSchema)
                throw Error(`Table “${table}” does not exist`); let fields = Object.keys(tableSchema), result = {}; for (let i = 0; i < fields.length; i++) {
                let fieldName = fields[i], fieldDesc = tableSchema[fieldName];
                result[fieldName] = convertOutputType(obj[fieldName], fieldDesc.type);
            } return result; }
        }, "./packages/loot-core/src/server/aql/schema/executors.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { isHappyPathQuery: () => isHappyPathQuery, schemaExecutors: () => schemaExecutors });
            var ___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _db_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/db/util.ts"), _compiler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/aql/compiler.ts"), _exec__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/aql/exec.ts"), _schema_helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/aql/schema-helpers.ts");
            function isHappyPathQuery(queryState) { return null == queryState.filterExpressions.find(function _isUnhappy(filter) { for (let key of Object.keys(filter))
                if ("$or" === key || "$and" === key) {
                    if (filter[key] && _isUnhappy(filter[key]))
                        return !0;
                }
                else if (0 !== key.indexOf("account") && "date" !== key)
                    return !0; return !1; }); }
            async function execTransactionsGrouped(compilerState, queryState, sqlPieces, params, outputTypes) {
                let rows, { withDead } = queryState, whereDead = withDead ? "" : `AND ${sqlPieces.from}.tombstone = 0`;
                if ((0, _compiler__WEBPACK_IMPORTED_MODULE_4__.isAggregateQuery)(queryState)) {
                    let s = { ...sqlPieces };
                    return s.where = `${s.where} AND ${s.from}.is_parent = 0`, withDead || (s.from = "v_transactions_internal_alive v_transactions_internal"), (0, _exec__WEBPACK_IMPORTED_MODULE_5__.execQuery)(queryState, compilerState, s, params, outputTypes);
                }
                let matched = null;
                if (isHappyPathQuery(queryState)) {
                    let rowSql = `
      SELECT ${sqlPieces.from}.id as group_id
      FROM ${sqlPieces.from}
      ${sqlPieces.joins}
      ${sqlPieces.where} AND is_child = 0 ${whereDead}
      ${sqlPieces.orderBy}
      ${null != sqlPieces.limit ? `LIMIT ${sqlPieces.limit}` : ""}
      ${null != sqlPieces.offset ? `OFFSET ${sqlPieces.offset}` : ""}
    `;
                    rows = await _db__WEBPACK_IMPORTED_MODULE_2__.all(rowSql, params);
                }
                else {
                    let rowSql = `
      SELECT group_id, matched FROM (
        SELECT
          group_id,
          GROUP_CONCAT(id) as matched
          FROM (
            SELECT ${sqlPieces.from}.id, IFNULL(${sqlPieces.from}.parent_id, ${sqlPieces.from}.id) as group_id
            FROM ${sqlPieces.from}
            LEFT JOIN transactions _t2 ON ${sqlPieces.from}.is_child = 1 AND _t2.id = ${sqlPieces.from}.parent_id
            ${sqlPieces.joins}
            ${sqlPieces.where} AND ${sqlPieces.from}.tombstone = 0 AND IFNULL(_t2.tombstone, 0) = 0
          )
        GROUP BY group_id
      )
      LEFT JOIN ${sqlPieces.from} ON ${sqlPieces.from}.id = group_id
      ${sqlPieces.joins}
      ${sqlPieces.orderBy}
      ${null != sqlPieces.limit ? `LIMIT ${sqlPieces.limit}` : ""}
      ${null != sqlPieces.offset ? `OFFSET ${sqlPieces.offset}` : ""}
    `;
                    rows = await _db__WEBPACK_IMPORTED_MODULE_2__.all(rowSql, params), matched = new Set([].concat.apply([], rows.map(row => row.matched.split(","))));
                }
                let where = (0, _db_util__WEBPACK_IMPORTED_MODULE_3__.whereIn)(rows.map(row => row.group_id), `IFNULL(${sqlPieces.from}.parent_id, ${sqlPieces.from}.id)`), finalSql = `
    SELECT ${sqlPieces.select}, parent_id AS _parent_id FROM ${sqlPieces.from}
    ${sqlPieces.joins}
    WHERE ${where} ${whereDead}
    ${sqlPieces.orderBy}
  `, { parents, children: children1 } = (await _db__WEBPACK_IMPORTED_MODULE_2__.all(finalSql)).reduce((acc, trans) => { let pid = trans._parent_id; if (delete trans._parent_id, null == pid)
                    acc.parents.push(trans);
                else {
                    let arr = acc.children.get(pid) || [];
                    arr.push(trans), acc.children.set(pid, arr);
                } return acc; }, { parents: [], children: new Map });
                return function (parents, children1, mapper = x => x) { return parents.reduce((list, parent) => { let childs = children1.get(parent.id) || []; return list.push({ ...mapper(parent), subtransactions: childs.map(mapper) }), list; }, []); }(parents, children1, trans => (Object.keys(trans).forEach(name => { trans[name] = (0, _schema_helpers__WEBPACK_IMPORTED_MODULE_6__.convertOutputType)(trans[name], outputTypes.get(name)); }), matched && !matched.has(trans.id) && (trans._unmatched = !0), trans));
            }
            async function execTransactionsBasic(compilerState, queryState, sqlPieces, params, splitType, outputTypes) { let s = { ...sqlPieces }; return "all" !== splitType && ("none" === splitType ? s.where = `${s.where} AND ${s.from}.parent_id IS NULL` : s.where = `${s.where} AND ${s.from}.is_parent = 0`), (0, _exec__WEBPACK_IMPORTED_MODULE_5__.execQuery)(queryState, compilerState, s, params, outputTypes); }
            async function execCategoryGroupsWithCategories(compilerState, queryState, sqlPieces, params, categoriesOption, outputTypes) { let categoryGroups = await execCategoryGroupsBasic(compilerState, queryState, sqlPieces, params, outputTypes); if ("none" === categoriesOption)
                return categoryGroups; let { data: categories } = await (0, ___WEBPACK_IMPORTED_MODULE_0__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("categories").filter({ group: { $oneof: categoryGroups.map(cg => cg.id) } }).select("*")); return categoryGroups.map(group => { let cats = categories.filter(cat => cat.group === group.id); return { ...group, categories: cats }; }); }
            async function execCategoryGroupsBasic(compilerState, queryState, sqlPieces, params, outputTypes) { return (0, _exec__WEBPACK_IMPORTED_MODULE_5__.execQuery)(queryState, compilerState, sqlPieces, params, outputTypes); }
            let schemaExecutors = { transactions: function (compilerState, queryState, sqlPieces, params, outputTypes) { let tableOptions = queryState.tableOptions || {}, splitType = tableOptions.splits ? tableOptions.splits : "inline"; if (!["all", "inline", "none", "grouped"].includes(splitType))
                    throw Error(`Invalid “splits” option for transactions: “${splitType}”`); return "all" === splitType || "inline" === splitType || "none" === splitType ? execTransactionsBasic(compilerState, queryState, sqlPieces, params, splitType, outputTypes) : "grouped" === splitType ? execTransactionsGrouped(compilerState, queryState, sqlPieces, params, outputTypes) : void 0; }, category_groups: async function execCategoryGroups(compilerState, queryState, sqlPieces, params, outputTypes) { let tableOptions = queryState.tableOptions || {}, categoriesOption = tableOptions.categories ? tableOptions.categories : "all"; if (!["all", "none"].includes(categoriesOption))
                    throw Error(`Invalid “categories” option for category_groups: “${categoriesOption}”`); return "none" !== categoriesOption ? execCategoryGroupsWithCategories(compilerState, queryState, sqlPieces, params, categoriesOption, outputTypes) : execCategoryGroupsBasic(compilerState, queryState, sqlPieces, params, outputTypes); } };
        }, "./packages/loot-core/src/server/aql/schema/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function f(type, opts) { return { type, ...opts }; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { schema: () => schema, schemaConfig: () => schemaConfig });
            let schema = { transactions: { id: f("id"), is_parent: f("boolean"), is_child: f("boolean"), parent_id: f("id"), account: f("id", { ref: "accounts", required: !0 }), category: f("id", { ref: "categories" }), amount: f("integer", { default: 0, required: !0 }), payee: f("id", { ref: "payees" }), notes: f("string"), date: f("date", { required: !0 }), imported_id: f("string"), error: f("json"), imported_payee: f("string"), starting_balance_flag: f("boolean"), transfer_id: f("id"), sort_order: f("float", { default: () => Date.now() }), cleared: f("boolean", { default: !0 }), reconciled: f("boolean", { default: !1 }), tombstone: f("boolean"), schedule: f("id", { ref: "schedules" }), raw_synced_data: f("string") }, payees: { id: f("id"), name: f("string", { required: !0 }), transfer_acct: f("id", { ref: "accounts" }), tombstone: f("boolean"), favorite: f("boolean"), learn_categories: f("boolean") }, accounts: { id: f("id"), name: f("string", { required: !0 }), offbudget: f("boolean"), closed: f("boolean"), sort_order: f("float"), tombstone: f("boolean"), account_id: f("string"), official_name: f("string"), account_sync_source: f("string"), last_reconciled: f("string"), last_sync: f("string") }, categories: { id: f("id"), name: f("string"), is_income: f("boolean"), hidden: f("boolean"), group: f("id", { ref: "category_groups" }), goal_def: f("string"), sort_order: f("float"), tombstone: f("boolean") }, category_groups: { id: f("id"), name: f("string"), is_income: f("boolean"), hidden: f("boolean"), sort_order: f("float"), tombstone: f("boolean") }, schedules: { id: f("id"), name: f("string"), rule: f("id", { ref: "rules", required: !0 }), next_date: f("date"), completed: f("boolean"), posts_transaction: f("boolean"), tombstone: f("boolean"), _payee: f("id", { ref: "payees" }), _account: f("id", { ref: "accounts" }), _amount: f("json/fallback"), _amountOp: f("string"), _date: f("json/fallback"), _conditions: f("json"), _actions: f("json") }, rules: { id: f("id"), stage: f("string"), conditions_op: f("string"), conditions: f("json"), actions: f("json"), tombstone: f("boolean") }, notes: { id: f("id"), note: f("string") }, preferences: { id: f("id"), value: f("string") }, transaction_filters: { id: f("id"), name: f("string"), conditions_op: f("string"), conditions: f("json"), tombstone: f("boolean") }, custom_reports: { id: f("id"), name: f("string"), start_date: f("string", { default: "2023-06" }), end_date: f("string", { default: "2023-09" }), date_static: f("integer", { default: 0 }), date_range: f("string"), mode: f("string", { default: "total" }), group_by: f("string", { default: "Category" }), sort_by: f("string", { default: "desc" }), balance_type: f("string", { default: "Expense" }), show_empty: f("integer", { default: 0 }), show_offbudget: f("integer", { default: 0 }), show_hidden: f("integer", { default: 0 }), show_uncategorized: f("integer", { default: 0 }), include_current: f("integer", { default: 0 }), graph_type: f("string", { default: "BarGraph" }), conditions: f("json"), conditions_op: f("string"), metadata: f("json"), interval: f("string", { default: "Monthly" }), color_scheme: f("json"), tombstone: f("boolean") }, reflect_budgets: { id: f("id"), month: f("integer"), category: f("string"), amount: f("integer"), carryover: f("integer"), goal: f("integer"), long_goal: f("integer") }, zero_budgets: { id: f("id"), month: f("integer"), category: f("string", { ref: "categories" }), amount: f("integer"), carryover: f("integer"), goal: f("integer"), long_goal: f("integer") }, dashboard: { id: f("id"), type: f("string", { required: !0 }), width: f("integer", { required: !0 }), height: f("integer", { required: !0 }), x: f("integer", { required: !0 }), y: f("integer", { required: !0 }), meta: f("json"), tombstone: f("boolean") } }, schemaConfig = { tableViews(name, { isJoin, withDead, tableOptions = { splits: void 0 } }) { switch (name) {
                    case "transactions": {
                        if (isJoin)
                            return "v_transactions_internal_alive";
                        let splitType = tableOptions.splits || "inline";
                        if (!withDead && ("inline" === splitType || "none" === splitType))
                            return "v_transactions_internal_alive";
                        return "v_transactions_internal";
                    }
                    case "schedules": return "v_schedules";
                    case "categories": return "v_categories";
                    case "payees": return "v_payees";
                } return name; }, customizeQuery(queryState) { let { table: tableName } = queryState; return { ...queryState, orderExpressions: function (orders) { if (orders.length > 0)
                        return orders.concat(["id"]); switch (tableName) {
                        case "transactions": return [{ date: "desc" }, "starting_balance_flag", { sort_order: "desc" }, "id"];
                        case "category_groups": return ["is_income", "sort_order", "id"];
                        case "categories": return ["sort_order", "id"];
                        case "payees": return [{ $condition: { transfer_acct: null }, $dir: "desc" }, { $nocase: "$name" }];
                        case "accounts": return ["sort_order", "name"];
                        case "schedules": return [{ $condition: { completed: !0 } }, "next_date"];
                    } return []; }(queryState.orderExpressions) }; }, views: { payees: { v_payees: internalFields => {
                            let fields = internalFields({ name: "COALESCE(__accounts.name, _.name)" });
                            return `
          SELECT ${fields} FROM payees _
          LEFT JOIN accounts __accounts ON (_.transfer_acct = __accounts.id AND __accounts.tombstone = 0)
          -- We never want to show transfer payees that are pointing to deleted accounts.
          -- Either this is not a transfer payee, if the account exists
          WHERE _.transfer_acct IS NULL OR __accounts.id IS NOT NULL
        `;
                        } }, categories: { fields: { group: "cat_group" }, v_categories: internalFields => { let fields = internalFields({ group: "cat_group" }); return `SELECT ${fields} FROM categories _`; } }, schedules: { v_schedules: internalFields => {
                            let fields = internalFields({ next_date: `
            CASE
              WHEN _nd.local_next_date_ts = _nd.base_next_date_ts THEN _nd.local_next_date
              ELSE _nd.base_next_date
            END
          `, _payee: "pm.targetId", _account: "json_extract(_rules.conditions, _paths.account || '.value')", _amount: "json_extract(_rules.conditions, _paths.amount || '.value')", _amountOp: "json_extract(_rules.conditions, _paths.amount || '.op')", _date: "json_extract(_rules.conditions, _paths.date || '.value')", _conditions: "_rules.conditions", _actions: "_rules.actions" });
                            return `
        SELECT ${fields} FROM schedules _
        LEFT JOIN schedules_next_date _nd ON _nd.schedule_id = _.id
        LEFT JOIN schedules_json_paths _paths ON _paths.schedule_id = _.id
        LEFT JOIN rules _rules ON _rules.id = _.rule
        LEFT JOIN payee_mapping pm ON pm.id = json_extract(_rules.conditions, _paths.payee || '.value')
        `;
                        } }, transactions: { fields: { is_parent: "isParent", is_child: "isChild", account: "acct", imported_id: "financial_id", imported_payee: "imported_description", transfer_id: "transferred_id", payee: "description" }, v_transactions_internal: internalFields => {
                            let fields = internalFields({ payee: "pm.targetId", category: "CASE WHEN _.isParent = 1 THEN NULL ELSE cm.transferId END", amount: "IFNULL(_.amount, 0)", parent_id: "CASE WHEN _.isChild = 0 THEN NULL ELSE _.parent_id END" });
                            return `
          SELECT ${fields} FROM transactions _
          LEFT JOIN category_mapping cm ON cm.id = _.category
          LEFT JOIN payee_mapping pm ON pm.id = _.description
          WHERE
           _.date IS NOT NULL AND
           _.acct IS NOT NULL AND
           (_.isChild = 0 OR _.parent_id IS NOT NULL)
        `;
                        }, v_transactions_internal_alive: `
        SELECT _.* FROM v_transactions_internal _
        LEFT JOIN transactions t2 ON (_.is_child = 1 AND t2.id = _.parent_id)
        WHERE IFNULL(_.tombstone, 0) = 0 AND (_.is_child = 0 OR t2.tombstone = 0)
      `, v_transactions: (_, publicFields) => {
                            let fields = publicFields({ payee: "p.id", category: "c.id", account: "a.id" });
                            return `
          SELECT ${fields} FROM v_transactions_internal_alive _
          LEFT JOIN payees p ON (p.id = _.payee AND p.tombstone = 0)
          LEFT JOIN categories c ON (c.id = _.category AND c.tombstone = 0)
          LEFT JOIN accounts a ON (a.id = _.account AND a.tombstone = 0)
          ORDER BY _.date desc, _.starting_balance_flag, _.sort_order desc, _.id;
        `;
                        } } } };
        }, "./packages/loot-core/src/server/aql/views.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { makeViews: () => makeViews });
            var _compiler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/aql/compiler.ts");
            function selectFields(fields) { return Object.keys(fields).map(as => { let field = fields[as], needsAs = field !== as; return field.match(/[ .]/) || (field = `_.${field}`), needsAs ? `${field} AS ${(0, _compiler__WEBPACK_IMPORTED_MODULE_0__.quoteAlias)(as)}` : `${field}`; }).join(", "); }
            function makeViews(schema, schemaConfig) {
                let views = schemaConfig.views, viewStrs = [];
                return Object.keys(views).forEach(table => {
                    let { fields: fieldMappings = {}, ...tableViews } = views[table], publicFields = Object.fromEntries(Object.keys(schema[table]).map(name => [name, name])), internalFields = { ...publicFields, ...fieldMappings };
                    Object.keys(tableViews).forEach(viewName => {
                        let sql;
                        sql = (sql = "function" == typeof tableViews[viewName] ? tableViews[viewName](overrides => selectFields({ ...internalFields, ...overrides }), overrides => selectFields({ ...publicFields, ...overrides })) : tableViews[viewName]).trim().replace(/;$/, ""), viewStrs.push(`
        DROP VIEW IF EXISTS ${viewName};
        CREATE VIEW ${viewName} AS ${sql};
      `);
                    });
                }), viewStrs.join(`
`);
            }
        }, "./packages/loot-core/src/server/auth/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _encryption__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _post__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _server_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_1__.createApp)();
            async function didBootstrap() { return !!await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("did-bootstrap"); }
            async function needsBootstrap({ url } = {}) { let serverConfig, resText, res; if (url && !(0, _server_config__WEBPACK_IMPORTED_MODULE_5__.isValidBaseURL)(url))
                return { error: "get-server-failure" }; try {
                if (!(serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)(url)))
                    return { bootstrapped: !0, hasServer: !1 };
            }
            catch (err) {
                return { error: "get-server-failure" };
            } try {
                resText = await (0, _post__WEBPACK_IMPORTED_MODULE_4__.get)(serverConfig.SIGNUP_SERVER + "/needs-bootstrap");
            }
            catch (err) {
                return { error: "network-failure" };
            } try {
                res = JSON.parse(resText);
            }
            catch (err) {
                return { error: "parse-failure" };
            } return { bootstrapped: res.data.bootstrapped, availableLoginMethods: res.data.availableLoginMethods || [{ method: "password", active: !0, displayName: "Password" }], multiuser: res.data.multiuser || !1, hasServer: !0 }; }
            async function bootstrap(loginConfig) { try {
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.SIGNUP_SERVER + "/bootstrap", loginConfig);
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } return {}; }
            async function getLoginMethods() { let res; try {
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                res = await fetch(serverConfig.SIGNUP_SERVER + "/login-methods").then(res => res.json());
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } return res.methods ? { methods: res.methods } : { error: "internal" }; }
            async function getUser() { let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)(); if (!serverConfig)
                return await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("did-bootstrap") ? { offline: !1 } : null; let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return null; try {
                let res = await (0, _post__WEBPACK_IMPORTED_MODULE_4__.get)(serverConfig.SIGNUP_SERVER + "/validate", { headers: { "X-ACTUAL-TOKEN": userToken } }), tokenExpired = !1, { status, reason, data: { userName = null, permission = "", userId = null, displayName = null, loginMethod = null } = {} } = JSON.parse(res) || {};
                if ("error" === status)
                    if ("unauthorized" === reason)
                        return null;
                    else {
                        if ("token-expired" !== reason)
                            return { offline: !0 };
                        tokenExpired = !0;
                    }
                return { offline: !1, userName, permission, userId, displayName, loginMethod, tokenExpired };
            }
            catch (e) {
                return console.log(e), { offline: !0 };
            } }
            async function changePassword({ password }) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); if (!userToken)
                return { error: "not-logged-in" }; try {
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.SIGNUP_SERVER + "/change-password", { token: userToken, password });
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } return {}; }
            async function signIn(loginInfo) { let res; ("string" != typeof loginInfo.loginMethod || null == loginInfo.loginMethod) && (loginInfo.loginMethod = "password"); try {
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                res = await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.SIGNUP_SERVER + "/login", loginInfo);
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } if (res.returnUrl)
                return { redirectUrl: res.returnUrl }; if (!res.token)
                throw Error("login: User token not set"); return await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("user-token", res.token), {}; }
            async function signOut() { return _encryption__WEBPACK_IMPORTED_MODULE_2__.unloadAllKeys(), await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.multiRemove(["user-token", "encrypt-keys", "lastBudget", "readOnly"]), "ok"; }
            async function setToken({ token }) { await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("user-token", token); }
            async function enableOpenId(openIdConfig) { try {
                let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token");
                if (!userToken)
                    return { error: "unauthorized" };
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.BASE_SERVER + "/openid/enable", openIdConfig, { "X-ACTUAL-TOKEN": userToken });
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } return {}; }
            async function getOpenIdConfig({ password }) { try {
                let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"), serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                let res = await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.BASE_SERVER + "/openid/config", { password }, { "X-ACTUAL-TOKEN": userToken });
                if (res)
                    return res;
                return null;
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } }
            async function enablePassword(passwordConfig) { try {
                let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token");
                if (!userToken)
                    return { error: "unauthorized" };
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_5__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                await (0, _post__WEBPACK_IMPORTED_MODULE_4__.post)(serverConfig.BASE_SERVER + "/openid/disable", passwordConfig, { "X-ACTUAL-TOKEN": userToken });
            }
            catch (err) {
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.PostError)
                    return { error: err.reason || "network-failure" };
                throw err;
            } return {}; }
            app.method("get-did-bootstrap", didBootstrap), app.method("subscribe-needs-bootstrap", needsBootstrap), app.method("subscribe-bootstrap", bootstrap), app.method("subscribe-get-login-methods", getLoginMethods), app.method("subscribe-get-user", getUser), app.method("subscribe-change-password", changePassword), app.method("subscribe-sign-in", signIn), app.method("subscribe-sign-out", signOut), app.method("subscribe-set-token", setToken), app.method("enable-openid", enableOpenId), app.method("get-openid-config", getOpenIdConfig), app.method("enable-password", enablePassword);
        }, "./packages/loot-core/src/server/budget/actions.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { copyPreviousMonth: () => copyPreviousMonth, copySinglePreviousMonth: () => copySinglePreviousMonth, coverOverbudgeted: () => coverOverbudgeted, coverOverspending: () => coverOverspending, getBudget: () => getBudget, getSheetBoolean: () => getSheetBoolean, getSheetValue: () => getSheetValue, holdForNextMonth: () => holdForNextMonth, isReflectBudget: () => isReflectBudget, resetHold: () => resetHold, resetIncomeCarryover: () => resetIncomeCarryover, set12MonthAvg: () => set12MonthAvg, set3MonthAvg: () => set3MonthAvg, set6MonthAvg: () => set6MonthAvg, setBudget: () => setBudget, setBuffer: () => setBuffer, setCategoryCarryover: () => setCategoryCarryover, setGoal: () => setGoal, setNMonthAvg: () => setNMonthAvg, setZero: () => setZero, transferAvailable: () => transferAvailable, transferCategory: () => transferCategory });
            var _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _shared_locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/locale.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _sheet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _sync__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            async function getSheetValue(sheetName, cell) { let node = await _sheet__WEBPACK_IMPORTED_MODULE_5__.getCell(sheetName, cell); return (0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.safeNumber)("number" == typeof node.value ? node.value : 0); }
            async function getSheetBoolean(sheetName, cell) { let node = await _sheet__WEBPACK_IMPORTED_MODULE_5__.getCell(sheetName, cell); return "boolean" == typeof node.value && node.value; }
            function getBudgetTable() { return isReflectBudget() ? "reflect_budgets" : "zero_budgets"; }
            function isReflectBudget() { let budgetType = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync("SELECT value FROM preferences WHERE id = ?", ["budgetType"]); return "tracking" === (budgetType ? budgetType.value : "envelope"); }
            function dbMonth(month) { return parseInt(month.replace("-", "")); }
            function getBudget({ category, month }) { let table = getBudgetTable(), existing = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync(`SELECT * FROM ${table} WHERE month = ? AND category = ?`, [dbMonth(month), category]); return existing && existing.amount || 0; }
            function setBudget({ category, month, amount }) { amount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.safeNumber)("number" == typeof amount ? amount : 0); let table = getBudgetTable(), existing = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync(`SELECT id FROM ${table} WHERE month = ? AND category = ?`, [dbMonth(month), category]); return existing ? _db__WEBPACK_IMPORTED_MODULE_4__.update(table, { id: existing.id, amount }) : _db__WEBPACK_IMPORTED_MODULE_4__.insert(table, { id: `${dbMonth(month)}-${category}`, month: dbMonth(month), category, amount }); }
            function setGoal({ month, category, goal, long_goal }) { let table = getBudgetTable(), existing = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync(`SELECT id FROM ${table} WHERE month = ? AND category = ?`, [dbMonth(month), category]); return existing ? _db__WEBPACK_IMPORTED_MODULE_4__.update(table, { id: existing.id, goal, long_goal }) : _db__WEBPACK_IMPORTED_MODULE_4__.insert(table, { id: `${dbMonth(month)}-${category}`, month: dbMonth(month), category, goal, long_goal }); }
            function setBuffer(month, amount) { let existing = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync("SELECT id FROM zero_budget_months WHERE id = ?", [month]); return existing ? _db__WEBPACK_IMPORTED_MODULE_4__.update("zero_budget_months", { id: existing.id, buffered: amount }) : _db__WEBPACK_IMPORTED_MODULE_4__.insert("zero_budget_months", { id: month, buffered: amount }); }
            function setCarryover(table, category, month, flag) { let existing = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync(`SELECT id FROM ${table} WHERE month = ? AND category = ?`, [month, category]); return existing ? _db__WEBPACK_IMPORTED_MODULE_4__.update(table, { id: existing.id, carryover: +!!flag }) : _db__WEBPACK_IMPORTED_MODULE_4__.insert(table, { id: `${month}-${category}`, month, category, carryover: +!!flag }); }
            async function copyPreviousMonth({ month }) {
                var month1;
                let prevMonth = dbMonth(_shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(month)), table = getBudgetTable(), budgetData = await (month1 = prevMonth.toString(), _db__WEBPACK_IMPORTED_MODULE_4__.all(`
    SELECT b.*, c.is_income FROM v_categories c
    LEFT JOIN ${table} b ON b.category = c.id
    WHERE c.tombstone = 0 AND b.month = ?
  `, [month1]));
                await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { budgetData.forEach(prevBudget => { (1 !== prevBudget.is_income || isReflectBudget()) && setBudget({ category: prevBudget.category, month, amount: prevBudget.amount }); }); });
            }
            async function copySinglePreviousMonth({ month, category }) { let prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(month), newAmount = await getSheetValue(_shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(prevMonth), "budget-" + category); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { setBudget({ category, month, amount: newAmount }); }); }
            async function setZero({ month }) { let categories = await _db__WEBPACK_IMPORTED_MODULE_4__.all("SELECT * FROM v_categories WHERE tombstone = 0"); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { categories.forEach(cat => { (1 !== cat.is_income || isReflectBudget()) && setBudget({ category: cat.id, month, amount: 0 }); }); }); }
            async function set3MonthAvg({ month }) {
                let categories = await _db__WEBPACK_IMPORTED_MODULE_4__.all(`
  SELECT c.*
  FROM categories c
  LEFT JOIN category_groups g ON c.cat_group = g.id
  WHERE c.tombstone = 0 AND c.hidden = 0 AND g.hidden = 0
  `), prevMonth1 = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(month), prevMonth2 = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(prevMonth1), prevMonth3 = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(prevMonth2);
                await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { for (let cat of categories) {
                    if (1 === cat.is_income && !isReflectBudget())
                        continue;
                    let spent1 = await getSheetValue(_shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(prevMonth1), "sum-amount-" + cat.id), avg = Math.round((spent1 + await getSheetValue(_shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(prevMonth2), "sum-amount-" + cat.id) + await getSheetValue(_shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(prevMonth3), "sum-amount-" + cat.id)) / 3);
                    0 === cat.is_income && (avg *= -1), setBudget({ category: cat.id, month, amount: avg });
                } });
            }
            async function set12MonthAvg({ month }) {
                let categories = await _db__WEBPACK_IMPORTED_MODULE_4__.all(`
  SELECT c.*
  FROM categories c
  LEFT JOIN category_groups g ON c.cat_group = g.id
  WHERE c.tombstone = 0 AND c.hidden = 0 AND g.hidden = 0
  `);
                await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { for (let cat of categories)
                    (1 !== cat.is_income || isReflectBudget()) && setNMonthAvg({ month, N: 12, category: cat.id }); });
            }
            async function set6MonthAvg({ month }) {
                let categories = await _db__WEBPACK_IMPORTED_MODULE_4__.all(`
  SELECT c.*
  FROM categories c
  LEFT JOIN category_groups g ON c.cat_group = g.id
  WHERE c.tombstone = 0 AND c.hidden = 0 AND g.hidden = 0
  `);
                await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { for (let cat of categories)
                    (1 !== cat.is_income || isReflectBudget()) && setNMonthAvg({ month, N: 6, category: cat.id }); });
            }
            async function setNMonthAvg({ month, N, category }) { let categoryFromDb = await _db__WEBPACK_IMPORTED_MODULE_4__.first("SELECT is_income FROM v_categories WHERE id = ?", [category]), prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(month), sumAmount = 0; for (let l = 0; l < N; l++)
                sumAmount += await getSheetValue(_shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(prevMonth), "sum-amount-" + category), prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_2__.prevMonth(prevMonth); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { let avg = Math.round(sumAmount / N); 0 === categoryFromDb.is_income && (avg *= -1), setBudget({ category, month, amount: avg }); }); }
            async function holdForNextMonth({ month, amount }) { let row = await _db__WEBPACK_IMPORTED_MODULE_4__.first("SELECT buffered FROM zero_budget_months WHERE id = ?", [month]), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(month), toBudget = await getSheetValue(sheetName, "to-budget"); if (toBudget > 0) {
                var buffered, amount1;
                let bufferedAmount = (buffered = row && row.buffered || 0, amount1 = Math.min(Math.max(amount1 = amount, -buffered), Math.max(toBudget, 0)), buffered + amount1);
                return await setBuffer(month, bufferedAmount), !0;
            } return !1; }
            async function resetHold({ month }) { await setBuffer(month, 0); }
            async function coverOverspending({ month, to, from }) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(month), toBudgeted = await getSheetValue(sheetName, "budget-" + to), leftover = await getSheetValue(sheetName, "leftover-" + to), leftoverFrom = await getSheetValue(sheetName, "to-budget" === from ? "to-budget" : "leftover-" + from); if (leftover >= 0 || leftoverFrom <= 0)
                return; let amountCovered = Math.min(-leftover, leftoverFrom); if ("to-budget" !== from) {
                let fromBudgeted = await getSheetValue(sheetName, "budget-" + from);
                await setBudget({ category: from, month, amount: fromBudgeted - amountCovered });
            } await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { await setBudget({ category: to, month, amount: toBudgeted + amountCovered }), await addMovementNotes({ month, amount: amountCovered, to, from }); }); }
            async function transferAvailable({ month, amount, category }) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(month); amount = Math.max(Math.min(amount, await getSheetValue(sheetName, "to-budget")), 0); let budgeted = await getSheetValue(sheetName, "budget-" + category); await setBudget({ category, month, amount: budgeted + amount }); }
            async function coverOverbudgeted({ month, category }) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(month), toBudget = await getSheetValue(sheetName, "to-budget"), categoryBudget = await getSheetValue(sheetName, "budget-" + category); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { await setBudget({ category, month, amount: categoryBudget + toBudget }), await addMovementNotes({ month, amount: -toBudget, from: category, to: "overbudgeted" }); }); }
            async function transferCategory({ month, amount, from, to }) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth(month), fromBudgeted = await getSheetValue(sheetName, "budget-" + from); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { if (await setBudget({ category: from, month, amount: fromBudgeted - amount }), "to-budget" !== to) {
                let toBudgeted = await getSheetValue(sheetName, "budget-" + to);
                await setBudget({ category: to, month, amount: toBudgeted + amount });
            } await addMovementNotes({ month, amount, to, from }); }); }
            async function setCategoryCarryover({ startMonth, category, flag }) { let table = getBudgetTable(), months = function (startMonth) { let { createdMonths } = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta(), latest = null; for (let month of createdMonths)
                (null == latest || month > latest) && (latest = month); return _shared_months__WEBPACK_IMPORTED_MODULE_2__.rangeInclusive(startMonth, latest); }(startMonth); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { for (let month of months)
                setCarryover(table, category, dbMonth(month).toString(), flag); }); }
            async function addMovementNotes({ month, amount, to, from }) {
                var notes;
                let displayAmount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.integerToCurrency)(amount), monthBudgetNotesId = `budget-${month}`, existingMonthBudgetNotes = (notes = _db__WEBPACK_IMPORTED_MODULE_4__.firstSync("SELECT n.note FROM notes n WHERE n.id = ?", [monthBudgetNotesId])?.note) ? `${notes}${notes && `
`}` : "", locale = (0, _shared_locale__WEBPACK_IMPORTED_MODULE_1__.getLocale)(await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("language")), displayDay = _shared_months__WEBPACK_IMPORTED_MODULE_2__.format(_shared_months__WEBPACK_IMPORTED_MODULE_2__.currentDate(), "MMMM dd", locale), categories = await _db__WEBPACK_IMPORTED_MODULE_4__.getCategories([from, to].filter(c => "to-budget" !== c && "overbudgeted" !== c)), fromCategoryName = "to-budget" === from ? "To Budget" : categories.find(c => c.id === from)?.name, toCategoryName = "to-budget" === to ? "To Budget" : "overbudgeted" === to ? "Overbudgeted" : categories.find(c => c.id === to)?.name, note = `Reassigned ${displayAmount} from ${fromCategoryName} → ${toCategoryName} on ${displayDay}`;
                await _db__WEBPACK_IMPORTED_MODULE_4__.update("notes", { id: monthBudgetNotesId, note: `${existingMonthBudgetNotes}- ${note}` });
            }
            async function resetIncomeCarryover({ month }) { let table = getBudgetTable(), categories = await _db__WEBPACK_IMPORTED_MODULE_4__.all("SELECT * FROM v_categories WHERE is_income = 1 AND tombstone = 0"); await (0, _sync__WEBPACK_IMPORTED_MODULE_6__.batchMessages)(async () => { for (let category of categories)
                await setCarryover(table, category.id, dbMonth(month).toString(), !1); }); }
        }, "./packages/loot-core/src/server/budget/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _aql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _models__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _sheet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _spreadsheet_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts"), _sync__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _undo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _base__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _cleanup_template__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/budget/cleanup-template.ts"), _goal_template__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/budget/goal-template.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_2__.createApp)();
            async function getCategories() { let categoryGroups = await getCategoryGroups(); return { grouped: categoryGroups, list: categoryGroups.flatMap(g => g.categories ?? []) }; }
            async function getBudgetBounds() { return await _base__WEBPACK_IMPORTED_MODULE_13__.createAllBudgets(); }
            async function envelopeBudgetMonth({ month }) { let groups = await _db__WEBPACK_IMPORTED_MODULE_4__.getCategoriesGrouped(), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); function value(name) { let v = _sheet__WEBPACK_IMPORTED_MODULE_8__.getCellValue(sheetName, name); return { value: "" === v ? 0 : v, name: (0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_9__.resolveName)(sheetName, name) }; } let values = [value("available-funds"), value("last-month-overspent"), value("buffered"), value("total-budgeted"), value("to-budget"), value("from-last-month"), value("total-income"), value("total-spent"), value("total-leftover")]; for (let group of groups) {
                let categories = group.categories ?? [];
                if (group.is_income)
                    for (let cat of (values.push(value("total-income")), categories))
                        values.push(value(`sum-amount-${cat.id}`));
                else
                    for (let cat of (values = values.concat([value(`group-budget-${group.id}`), value(`group-sum-amount-${group.id}`), value(`group-leftover-${group.id}`)]), categories))
                        values = values.concat([value(`budget-${cat.id}`), value(`sum-amount-${cat.id}`), value(`leftover-${cat.id}`), value(`carryover-${cat.id}`), value(`goal-${cat.id}`), value(`long-goal-${cat.id}`)]);
            } return values; }
            async function trackingBudgetMonth({ month }) { let groups = await _db__WEBPACK_IMPORTED_MODULE_4__.getCategoriesGrouped(), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); function value(name) { let v = _sheet__WEBPACK_IMPORTED_MODULE_8__.getCellValue(sheetName, name); return { value: "" === v ? 0 : v, name: (0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_9__.resolveName)(sheetName, name) }; } let values = [value("total-budgeted"), value("total-budget-income"), value("total-saved"), value("total-income"), value("total-spent"), value("real-saved"), value("total-leftover")]; for (let group of groups)
                for (let cat of (values = values.concat([value(`group-budget-${group.id}`), value(`group-sum-amount-${group.id}`), value(`group-leftover-${group.id}`)]), group.categories ?? []))
                    values = values.concat([value(`budget-${cat.id}`), value(`sum-amount-${cat.id}`), value(`leftover-${cat.id}`), value(`goal-${cat.id}`), value(`long-goal-${cat.id}`)]), group.is_income || values.push(value(`carryover-${cat.id}`)); return values; }
            async function createCategory({ name, groupId, isIncome, hidden }) { if (!groupId)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_5__.APIError)("Creating a category: groupId is required"); return await _db__WEBPACK_IMPORTED_MODULE_4__.insertCategory({ name: name.trim(), cat_group: groupId, is_income: +!!isIncome, hidden: +!!hidden }); }
            async function updateCategory(category) { try {
                await _db__WEBPACK_IMPORTED_MODULE_4__.updateCategory(_models__WEBPACK_IMPORTED_MODULE_6__.categoryModel.toDb({ ...category, name: category.name.trim() }));
            }
            catch (e) {
                if (e instanceof Error && e.message.toLowerCase().includes("unique constraint"))
                    return { error: { type: "category-exists" } };
                throw e;
            } return {}; }
            async function moveCategory({ id, groupId, targetId }) { await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { await _db__WEBPACK_IMPORTED_MODULE_4__.moveCategory(id, groupId, targetId); }); }
            async function deleteCategory({ id, transferId }) { let result = {}; return await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { let row = await _db__WEBPACK_IMPORTED_MODULE_4__.first("SELECT is_income FROM categories WHERE id = ?", [id]); if (!row) {
                result = { error: "no-categories" };
                return;
            } let transfer = transferId && await _db__WEBPACK_IMPORTED_MODULE_4__.first("SELECT is_income FROM categories WHERE id = ?", [transferId]); if (row && (!transferId || transfer)) {
                if (transferId && row && transfer && row.is_income !== transfer.is_income) {
                    result = { error: "category-type" };
                    return;
                }
            }
            else {
                result = { error: "no-categories" };
                return;
            } 0 === row.is_income && transferId && await _base__WEBPACK_IMPORTED_MODULE_13__.doTransfer([id], transferId), await _db__WEBPACK_IMPORTED_MODULE_4__.deleteCategory({ id }, transferId); }), result; }
            async function getCategoryGroups() { let { data: categoryGroups } = await (0, _aql__WEBPACK_IMPORTED_MODULE_3__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("category_groups").select("*")); return categoryGroups; }
            async function createCategoryGroup({ name, isIncome, hidden }) { return await _db__WEBPACK_IMPORTED_MODULE_4__.insertCategoryGroup({ name, is_income: +!!isIncome, hidden: +!!hidden }); }
            async function updateCategoryGroup(group) { await _db__WEBPACK_IMPORTED_MODULE_4__.updateCategoryGroup(_models__WEBPACK_IMPORTED_MODULE_6__.categoryGroupModel.toDb(group)); }
            async function moveCategoryGroup({ id, targetId }) { await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { await _db__WEBPACK_IMPORTED_MODULE_4__.moveCategoryGroup(id, targetId); }); }
            async function deleteCategoryGroup({ id, transferId }) { let groupCategories = await _db__WEBPACK_IMPORTED_MODULE_4__.all("SELECT id FROM categories WHERE cat_group = ? AND tombstone = 0", [id]); await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { transferId && await _base__WEBPACK_IMPORTED_MODULE_13__.doTransfer(groupCategories.map(c => c.id), transferId), await _db__WEBPACK_IMPORTED_MODULE_4__.deleteCategoryGroup({ id }, transferId); }); }
            async function isCategoryTransferRequired({ id }) {
                return 0 !== (await _db__WEBPACK_IMPORTED_MODULE_4__.runQuery(`SELECT count(t.id) as count FROM transactions t
       LEFT JOIN category_mapping cm ON cm.id = t.category
       WHERE cm.transferId = ? AND t.tombstone = 0`, [id], !0))[0].count || [..._sheet__WEBPACK_IMPORTED_MODULE_8__.get().meta().createdMonths].some(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), value = _sheet__WEBPACK_IMPORTED_MODULE_8__.get().getCellValue(sheetName, "budget-" + id); return null != value && 0 !== value; });
            }
            app.method("budget/budget-amount", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.setBudget))), app.method("budget/copy-previous-month", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.copyPreviousMonth))), app.method("budget/copy-single-month", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.copySinglePreviousMonth))), app.method("budget/set-zero", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.setZero))), app.method("budget/set-3month-avg", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.set3MonthAvg))), app.method("budget/set-6month-avg", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.set6MonthAvg))), app.method("budget/set-12month-avg", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.set12MonthAvg))), app.method("budget/set-n-month-avg", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.setNMonthAvg))), app.method("budget/check-templates", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_goal_template__WEBPACK_IMPORTED_MODULE_15__.runCheckTemplates))), app.method("budget/apply-goal-template", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_goal_template__WEBPACK_IMPORTED_MODULE_15__.applyTemplate))), app.method("budget/apply-multiple-templates", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_goal_template__WEBPACK_IMPORTED_MODULE_15__.applyMultipleCategoryTemplates))), app.method("budget/overwrite-goal-template", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_goal_template__WEBPACK_IMPORTED_MODULE_15__.overwriteTemplate))), app.method("budget/apply-single-template", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_goal_template__WEBPACK_IMPORTED_MODULE_15__.applySingleCategoryTemplate))), app.method("budget/cleanup-goal-template", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_cleanup_template__WEBPACK_IMPORTED_MODULE_14__.cleanupTemplate))), app.method("budget/hold-for-next-month", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.holdForNextMonth))), app.method("budget/reset-hold", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.resetHold))), app.method("budget/cover-overspending", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.coverOverspending))), app.method("budget/transfer-available", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.transferAvailable))), app.method("budget/cover-overbudgeted", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.coverOverbudgeted))), app.method("budget/transfer-category", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.transferCategory))), app.method("budget/set-carryover", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.setCategoryCarryover))), app.method("budget/reset-income-carryover", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(_actions__WEBPACK_IMPORTED_MODULE_12__.resetIncomeCarryover))), app.method("get-categories", getCategories), app.method("get-budget-bounds", getBudgetBounds), app.method("envelope-budget-month", envelopeBudgetMonth), app.method("tracking-budget-month", trackingBudgetMonth), app.method("category-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(createCategory))), app.method("category-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(updateCategory))), app.method("category-move", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(moveCategory))), app.method("category-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(deleteCategory))), app.method("get-category-groups", getCategoryGroups), app.method("category-group-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(createCategoryGroup))), app.method("category-group-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(updateCategoryGroup))), app.method("category-group-move", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(moveCategoryGroup))), app.method("category-group-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_7__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_11__.undoable)(deleteCategoryGroup))), app.method("must-category-transfer", isCategoryTransferRequired);
        }, "./packages/loot-core/src/server/budget/base.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createAllBudgets: () => createAllBudgets, createBudget: () => createBudget, createCategory: () => createCategory, doTransfer: () => doTransfer, getBudgetRange: () => getBudgetRange, getBudgetType: () => getBudgetType, setType: () => setType, triggerBudgetChanges: () => triggerBudgetChanges });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _sheet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _spreadsheet_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts"), _actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _envelope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/budget/envelope.ts"), _report__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/budget/report.ts");
            function getBudgetType() { return _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta().budgetType || "envelope"; }
            function getBudgetRange(start, end) { return (start = _shared_months__WEBPACK_IMPORTED_MODULE_0__.getMonth(start)) > (end = _shared_months__WEBPACK_IMPORTED_MODULE_0__.getMonth(end)) && (start = end), { start: start = _shared_months__WEBPACK_IMPORTED_MODULE_0__.subMonths(start, 3), end: end = _shared_months__WEBPACK_IMPORTED_MODULE_0__.addMonths(end, 12), range: _shared_months__WEBPACK_IMPORTED_MODULE_0__.rangeInclusive(start, end) }; }
            function createCategory(cat, sheetName, prevSheetName, start, end) {
                _sheet__WEBPACK_IMPORTED_MODULE_5__.get().createDynamic(sheetName, "sum-amount-" + cat.id, { initialValue: 0, run: () => {
                        let row = _db__WEBPACK_IMPORTED_MODULE_4__.runQuery(`SELECT SUM(amount) as amount FROM v_transactions_internal_alive t
           LEFT JOIN accounts a ON a.id = t.account
         WHERE t.date >= ${start} AND t.date <= ${end}
           AND category = '${cat.id}' AND a.offbudget = 0`, [], !0)[0];
                        return (row ? row.amount : 0) || 0;
                    } }), "envelope" === getBudgetType() ? _envelope__WEBPACK_IMPORTED_MODULE_8__.createCategory(cat, sheetName, prevSheetName) : _report__WEBPACK_IMPORTED_MODULE_9__.createCategory(cat, sheetName, prevSheetName);
            }
            function handleTransactionChange(transaction, changedFields) { if ((changedFields.has("date") || changedFields.has("acct") || changedFields.has("amount") || changedFields.has("category") || changedFields.has("tombstone") || changedFields.has("isParent")) && transaction.date && transaction.category) {
                let month = _shared_months__WEBPACK_IMPORTED_MODULE_0__.monthFromDate(_db__WEBPACK_IMPORTED_MODULE_4__.fromDateRepr(transaction.date)), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month);
                _sheet__WEBPACK_IMPORTED_MODULE_5__.get().recompute((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_6__.resolveName)(sheetName, "sum-amount-" + transaction.category));
            } }
            function triggerBudgetChanges(oldValues, newValues) {
                let { createdMonths = new Set } = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta(), budgetType = getBudgetType();
                _sheet__WEBPACK_IMPORTED_MODULE_5__.startTransaction();
                try {
                    newValues.forEach((items, table) => {
                        let old = oldValues.get(table);
                        items.forEach(newValue => {
                            let oldValue = old && old.get(newValue.id);
                            if ("zero_budget_months" === table) {
                                let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(newValue.id);
                                _sheet__WEBPACK_IMPORTED_MODULE_5__.get().set(`${sheetName}!buffered`, newValue.buffered);
                            }
                            else if ("zero_budgets" === table || "reflect_budgets" === table) {
                                if (newValue.category) {
                                    let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(newValue.month.toString());
                                    _sheet__WEBPACK_IMPORTED_MODULE_5__.get().set(`${sheetName}!budget-${newValue.category}`, newValue.amount || 0), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().set(`${sheetName}!carryover-${newValue.category}`, 1 === newValue.carryover), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().set(`${sheetName}!goal-${newValue.category}`, newValue.goal), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().set(`${sheetName}!long-goal-${newValue.category}`, newValue.long_goal);
                                }
                            }
                            else if ("transactions" === table) {
                                let changed = new Set(Object.keys((0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.getChangedValues)(oldValue || {}, newValue) || {}));
                                oldValue && handleTransactionChange(oldValue, changed), handleTransactionChange(newValue, changed);
                            }
                            else
                                "category_mapping" === table ? createdMonths.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); oldValue && _sheet__WEBPACK_IMPORTED_MODULE_5__.get().recompute((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_6__.resolveName)(sheetName, "sum-amount-" + oldValue.transferId)), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().recompute((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_6__.resolveName)(sheetName, "sum-amount-" + newValue.transferId)); }) : "categories" === table ? "envelope" === budgetType ? _envelope__WEBPACK_IMPORTED_MODULE_8__.handleCategoryChange(createdMonths, oldValue, newValue) : _report__WEBPACK_IMPORTED_MODULE_9__.handleCategoryChange(createdMonths, oldValue, newValue) : "category_groups" === table ? "envelope" === budgetType ? _envelope__WEBPACK_IMPORTED_MODULE_8__.handleCategoryGroupChange(createdMonths, oldValue, newValue) : _report__WEBPACK_IMPORTED_MODULE_9__.handleCategoryGroupChange(createdMonths, oldValue, newValue) : "accounts" === table && function (months, oldValue, newValue) {
                                    if (!oldValue || oldValue.offbudget !== newValue.offbudget) {
                                        let rows = _db__WEBPACK_IMPORTED_MODULE_4__.runQuery(`
        SELECT DISTINCT(category) as category FROM transactions
        WHERE acct = ?
      `, [newValue.id], !0);
                                        months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); rows.forEach(row => { _sheet__WEBPACK_IMPORTED_MODULE_5__.get().recompute((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_6__.resolveName)(sheetName, "sum-amount-" + row.category)); }); });
                                    }
                                }(createdMonths, oldValue, newValue);
                        });
                    });
                }
                finally {
                    _sheet__WEBPACK_IMPORTED_MODULE_5__.endTransaction();
                }
            }
            async function doTransfer(categoryIds, transferId) { let { createdMonths: months } = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta(); [...months].forEach(month => { let totalValue = categoryIds.map(id => _actions__WEBPACK_IMPORTED_MODULE_7__.getBudget({ month, category: id })).reduce((total, value) => total + value, 0), transferValue = _actions__WEBPACK_IMPORTED_MODULE_7__.getBudget({ month, category: transferId }); _actions__WEBPACK_IMPORTED_MODULE_7__.setBudget({ month, category: transferId, amount: totalValue + transferValue }); }); }
            async function createBudget(months) { let { data: groups } = await (0, _aql__WEBPACK_IMPORTED_MODULE_3__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("category_groups").select("*")), categories = groups.flatMap(group => group.categories); _sheet__WEBPACK_IMPORTED_MODULE_5__.startTransaction(); let meta = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta(); meta.createdMonths = meta.createdMonths || new Set; let budgetType = getBudgetType(); "envelope" === budgetType && _envelope__WEBPACK_IMPORTED_MODULE_8__.createBudget(meta, categories, months), months.forEach(month => { if (!meta.createdMonths.has(month)) {
                let prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.prevMonth(month), { start, end } = _shared_months__WEBPACK_IMPORTED_MODULE_0__.bounds(month), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), prevSheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(prevMonth);
                categories.forEach(cat => { createCategory(cat, sheetName, prevSheetName, start, end); }), groups.forEach(group => { "envelope" === budgetType ? _envelope__WEBPACK_IMPORTED_MODULE_8__.createCategoryGroup(group, sheetName) : _report__WEBPACK_IMPORTED_MODULE_9__.createCategoryGroup(group, sheetName); }), "envelope" === budgetType ? _envelope__WEBPACK_IMPORTED_MODULE_8__.createSummary(groups, categories, prevSheetName, sheetName) : _report__WEBPACK_IMPORTED_MODULE_9__.createSummary(groups, sheetName), meta.createdMonths.add(month);
            } }), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().setMeta(meta), _sheet__WEBPACK_IMPORTED_MODULE_5__.endTransaction(), await _sheet__WEBPACK_IMPORTED_MODULE_5__.waitOnSpreadsheet(); }
            async function createAllBudgets() { let earliestTransaction = await _db__WEBPACK_IMPORTED_MODULE_4__.first("SELECT * FROM transactions WHERE isChild=0 AND date IS NOT NULL ORDER BY date ASC LIMIT 1"), earliestDate = earliestTransaction && _db__WEBPACK_IMPORTED_MODULE_4__.fromDateRepr(earliestTransaction.date), currentMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.currentMonth(), { start, end, range } = getBudgetRange(earliestDate || currentMonth, currentMonth), createdMonths = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta().createdMonths || new Set; return range.filter(m => !createdMonths.has(m)).length > 0 && await createBudget(range), { start, end }; }
            async function setType(type) { let meta = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().meta(); if (type === meta.budgetType)
                return; meta.budgetType = type, meta.createdMonths = new Set; let nodes = _sheet__WEBPACK_IMPORTED_MODULE_5__.get().getNodes(); _db__WEBPACK_IMPORTED_MODULE_4__.transaction(() => { for (let name of nodes.keys()) {
                let [sheetName, cellName] = name.split("!");
                sheetName.match(/^budget\d+/) && _sheet__WEBPACK_IMPORTED_MODULE_5__.get().deleteCell(sheetName, cellName);
            } }), _sheet__WEBPACK_IMPORTED_MODULE_5__.get().startCacheBarrier(), _sheet__WEBPACK_IMPORTED_MODULE_5__.loadUserBudgets(_db__WEBPACK_IMPORTED_MODULE_4__); let bounds = await createAllBudgets(); return _sheet__WEBPACK_IMPORTED_MODULE_5__.get().endCacheBarrier(), bounds; }
        }, "./packages/loot-core/src/server/budget/category-template-context.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { CategoryTemplateContext: () => CategoryTemplateContext });
            var loot_core_shared_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _schedule_template__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/budget/schedule-template.ts"), _statements__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/budget/statements.ts");
            class CategoryTemplateContext {
                static async init(templates, category, month, budgeted) { let fromLastMonth, lastMonthSheet = _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(_shared_months__WEBPACK_IMPORTED_MODULE_1__.subMonths(month, 1)), lastMonthBalance = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(lastMonthSheet, `leftover-${category.id}`), carryover = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetBoolean)(lastMonthSheet, `carryover-${category.id}`); fromLastMonth = lastMonthBalance < 0 && !carryover || category.is_income ? 0 : lastMonthBalance, await CategoryTemplateContext.checkByAndScheduleAndSpend(templates, month), await CategoryTemplateContext.checkPercentage(templates); let hideDecimal = await (0, _aql__WEBPACK_IMPORTED_MODULE_3__.aqlQuery)((0, loot_core_shared_query__WEBPACK_IMPORTED_MODULE_0__.q)("preferences").filter({ id: "hideFraction" }).select("*")); return new CategoryTemplateContext(templates, category, month, fromLastMonth, budgeted, hideDecimal.data.length > 0 && "true" === hideDecimal.data[0].value); }
                isGoalOnly() { return 0 === this.templates.length && 0 === this.remainder.length && this.goals.length > 0; }
                getPriorities() { return Array.from(this.priorities); }
                hasRemainder() { return this.remainderWeight > 0 && !this.limitMet; }
                getRemainderWeight() { return this.remainderWeight; }
                getLimitExcess() { return this.limitExcess; }
                async runAll(available) { let toBudget = 0, prioritiesSorted = new Int32Array([...this.getPriorities()].sort()); for (let i = 0; i < prioritiesSorted.length; i++) {
                    let p = prioritiesSorted[i];
                    toBudget += await this.runTemplatesForPriority(p, available, available);
                } return toBudget; }
                async runTemplatesForPriority(priority, budgetAvail, availStart) { if (!this.priorities.has(priority) || this.limitMet)
                    return 0; let t = this.templates.filter(t => t.priority === priority), available = budgetAvail || 0, toBudget = 0, byFlag = !1, remainder = 0, scheduleFlag = !1; for (let template of t) {
                    let newBudget = 0;
                    switch (template.type) {
                        case "simple":
                            newBudget = CategoryTemplateContext.runSimple(template, this.limitAmount);
                            break;
                        case "copy":
                            newBudget = await CategoryTemplateContext.runCopy(template, this);
                            break;
                        case "periodic":
                            newBudget = CategoryTemplateContext.runPeriodic(template, this);
                            break;
                        case "spend":
                            newBudget = await CategoryTemplateContext.runSpend(template, this);
                            break;
                        case "percentage":
                            newBudget = await CategoryTemplateContext.runPercentage(template, availStart, this);
                            break;
                        case "by":
                            newBudget = byFlag ? 0 : CategoryTemplateContext.runBy(this), byFlag = !0;
                            break;
                        case "schedule":
                            if (!scheduleFlag) {
                                let budgeted = this.fromLastMonth + toBudget, ret = await (0, _schedule_template__WEBPACK_IMPORTED_MODULE_6__.runSchedule)(t, this.month, budgeted, remainder, this.fromLastMonth, toBudget, [], this.category);
                                newBudget = ret.to_budget - toBudget, remainder = ret.remainder, scheduleFlag = !0;
                            }
                            break;
                        case "average": newBudget = await CategoryTemplateContext.runAverage(template, this);
                    }
                    available -= newBudget, toBudget += newBudget;
                } if (this.limitCheck && toBudget + this.toBudgetAmount + this.fromLastMonth >= this.limitAmount) {
                    let orig = toBudget;
                    toBudget = this.limitAmount - this.toBudgetAmount - this.fromLastMonth, this.limitMet = !0, available = available + orig - toBudget;
                } return this.hideDecimal && (toBudget = this.removeFraction(toBudget)), priority > 0 && available < 0 && !this.category.is_income ? (this.fullAmount += toBudget, toBudget = Math.max(0, toBudget + available)) : this.fullAmount += toBudget, this.toBudgetAmount += toBudget, this.category.is_income ? -toBudget : toBudget; }
                runRemainder(budgetAvail, perWeight) { if (0 === this.remainder.length)
                    return 0; let toBudget = Math.round(this.remainderWeight * perWeight), smallest = 1; return this.hideDecimal && (toBudget = this.removeFraction(toBudget), smallest = 100), (toBudget > budgetAvail || budgetAvail - toBudget <= smallest) && (toBudget = budgetAvail), this.limitCheck && toBudget + this.toBudgetAmount + this.fromLastMonth >= this.limitAmount && (toBudget = this.limitAmount - this.toBudgetAmount - this.fromLastMonth, this.limitMet = !0), this.toBudgetAmount += toBudget, toBudget; }
                getValues() { return this.runGoal(), { budgeted: this.toBudgetAmount, goal: this.goalAmount, longGoal: this.isLongGoal }; }
                constructor(templates, category, month, fromLastMonth, budgeted, hideDecimal = !1) {
                    this.templates = [];
                    this.remainder = [];
                    this.goals = [];
                    this.priorities = new Set;
                    this.hideDecimal = !1;
                    this.remainderWeight = 0;
                    this.toBudgetAmount = 0;
                    this.fullAmount = null;
                    this.isLongGoal = null;
                    this.goalAmount = null;
                    this.fromLastMonth = 0;
                    this.limitMet = !1;
                    this.limitExcess = 0;
                    this.limitAmount = 0;
                    this.limitCheck = !1;
                    this.limitHold = !1;
                    this.previouslyBudgeted = 0;
                    this.category = category, this.month = month, this.fromLastMonth = fromLastMonth, this.previouslyBudgeted = budgeted, this.hideDecimal = hideDecimal, templates && templates.forEach(t => { "template" === t.directive && "remainder" !== t.type ? (this.templates.push(t), null !== t.priority && this.priorities.add(t.priority)) : "template" === t.directive && "remainder" === t.type ? (this.remainder.push(t), this.remainderWeight += t.weight) : "goal" === t.directive && "goal" === t.type && this.goals.push(t); }), this.checkLimit(templates), this.checkSpend(), this.checkGoal();
                }
                runGoal() { if (this.goals.length > 0) {
                    this.isGoalOnly() && (this.toBudgetAmount = this.previouslyBudgeted), this.isLongGoal = !0, this.goalAmount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(this.goals[0].amount);
                    return;
                } this.goalAmount = this.fullAmount; }
                static async checkByAndScheduleAndSpend(templates, month) { if (0 === templates.filter(t => "schedule" === t.type || "by" === t.type).length)
                    return; let scheduleNames = (await (0, _statements__WEBPACK_IMPORTED_MODULE_7__.getActiveSchedules)()).map(({ name }) => name.trim()); templates.filter(t => "schedule" === t.type).forEach(t => { if (!scheduleNames.includes(t.name.trim()))
                    throw Error(`Schedule ${t.name.trim()} does not exist`); }); let lowestPriority = Math.min(...templates.filter(t => "schedule" === t.type || "by" === t.type).map(t => t.priority)); templates.filter(t => "schedule" === t.type || "by" === t.type).forEach(t => { if (t.priority !== lowestPriority)
                    throw Error(`Schedule and By templates must be the same priority level. Fix by setting all Schedule and By templates to priority level ${lowestPriority}`); }), templates.filter(t => "by" === t.type || "spend" === t.type).forEach(t => { if (0 > _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(`${t.month}`, month) && !(t.repeat || t.annual))
                    throw Error("Target month has passed, remove or update the target month"); }); }
                static async checkPercentage(templates) { let pt = templates.filter(t => "percentage" === t.type); if (0 === pt.length)
                    return; let reqCategories = pt.map(t => t.category.toLowerCase()), availNames = (await _db__WEBPACK_IMPORTED_MODULE_4__.getCategories()).filter(c => c.is_income).map(c => c.name.toLocaleLowerCase()); reqCategories.forEach(n => { if ("available funds" === n || "all income" === n)
                    ;
                else if (!availNames.includes(n))
                    throw Error(`Category "${n}" is not found in available income categories`); }); }
                checkLimit(templates) { for (let template of templates.filter(t => "simple" === t.type || "periodic" === t.type || "remainder" === t.type).filter(t => t.limit)) {
                    if (this.limitCheck)
                        throw Error("Only one `up to` allowed per category");
                    if ("daily" === template.limit.period) {
                        let numDays = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarDays(_shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(this.month, 1), this.month);
                        this.limitAmount += (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.limit.amount) * numDays;
                    }
                    else if ("weekly" === template.limit.period) {
                        let nextMonth = _shared_months__WEBPACK_IMPORTED_MODULE_1__.nextMonth(this.month), week = template.limit.start, baseLimit = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.limit.amount);
                        for (; week < nextMonth;)
                            week >= this.month && (this.limitAmount += baseLimit), week = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addWeeks(week, 1);
                    }
                    else if ("monthly" === template.limit.period)
                        this.limitAmount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.limit.amount);
                    else
                        throw Error("Invalid limit period. Check template syntax");
                    this.limitCheck = !0, this.limitHold = !!template.limit.hold, this.fromLastMonth >= this.limitAmount && (this.limitMet = !0, this.limitHold ? (this.limitExcess = 0, this.toBudgetAmount = 0, this.fullAmount = 0) : (this.limitExcess = this.fromLastMonth - this.limitAmount, this.toBudgetAmount = -this.limitExcess, this.fullAmount = -this.limitExcess));
                } }
                checkSpend() { if (this.templates.filter(t => "spend" === t.type).length > 1)
                    throw Error("Only one spend template is allowed per category"); }
                checkGoal() { if (this.goals.length > 1)
                    throw Error("Only one #goal is allowed per category"); }
                removeFraction(amount) { return (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(Math.round((0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.integerToAmount)(amount))); }
                static runSimple(template, limit) { return null != template.monthly ? (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.monthly) : limit; }
                static async runCopy(template, templateContext) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(_shared_months__WEBPACK_IMPORTED_MODULE_1__.subMonths(templateContext.month, template.lookBack)); return await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `budget-${templateContext.category.id}`); }
                static runPeriodic(template, templateContext) { let dateShiftFunction, toBudget = 0, amount = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.amount), period = template.period.period, numPeriods = template.period.amount, date = template.starting; switch (period) {
                    case "day":
                        dateShiftFunction = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addDays;
                        break;
                    case "week":
                        dateShiftFunction = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addWeeks;
                        break;
                    case "month":
                        dateShiftFunction = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths;
                        break;
                    case "year": dateShiftFunction = (date, numPeriods) => _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(date, 12 * numPeriods);
                } for (; templateContext.month > date;)
                    date = dateShiftFunction(date, numPeriods); if (0 > _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(templateContext.month, date))
                    return 0; let nextMonth = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(templateContext.month, 1); for (; date < nextMonth;)
                    toBudget += amount, date = dateShiftFunction(date, numPeriods); return toBudget; }
                static async runSpend(template, templateContext) { let fromMonth = `${template.from}`, toMonth = `${template.month}`, alreadyBudgeted = templateContext.fromLastMonth, firstMonth = !0, repeat = template.annual ? 12 * (template.repeat || 1) : template.repeat, m = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(toMonth, templateContext.month); if (repeat && m < 0)
                    for (; m < 0;)
                        toMonth = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(toMonth, repeat), fromMonth = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(fromMonth, repeat), m = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(toMonth, templateContext.month); for (let m = fromMonth; _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(templateContext.month, m) > 0; m = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(m, 1)) {
                    let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(m);
                    if (firstMonth) {
                        let spent = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `sum-amount-${templateContext.category.id}`);
                        alreadyBudgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `leftover-${templateContext.category.id}`) - spent, firstMonth = !1;
                    }
                    else
                        alreadyBudgeted += await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `budget-${templateContext.category.id}`);
                } let numMonths = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(toMonth, templateContext.month), target = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.amount); return numMonths < 0 ? 0 : Math.round((target - alreadyBudgeted) / (numMonths + 1)); }
                static async runPercentage(template, availableFunds, templateContext) { let sheetName, percent = template.percent, cat = template.category.toLowerCase(), prev = template.previous, monthlyIncome = 1; if (sheetName = prev ? _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(_shared_months__WEBPACK_IMPORTED_MODULE_1__.subMonths(templateContext.month, 1)) : _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(templateContext.month), "all income" === cat)
                    monthlyIncome = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, "total-income");
                else if ("available funds" === cat)
                    monthlyIncome = availableFunds;
                else {
                    let incomeCat = (await _db__WEBPACK_IMPORTED_MODULE_4__.getCategories()).find(c => c.is_income && c.name.toLowerCase() === cat);
                    monthlyIncome = await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `sum-amount-${incomeCat.id}`);
                } return Math.max(0, Math.round(percent / 100 * monthlyIncome)); }
                static async runAverage(template, templateContext) { let sum = 0; for (let i = 1; i <= template.numMonths; i++) {
                    let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_1__.sheetForMonth(_shared_months__WEBPACK_IMPORTED_MODULE_1__.subMonths(templateContext.month, i));
                    sum += await (0, _actions__WEBPACK_IMPORTED_MODULE_5__.getSheetValue)(sheetName, `sum-amount-${templateContext.category.id}`);
                } return -Math.round(sum / template.numMonths); }
                static runBy(templateContext) { let shortNumMonths, byTemplates = templateContext.templates.filter(t => "by" === t.type), savedInfo = [], totalNeeded = 0; for (let i = 0; i < byTemplates.length; i++) {
                    let template = byTemplates[i], targetMonth = `${template.month}`, period = template.annual ? 12 * (template.repeat || 1) : null != template.repeat ? template.repeat : null, numMonths = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(targetMonth, templateContext.month);
                    for (; numMonths < 0 && period;)
                        targetMonth = _shared_months__WEBPACK_IMPORTED_MODULE_1__.addMonths(targetMonth, period), numMonths = _shared_months__WEBPACK_IMPORTED_MODULE_1__.differenceInCalendarMonths(targetMonth, templateContext.month);
                    savedInfo.push({ numMonths, period }), (numMonths < shortNumMonths || !shortNumMonths) && (shortNumMonths = numMonths);
                } for (let i = 0; i < byTemplates.length; i++) {
                    let amount, template = byTemplates[i], numMonths = savedInfo[i].numMonths, period = savedInfo[i].period;
                    totalNeeded += numMonths > shortNumMonths && period ? Math.round((0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.amount) / period * (period - numMonths + shortNumMonths)) : numMonths > shortNumMonths ? Math.round((0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.amount) / (numMonths + 1) * (shortNumMonths + 1)) : (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(template.amount);
                } return Math.round((totalNeeded - templateContext.fromLastMonth) / (shortNumMonths + 1)); }
            }
        }, "./packages/loot-core/src/server/budget/cleanup-template.pegjs": function (module1, exports) {
            var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
            void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof (__WEBPACK_AMD_DEFINE_FACTORY__ = function () {
                "use strict";
                function peg$SyntaxError(message, expected, found, location) { var self1 = Error.call(this, message); return Object.setPrototypeOf && Object.setPrototypeOf(self1, peg$SyntaxError.prototype), self1.expected = expected, self1.found = found, self1.location = location, self1.name = "SyntaxError", self1; }
                function C() { this.constructor = peg$SyntaxError; }
                function peg$padEnd(str, targetLength, padString) { return (padString = padString || " ", str.length > targetLength) ? str : (targetLength -= str.length, str + (padString += padString.repeat(targetLength)).slice(0, targetLength)); }
                return C.prototype = Error.prototype, peg$SyntaxError.prototype = new C, peg$SyntaxError.prototype.format = function (sources) {
                    var str = "Error: " + this.message;
                    if (this.location) {
                        var k, src = null;
                        for (k = 0; k < sources.length; k++)
                            if (sources[k].source === this.location.source) {
                                src = sources[k].text.split(/\r\n|\n|\r/g);
                                break;
                            }
                        var s = this.location.start, offset_s = this.location.source && "function" == typeof this.location.source.offset ? this.location.source.offset(s) : s, loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
                        if (src) {
                            var e = this.location.end, filler = peg$padEnd("", offset_s.line.toString().length, " "), line = src[s.line - 1], hatLen = (s.line === e.line ? e.column : line.length + 1) - s.column || 1;
                            str += `
 --> ` + loc + `
` + filler + ` |
` + offset_s.line + " | " + line + `
` + filler + " | " + peg$padEnd("", s.column - 1, " ") + peg$padEnd("", hatLen, "^");
                        }
                        else
                            str += `
 at ` + loc;
                    }
                    return str;
                }, peg$SyntaxError.buildMessage = function (expected, found) { var DESCRIBE_EXPECTATION_FNS = { literal: function (expectation) { return '"' + literalEscape(expectation.text) + '"'; }, class: function (expectation) { var escapedParts = expectation.parts.map(function (part) { return Array.isArray(part) ? classEscape(part[0]) + "-" + classEscape(part[1]) : classEscape(part); }); return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]"; }, any: function () { return "any character"; }, end: function () { return "end of input"; }, other: function (expectation) { return expectation.description; } }; function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); } function literalEscape(s) { return s.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); }); } function classEscape(s) { return s.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); }); } function describeExpectation(expectation) { return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation); } return "Expected " + function (expected) { var i, j, descriptions = expected.map(describeExpectation); if (descriptions.sort(), descriptions.length > 0) {
                    for (i = 1, j = 1; i < descriptions.length; i++)
                        descriptions[i - 1] !== descriptions[i] && (descriptions[j] = descriptions[i], j++);
                    descriptions.length = j;
                } switch (descriptions.length) {
                    case 1: return descriptions[0];
                    case 2: return descriptions[0] + " or " + descriptions[1];
                    default: return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
                } }(expected) + " but " + (found ? '"' + literalEscape(found) + '"' : "end of input") + " found."; }, { SyntaxError: peg$SyntaxError, parse: function (input, options1) { var startPos, endPos, offset, startPosDetails, endPosDetails, res, expected, found, location, peg$result, peg$FAILED = {}, peg$source = (options1 = void 0 !== options1 ? options1 : {}).grammarSource, peg$startRuleFunctions = { expr: peg$parseexpr }, peg$startRuleFunction = peg$parseexpr, peg$c0 = "source", peg$c1 = "sink", peg$c3 = " source", peg$c4 = " sink", peg$r0 = /^[0-9]/, peg$e0 = peg$literalExpectation("source", !1), peg$e1 = peg$literalExpectation("sink", !1), peg$e2 = peg$otherExpectation("space"), peg$e3 = peg$literalExpectation(" ", !1), peg$e4 = peg$otherExpectation("digit"), peg$e5 = { type: "class", parts: [["0", "9"]], inverted: !1, ignoreCase: !1 }, peg$e6 = peg$otherExpectation("weight"), peg$e7 = peg$otherExpectation("Name"), peg$e8 = peg$literalExpectation(" source", !1), peg$e9 = { type: "any" }, peg$e10 = peg$literalExpectation(" sink", !1), peg$currPos = 0, peg$posDetailsCache = [{ line: 1, column: 1 }], peg$maxFailPos = 0, peg$maxFailExpected = [], peg$silentFails = 0; if ("startRule" in options1) {
                        if (!(options1.startRule in peg$startRuleFunctions))
                            throw Error("Can't start parsing from rule \"" + options1.startRule + '".');
                        peg$startRuleFunction = peg$startRuleFunctions[options1.startRule];
                    } function peg$literalExpectation(text, ignoreCase) { return { type: "literal", text: text, ignoreCase: ignoreCase }; } function peg$otherExpectation(description) { return { type: "other", description: description }; } function peg$computePosDetails(pos) { var p, details = peg$posDetailsCache[pos]; if (details)
                        return details; for (p = pos - 1; !peg$posDetailsCache[p];)
                        p--; for (details = { line: (details = peg$posDetailsCache[p]).line, column: details.column }; p < pos;)
                        10 === input.charCodeAt(p) ? (details.line++, details.column = 1) : details.column++, p++; return peg$posDetailsCache[pos] = details, details; } function peg$fail(expected) { peg$currPos < peg$maxFailPos || (peg$currPos > peg$maxFailPos && (peg$maxFailPos = peg$currPos, peg$maxFailExpected = []), peg$maxFailExpected.push(expected)); } function peg$parseexpr() { var s0, s1, s2, s3, s4, s5; return s0 = peg$currPos, (s1 = peg$parsesource()) !== peg$FAILED && (s1 = { group: null, type: "source" }), (s0 = s1) === peg$FAILED && ((s0 = peg$currPos, (s1 = peg$parsesink()) !== peg$FAILED) ? (peg$parse_(), (s3 = peg$parseweight()) === peg$FAILED && (s3 = null), s0 = { type: "sink", weight: +s3 || 1, group: null }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && ((s0 = peg$currPos, s1 = peg$parsesourcegroup(), peg$parse_() === peg$FAILED, (s3 = peg$parsesource()) !== peg$FAILED) ? s0 = { group: s1 || null, type: "source" } : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && ((s0 = peg$currPos, s1 = function () { var s0, s1, s2, s3, s4; for (peg$silentFails++, s0 = peg$currPos, s1 = [], s2 = peg$currPos, s3 = peg$currPos, peg$silentFails++, input.substr(peg$currPos, 5) === peg$c4 ? (s4 = peg$c4, peg$currPos += 5) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e10)), peg$silentFails--, s4 === peg$FAILED ? s3 = void 0 : (peg$currPos = s3, s3 = peg$FAILED), s3 !== peg$FAILED ? (input.length > peg$currPos ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e9)), s4 !== peg$FAILED ? s2 = s3 = [s3, s4] : (peg$currPos = s2, s2 = peg$FAILED)) : (peg$currPos = s2, s2 = peg$FAILED); s2 !== peg$FAILED;)
                        s1.push(s2), s2 = peg$currPos, s3 = peg$currPos, peg$silentFails++, input.substr(peg$currPos, 5) === peg$c4 ? (s4 = peg$c4, peg$currPos += 5) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e10)), peg$silentFails--, s4 === peg$FAILED ? s3 = void 0 : (peg$currPos = s3, s3 = peg$FAILED), s3 !== peg$FAILED ? (input.length > peg$currPos ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e9)), s4 !== peg$FAILED ? s2 = s3 = [s3, s4] : (peg$currPos = s2, s2 = peg$FAILED)) : (peg$currPos = s2, s2 = peg$FAILED); return s0 = input.substring(s0, peg$currPos), peg$silentFails--, s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7), s0; }(), peg$parse_() === peg$FAILED, (s3 = peg$parsesink()) !== peg$FAILED) ? (peg$parse_(), (s5 = peg$parseweight()) === peg$FAILED && (s5 = null), s0 = { type: "sink", weight: +s5 || 1, group: s1 || null }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && (s0 = peg$currPos, s0 = s1 = { group: s1 = peg$parsesourcegroup(), type: null })))), s0; } function peg$parsesource() { var s0; return input.substr(peg$currPos, 6) === peg$c0 ? (s0 = peg$c0, peg$currPos += 6) : (s0 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e0)), s0; } function peg$parsesink() { var s0; return input.substr(peg$currPos, 4) === peg$c1 ? (s0 = peg$c1, peg$currPos += 4) : (s0 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e1)), s0; } function peg$parse_() { var s0, s1; if (peg$silentFails++, s0 = [], 32 === input.charCodeAt(peg$currPos) ? (s1 = " ", peg$currPos++) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e3)), s1 !== peg$FAILED)
                        for (; s1 !== peg$FAILED;)
                            s0.push(s1), 32 === input.charCodeAt(peg$currPos) ? (s1 = " ", peg$currPos++) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e3));
                    else
                        s0 = peg$FAILED; return peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e2)), s0; } function peg$parsed() { var s0; return peg$silentFails++, peg$r0.test(input.charAt(peg$currPos)) ? (s0 = input.charAt(peg$currPos), peg$currPos++) : (s0 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e5)), peg$silentFails--, s0 === peg$FAILED && 0 === peg$silentFails && peg$fail(peg$e4), s0; } function peg$parseweight() { var s0, s1, s2, s3; if (peg$silentFails++, s0 = peg$currPos, s1 = peg$currPos, s2 = [], (s3 = peg$parsed()) !== peg$FAILED)
                        for (; s3 !== peg$FAILED;)
                            s2.push(s3), s3 = peg$parsed();
                    else
                        s2 = peg$FAILED; return (s1 = s2 !== peg$FAILED ? input.substring(s1, peg$currPos) : s2) !== peg$FAILED && (s1 *= 1), s0 = s1, peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e6)), s0; } function peg$parsesourcegroup() { var s0, s1, s2, s3, s4; for (peg$silentFails++, s0 = peg$currPos, s1 = [], s2 = peg$currPos, s3 = peg$currPos, peg$silentFails++, input.substr(peg$currPos, 7) === peg$c3 ? (s4 = peg$c3, peg$currPos += 7) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e8)), peg$silentFails--, s4 === peg$FAILED ? s3 = void 0 : (peg$currPos = s3, s3 = peg$FAILED), s3 !== peg$FAILED ? (input.length > peg$currPos ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e9)), s4 !== peg$FAILED ? s2 = s3 = [s3, s4] : (peg$currPos = s2, s2 = peg$FAILED)) : (peg$currPos = s2, s2 = peg$FAILED); s2 !== peg$FAILED;)
                        s1.push(s2), s2 = peg$currPos, s3 = peg$currPos, peg$silentFails++, input.substr(peg$currPos, 7) === peg$c3 ? (s4 = peg$c3, peg$currPos += 7) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e8)), peg$silentFails--, s4 === peg$FAILED ? s3 = void 0 : (peg$currPos = s3, s3 = peg$FAILED), s3 !== peg$FAILED ? (input.length > peg$currPos ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e9)), s4 !== peg$FAILED ? s2 = s3 = [s3, s4] : (peg$currPos = s2, s2 = peg$FAILED)) : (peg$currPos = s2, s2 = peg$FAILED); return s0 = input.substring(s0, peg$currPos), peg$silentFails--, s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7), s0; } if ((peg$result = peg$startRuleFunction()) !== peg$FAILED && peg$currPos === input.length)
                        return peg$result; throw peg$result !== peg$FAILED && peg$currPos < input.length && peg$fail({ type: "end" }), expected = peg$maxFailExpected, found = peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, startPos = peg$maxFailPos, endPos = peg$maxFailPos < input.length ? peg$maxFailPos + 1 : peg$maxFailPos, startPosDetails = peg$computePosDetails(startPos), endPosDetails = peg$computePosDetails(endPos), res = { source: peg$source, start: { offset: startPos, line: startPosDetails.line, column: startPosDetails.column }, end: { offset: endPos, line: endPosDetails.line, column: endPosDetails.column } }, location = res, new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location); } };
            }) ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, []) : __WEBPACK_AMD_DEFINE_FACTORY__) || (module1.exports = __WEBPACK_AMD_DEFINE_RESULT__);
        }, "./packages/loot-core/src/server/budget/cleanup-template.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { cleanupTemplate: () => cleanupTemplate });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _cleanup_template_pegjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/budget/cleanup-template.pegjs");
            function cleanupTemplate({ month }) { return processCleanup(month); }
            async function applyGroupCleanups(month, sourceGroups, sinkGroups, generalGroups) { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), warnings = [], db_month = parseInt(month.replace("-", "")), groupLength = sourceGroups.length; for (; groupLength > 0;) {
                let groupName = sourceGroups[0].group, tempSourceGroups = sourceGroups.filter(c => c.group === groupName), sinkGroup = sinkGroups.filter(c => c.group === groupName), generalGroup = generalGroups.filter(c => c.group === groupName), total_weight = 0, available_amount = 0;
                if (sinkGroup.length > 0 || generalGroup.length > 0) {
                    for (let ii = 0; ii < tempSourceGroups.length; ii++) {
                        let balance = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `leftover-${tempSourceGroups[ii].category}`), budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${tempSourceGroups[ii].category}`);
                        await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: tempSourceGroups[ii].category, month, amount: budgeted - balance }), available_amount += balance;
                    }
                    for (let ii = 0; ii < sinkGroup.length; ii++)
                        total_weight += sinkGroup[ii].weight;
                    for (let ii = 0; ii < generalGroup.length && available_amount > 0; ii++) {
                        let balance = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `leftover-${generalGroup[ii].category}`), budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${generalGroup[ii].category}`), to_budget = budgeted + Math.abs(balance), categoryId = generalGroup[ii].category, carryover = await _db__WEBPACK_IMPORTED_MODULE_1__.first("SELECT carryover FROM zero_budgets WHERE month = ? and category = ?", [db_month, categoryId]);
                        null === carryover && (carryover = { carryover: 0 }), balance < 0 && Math.abs(balance) <= available_amount && !generalGroup[ii].category.is_income && 0 === carryover.carryover ? (await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: generalGroup[ii].category, month, amount: to_budget }), available_amount -= Math.abs(balance)) : balance < 0 && !generalGroup[ii].category.is_income && 0 === carryover.carryover && Math.abs(balance) > available_amount && (await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: generalGroup[ii].category, month, amount: budgeted + available_amount }), available_amount = 0);
                    }
                    for (let ii = 0; ii < sinkGroup.length && available_amount > 0; ii++) {
                        let to_budget = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${sinkGroup[ii].category}`) + Math.round(sinkGroup[ii].weight / total_weight * available_amount);
                        await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: sinkGroup[ii].category, month, amount: to_budget });
                    }
                }
                else
                    warnings.push(groupName + " has no matching sink categories.");
                groupLength = (sourceGroups = sourceGroups.filter(c => c.group !== groupName)).length;
            } return warnings; }
            async function processCleanup(month) {
                let num_sources = 0, num_sinks = 0, total_weight = 0, errors = [], warnings = [], sinkCategory = [], sourceWithRollover = [], db_month = parseInt(month.replace("-", "")), category_templates = await getCategoryTemplates(), categories = await _db__WEBPACK_IMPORTED_MODULE_1__.all("SELECT * FROM v_categories WHERE tombstone = 0"), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), groupSource = [], groupSink = [], groupGeneral = [];
                for (let c = 0; c < categories.length; c++) {
                    let category = categories[c], template = category_templates[category.id];
                    template && (template.filter(t => "source" === t.type && null !== t.group).length > 0 && groupSource.push({ category: category.id, group: template.filter(t => "source" === t.type && null !== t.group)[0].group }), template.filter(t => "sink" === t.type && null !== t.group).length > 0 && groupSink.push({ category: category.id, group: template.filter(t => "sink" === t.type && null !== t.group)[0].group, weight: template.filter(t => "sink" === t.type && null !== t.group)[0].weight }), template.filter(t => null === t.type && null !== t.group).length > 0 && groupGeneral.push({ category: category.id, group: template[0].group }));
                }
                let newWarnings = await applyGroupCleanups(month, groupSource, groupSink, groupGeneral);
                warnings.splice(1, 0, ...newWarnings);
                for (let c = 0; c < categories.length; c++) {
                    let category = categories[c], template = category_templates[category.id];
                    if (template) {
                        if (template.filter(t => "source" === t.type && null === t.group).length > 0) {
                            let balance = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `leftover-${category.id}`), budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${category.id}`);
                            balance >= 0 ? (await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: category.id, month, amount: budgeted - balance }), await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setGoal)({ category: category.id, month, goal: budgeted - balance, long_goal: 0 }), num_sources += 1) : warnings.push(category.name + " does not have available funds.");
                            let carryover = await _db__WEBPACK_IMPORTED_MODULE_1__.first("SELECT carryover FROM zero_budgets WHERE month = ? and category = ?", [db_month, category.id]);
                            null !== carryover && 1 === carryover.carryover && sourceWithRollover.push({ cat: category, temp: template });
                        }
                        template.filter(t => "sink" === t.type && null === t.group).length > 0 && (sinkCategory.push({ cat: category, temp: template }), num_sinks += 1, total_weight += template.filter(w => "sink" === w.type)[0].weight);
                    }
                }
                for (let c = 0; c < categories.length; c++) {
                    let category = categories[c], budgetAvailable = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, "to-budget"), balance = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `leftover-${category.id}`), budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${category.id}`), to_budget = budgeted + Math.abs(balance), categoryId = category.id, carryover = await _db__WEBPACK_IMPORTED_MODULE_1__.first("SELECT carryover FROM zero_budgets WHERE month = ? and category = ?", [db_month, categoryId]);
                    null === carryover && (carryover = { carryover: 0 }), balance < 0 && Math.abs(balance) <= budgetAvailable && !category.is_income && 0 === carryover.carryover ? await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: category.id, month, amount: to_budget }) : balance < 0 && !category.is_income && 0 === carryover.carryover && Math.abs(balance) > budgetAvailable && await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: category.id, month, amount: budgeted + budgetAvailable });
                }
                let budgetAvailable = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, "to-budget");
                budgetAvailable < 0 && warnings.push("Global: No funds are available to reallocate.");
                for (let c = 0; c < sinkCategory.length; c++) {
                    let budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, `budget-${sinkCategory[c].cat.id}`), categoryId = sinkCategory[c].cat.id, to_budget = budgeted + Math.round(sinkCategory[c].temp.filter(w => "sink" === w.type)[0].weight / total_weight * budgetAvailable);
                    if (c === sinkCategory.length - 1) {
                        let currentBudgetAvailable = await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.getSheetValue)(sheetName, "to-budget");
                        to_budget > currentBudgetAvailable && (to_budget = budgeted + currentBudgetAvailable);
                    }
                    await (0, _actions__WEBPACK_IMPORTED_MODULE_2__.setBudget)({ category: categoryId, month, amount: to_budget });
                }
                if (0 === num_sources)
                    if (errors.length)
                        return { type: "error", sticky: !0, message: "There were errors interpreting some templates:", pre: errors.join(`

`) };
                    else if (warnings.length)
                        return { type: "warning", message: "Global: Funds not available:", pre: warnings.join(`

`) };
                    else
                        return { type: "message", message: "All categories were up to date." };
                {
                    let applied = `Successfully returned funds from ${num_sources} ${1 === num_sources ? "source" : "sources"} and funded ${num_sinks} sinking ${1 === num_sinks ? "fund" : "funds"}.`;
                    return errors.length ? { sticky: !0, message: `${applied} There were errors interpreting some templates:`, pre: errors.join(`

`) } : warnings.length ? { type: "warning", message: "Global: Funds not available:", pre: warnings.join(`

`) } : 0 === budgetAvailable ? { type: "message", message: "All categories were up to date." } : { type: "message", message: applied };
                }
            }
            let TEMPLATE_PREFIX = "#cleanup ";
            async function getCategoryTemplates() {
                let templates = {}, notes = await _db__WEBPACK_IMPORTED_MODULE_1__.all(`SELECT * FROM notes WHERE lower(note) like '%${TEMPLATE_PREFIX}%'`);
                for (let n = 0; n < notes.length; n++) {
                    let lines = notes[n].note.split(`
`), template_lines = [];
                    for (let l = 0; l < lines.length; l++) {
                        let line = lines[l].trim();
                        if (!line.toLowerCase().startsWith(TEMPLATE_PREFIX))
                            continue;
                        let expression = line.slice(TEMPLATE_PREFIX.length);
                        try {
                            let parsed = (0, _cleanup_template_pegjs__WEBPACK_IMPORTED_MODULE_3__.parse)(expression);
                            template_lines.push(parsed);
                        }
                        catch (e) {
                            template_lines.push({ type: "error", line, error: e });
                        }
                    }
                    template_lines.length && (templates[notes[n].id] = template_lines);
                }
                return templates;
            }
        }, "./packages/loot-core/src/server/budget/envelope.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createBlankCategory: () => createBlankCategory, createBudget: () => createBudget, createCategory: () => createCategory, createCategoryGroup: () => createCategoryGroup, createSummary: () => createSummary, handleCategoryChange: () => handleCategoryChange, handleCategoryGroupChange: () => handleCategoryGroupChange });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _sheet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _spreadsheet_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts"), _base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/budget/util.ts");
            function getBlankSheet(months) { let blankMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.prevMonth(months[0]); return _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(blankMonth); }
            function createBlankCategory(cat, months) { if (months.length > 0) {
                let sheetName = getBlankSheet(months);
                _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `carryover-${cat.id}`, !1), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `leftover-${cat.id}`, 0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `leftover-pos-${cat.id}`, 0);
            } }
            function createCategory(cat, sheetName, prevSheetName) { cat.is_income || (_sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `budget-${cat.id}`, 0), null == _sheet__WEBPACK_IMPORTED_MODULE_3__.get().getCellValue(sheetName, `budget-${cat.id}`) && _sheet__WEBPACK_IMPORTED_MODULE_3__.get().set((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_4__.resolveName)(sheetName, `budget-${cat.id}`), 0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `carryover-${cat.id}`, !1), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, `leftover-${cat.id}`, { initialValue: 0, dependencies: [`budget-${cat.id}`, `sum-amount-${cat.id}`, `${prevSheetName}!carryover-${cat.id}`, `${prevSheetName}!leftover-${cat.id}`, `${prevSheetName}!leftover-pos-${cat.id}`], run: (budgeted, spent, prevCarryover, prevLeftover, prevLeftoverPos) => (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(budgeted) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(spent) + (prevCarryover ? (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(prevLeftover) : (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(prevLeftoverPos))) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "leftover-pos-" + cat.id, { initialValue: 0, dependencies: [`leftover-${cat.id}`], run: leftover => leftover < 0 ? 0 : leftover })); }
            function createCategoryGroup(group, sheetName) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-sum-amount-" + group.id, { initialValue: 0, dependencies: group.categories.map(cat => `sum-amount-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), group.is_income || (_sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-budget-" + group.id, { initialValue: 0, dependencies: group.categories.map(cat => `budget-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-leftover-" + group.id, { initialValue: 0, dependencies: group.categories.map(cat => `leftover-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts })); }
            function createSummary(groups, categories, prevSheetName, sheetName) { let incomeGroup = groups.filter(group => group.is_income)[0], expenseCategories = categories.filter(cat => !cat.is_income), incomeCategories = categories.filter(cat => cat.is_income); _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, "buffered", 0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "from-last-month", { initialValue: 0, dependencies: [`${prevSheetName}!to-budget`, `${prevSheetName}!buffered-selected`], run: (toBudget, buffered) => (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(toBudget) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(buffered)) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-income", { initialValue: 0, dependencies: [`group-sum-amount-${incomeGroup.id}`], run: amount => amount }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "available-funds", { initialValue: 0, dependencies: ["total-income", "from-last-month"], run: (income, fromLastMonth) => (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(income) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(fromLastMonth)) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "last-month-overspent", { initialValue: 0, dependencies: (0, _util__WEBPACK_IMPORTED_MODULE_6__.flatten2)(expenseCategories.map(cat => [`${prevSheetName}!leftover-${cat.id}`, `${prevSheetName}!carryover-${cat.id}`])), run: (...data1) => (data1 = (0, _util__WEBPACK_IMPORTED_MODULE_6__.unflatten2)(data1), (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)(data1.reduce((total, [leftover, carryover]) => carryover ? total : total + Math.min(0, (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(leftover)), 0))) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-budgeted", { initialValue: 0, dependencies: groups.filter(group => !group.is_income).map(group => `group-budget-${group.id}`), run: (...amounts) => -(0, _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts)(...amounts) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "buffered", { initialValue: 0 }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "buffered-auto", { initialValue: 0, dependencies: (0, _util__WEBPACK_IMPORTED_MODULE_6__.flatten2)(incomeCategories.map(c => [`${sheetName}!sum-amount-${c.id}`, `${sheetName}!carryover-${c.id}`])), run: (...data1) => (data1 = (0, _util__WEBPACK_IMPORTED_MODULE_6__.unflatten2)(data1), (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)(data1.reduce((total, [sumAmount, carryover]) => carryover ? total + sumAmount : total, 0))) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "buffered-selected", { initialValue: 0, dependencies: [`${sheetName}!buffered`, `${sheetName}!buffered-auto`], run: (man, auto) => 0 !== man ? man : auto }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "to-budget", { initialValue: 0, dependencies: ["available-funds", "last-month-overspent", "total-budgeted", "buffered-selected"], run: (available, lastOverspent, totalBudgeted, buffered) => (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(available) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(lastOverspent) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(totalBudgeted) - (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(buffered)) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-spent", { initialValue: 0, dependencies: groups.filter(group => !group.is_income).map(group => `group-sum-amount-${group.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-leftover", { initialValue: 0, dependencies: groups.filter(group => !group.is_income).map(group => `group-leftover-${group.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }); }
            function createBudget(meta, categories, months) { let blankSheet = getBlankSheet(months); meta.blankSheet !== blankSheet && (_sheet__WEBPACK_IMPORTED_MODULE_3__.get().clearSheet(meta.blankSheet), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(blankSheet, "is-blank", !0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(blankSheet, "to-budget", 0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(blankSheet, "buffered", 0), categories.forEach(cat => createBlankCategory(cat, months)), meta.blankSheet = blankSheet); }
            function handleCategoryChange(months, oldValue, newValue) { function addDeps(sheetName, groupId, catId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-sum-amount-${groupId}`, [`sum-amount-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-budget-${groupId}`, [`budget-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-leftover-${groupId}`, [`leftover-${catId}`]); } function removeDeps(sheetName, groupId, catId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-sum-amount-${groupId}`, [`sum-amount-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-budget-${groupId}`, [`budget-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-leftover-${groupId}`, [`leftover-${catId}`]); } if (oldValue && 0 === oldValue.tombstone && 1 === newValue.tombstone) {
                let id = newValue.id, groupId = newValue.cat_group;
                months.forEach(month => { removeDeps(_shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), groupId, id); });
            }
            else if (0 !== newValue.tombstone || oldValue && 1 !== oldValue.tombstone) {
                if (oldValue && oldValue.cat_group !== newValue.cat_group) {
                    let id = newValue.id;
                    months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); removeDeps(sheetName, oldValue.cat_group, id), addDeps(sheetName, newValue.cat_group, id); });
                }
            }
            else
                createBlankCategory(newValue, months), months.forEach(month => { let prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.prevMonth(month), prevSheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(prevMonth), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), { start, end } = _shared_months__WEBPACK_IMPORTED_MODULE_0__.bounds(month); (0, _base__WEBPACK_IMPORTED_MODULE_5__.createCategory)(newValue, sheetName, prevSheetName, start, end); let id = newValue.id, groupId = newValue.cat_group; _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "last-month-overspent", [`${prevSheetName}!leftover-${id}`, `${prevSheetName}!carryover-${id}`]), addDeps(sheetName, groupId, id), newValue.is_income && _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "buffered-auto", (0, _util__WEBPACK_IMPORTED_MODULE_6__.flatten2)([`${sheetName}!sum-amount-${id}`, `${sheetName}!carryover-${id}`])); }); }
            function handleCategoryGroupChange(months, oldValue, newValue) { if (1 === newValue.tombstone && oldValue && 0 === oldValue.tombstone) {
                let id = newValue.id;
                months.forEach(month => { var sheetName; sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-budgeted", [`group-budget-${id}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-spent", [`group-sum-amount-${id}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-leftover", [`group-leftover-${id}`]); });
            }
            else
                0 === newValue.tombstone && (!oldValue || 1 === oldValue.tombstone) && (newValue.is_income || months.forEach(month => { var groupId; let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), categories = _db__WEBPACK_IMPORTED_MODULE_2__.runQuery("SELECT * FROM categories WHERE tombstone = 0 AND cat_group = ?", [newValue.id], !0); createCategoryGroup({ ...newValue, categories }, sheetName), groupId = newValue.id, _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-budgeted", [`group-budget-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-spent", [`group-sum-amount-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-leftover", [`group-leftover-${groupId}`]); })); }
        }, "./packages/loot-core/src/server/budget/goal-template.pegjs": function (module1, exports) {
            var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
            void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = "function" == typeof (__WEBPACK_AMD_DEFINE_FACTORY__ = function () {
                "use strict";
                function peg$SyntaxError(message, expected, found, location) { var self1 = Error.call(this, message); return Object.setPrototypeOf && Object.setPrototypeOf(self1, peg$SyntaxError.prototype), self1.expected = expected, self1.found = found, self1.location = location, self1.name = "SyntaxError", self1; }
                function C() { this.constructor = peg$SyntaxError; }
                function peg$padEnd(str, targetLength, padString) { return (padString = padString || " ", str.length > targetLength) ? str : (targetLength -= str.length, str + (padString += padString.repeat(targetLength)).slice(0, targetLength)); }
                return C.prototype = Error.prototype, peg$SyntaxError.prototype = new C, peg$SyntaxError.prototype.format = function (sources) {
                    var str = "Error: " + this.message;
                    if (this.location) {
                        var k, src = null;
                        for (k = 0; k < sources.length; k++)
                            if (sources[k].source === this.location.source) {
                                src = sources[k].text.split(/\r\n|\n|\r/g);
                                break;
                            }
                        var s = this.location.start, offset_s = this.location.source && "function" == typeof this.location.source.offset ? this.location.source.offset(s) : s, loc = this.location.source + ":" + offset_s.line + ":" + offset_s.column;
                        if (src) {
                            var e = this.location.end, filler = peg$padEnd("", offset_s.line.toString().length, " "), line = src[s.line - 1], hatLen = (s.line === e.line ? e.column : line.length + 1) - s.column || 1;
                            str += `
 --> ` + loc + `
` + filler + ` |
` + offset_s.line + " | " + line + `
` + filler + " | " + peg$padEnd("", s.column - 1, " ") + peg$padEnd("", hatLen, "^");
                        }
                        else
                            str += `
 at ` + loc;
                    }
                    return str;
                }, peg$SyntaxError.buildMessage = function (expected, found) { var DESCRIBE_EXPECTATION_FNS = { literal: function (expectation) { return '"' + literalEscape(expectation.text) + '"'; }, class: function (expectation) { var escapedParts = expectation.parts.map(function (part) { return Array.isArray(part) ? classEscape(part[0]) + "-" + classEscape(part[1]) : classEscape(part); }); return "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]"; }, any: function () { return "any character"; }, end: function () { return "end of input"; }, other: function (expectation) { return expectation.description; } }; function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); } function literalEscape(s) { return s.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); }); } function classEscape(s) { return s.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, function (ch) { return "\\x0" + hex(ch); }).replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) { return "\\x" + hex(ch); }); } function describeExpectation(expectation) { return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation); } return "Expected " + function (expected) { var i, j, descriptions = expected.map(describeExpectation); if (descriptions.sort(), descriptions.length > 0) {
                    for (i = 1, j = 1; i < descriptions.length; i++)
                        descriptions[i - 1] !== descriptions[i] && (descriptions[j] = descriptions[i], j++);
                    descriptions.length = j;
                } switch (descriptions.length) {
                    case 1: return descriptions[0];
                    case 2: return descriptions[0] + " or " + descriptions[1];
                    default: return descriptions.slice(0, -1).join(", ") + ", or " + descriptions[descriptions.length - 1];
                } }(expected) + " but " + (found ? '"' + literalEscape(found) + '"' : "end of input") + " found."; }, { SyntaxError: peg$SyntaxError, parse: function (input, options1) {
                        var startPos, endPos, offset, startPosDetails, endPosDetails, res, expected, found, location, peg$result, peg$FAILED = {}, peg$source = (options1 = void 0 !== options1 ? options1 : {}).grammarSource, peg$startRuleFunctions = { expr: peg$parseexpr }, peg$startRuleFunction = peg$parseexpr, peg$c1 = "months", peg$c6 = "increase", peg$c7 = "decrease", peg$c9 = "year", peg$c10 = "years", peg$c32 = "#template", peg$r0 = /^[ \t]/, peg$r1 = /^[0-9]/, peg$r2 = /^[1-9]/, peg$r3 = /^[^ \t\r\n]/, peg$r4 = /^[^\r\n]/, peg$r5 = /^[^\r\n\t]/, peg$e0 = peg$literalExpectation("average", !0), peg$e1 = peg$literalExpectation("months", !0), peg$e2 = peg$literalExpectation("copy from", !0), peg$e3 = peg$literalExpectation("months ago", !0), peg$e4 = peg$literalExpectation("[", !1), peg$e5 = peg$literalExpectation("]", !1), peg$e6 = peg$literalExpectation("increase", !0), peg$e7 = peg$literalExpectation("decrease", !0), peg$e8 = peg$otherExpectation("repeat interval"), peg$e9 = peg$literalExpectation("month", !0), peg$e10 = peg$literalExpectation("year", !0), peg$e11 = peg$literalExpectation("years", !0), peg$e12 = peg$literalExpectation("per week starting", !0), peg$e13 = peg$literalExpectation("per day", !0), peg$e14 = peg$literalExpectation("previous", !0), peg$e15 = peg$literalExpectation("day", !0), peg$e16 = peg$literalExpectation("days", !0), peg$e17 = peg$literalExpectation("spend", !0), peg$e18 = peg$literalExpectation("from", !0), peg$e19 = peg$literalExpectation("week", !0), peg$e20 = peg$literalExpectation("weeks", !0), peg$e21 = peg$literalExpectation("by", !0), peg$e22 = peg$literalExpectation("of", !0), peg$e23 = peg$literalExpectation("repeat", !0), peg$e24 = peg$literalExpectation("every", !0), peg$e25 = peg$literalExpectation("starting", !0), peg$e26 = peg$literalExpectation("up", !0), peg$e27 = peg$literalExpectation("to", !0), peg$e28 = peg$literalExpectation("hold", !0), peg$e29 = peg$literalExpectation("schedule", !0), peg$e30 = peg$literalExpectation("full", !0), peg$e31 = peg$literalExpectation("-", !0), peg$e32 = peg$literalExpectation("remainder", !0), peg$e33 = peg$literalExpectation("#template", !1), peg$e34 = peg$literalExpectation("#goal", !0), peg$e35 = peg$otherExpectation("whitespace"), peg$e36 = peg$classExpectation([" ", "	"], !1, !1);
                        peg$otherExpectation("mandatory whitespace");
                        var peg$e38 = peg$otherExpectation("digit"), peg$e39 = peg$classExpectation([["0", "9"]], !1, !1), peg$e40 = peg$otherExpectation("number"), peg$e41 = peg$classExpectation([["1", "9"]], !1, !1), peg$e42 = peg$otherExpectation("amount"), peg$e43 = peg$literalExpectation("-", !1), peg$e44 = peg$literalExpectation(".", !1), peg$e45 = peg$otherExpectation("percentage"), peg$e46 = peg$literalExpectation("%", !1), peg$e47 = peg$otherExpectation("year"), peg$e48 = peg$otherExpectation("month"), peg$e49 = peg$otherExpectation("day"), peg$e50 = peg$otherExpectation("currency symbol"), peg$e51 = { type: "any" }, peg$e52 = peg$classExpectation([" ", "	", "\r", `
`], !0, !1), peg$e53 = peg$classExpectation(["\r", `
`], !0, !1), peg$e54 = peg$otherExpectation("Name"), peg$e55 = peg$classExpectation(["\r", `
`, "	"], !0, !1), peg$currPos = 0, peg$savedPos = 0, peg$posDetailsCache = [{ line: 1, column: 1 }], peg$maxFailPos = 0, peg$maxFailExpected = [], peg$silentFails = 0;
                        if ("startRule" in options1) {
                            if (!(options1.startRule in peg$startRuleFunctions))
                                throw Error("Can't start parsing from rule \"" + options1.startRule + '".');
                            peg$startRuleFunction = peg$startRuleFunctions[options1.startRule];
                        }
                        function text() { return input.substring(peg$savedPos, peg$currPos); }
                        function peg$literalExpectation(text, ignoreCase) { return { type: "literal", text: text, ignoreCase: ignoreCase }; }
                        function peg$classExpectation(parts, inverted, ignoreCase) { return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase }; }
                        function peg$otherExpectation(description) { return { type: "other", description: description }; }
                        function peg$computePosDetails(pos) { var p, details = peg$posDetailsCache[pos]; if (details)
                            return details; for (p = pos - 1; !peg$posDetailsCache[p];)
                            p--; for (details = { line: (details = peg$posDetailsCache[p]).line, column: details.column }; p < pos;)
                            10 === input.charCodeAt(p) ? (details.line++, details.column = 1) : details.column++, p++; return peg$posDetailsCache[pos] = details, details; }
                        function peg$fail(expected) { peg$currPos < peg$maxFailPos || (peg$currPos > peg$maxFailPos && (peg$maxFailPos = peg$currPos, peg$maxFailExpected = []), peg$maxFailExpected.push(expected)); }
                        function peg$parseexpr() { var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, template, percentOf, category, template1, amount, period, template2, amount1, month, from, repeat, template3, template4, template5, full, name, modifiers, template6, remainder, limit, template7, template8, lookBack, limit1, s01, s14, s31, s51, s02, s03, s04, s21, s41, s61, s05, s15, s32, s06, s16, s07, s17, s08, s22, s33, s42, s09, s18, s34, s010, s19; if (s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED) {
                            if (s2 = peg$parse_(), (s01 = peg$currPos, (s14 = peg$parsepercent()) !== peg$FAILED && (peg$parse_(), peg$parseof() !== peg$FAILED && (peg$parse_(), "previous" === input.substr(peg$currPos, 8).toLowerCase() ? (s51 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s51 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e14)), s51 !== peg$FAILED))) ? (peg$parse_(), peg$savedPos = s01, s01 = { percent: s14, prev: !0 }) : (peg$currPos = s01, s01 = peg$FAILED), s01 === peg$FAILED && ((s01 = peg$currPos, (s14 = peg$parsepercent()) !== peg$FAILED && (peg$parse_(), peg$parseof() !== peg$FAILED)) ? (peg$parse_(), peg$savedPos = s01, s01 = { percent: s14, prev: !1 }) : (peg$currPos = s01, s01 = peg$FAILED)), (s3 = s01) !== peg$FAILED)
                                (s4 = function () { var s0, s1, s2, s3; if (peg$silentFails++, s0 = peg$currPos, s1 = peg$currPos, s2 = [], peg$r5.test(input.charAt(peg$currPos)) ? (s3 = input.charAt(peg$currPos), peg$currPos++) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e55)), s3 !== peg$FAILED)
                                    for (; s3 !== peg$FAILED;)
                                        s2.push(s3), peg$r5.test(input.charAt(peg$currPos)) ? (s3 = input.charAt(peg$currPos), peg$currPos++) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e55));
                                else
                                    s2 = peg$FAILED; return (s1 = s2 !== peg$FAILED ? input.substring(s1, peg$currPos) : s2) !== peg$FAILED && (peg$savedPos = s0, s1 = text()), s0 = s1, peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e54)), s0; }()) !== peg$FAILED ? (peg$savedPos = s0, template = s1, percentOf = s3, category = s4, s0 = { type: "percentage", percent: +percentOf.percent, previous: percentOf.prev, category, priority: template.priority, directive: template.directive }) : (peg$currPos = s0, s0 = peg$FAILED);
                            else
                                peg$currPos = s0, s0 = peg$FAILED;
                        }
                        else
                            peg$currPos = s0, s0 = peg$FAILED; if (s0 === peg$FAILED) {
                            if (s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED)
                                if (s2 = peg$parse_(), (s3 = peg$parseamount()) !== peg$FAILED)
                                    if (s4 = peg$parse_(), (s5 = peg$parserepeatEvery()) !== peg$FAILED)
                                        if (s6 = peg$parse_(), (s7 = function () { var s0, s1, s3, s01, s02; if (s0 = peg$currPos, "day" === input.substr(peg$currPos, 3).toLowerCase() ? (s1 = input.substr(peg$currPos, 3), peg$currPos += 3) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e15)), s1 !== peg$FAILED && (peg$savedPos = s0, s1 = { period: "day", amount: 1 }), (s0 = s1) === peg$FAILED) {
                                            if ((s0 = peg$currPos, (s1 = peg$parsenumber()) !== peg$FAILED && (peg$parse_(), "days" === input.substr(peg$currPos, 4).toLowerCase() ? (s3 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e16)), s3 !== peg$FAILED)) ? (peg$parse_(), peg$savedPos = s0, s0 = { period: "day", amount: +s1 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && (s0 = peg$currPos, ("week" === input.substr(peg$currPos, 4).toLowerCase() ? (s01 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s01 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e19)), (s1 = s01) !== peg$FAILED) ? (peg$parse_(), peg$savedPos = s0, s0 = { period: "week", amount: 1 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED)) {
                                                if (s0 = peg$currPos, (s1 = peg$parsenumber()) !== peg$FAILED) {
                                                    if (peg$parse_(), "weeks" === input.substr(peg$currPos, 5).toLowerCase() ? (s02 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s02 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e20)), (s3 = s02) !== peg$FAILED)
                                                        peg$savedPos = s0, s0 = { period: "week", amount: +s1 };
                                                    else
                                                        peg$currPos = s0, s0 = peg$FAILED;
                                                }
                                                else
                                                    peg$currPos = s0, s0 = peg$FAILED;
                                                s0 === peg$FAILED && ((s0 = peg$currPos, (s1 = peg$parsenumber()) !== peg$FAILED && (peg$parse_(), input.substr(peg$currPos, 6).toLowerCase() === peg$c1 ? (s3 = input.substr(peg$currPos, 6), peg$currPos += 6) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e1)), s3 !== peg$FAILED)) ? (peg$parse_(), peg$savedPos = s0, s0 = { period: "month", amount: +s1 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && (s0 = peg$currPos, input.substr(peg$currPos, 4).toLowerCase() === peg$c9 ? (s1 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e10)), s1 !== peg$FAILED ? (peg$parse_(), peg$savedPos = s0, s0 = { period: "year", amount: 1 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED) && ((s0 = peg$currPos, (s1 = peg$parsenumber()) !== peg$FAILED && (peg$parse_(), input.substr(peg$currPos, 5).toLowerCase() === peg$c10 ? (s3 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e11)), s3 !== peg$FAILED)) ? (peg$parse_(), peg$savedPos = s0, s0 = { period: "year", amount: +s1 }) : (peg$currPos = s0, s0 = peg$FAILED)));
                                            }
                                        } return s0; }()) !== peg$FAILED) {
                                            if (s8 = peg$parse_(), "starting" === input.substr(peg$currPos, 8).toLowerCase() ? (s02 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s02 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e25)), (s9 = s02) !== peg$FAILED)
                                                (s10 = peg$parse_(), (s11 = peg$parsedate()) !== peg$FAILED) ? ((s12 = peg$parselimit()) === peg$FAILED && (s12 = null), peg$savedPos = s0, template1 = s1, amount = s3, period = s7, s0 = { type: "periodic", amount, period, starting: s11, limit: s12, priority: template1.priority, directive: template1.directive }) : (peg$currPos = s0, s0 = peg$FAILED);
                                            else
                                                peg$currPos = s0, s0 = peg$FAILED;
                                        }
                                        else
                                            peg$currPos = s0, s0 = peg$FAILED;
                                    else
                                        peg$currPos = s0, s0 = peg$FAILED;
                                else
                                    peg$currPos = s0, s0 = peg$FAILED;
                            else
                                peg$currPos = s0, s0 = peg$FAILED;
                            if (s0 === peg$FAILED) {
                                if (s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED)
                                    if (s2 = peg$parse_(), (s3 = peg$parseamount()) !== peg$FAILED) {
                                        if (s4 = peg$parse_(), "by" === input.substr(peg$currPos, 2).toLowerCase() ? (s03 = input.substr(peg$currPos, 2), peg$currPos += 2) : (s03 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e21)), (s5 = s03) !== peg$FAILED)
                                            if (s6 = peg$parse_(), (s7 = peg$parsemonth()) !== peg$FAILED) {
                                                (s04 = peg$currPos, peg$parse_(), "spend" === input.substr(peg$currPos, 5).toLowerCase() ? (s21 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s21 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e17)), s21 !== peg$FAILED && (peg$parse_(), "from" === input.substr(peg$currPos, 4).toLowerCase() ? (s41 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s41 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e18)), s41 !== peg$FAILED && (peg$parse_(), (s61 = peg$parsemonth()) !== peg$FAILED))) ? (peg$savedPos = s04, s04 = s61) : (peg$currPos = s04, s04 = peg$FAILED), (s8 = s04) === peg$FAILED && (s8 = null), s9 = peg$currPos, s10 = peg$parse_(), (s11 = peg$parserepeatEvery()) !== peg$FAILED ? (s12 = peg$parse_(), (peg$silentFails++, s05 = peg$currPos, "month" === input.substr(peg$currPos, 5).toLowerCase() ? (s15 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s15 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e9)), s15 !== peg$FAILED && (peg$savedPos = s05, s15 = { annual: !1 }), (s05 = s15) === peg$FAILED && ((s05 = peg$currPos, (s15 = peg$parsepositive()) !== peg$FAILED && (peg$parse_(), input.substr(peg$currPos, 6).toLowerCase() === peg$c1 ? (s32 = input.substr(peg$currPos, 6), peg$currPos += 6) : (s32 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e1)), s32 !== peg$FAILED)) ? (peg$savedPos = s05, s05 = { annual: !1, repeat: +s15 }) : (peg$currPos = s05, s05 = peg$FAILED), s05 === peg$FAILED && (s05 = peg$currPos, input.substr(peg$currPos, 4).toLowerCase() === peg$c9 ? (s15 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s15 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e10)), s15 !== peg$FAILED && (peg$savedPos = s05, s15 = { annual: !0 }), (s05 = s15) === peg$FAILED) && ((s05 = peg$currPos, (s15 = peg$parsepositive()) !== peg$FAILED && (peg$parse_(), input.substr(peg$currPos, 5).toLowerCase() === peg$c10 ? (s32 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s32 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e11)), s32 !== peg$FAILED)) ? (peg$savedPos = s05, s05 = { annual: !0, repeat: +s15 }) : (peg$currPos = s05, s05 = peg$FAILED))), peg$silentFails--, s05 === peg$FAILED && (s15 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e8)), (s13 = s05) !== peg$FAILED) ? s9 = s10 = [s10, s11, s12, s13] : (peg$currPos = s9, s9 = peg$FAILED)) : (peg$currPos = s9, s9 = peg$FAILED), s9 === peg$FAILED && (s9 = null), peg$savedPos = s0, template2 = s1, amount1 = s3, month = s7, s0 = { type: (from = s8) ? "spend" : "by", amount: amount1, month, ...(repeat = s9) ? repeat[3] : {}, from, priority: template2.priority, directive: template2.directive };
                                            }
                                            else
                                                peg$currPos = s0, s0 = peg$FAILED;
                                        else
                                            peg$currPos = s0, s0 = peg$FAILED;
                                    }
                                    else
                                        peg$currPos = s0, s0 = peg$FAILED;
                                else
                                    peg$currPos = s0, s0 = peg$FAILED;
                                if (s0 === peg$FAILED && ((s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED && (s2 = peg$parse_(), (s3 = peg$parseamount()) !== peg$FAILED)) ? ((s4 = peg$parselimit()) === peg$FAILED && (s4 = null), peg$savedPos = s0, template3 = s1, s0 = { type: "simple", monthly: s3, limit: s4, priority: template3.priority, directive: template3.directive }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED) && ((s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED && (s2 = peg$parse_(), (s3 = peg$parselimit()) !== peg$FAILED)) ? (peg$savedPos = s0, s0 = { type: "simple", monthly: null, limit: s3, priority: (template4 = s1).priority, directive: template4.directive }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED)) {
                                    if (s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED) {
                                        if (s2 = peg$parse_(), s06 = peg$currPos, "schedule" === input.substr(peg$currPos, 8).toLowerCase() ? (s16 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s16 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e29)), s16 !== peg$FAILED && (peg$savedPos = s06, s16 = text()), (s3 = s06 = s16) !== peg$FAILED) {
                                            if (s4 = peg$parse_(), s07 = peg$currPos, "full" === input.substr(peg$currPos, 4).toLowerCase() ? (s17 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s17 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e30)), s17 !== peg$FAILED ? (peg$parse_(), peg$savedPos = s07, s07 = !0) : (peg$currPos = s07, s07 = peg$FAILED), (s5 = s07) === peg$FAILED && (s5 = null), (s6 = function () { var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11; if (s0 = peg$currPos, s1 = peg$currPos, s2 = peg$currPos, s3 = peg$currPos, peg$silentFails++, s4 = peg$currPos, 91 === input.charCodeAt(peg$currPos) ? (s5 = "[", peg$currPos++) : (s5 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e4)), s5 !== peg$FAILED ? (input.substr(peg$currPos, 8).toLowerCase() === peg$c6 ? (s6 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s6 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e6)), s6 === peg$FAILED && (input.substr(peg$currPos, 8).toLowerCase() === peg$c7 ? (s6 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s6 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7))), s6 !== peg$FAILED ? s4 = s5 = [s5, s6] : (peg$currPos = s4, s4 = peg$FAILED)) : (peg$currPos = s4, s4 = peg$FAILED), peg$silentFails--, s4 === peg$FAILED ? s3 = void 0 : (peg$currPos = s3, s3 = peg$FAILED), s3 !== peg$FAILED)
                                                if (peg$r3.test(input.charAt(peg$currPos)) ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e52)), s4 !== peg$FAILED) {
                                                    for (s5 = [], s6 = peg$currPos, s7 = peg$currPos, peg$silentFails++, s8 = peg$currPos, s9 = peg$parse_(), 91 === input.charCodeAt(peg$currPos) ? (s10 = "[", peg$currPos++) : (s10 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e4)), s10 !== peg$FAILED ? (input.substr(peg$currPos, 8).toLowerCase() === peg$c6 ? (s11 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e6)), s11 === peg$FAILED && (input.substr(peg$currPos, 8).toLowerCase() === peg$c7 ? (s11 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7))), s11 !== peg$FAILED ? s8 = s9 = [s9, s10, s11] : (peg$currPos = s8, s8 = peg$FAILED)) : (peg$currPos = s8, s8 = peg$FAILED), peg$silentFails--, s8 === peg$FAILED ? s7 = void 0 : (peg$currPos = s7, s7 = peg$FAILED), s7 !== peg$FAILED ? (peg$r4.test(input.charAt(peg$currPos)) ? (s8 = input.charAt(peg$currPos), peg$currPos++) : (s8 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e53)), s8 !== peg$FAILED ? s6 = s7 = [s7, s8] : (peg$currPos = s6, s6 = peg$FAILED)) : (peg$currPos = s6, s6 = peg$FAILED); s6 !== peg$FAILED;)
                                                        s5.push(s6), s6 = peg$currPos, s7 = peg$currPos, peg$silentFails++, s8 = peg$currPos, s9 = peg$parse_(), 91 === input.charCodeAt(peg$currPos) ? (s10 = "[", peg$currPos++) : (s10 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e4)), s10 !== peg$FAILED ? (input.substr(peg$currPos, 8).toLowerCase() === peg$c6 ? (s11 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e6)), s11 === peg$FAILED && (input.substr(peg$currPos, 8).toLowerCase() === peg$c7 ? (s11 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7))), s11 !== peg$FAILED ? s8 = s9 = [s9, s10, s11] : (peg$currPos = s8, s8 = peg$FAILED)) : (peg$currPos = s8, s8 = peg$FAILED), peg$silentFails--, s8 === peg$FAILED ? s7 = void 0 : (peg$currPos = s7, s7 = peg$FAILED), s7 !== peg$FAILED ? (peg$r4.test(input.charAt(peg$currPos)) ? (s8 = input.charAt(peg$currPos), peg$currPos++) : (s8 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e53)), s8 !== peg$FAILED ? s6 = s7 = [s7, s8] : (peg$currPos = s6, s6 = peg$FAILED)) : (peg$currPos = s6, s6 = peg$FAILED);
                                                    s2 = s3 = [s3, s4, s5];
                                                }
                                                else
                                                    peg$currPos = s2, s2 = peg$FAILED;
                                            else
                                                peg$currPos = s2, s2 = peg$FAILED; return (s1 = s2 !== peg$FAILED ? input.substring(s1, peg$currPos) : s2) !== peg$FAILED && (peg$savedPos = s0, s1 = text().trim()), s0 = s1; }()) !== peg$FAILED) {
                                                (s08 = peg$currPos, peg$parse_(), 91 === input.charCodeAt(peg$currPos) ? (s22 = "[", peg$currPos++) : (s22 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e4)), s22 !== peg$FAILED && (s33 = function () { var s0, s1, s3; return (s0 = peg$currPos, input.substr(peg$currPos, 8).toLowerCase() === peg$c6 ? (s1 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e6)), s1 === peg$FAILED && (input.substr(peg$currPos, 8).toLowerCase() === peg$c7 ? (s1 = input.substr(peg$currPos, 8), peg$currPos += 8) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e7))), s1 !== peg$FAILED && (peg$parse_(), (s3 = peg$parsepercent()) !== peg$FAILED)) ? (peg$savedPos = s0, s0 = { adjustment: ("increase" === s1.toLowerCase() ? 1 : -1) * s3 }) : (peg$currPos = s0, s0 = peg$FAILED), s0; }()) !== peg$FAILED && (93 === input.charCodeAt(peg$currPos) ? (s42 = "]", peg$currPos++) : (s42 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e5)), s42 !== peg$FAILED)) ? (peg$savedPos = s08, s08 = s33) : (peg$currPos = s08, s08 = peg$FAILED), (s7 = s08) === peg$FAILED && (s7 = null), peg$savedPos = s0, template5 = s1, full = s5, name = s6, modifiers = s7, s0 = { type: "schedule", name: name.trim(), priority: template5.priority, directive: template5.directive, full, adjustment: modifiers?.adjustment };
                                            }
                                            else
                                                peg$currPos = s0, s0 = peg$FAILED;
                                        }
                                        else
                                            peg$currPos = s0, s0 = peg$FAILED;
                                    }
                                    else
                                        peg$currPos = s0, s0 = peg$FAILED;
                                    if (s0 === peg$FAILED) {
                                        if (s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED) {
                                            if (s2 = peg$parse_(), (s09 = peg$currPos, "remainder" === input.substr(peg$currPos, 9).toLowerCase() ? (s18 = input.substr(peg$currPos, 9), peg$currPos += 9) : (s18 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e32)), s18 !== peg$FAILED) ? (peg$parse_(), (s34 = peg$parsepositive()) === peg$FAILED && (s34 = null), peg$savedPos = s09, s09 = +s34 || 1) : (peg$currPos = s09, s09 = peg$FAILED), (s3 = s09) !== peg$FAILED)
                                                (s4 = peg$parselimit()) === peg$FAILED && (s4 = null), peg$savedPos = s0, template6 = s1, remainder = s3, limit = s4, s0 = { type: "remainder", priority: null, directive: template6.directive, weight: remainder, limit };
                                            else
                                                peg$currPos = s0, s0 = peg$FAILED;
                                        }
                                        else
                                            peg$currPos = s0, s0 = peg$FAILED;
                                        if (s0 === peg$FAILED && ((s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED && (s2 = peg$parse_(), "average" === input.substr(peg$currPos, 7).toLowerCase() ? (s3 = input.substr(peg$currPos, 7), peg$currPos += 7) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e0)), s3 !== peg$FAILED && (s4 = peg$parse_(), (s5 = peg$parsepositive()) !== peg$FAILED))) ? (s6 = peg$parse_(), input.substr(peg$currPos, 6).toLowerCase() === peg$c1 ? (s7 = input.substr(peg$currPos, 6), peg$currPos += 6) : (s7 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e1)), s7 === peg$FAILED && (s7 = null), peg$savedPos = s0, s0 = { type: "average", numMonths: +s5, priority: (template7 = s1).priority, directive: template7.directive }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED) && ((s0 = peg$currPos, (s1 = peg$parsetemplate()) !== peg$FAILED && (s2 = peg$parse_(), "copy from" === input.substr(peg$currPos, 9).toLowerCase() ? (s3 = input.substr(peg$currPos, 9), peg$currPos += 9) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e2)), s3 !== peg$FAILED && (s4 = peg$parse_(), (s5 = peg$parsepositive()) !== peg$FAILED && (s6 = peg$parse_(), "months ago" === input.substr(peg$currPos, 10).toLowerCase() ? (s7 = input.substr(peg$currPos, 10), peg$currPos += 10) : (s7 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e3)), s7 !== peg$FAILED)))) ? ((s8 = peg$parselimit()) === peg$FAILED && (s8 = null), peg$savedPos = s0, template8 = s1, lookBack = s5, limit1 = s8, s0 = { type: "copy", priority: template8.priority, directive: template8.directive, lookBack: +lookBack, limit: limit1 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED)) {
                                            if (s0 = peg$currPos, s010 = peg$currPos, "#goal" === input.substr(peg$currPos, 5).toLowerCase() ? (s19 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s19 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e34)), s19 !== peg$FAILED && (peg$savedPos = s010, s19 = "goal"), (s1 = s010 = s19) !== peg$FAILED)
                                                (s2 = peg$parseamount()) !== peg$FAILED ? (peg$savedPos = s0, s0 = { type: "goal", amount: s2, priority: null, directive: s1 }) : (peg$currPos = s0, s0 = peg$FAILED);
                                            else
                                                peg$currPos = s0, s0 = peg$FAILED;
                                        }
                                    }
                                }
                            }
                        } return s0; }
                        function peg$parselimit() { var s0, s2, s4, s6, s8, s10; return (s0 = peg$currPos, peg$parse_(), peg$parseupTo() !== peg$FAILED && (peg$parse_(), (s4 = peg$parseamount()) !== peg$FAILED && (peg$parse_(), "per week starting" === input.substr(peg$currPos, 17).toLowerCase() ? (s6 = input.substr(peg$currPos, 17), peg$currPos += 17) : (s6 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e12)), s6 !== peg$FAILED && (peg$parse_(), (s8 = peg$parsedate()) !== peg$FAILED)))) ? (peg$parse_(), (s10 = peg$parsehold()) === peg$FAILED && (s10 = null), peg$savedPos = s0, s0 = { amount: s4, hold: s10, period: "weekly", start: s8 }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && ((s0 = peg$currPos, peg$parse_(), peg$parseupTo() !== peg$FAILED && (peg$parse_(), (s4 = peg$parseamount()) !== peg$FAILED && (peg$parse_(), "per day" === input.substr(peg$currPos, 7).toLowerCase() ? (s6 = input.substr(peg$currPos, 7), peg$currPos += 7) : (s6 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e13)), s6 !== peg$FAILED))) ? (peg$parse_(), (s8 = peg$parsehold()) === peg$FAILED && (s8 = null), peg$savedPos = s0, s0 = { amount: s4, hold: s8, period: "daily", start: null }) : (peg$currPos = s0, s0 = peg$FAILED), s0 === peg$FAILED && ((s0 = peg$currPos, peg$parse_(), peg$parseupTo() !== peg$FAILED && (peg$parse_(), (s4 = peg$parseamount()) !== peg$FAILED)) ? (peg$parse_(), (s6 = peg$parsehold()) === peg$FAILED && (s6 = null), peg$savedPos = s0, s0 = { amount: s4, hold: s6, period: "monthly", start: null }) : (peg$currPos = s0, s0 = peg$FAILED))), s0; }
                        function peg$parseof() { var s0; return "of" === input.substr(peg$currPos, 2).toLowerCase() ? (s0 = input.substr(peg$currPos, 2), peg$currPos += 2) : (s0 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e22)), s0; }
                        function peg$parserepeatEvery() { var s0, s1, s2, s3; return s0 = peg$currPos, "repeat" === input.substr(peg$currPos, 6).toLowerCase() ? (s1 = input.substr(peg$currPos, 6), peg$currPos += 6) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e23)), s1 !== peg$FAILED ? (s2 = peg$parse_(), "every" === input.substr(peg$currPos, 5).toLowerCase() ? (s3 = input.substr(peg$currPos, 5), peg$currPos += 5) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e24)), s3 !== peg$FAILED ? s0 = s1 = [s1, s2, s3] : (peg$currPos = s0, s0 = peg$FAILED)) : (peg$currPos = s0, s0 = peg$FAILED), s0; }
                        function peg$parseupTo() { var s0, s1, s2, s3; return s0 = peg$currPos, "up" === input.substr(peg$currPos, 2).toLowerCase() ? (s1 = input.substr(peg$currPos, 2), peg$currPos += 2) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e26)), s1 !== peg$FAILED ? (s2 = peg$parse_(), "to" === input.substr(peg$currPos, 2).toLowerCase() ? (s3 = input.substr(peg$currPos, 2), peg$currPos += 2) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e27)), s3 !== peg$FAILED ? s0 = s1 = [s1, s2, s3] : (peg$currPos = s0, s0 = peg$FAILED)) : (peg$currPos = s0, s0 = peg$FAILED), s0; }
                        function peg$parsehold() { var s0, s1; return s0 = peg$currPos, "hold" === input.substr(peg$currPos, 4).toLowerCase() ? (s1 = input.substr(peg$currPos, 4), peg$currPos += 4) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e28)), s1 !== peg$FAILED && (peg$savedPos = s0, s1 = !0), s0 = s1; }
                        function peg$parsetemplate() { var s0, s1, s2, s01, s11, s21; if (s0 = peg$currPos, input.substr(peg$currPos, 9) === peg$c32 ? (s1 = peg$c32, peg$currPos += 9) : (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e33)), s1 !== peg$FAILED) {
                            (s01 = peg$currPos, "-" === input.substr(peg$currPos, 1).toLowerCase() ? (s11 = input.charAt(peg$currPos), peg$currPos++) : (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e31)), s11 !== peg$FAILED && (s21 = peg$parsenumber()) !== peg$FAILED) ? (peg$savedPos = s01, s01 = s21) : (peg$currPos = s01, s01 = peg$FAILED), (s2 = s01) === peg$FAILED && (s2 = null), peg$savedPos = s0, s0 = { priority: +s2, directive: "template" };
                        }
                        else
                            peg$currPos = s0, s0 = peg$FAILED; return s0; }
                        function peg$parse_() { var s0, s1, s2; for (peg$silentFails++, s0 = peg$currPos, s1 = [], peg$r0.test(input.charAt(peg$currPos)) ? (s2 = input.charAt(peg$currPos), peg$currPos++) : (s2 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e36)); s2 !== peg$FAILED;)
                            s1.push(s2), peg$r0.test(input.charAt(peg$currPos)) ? (s2 = input.charAt(peg$currPos), peg$currPos++) : (s2 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e36)); return peg$savedPos = s0, s0 = s1 = text(), peg$silentFails--, s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e35), s0; }
                        function peg$parsed() { var s0; return peg$silentFails++, peg$r1.test(input.charAt(peg$currPos)) ? (s0 = input.charAt(peg$currPos), peg$currPos++) : (s0 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e39)), peg$silentFails--, s0 === peg$FAILED && 0 === peg$silentFails && peg$fail(peg$e38), s0; }
                        function peg$parsenumber() { var s0, s1, s2; if (peg$silentFails++, s0 = peg$currPos, s1 = [], (s2 = peg$parsed()) !== peg$FAILED)
                            for (; s2 !== peg$FAILED;)
                                s1.push(s2), s2 = peg$parsed();
                        else
                            s1 = peg$FAILED; return s0 = s1 !== peg$FAILED ? input.substring(s0, peg$currPos) : s1, peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e40)), s0; }
                        function peg$parsepositive() { var s0, s1, s2, s3, s4; if (s0 = peg$currPos, s1 = peg$currPos, peg$r2.test(input.charAt(peg$currPos)) ? (s2 = input.charAt(peg$currPos), peg$currPos++) : (s2 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e41)), s2 !== peg$FAILED) {
                            for (s3 = [], peg$r1.test(input.charAt(peg$currPos)) ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e39)); s4 !== peg$FAILED;)
                                s3.push(s4), peg$r1.test(input.charAt(peg$currPos)) ? (s4 = input.charAt(peg$currPos), peg$currPos++) : (s4 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e39));
                            s1 = s2 = [s2, s3];
                        }
                        else
                            peg$currPos = s1, s1 = peg$FAILED; return s1 !== peg$FAILED ? input.substring(s0, peg$currPos) : s1; }
                        function peg$parseamount() { var s0, s1, s3, s4, s5, s6, s7, s8, s9, s10, s11, s01, s12, s2, symbol; if (peg$silentFails++, s0 = peg$currPos, (peg$silentFails++, s01 = peg$currPos, input.length > peg$currPos ? (s12 = input.charAt(peg$currPos), peg$currPos++) : (s12 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e51)), s12 !== peg$FAILED) ? (peg$savedPos = peg$currPos, symbol = s12, (s2 = (s2 = /\p{Sc}/u.test(symbol)) ? void 0 : peg$FAILED) !== peg$FAILED ? s01 = s12 = [s12, s2] : (peg$currPos = s01, s01 = peg$FAILED)) : (peg$currPos = s01, s01 = peg$FAILED), peg$silentFails--, s01 === peg$FAILED && (s12 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e50)), (s1 = s01) === peg$FAILED, peg$parse_(), s3 = peg$currPos, s4 = peg$currPos, 45 === input.charCodeAt(peg$currPos) ? (s5 = "-", peg$currPos++) : (s5 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e43)), s5 === peg$FAILED && (s5 = null), s6 = [], (s7 = peg$parsed()) !== peg$FAILED)
                            for (; s7 !== peg$FAILED;)
                                s6.push(s7), s7 = peg$parsed();
                        else
                            s6 = peg$FAILED; return (s6 !== peg$FAILED ? (s7 = peg$currPos, 46 === input.charCodeAt(peg$currPos) ? (s8 = ".", peg$currPos++) : (s8 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e44)), s8 !== peg$FAILED ? (s9 = peg$currPos, (s10 = peg$parsed()) !== peg$FAILED ? ((s11 = peg$parsed()) === peg$FAILED && (s11 = null), s9 = s10 = [s10, s11]) : (peg$currPos = s9, s9 = peg$FAILED), s9 === peg$FAILED && (s9 = null), s7 = s8 = [s8, s9]) : (peg$currPos = s7, s7 = peg$FAILED), s7 === peg$FAILED && (s7 = null), s4 = s5 = [s5, s6, s7]) : (peg$currPos = s4, s4 = peg$FAILED), (s3 = s4 !== peg$FAILED ? input.substring(s3, peg$currPos) : s4) !== peg$FAILED) ? (peg$savedPos = s0, s0 = +s3) : (peg$currPos = s0, s0 = peg$FAILED), peg$silentFails--, s0 === peg$FAILED && 0 === peg$silentFails && peg$fail(peg$e42), s0; }
                        function peg$parsepercent() { var s0, s1, s2, s3, s4, s5, s6, s7; if (peg$silentFails++, s0 = peg$currPos, s1 = peg$currPos, s2 = peg$currPos, s3 = [], (s4 = peg$parsed()) !== peg$FAILED)
                            for (; s4 !== peg$FAILED;)
                                s3.push(s4), s4 = peg$parsed();
                        else
                            s3 = peg$FAILED; if (s3 !== peg$FAILED) {
                            if (s4 = peg$currPos, 46 === input.charCodeAt(peg$currPos) ? (s5 = ".", peg$currPos++) : (s5 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e44)), s5 !== peg$FAILED) {
                                if (s6 = [], (s7 = peg$parsed()) !== peg$FAILED)
                                    for (; s7 !== peg$FAILED;)
                                        s6.push(s7), s7 = peg$parsed();
                                else
                                    s6 = peg$FAILED;
                                s6 === peg$FAILED && (s6 = null), s4 = s5 = [s5, s6];
                            }
                            else
                                peg$currPos = s4, s4 = peg$FAILED;
                            s4 === peg$FAILED && (s4 = null), s2 = s3 = [s3, s4];
                        }
                        else
                            peg$currPos = s2, s2 = peg$FAILED; return (s1 = s2 !== peg$FAILED ? input.substring(s1, peg$currPos) : s2) !== peg$FAILED && (s2 = peg$parse_(), 37 === input.charCodeAt(peg$currPos) ? (s3 = "%", peg$currPos++) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e46)), s3 !== peg$FAILED) ? (peg$savedPos = s0, s0 = s1) : (peg$currPos = s0, s0 = peg$FAILED), peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e45)), s0; }
                        function peg$parsemonth() { var s0, s1, s2, s3, s4, s5, s01, s11, s21, s31, s41, s51; return peg$silentFails++, s0 = peg$currPos, s1 = peg$currPos, peg$silentFails++, s01 = peg$currPos, s11 = peg$currPos, (s21 = peg$parsed()) !== peg$FAILED && (s31 = peg$parsed()) !== peg$FAILED && (s41 = peg$parsed()) !== peg$FAILED && (s51 = peg$parsed()) !== peg$FAILED ? s11 = s21 = [s21, s31, s41, s51] : (peg$currPos = s11, s11 = peg$FAILED), s01 = s11 !== peg$FAILED ? input.substring(s01, peg$currPos) : s11, peg$silentFails--, s01 === peg$FAILED && (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e47)), (s2 = s01) !== peg$FAILED ? (45 === input.charCodeAt(peg$currPos) ? (s3 = "-", peg$currPos++) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e43)), s3 !== peg$FAILED && (s4 = peg$parsed()) !== peg$FAILED && (s5 = peg$parsed()) !== peg$FAILED ? s1 = s2 = [s2, s3, s4, s5] : (peg$currPos = s1, s1 = peg$FAILED)) : (peg$currPos = s1, s1 = peg$FAILED), s0 = s1 !== peg$FAILED ? input.substring(s0, peg$currPos) : s1, peg$silentFails--, s0 === peg$FAILED && (s1 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e48)), s0; }
                        function peg$parsedate() { var s0, s1, s2, s3, s4, s01, s11, s21, s31; return (s0 = peg$currPos, s1 = peg$currPos, (s2 = peg$parsemonth()) !== peg$FAILED && (45 === input.charCodeAt(peg$currPos) ? (s3 = "-", peg$currPos++) : (s3 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e43)), s3 !== peg$FAILED)) ? (peg$silentFails++, s01 = peg$currPos, s11 = peg$currPos, (s21 = peg$parsed()) !== peg$FAILED && (s31 = peg$parsed()) !== peg$FAILED ? s11 = s21 = [s21, s31] : (peg$currPos = s11, s11 = peg$FAILED), s01 = s11 !== peg$FAILED ? input.substring(s01, peg$currPos) : s11, peg$silentFails--, s01 === peg$FAILED && (s11 = peg$FAILED, 0 === peg$silentFails && peg$fail(peg$e49)), (s4 = s01) !== peg$FAILED ? s1 = s2 = [s2, s3, s4] : (peg$currPos = s1, s1 = peg$FAILED)) : (peg$currPos = s1, s1 = peg$FAILED), s1 !== peg$FAILED ? input.substring(s0, peg$currPos) : s1; }
                        if ((peg$result = peg$startRuleFunction()) !== peg$FAILED && peg$currPos === input.length)
                            return peg$result;
                        throw peg$result !== peg$FAILED && peg$currPos < input.length && peg$fail({ type: "end" }), expected = peg$maxFailExpected, found = peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, startPos = peg$maxFailPos, endPos = peg$maxFailPos < input.length ? peg$maxFailPos + 1 : peg$maxFailPos, startPosDetails = peg$computePosDetails(startPos), endPosDetails = peg$computePosDetails(endPos), res = { source: peg$source, start: { offset: startPos, line: startPosDetails.line, column: startPosDetails.column }, end: { offset: endPos, line: endPosDetails.line, column: endPosDetails.column } }, location = res, new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);
                    } };
            }) ? __WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, []) : __WEBPACK_AMD_DEFINE_FACTORY__) || (module1.exports = __WEBPACK_AMD_DEFINE_RESULT__);
        }, "./packages/loot-core/src/server/budget/goal-template.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { applyMultipleCategoryTemplates: () => applyMultipleCategoryTemplates, applySingleCategoryTemplate: () => applySingleCategoryTemplate, applyTemplate: () => applyTemplate, overwriteTemplate: () => overwriteTemplate, runCheckTemplates: () => runCheckTemplates });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _aql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _sync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts"), _category_template_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/budget/category-template-context.ts"), _template_notes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/budget/template-notes.ts");
            async function applyTemplate({ month }) { await (0, _template_notes__WEBPACK_IMPORTED_MODULE_6__.storeTemplates)(); let categoryTemplates = await getTemplates(); return await processTemplate(month, !1, categoryTemplates); }
            async function overwriteTemplate({ month }) { await (0, _template_notes__WEBPACK_IMPORTED_MODULE_6__.storeTemplates)(); let categoryTemplates = await getTemplates(); return await processTemplate(month, !0, categoryTemplates); }
            async function applyMultipleCategoryTemplates({ month, categoryIds }) { let { data: categoryData } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("categories").filter({ id: { $oneof: categoryIds } }).select("*")); await (0, _template_notes__WEBPACK_IMPORTED_MODULE_6__.storeTemplates)(); let categoryTemplates = await getTemplates(c => categoryIds.includes(c.id)); return await processTemplate(month, !0, categoryTemplates, categoryData); }
            async function applySingleCategoryTemplate({ month, category }) { let { data: categoryData } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("categories").filter({ id: category }).select("*")); await (0, _template_notes__WEBPACK_IMPORTED_MODULE_6__.storeTemplates)(); let categoryTemplates = await getTemplates(c => c.id === category); return await processTemplate(month, !0, categoryTemplates, categoryData); }
            function runCheckTemplates() { return (0, _template_notes__WEBPACK_IMPORTED_MODULE_6__.checkTemplates)(); }
            async function getCategories() { let { data: categoryGroups } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("category_groups").filter({ hidden: !1 }).select("*")); return categoryGroups.flatMap(g => g.categories || []).filter(c => !c.hidden); }
            async function getTemplates(filter = () => !0) { let { data: categoriesWithGoalDef } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("categories").filter({ goal_def: { $ne: null } }).select("*")), categoryTemplates = {}; for (let categoryWithGoalDef of categoriesWithGoalDef.filter(filter))
                categoryTemplates[categoryWithGoalDef.id] = JSON.parse(categoryWithGoalDef.goal_def); return categoryTemplates; }
            async function setBudgets(month, templateBudget) { await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { templateBudget.forEach(element => { (0, _actions__WEBPACK_IMPORTED_MODULE_4__.setBudget)({ category: element.category, month, amount: element.budgeted }); }); }); }
            async function setGoals(month, templateGoal) { await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { templateGoal.forEach(element => { (0, _actions__WEBPACK_IMPORTED_MODULE_4__.setGoal)({ month, category: element.category, goal: element.goal, long_goal: element.longGoal }); }); }); }
            async function processTemplate(month, force, categoryTemplates, categories = []) {
                let isReflect = (0, _actions__WEBPACK_IMPORTED_MODULE_4__.isReflectBudget)();
                categories.length || (categories = (await getCategories()).filter(c => isReflect || !c.is_income));
                let templateContexts = [], availBudget = await (0, _actions__WEBPACK_IMPORTED_MODULE_4__.getSheetValue)(_shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), "to-budget"), prioritiesSet = new Set, errors = [], budgetList = [], goalList = [];
                for (let category of categories) {
                    let { id } = category, sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), templates = categoryTemplates[id], budgeted = await (0, _actions__WEBPACK_IMPORTED_MODULE_4__.getSheetValue)(sheetName, `budget-${id}`), existingGoal = await (0, _actions__WEBPACK_IMPORTED_MODULE_4__.getSheetValue)(sheetName, `goal-${id}`);
                    if ((0 === budgeted || force) && templates)
                        try {
                            let templateContext = await _category_template_context__WEBPACK_IMPORTED_MODULE_5__.CategoryTemplateContext.init(templates, category, month, budgeted);
                            templateContext.isGoalOnly() || (availBudget += budgeted), availBudget += templateContext.getLimitExcess(), templateContext.getPriorities().forEach(p => prioritiesSet.add(p)), templateContexts.push(templateContext);
                        }
                        catch (e) {
                            errors.push(`${category.name}: ${e.message}`);
                        }
                    else
                        null === existingGoal || templates || goalList.push({ category: id, goal: null, longGoal: null });
                }
                if (0 === templateContexts.length && 0 === errors.length)
                    return goalList.length > 0 && setGoals(month, goalList), { type: "message", message: "Everything is up to date" };
                if (errors.length > 0)
                    return { sticky: !0, message: "There were errors interpreting some templates:", pre: errors.join(`

`) };
                for (let priority of new Int32Array([...prioritiesSet]).sort()) {
                    let availStart = availBudget;
                    for (let templateContext of templateContexts) {
                        let budget = await templateContext.runTemplatesForPriority(priority, availBudget, availStart);
                        availBudget -= budget;
                    }
                }
                let remainderContexts = templateContexts.filter(c => c.hasRemainder());
                for (; availBudget > 0 && remainderContexts.length > 0;) {
                    let remainderWeight = 0;
                    remainderContexts.forEach(context => remainderWeight += context.getRemainderWeight());
                    let perWeight = availBudget / remainderWeight;
                    remainderContexts.forEach(context => { availBudget -= context.runRemainder(availBudget, perWeight); }), remainderContexts = templateContexts.filter(c => c.hasRemainder());
                }
                return templateContexts.forEach(context => { let values = context.getValues(); budgetList.push({ category: context.category.id, budgeted: values.budgeted }), goalList.push({ category: context.category.id, goal: values.goal, longGoal: values.longGoal ? 1 : null }); }), await setBudgets(month, budgetList), await setGoals(month, goalList), { type: "message", message: `Successfully applied templates to ${templateContexts.length} categories` };
            }
        }, "./packages/loot-core/src/server/budget/report.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createCategory: () => createCategory, createCategoryGroup: () => createCategoryGroup, createSummary: () => createSummary, handleCategoryChange: () => handleCategoryChange, handleCategoryGroupChange: () => handleCategoryGroupChange });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _sheet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _spreadsheet_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts"), _base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/budget/util.ts");
            async function createCategory(cat, sheetName, prevSheetName) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `budget-${cat.id}`, 0), null == _sheet__WEBPACK_IMPORTED_MODULE_3__.get().getCellValue(sheetName, `budget-${cat.id}`) && _sheet__WEBPACK_IMPORTED_MODULE_3__.get().set((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_4__.resolveName)(sheetName, `budget-${cat.id}`), 0), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, `leftover-${cat.id}`, { initialValue: 0, dependencies: [`budget-${cat.id}`, `sum-amount-${cat.id}`, `${prevSheetName}!carryover-${cat.id}`, `${prevSheetName}!leftover-${cat.id}`], run: (budgeted, sumAmount, prevCarryover, prevLeftover) => cat.is_income ? (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(budgeted) - (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(sumAmount) + (prevCarryover ? (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(prevLeftover) : 0)) : (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(budgeted) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(sumAmount) + (prevCarryover ? (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(prevLeftover) : 0)) }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, `spent-with-carryover-${cat.id}`, { initialValue: 0, dependencies: [`budget-${cat.id}`, `sum-amount-${cat.id}`, `carryover-${cat.id}`], refresh: !0, run: (budgeted, sumAmount, carryover) => carryover ? Math.max(0, (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)((0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(budgeted) + (0, _util__WEBPACK_IMPORTED_MODULE_6__.number)(sumAmount))) : sumAmount }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createStatic(sheetName, `carryover-${cat.id}`, !1); }
            function createCategoryGroup(group, sheetName) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-sum-amount-" + group.id, { initialValue: 0, dependencies: group.categories.filter(cat => !cat.hidden).map(cat => `sum-amount-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-budget-" + group.id, { initialValue: 0, dependencies: group.categories.filter(cat => !cat.hidden).map(cat => `budget-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "group-leftover-" + group.id, { initialValue: 0, dependencies: group.categories.filter(cat => !cat.hidden).map(cat => `leftover-${cat.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }); }
            function createSummary(groups, sheetName) { let incomeGroup = groups.filter(group => group.is_income)[0], expenseGroups = groups.filter(group => !group.is_income && !group.hidden); _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-budgeted", { initialValue: 0, dependencies: expenseGroups.map(group => `group-budget-${group.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-spent", { initialValue: 0, refresh: !0, dependencies: expenseGroups.map(group => `group-sum-amount-${group.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-income", { initialValue: 0, dependencies: [`group-sum-amount-${incomeGroup.id}`], run: amount => amount }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-leftover", { initialValue: 0, dependencies: expenseGroups.map(g => `group-leftover-${g.id}`), run: _util__WEBPACK_IMPORTED_MODULE_6__.sumAmounts }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-budget-income", { initialValue: 0, dependencies: [`group-budget-${incomeGroup.id}`], run: amount => amount }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "total-saved", { initialValue: 0, dependencies: ["total-budget-income", "total-budgeted"], run: (income, budgeted) => income - budgeted }), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().createDynamic(sheetName, "real-saved", { initialValue: 0, dependencies: ["total-income", "total-spent"], run: (income, spent) => (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.safeNumber)(income - -spent) }); }
            function handleCategoryChange(months, oldValue, newValue) { function addDeps(sheetName, groupId, catId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-sum-amount-${groupId}`, [`sum-amount-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-budget-${groupId}`, [`budget-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, `group-leftover-${groupId}`, [`leftover-${catId}`]); } function removeDeps(sheetName, groupId, catId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-sum-amount-${groupId}`, [`sum-amount-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-budget-${groupId}`, [`budget-${catId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, `group-leftover-${groupId}`, [`leftover-${catId}`]); } if (oldValue && 0 === oldValue.tombstone && 1 === newValue.tombstone) {
                let id = newValue.id, groupId = newValue.cat_group;
                months.forEach(month => { removeDeps(_shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), groupId, id); });
            }
            else if (0 !== newValue.tombstone || oldValue && 1 !== oldValue.tombstone) {
                if (oldValue && oldValue.cat_group !== newValue.cat_group) {
                    let id = newValue.id;
                    months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); removeDeps(sheetName, oldValue.cat_group, id), addDeps(sheetName, newValue.cat_group, id); });
                }
                else if (oldValue && oldValue.hidden !== newValue.hidden) {
                    let id = newValue.id, groupId = newValue.cat_group;
                    months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); newValue.hidden ? removeDeps(sheetName, groupId, id) : addDeps(sheetName, groupId, id); });
                }
            }
            else
                months.forEach(month => { let prevMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.prevMonth(month), prevSheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(prevMonth), sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), { start, end } = _shared_months__WEBPACK_IMPORTED_MODULE_0__.bounds(month); (0, _base__WEBPACK_IMPORTED_MODULE_5__.createCategory)(newValue, sheetName, prevSheetName, start, end); let id = newValue.id; addDeps(sheetName, newValue.cat_group, id); }); }
            function handleCategoryGroupChange(months, oldValue, newValue) { function addDeps(sheetName, groupId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-budgeted", [`group-budget-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-spent", [`group-sum-amount-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().addDependencies(sheetName, "total-leftover", [`group-leftover-${groupId}`]); } function removeDeps(sheetName, groupId) { _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-budgeted", [`group-budget-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-spent", [`group-sum-amount-${groupId}`]), _sheet__WEBPACK_IMPORTED_MODULE_3__.get().removeDependencies(sheetName, "total-leftover", [`group-leftover-${groupId}`]); } if (1 === newValue.tombstone && oldValue && 0 === oldValue.tombstone) {
                let id = newValue.id;
                months.forEach(month => { removeDeps(_shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), id); });
            }
            else
                0 !== newValue.tombstone || oldValue && 1 !== oldValue.tombstone ? oldValue && oldValue.hidden !== newValue.hidden && months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month); newValue.hidden ? removeDeps(sheetName, newValue.id) : addDeps(sheetName, newValue.id); }) : months.forEach(month => { let sheetName = _shared_months__WEBPACK_IMPORTED_MODULE_0__.sheetForMonth(month), categories = _db__WEBPACK_IMPORTED_MODULE_2__.runQuery("SELECT * FROM categories WHERE tombstone = 0 AND cat_group = ?", [newValue.id], !0); createCategoryGroup({ ...newValue, categories }, sheetName), addDeps(sheetName, newValue.id); }); }
        }, "./packages/loot-core/src/server/budget/schedule-template.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { runSchedule: () => runSchedule });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_schedules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/schedules.ts"), _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _schedules_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/schedules/app.ts"), _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/budget/actions.ts");
            async function createScheduleList(templates, current_month, category) { let t = [], errors = []; for (let template of templates) {
                let { id: sid, completed } = await _db__WEBPACK_IMPORTED_MODULE_2__.first("SELECT id, completed FROM schedules WHERE TRIM(name) = ? AND tombstone = 0", [template.name]), rule = await (0, _schedules_app__WEBPACK_IMPORTED_MODULE_3__.getRuleForSchedule)(sid), conditions = rule.serialize().conditions, { date: dateConditions, amount: amountCondition } = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.extractScheduleConds)(conditions), scheduleAmount = "isbetween" === amountCondition.op ? Math.round(amountCondition.value.num1 + amountCondition.value.num2) / 2 : amountCondition.value;
                template.adjustment && (scheduleAmount = Math.round(scheduleAmount * (1 + template.adjustment / 100)));
                let { amount: postRuleAmount, subtransactions } = rule.execActions({ amount: scheduleAmount, category: category.id, subtransactions: [] }), categorySubtransactions = subtransactions?.filter(t => t.category === category.id), target = (category.is_income ? 1 : -1) * (categorySubtransactions?.length ? categorySubtransactions.reduce((acc, t) => acc + t.amount, 0) : postRuleAmount ?? scheduleAmount), next_date_string = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.getNextDate)(dateConditions, _shared_months__WEBPACK_IMPORTED_MODULE_0__._parse(current_month)), target_interval = dateConditions.value.interval ? dateConditions.value.interval : 1, target_frequency = dateConditions.value.frequency, isRepeating = Object(dateConditions.value) === dateConditions.value && "frequency" in dateConditions.value, num_months = _shared_months__WEBPACK_IMPORTED_MODULE_0__.differenceInCalendarMonths(next_date_string, current_month);
                if (num_months < 0)
                    errors.push(`Schedule ${template.name} is in the Past.`);
                else if (t.push({ target, next_date_string, target_interval, target_frequency, num_months, completed, full: null !== template.full && template.full, repeat: isRepeating, name: template.name }), completed)
                    errors.push(`Schedule ${template.name} is not active during the month in question.`);
                else if (isRepeating) {
                    let monthlyTarget = 0, nextMonth = _shared_months__WEBPACK_IMPORTED_MODULE_0__.addMonths(current_month, t[t.length - 1].num_months + 1), nextBaseDate = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.getNextDate)(dateConditions, _shared_months__WEBPACK_IMPORTED_MODULE_0__._parse(current_month), !0), nextDate = dateConditions.value.skipWeekend ? _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate((0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.getDateWithSkippedWeekend)(_shared_months__WEBPACK_IMPORTED_MODULE_0__._parse(nextBaseDate), dateConditions.value.weekendSolveMode)) : nextBaseDate;
                    for (; nextDate < nextMonth;) {
                        monthlyTarget += -target;
                        let currentDate = nextBaseDate, oneDayLater = _shared_months__WEBPACK_IMPORTED_MODULE_0__.addDays(nextBaseDate, 1);
                        if (nextBaseDate = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.getNextDate)(dateConditions, _shared_months__WEBPACK_IMPORTED_MODULE_0__._parse(oneDayLater), !0), nextDate = dateConditions.value.skipWeekend ? _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate((0, _shared_schedules__WEBPACK_IMPORTED_MODULE_1__.getDateWithSkippedWeekend)(_shared_months__WEBPACK_IMPORTED_MODULE_0__._parse(nextBaseDate), dateConditions.value.weekendSolveMode)) : nextBaseDate, !_shared_months__WEBPACK_IMPORTED_MODULE_0__.differenceInCalendarDays(nextBaseDate, currentDate))
                            break;
                    }
                    t[t.length - 1].target = -monthlyTarget;
                }
            } return { t: t.filter(c => 0 === c.completed), errors }; }
            async function getSinkingContributionTotal(t, remainder, last_month_balance) { let total = 0; for (let [index, schedule] of t.entries()) {
                remainder = 0 === index ? schedule.target - last_month_balance : schedule.target - remainder;
                let tg = 0;
                remainder >= 0 ? (tg = remainder, remainder = 0) : (tg = 0, remainder = Math.abs(remainder)), total += tg / (schedule.num_months + 1);
            } return total; }
            async function runSchedule(template_lines, current_month, balance, remainder, last_month_balance, to_budget, errors, category) { let scheduleTemplates = template_lines.filter(t => "schedule" === t.type), t = await createScheduleList(scheduleTemplates, current_month, category); errors = errors.concat(t.errors); let isPayMonthOf = c => c.full || "monthly" === c.target_frequency && 1 === c.target_interval && 0 === c.num_months || "weekly" === c.target_frequency && c.target_interval <= 4 || "daily" === c.target_frequency && c.target_interval <= 31 || (0, _actions__WEBPACK_IMPORTED_MODULE_4__.isReflectBudget)(), t_payMonthOf = t.t.filter(isPayMonthOf), t_sinking = t.t.filter(c => !isPayMonthOf(c)).sort((a, b) => a.next_date_string.localeCompare(b.next_date_string)), totalPayMonthOf = function (t) { let total = 0; for (let schedule of t.filter(c => 0 === c.num_months))
                total += schedule.target; return total; }(t_payMonthOf), totalSinking = function (t) { let total = 0; for (let schedule of t)
                total += schedule.target; return total; }(t_sinking), totalSinkingBaseContribution = function (t) { let total = 0; for (let schedule of t) {
                let prevDate, intervalMonths, monthlyAmount = 0;
                switch (schedule.target_frequency) {
                    case "yearly":
                        monthlyAmount = schedule.target / schedule.target_interval / 12;
                        break;
                    case "monthly":
                        monthlyAmount = schedule.target / schedule.target_interval;
                        break;
                    case "weekly":
                        prevDate = _shared_months__WEBPACK_IMPORTED_MODULE_0__.subWeeks(schedule.next_date_string, schedule.target_interval), 0 === (intervalMonths = _shared_months__WEBPACK_IMPORTED_MODULE_0__.differenceInCalendarMonths(schedule.next_date_string, prevDate)) && (intervalMonths = 1), monthlyAmount = schedule.target / intervalMonths;
                        break;
                    case "daily": prevDate = _shared_months__WEBPACK_IMPORTED_MODULE_0__.subDays(schedule.next_date_string, schedule.target_interval), 0 === (intervalMonths = _shared_months__WEBPACK_IMPORTED_MODULE_0__.differenceInCalendarMonths(schedule.next_date_string, prevDate)) && (intervalMonths = 1), monthlyAmount = schedule.target / intervalMonths;
                }
                total += monthlyAmount;
            } return total; }(t_sinking); if (balance >= totalSinking + totalPayMonthOf)
                to_budget += Math.round(totalPayMonthOf + totalSinkingBaseContribution);
            else {
                let totalSinkingContribution = await getSinkingContributionTotal(t_sinking, remainder, last_month_balance);
                0 === t_sinking.length ? to_budget += Math.round(totalPayMonthOf + totalSinkingContribution) - last_month_balance : to_budget += Math.round(totalPayMonthOf + totalSinkingContribution);
            } return { to_budget, errors, remainder }; }
        }, "./packages/loot-core/src/server/budget/statements.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getActiveSchedules: () => getActiveSchedules, getCategoriesWithTemplateNotes: () => getCategoriesWithTemplateNotes, resetCategoryGoalDefsWithNoTemplates: () => resetCategoryGoalDefsWithNoTemplates });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _template_notes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/budget/template-notes.ts");
            async function resetCategoryGoalDefsWithNoTemplates() {
                await _db__WEBPACK_IMPORTED_MODULE_0__.run(`
      UPDATE categories
      SET goal_def = NULL
      WHERE id NOT IN (SELECT n.id
                       FROM notes n
                       WHERE lower(note) LIKE '%${_template_notes__WEBPACK_IMPORTED_MODULE_1__.TEMPLATE_PREFIX}%'
                          OR lower(note) LIKE '%${_template_notes__WEBPACK_IMPORTED_MODULE_1__.GOAL_PREFIX}%')
    `);
            }
            async function getCategoriesWithTemplateNotes() {
                return await _db__WEBPACK_IMPORTED_MODULE_0__.all(`
      SELECT c.id AS id, c.name as name, n.note AS note
      FROM notes n
             JOIN categories c ON n.id = c.id
      WHERE c.id = n.id
        AND c.tombstone = 0
        AND (lower(note) LIKE '%${_template_notes__WEBPACK_IMPORTED_MODULE_1__.TEMPLATE_PREFIX}%'
        OR lower(note) LIKE '%${_template_notes__WEBPACK_IMPORTED_MODULE_1__.GOAL_PREFIX}%')
    `);
            }
            async function getActiveSchedules() { return await _db__WEBPACK_IMPORTED_MODULE_0__.all("SELECT id, rule, active, completed, posts_transaction, tombstone, name from schedules WHERE name NOT NULL AND tombstone = 0"); }
        }, "./packages/loot-core/src/server/budget/template-notes.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { GOAL_PREFIX: () => GOAL_PREFIX, TEMPLATE_PREFIX: () => TEMPLATE_PREFIX, checkTemplates: () => checkTemplates, storeTemplates: () => storeTemplates });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _goal_template_pegjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/budget/goal-template.pegjs"), _statements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/budget/statements.ts");
            let TEMPLATE_PREFIX = "#template", GOAL_PREFIX = "#goal";
            async function storeTemplates() { for (let { id, templates } of (await getCategoriesWithTemplates())) {
                let goalDefs = JSON.stringify(templates);
                await _db__WEBPACK_IMPORTED_MODULE_0__.update("categories", { id, goal_def: goalDefs });
            } await (0, _statements__WEBPACK_IMPORTED_MODULE_2__.resetCategoryGoalDefsWithNoTemplates)(); }
            async function checkTemplates() {
                let categoryWithTemplates = await getCategoriesWithTemplates(), scheduleNames = (await (0, _statements__WEBPACK_IMPORTED_MODULE_2__.getActiveSchedules)()).map(({ name }) => name), errors = [];
                return (categoryWithTemplates.forEach(({ name, templates }) => {
                    templates.forEach(template => {
                        "error" === template.type ? template.error && template.error.includes("adjustment") ? errors.push(`${name}: ${template.line}
Error: ${template.error}`) : errors.push(`${name}: ${template.line}`) : "schedule" !== template.type || scheduleNames.includes(template.name) || errors.push(`${name}: Schedule “${template.name}” does not exist`);
                    });
                }), errors.length) ? { sticky: !0, message: "There were errors interpreting some templates:", pre: errors.join(`

`) } : { type: "message", message: "All templates passed! 🎉" };
            }
            async function getCategoriesWithTemplates() {
                let templatesForCategory = [];
                return (await (0, _statements__WEBPACK_IMPORTED_MODULE_2__.getCategoriesWithTemplateNotes)()).forEach(({ id, name, note }) => {
                    if (!note)
                        return;
                    let parsedTemplates = [];
                    note.split(`
`).forEach(line => { let trimmedLine = line.substring(line.indexOf("#")).trim(); if (trimmedLine.startsWith(TEMPLATE_PREFIX) || trimmedLine.startsWith(GOAL_PREFIX))
                        try {
                            let parsedTemplate = (0, _goal_template_pegjs__WEBPACK_IMPORTED_MODULE_1__.parse)(trimmedLine);
                            if ("schedule" === parsedTemplate.type && void 0 !== parsedTemplate.adjustment && (parsedTemplate.adjustment <= -100 || parsedTemplate.adjustment > 1e3))
                                throw Error(`Invalid adjustment percentage (${parsedTemplate.adjustment}%). Must be between -100% and 1000%`);
                            parsedTemplates.push(parsedTemplate);
                        }
                        catch (e) {
                            parsedTemplates.push({ type: "error", directive: "error", line, error: e.message });
                        } }), parsedTemplates.length && templatesForCategory.push({ id, name, templates: parsedTemplates });
                }), templatesForCategory;
            }
        }, "./packages/loot-core/src/server/budget/util.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { flatten2: () => flatten2, number: () => _spreadsheet_globals__WEBPACK_IMPORTED_MODULE_1__.number, sumAmounts: () => sumAmounts, unflatten2: () => unflatten2 });
            var _shared_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _spreadsheet_globals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/globals.ts");
            function sumAmounts(...amounts) { return (0, _shared_util__WEBPACK_IMPORTED_MODULE_0__.safeNumber)(amounts.reduce((total, amount) => total + (0, _spreadsheet_globals__WEBPACK_IMPORTED_MODULE_1__.number)(amount), 0)); }
            function flatten2(arr) { return Array.prototype.concat.apply([], arr); }
            function unflatten2(arr) { let res = []; for (let i = 0; i < arr.length; i += 2)
                res.push([arr[i], arr[i + 1]]); return res; }
        }, "./packages/loot-core/src/server/budgetfiles/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _mocks_budget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/mocks/budget.ts"), _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_log__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/platform/server/log/index.ts"), _shared_platform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/shared/platform.electron.ts"), _app__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _budget_base__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _cloud_storage__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/cloud-storage.ts"), _db__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _db_mappings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/db/mappings.ts"), _importers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/importers/index.ts"), _main_app__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/main-app.ts"), _mutators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _prefs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _server_config__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _sheet__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _sync__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _sync_migrate__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./packages/loot-core/src/server/sync/migrate.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _update__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("./packages/loot-core/src/server/update.ts"), _util_budget_name__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__("./packages/loot-core/src/server/util/budget-name.ts"), _backups__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__("./packages/loot-core/src/server/budgetfiles/backups.ts");
            let DEMO_BUDGET_ID = "_demo-budget", app = (0, _app__WEBPACK_IMPORTED_MODULE_8__.createApp)();
            async function handleValidateBudgetName({ name }) { return (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.validateBudgetName)(name); }
            async function handleUniqueBudgetName({ name }) { return (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.uniqueBudgetName)(name); }
            async function getBudgets() { let paths = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.listDir(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getDocumentDir()); return (await Promise.all(paths.map(async (name) => { let prefsPath = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getDocumentDir(), name, "metadata.json"); if (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(prefsPath)) {
                let prefs;
                try {
                    prefs = JSON.parse(await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.readFile(prefsPath));
                }
                catch (e) {
                    return console.log("Error parsing metadata:", e.stack), null;
                }
                if (name !== DEMO_BUDGET_ID)
                    return { id: name, ...prefs.cloudFileId ? { cloudFileId: prefs.cloudFileId } : {}, ...prefs.encryptKeyId ? { encryptKeyId: prefs.encryptKeyId } : {}, ...prefs.groupId ? { groupId: prefs.groupId } : {}, ...prefs.owner ? { owner: prefs.owner } : {}, name: prefs.budgetName || "(no name)" };
            } return null; }))).filter(Boolean); }
            async function getRemoteFiles() { return _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.listRemoteFiles(); }
            async function getUserFileInfo(fileId) { return _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.getRemoteFile(fileId); }
            async function resetBudgetCache() { await _sheet__WEBPACK_IMPORTED_MODULE_18__.loadUserBudgets(_db__WEBPACK_IMPORTED_MODULE_11__), _sheet__WEBPACK_IMPORTED_MODULE_18__.get().recomputeAll(), await _sheet__WEBPACK_IMPORTED_MODULE_18__.waitOnSpreadsheet(); }
            async function uploadBudget({ id } = {}) { if (id) {
                if (_prefs__WEBPACK_IMPORTED_MODULE_16__.getPrefs())
                    throw Error("upload-budget: id given but prefs already loaded");
                await _prefs__WEBPACK_IMPORTED_MODULE_16__.loadPrefs(id);
            } try {
                await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.upload();
            }
            catch (e) {
                if (console.log(e), "FileUploadError" === e.type)
                    return { error: e };
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(e), { error: { reason: "internal" } };
            }
            finally {
                id && _prefs__WEBPACK_IMPORTED_MODULE_16__.unloadPrefs();
            } return {}; }
            async function downloadBudget({ cloudFileId }) { let result; try {
                result = await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.download(cloudFileId);
            }
            catch (e) {
                if ("FileDownloadError" !== e.type)
                    return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(e), { error: { reason: "internal" } };
                if ("file-exists" === e.reason && e.meta.id) {
                    await _prefs__WEBPACK_IMPORTED_MODULE_16__.loadPrefs(e.meta.id);
                    let name = _prefs__WEBPACK_IMPORTED_MODULE_16__.getPrefs().budgetName;
                    _prefs__WEBPACK_IMPORTED_MODULE_16__.unloadPrefs(), e.meta = { ...e.meta, name };
                }
                return { error: e };
            } let id = result.id; return (await loadBudget({ id }), (result = await syncBudget()).error) ? result : { id }; }
            async function syncBudget() { return (0, _sync__WEBPACK_IMPORTED_MODULE_19__.setSyncingMode)("enabled"), await (0, _sync__WEBPACK_IMPORTED_MODULE_19__.initialFullSync)(); }
            async function loadBudget({ id }) { let currentPrefs = _prefs__WEBPACK_IMPORTED_MODULE_16__.getPrefs(); if (currentPrefs)
                if (currentPrefs.id === id)
                    return {};
                else
                    await closeBudget(); return await _loadBudget(id); }
            async function createDemoBudget() { return await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__.setItem("readOnly", ""), createBudget({ budgetName: "Demo Budget", testMode: !0, testBudgetId: DEMO_BUDGET_ID }); }
            async function closeBudget() { (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureBreadcrumb)({ message: "Closing budget" }), await _sheet__WEBPACK_IMPORTED_MODULE_18__.waitOnSpreadsheet(), _sheet__WEBPACK_IMPORTED_MODULE_18__.unloadSpreadsheet(), (0, _sync__WEBPACK_IMPORTED_MODULE_19__.clearFullSyncTimeout)(), await app.stopServices(), await _db__WEBPACK_IMPORTED_MODULE_11__.closeDatabase(); try {
                await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__.setItem("lastBudget", "");
            }
            catch (e) { } return _prefs__WEBPACK_IMPORTED_MODULE_16__.unloadPrefs(), await (0, _backups__WEBPACK_IMPORTED_MODULE_25__.stopBackupService)(), "ok"; }
            async function deleteBudget({ id, cloudFileId }) { if (cloudFileId && await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.removeFile(cloudFileId).catch(() => { }), id)
                try {
                    await _db__WEBPACK_IMPORTED_MODULE_11__.openDatabase(id), await _db__WEBPACK_IMPORTED_MODULE_11__.closeDatabase();
                    let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id);
                    await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.removeDirRecursively(budgetDir);
                }
                catch (e) {
                    return "fail";
                } return "ok"; }
            async function duplicateBudget({ id, newName, cloudSync, open }) { let { valid, message } = await (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.validateBudgetName)(newName); if (!valid)
                throw Error(message); let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id), newId = await (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.idFromBudgetName)(newName), metadata = JSON.parse(await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.readFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(budgetDir, "metadata.json"))); metadata.id = newId, metadata.budgetName = newName, ["cloudFileId", "groupId", "lastUploaded", "encryptKeyId", "lastSyncedTimestamp"].forEach(item => { metadata[item] && delete metadata[item]; }); try {
                let newBudgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(newId);
                await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.mkdir(newBudgetDir), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.writeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(newBudgetDir, "metadata.json"), JSON.stringify(metadata)), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(budgetDir, "db.sqlite"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(newBudgetDir, "db.sqlite"));
            }
            catch (error) {
                try {
                    let newBudgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(newId);
                    await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(newBudgetDir) && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.removeDirRecursively(newBudgetDir);
                }
                catch { }
                throw Error(`Failed to duplicate budget file: ${error.message}`);
            } let { error } = await _loadBudget(newId); if (error)
                return console.log("Error duplicating budget: " + error), error; if (cloudSync)
                try {
                    await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.upload();
                }
                catch (error) {
                    console.warn("Failed to sync duplicated budget to cloud:", error);
                } return await closeBudget(), "original" === open && await _loadBudget(id), "copy" === open && await _loadBudget(newId), newId; }
            async function createBudget({ budgetName, avoidUpload, testMode, testBudgetId } = {}) { let id; testMode ? (budgetName = budgetName || "Test Budget", id = testBudgetId || "_test-budget", await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id)) && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.removeDirRecursively(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id))) : (budgetName || (budgetName = await (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.uniqueBudgetName)()), id = await (0, _util_budget_name__WEBPACK_IMPORTED_MODULE_24__.idFromBudgetName)(budgetName)); let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id); await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.mkdir(budgetDir), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.bundledDatabasePath, _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(budgetDir, "db.sqlite")), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.writeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.join(budgetDir, "metadata.json"), JSON.stringify(_prefs__WEBPACK_IMPORTED_MODULE_16__.getDefaultPrefs(id, budgetName))); let { error } = await _loadBudget(id); if (error)
                return console.log("Error creating budget: " + error), { error }; if (!avoidUpload && !testMode)
                try {
                    await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.upload();
                }
                catch (e) { } return testMode && await (0, _mocks_budget__WEBPACK_IMPORTED_MODULE_1__.createTestBudget)(_main_app__WEBPACK_IMPORTED_MODULE_14__.app.handlers), {}; }
            async function importBudget({ filepath, type }) { try {
                if (!await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(filepath))
                    throw Error(`File not found at the provided path: ${filepath}`);
                let buffer = Buffer.from(await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.readFile(filepath, "binary"));
                return await (0, _importers__WEBPACK_IMPORTED_MODULE_13__.handleBudgetImport)(type, filepath, buffer) || {};
            }
            catch (err) {
                return err.message = "Error importing budget: " + err.message, (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(err), { error: "internal-error" };
            } }
            async function exportBudget() { try {
                return { data: await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.exportBuffer() };
            }
            catch (err) {
                return err.message = "Error exporting budget: " + err.message, (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(err), { error: "internal-error" };
            } }
            function onSheetChange({ names }) { let nodes = names.map(name => { let node = _sheet__WEBPACK_IMPORTED_MODULE_18__.get()._getNode(name); return { name: node.name, value: node.value }; }); _platform_server_connection__WEBPACK_IMPORTED_MODULE_4__.send("cells-changed", nodes); }
            async function _loadBudget(id) { let dir; try {
                dir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id);
            }
            catch (e) {
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(Error("`getBudgetDir` failed in `loadBudget`: " + e.message)), { error: "budget-not-found" };
            } if ((0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureBreadcrumb)({ message: "Loading budget " + dir }), !await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(dir))
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(Error("budget directory does not exist")), { error: "budget-not-found" }; try {
                await _prefs__WEBPACK_IMPORTED_MODULE_16__.loadPrefs(id), await _db__WEBPACK_IMPORTED_MODULE_11__.openDatabase(id);
            }
            catch (e) {
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureBreadcrumb)({ message: "Error loading budget " + id }), (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(e), await closeBudget(), { error: "opening-budget" };
            } if (!_prefs__WEBPACK_IMPORTED_MODULE_16__.getPrefs().userId) {
                let userId = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__.getItem("user-token");
                await _prefs__WEBPACK_IMPORTED_MODULE_16__.savePrefs({ userId });
            } try {
                await (0, _update__WEBPACK_IMPORTED_MODULE_23__.updateVersion)();
            }
            catch (e) {
                let result;
                return console.warn("Error updating", e), e.message.includes("out-of-sync-migrations") ? result = { error: "out-of-sync-migrations" } : e.message.includes("out-of-sync-data") ? result = { error: "out-of-sync-data" } : ((0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(e), _platform_server_log__WEBPACK_IMPORTED_MODULE_6__.logger.info("Error updating budget " + id, e), console.log("Error updating budget", e), result = { error: "loading-budget" }), await closeBudget(), result;
            } await _db__WEBPACK_IMPORTED_MODULE_11__.loadClock(), _prefs__WEBPACK_IMPORTED_MODULE_16__.getPrefs().resetClock && (_actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock().timestamp.setNode(_actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.makeClientId()), await _db__WEBPACK_IMPORTED_MODULE_11__.runQuery("INSERT OR REPLACE INTO messages_clock (id, clock) VALUES (1, ?)", [_actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.serializeClock(_actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock())]), await _prefs__WEBPACK_IMPORTED_MODULE_16__.savePrefs({ resetClock: !1 })), _shared_platform__WEBPACK_IMPORTED_MODULE_7__.isBrowser || await (0, _backups__WEBPACK_IMPORTED_MODULE_25__.startBackupService)(id); try {
                await _sheet__WEBPACK_IMPORTED_MODULE_18__.loadSpreadsheet(_db__WEBPACK_IMPORTED_MODULE_11__, onSheetChange);
            }
            catch (e) {
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_2__.captureException)(e), await closeBudget(), { error: "opening-budget" };
            } let { value: budgetType = "envelope" } = await _db__WEBPACK_IMPORTED_MODULE_11__.first("SELECT value from preferences WHERE id = ?", ["budgetType"]) ?? {}; return _sheet__WEBPACK_IMPORTED_MODULE_18__.get().meta().budgetType = budgetType, await _budget_base__WEBPACK_IMPORTED_MODULE_9__.createAllBudgets(), await _db_mappings__WEBPACK_IMPORTED_MODULE_12__.loadMappings(), await _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_21__.loadRules(), await _sync_migrate__WEBPACK_IMPORTED_MODULE_20__.listen(), await _main_app__WEBPACK_IMPORTED_MODULE_14__.app.startServices(), (0, _undo__WEBPACK_IMPORTED_MODULE_22__.clearUndo)(), id === DEMO_BUDGET_ID ? (0, _sync__WEBPACK_IMPORTED_MODULE_19__.setSyncingMode)("disabled") : ((0, _server_config__WEBPACK_IMPORTED_MODULE_17__.getServer)() ? (0, _sync__WEBPACK_IMPORTED_MODULE_19__.setSyncingMode)("enabled") : (0, _sync__WEBPACK_IMPORTED_MODULE_19__.setSyncingMode)("disabled"), await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__.setItem("lastBudget", id), await _cloud_storage__WEBPACK_IMPORTED_MODULE_10__.possiblyUpload()), app.events.emit("load-budget", { id }), {}; }
            async function uploadFileWeb({ filename, contents }) { return _shared_platform__WEBPACK_IMPORTED_MODULE_7__.isBrowser ? (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.writeFile("/uploads/" + filename, contents), {}) : null; }
            async function getBackups({ id }) { return (0, _backups__WEBPACK_IMPORTED_MODULE_25__.getAvailableBackups)(id); }
            async function loadBackup({ id, backupId }) { await (0, _backups__WEBPACK_IMPORTED_MODULE_25__.loadBackup)(id, backupId); }
            async function makeBackup({ id }) { await (0, _backups__WEBPACK_IMPORTED_MODULE_25__.makeBackup)(id); }
            async function getLastOpenedBackup() { let id = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_3__.getItem("lastBudget"); if (id && "" !== id) {
                let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.getBudgetDir(id);
                if (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_5__.exists(budgetDir))
                    return id;
            } return null; }
            app.method("validate-budget-name", handleValidateBudgetName), app.method("unique-budget-name", handleUniqueBudgetName), app.method("get-budgets", getBudgets), app.method("get-remote-files", getRemoteFiles), app.method("get-user-file-info", getUserFileInfo), app.method("reset-budget-cache", (0, _mutators__WEBPACK_IMPORTED_MODULE_15__.mutator)(resetBudgetCache)), app.method("upload-budget", uploadBudget), app.method("download-budget", downloadBudget), app.method("sync-budget", syncBudget), app.method("load-budget", loadBudget), app.method("create-demo-budget", createDemoBudget), app.method("close-budget", closeBudget), app.method("delete-budget", deleteBudget), app.method("duplicate-budget", duplicateBudget), app.method("create-budget", createBudget), app.method("import-budget", importBudget), app.method("export-budget", exportBudget), app.method("upload-file-web", uploadFileWeb), app.method("backups-get", getBackups), app.method("backup-load", loadBackup), app.method("backup-make", makeBackup), app.method("get-last-opened-backup", getLastOpenedBackup);
        }, "./packages/loot-core/src/server/budgetfiles/backups.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getAvailableBackups: () => getAvailableBackups, loadBackup: () => loadBackup, makeBackup: () => makeBackup, startBackupService: () => startBackupService, stopBackupService: () => stopBackupService, updateBackups: () => updateBackups });
            var date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/format.js"), uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _cloud_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/cloud-storage.ts"), _prefs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts");
            let LATEST_BACKUP_FILENAME = "db.latest.sqlite", serviceInterval = null;
            async function getBackups(id) { let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id), backupDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups"), paths = []; await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(backupDir) && (paths = (paths = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.listDir(backupDir)).filter(file => file.match(/\.sqlite$/))); let backups = await Promise.all(paths.map(async (path) => { let mtime = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getModifiedTime(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(backupDir, path)); return { id: path, date: new Date(mtime) }; })); return backups.sort((b1, b2) => b1.date < b2.date ? 1 : b1.date > b2.date ? -1 : 0), backups; }
            async function getLatestBackup(id) { let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id); return await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME)) ? { id: LATEST_BACKUP_FILENAME, date: null, isLatest: !0 } : null; }
            async function getAvailableBackups(id) { let backups = await getBackups(id), latestBackup = await getLatestBackup(id); return latestBackup && backups.unshift(latestBackup), backups.map(backup => ({ ...backup, date: backup.date ? date_fns__WEBPACK_IMPORTED_MODULE_6__.format(backup.date, "yyyy-MM-dd H:mm") : null })); }
            async function updateBackups(backups) { let byDay = backups.reduce((groups, backup) => { let day = date_fns__WEBPACK_IMPORTED_MODULE_6__.format(backup.date, "yyyy-MM-dd"); return groups[day] = groups[day] || [], groups[day].push(backup), groups; }, {}), removed = []; for (let day of Object.keys(byDay)) {
                let dayBackups = byDay[day], isToday = day === _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay();
                for (let backup of dayBackups.slice(isToday ? 3 : 1))
                    removed.push(backup.id);
            } let currentBackups = backups.filter(backup => !removed.includes(backup.id)); return removed.concat(currentBackups.slice(10).map(backup => backup.id)); }
            async function makeBackup(id) { let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id); await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME)) && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.removeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id), LATEST_BACKUP_FILENAME)); let backupId = `${(0, uuid__WEBPACK_IMPORTED_MODULE_7__.default)()}.sqlite`, backupPath = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups", backupId); await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups")) || await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.mkdir(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups")), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "db.sqlite"), backupPath); let db = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_2__.openDatabase(backupPath); for (let id1 of (await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_2__.runQuery(db, "DELETE FROM messages_crdt"), await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_2__.runQuery(db, "DELETE FROM messages_clock"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_2__.closeDatabase(db), await updateBackups(await getBackups(id))))
                await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.removeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups", id1)); _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__.send("backups-updated", await getAvailableBackups(id)); }
            async function loadBackup(id, backupId) { let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id); if (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME)) || (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "db.sqlite"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME)), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "metadata.json"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "metadata.latest.json")), stopBackupService(), startBackupService(id), await _prefs__WEBPACK_IMPORTED_MODULE_5__.loadPrefs(id)), backupId === LATEST_BACKUP_FILENAME) {
                console.log("Reverting backup"), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "db.sqlite")), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "metadata.latest.json"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "metadata.json")), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.removeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, LATEST_BACKUP_FILENAME)), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.removeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "metadata.latest.json"));
                try {
                    await _cloud_storage__WEBPACK_IMPORTED_MODULE_4__.upload();
                }
                catch (e) { }
                _prefs__WEBPACK_IMPORTED_MODULE_5__.unloadPrefs();
            }
            else {
                console.log("Loading backup", backupId), await _prefs__WEBPACK_IMPORTED_MODULE_5__.loadPrefs(id), await _prefs__WEBPACK_IMPORTED_MODULE_5__.savePrefs({ groupId: null, lastSyncedTimestamp: null, lastUploaded: null });
                try {
                    await _cloud_storage__WEBPACK_IMPORTED_MODULE_4__.upload();
                }
                catch (e) { }
                _prefs__WEBPACK_IMPORTED_MODULE_5__.unloadPrefs(), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.copyFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "backups", backupId), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(budgetDir, "db.sqlite"));
            } }
            function startBackupService(id) { serviceInterval && clearInterval(serviceInterval), serviceInterval = setInterval(async () => { console.log("Making backup"), await makeBackup(id); }, 9e5); }
            function stopBackupService() { clearInterval(serviceInterval), serviceInterval = null; }
        }, "./packages/loot-core/src/server/cloud-storage.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { checkKey: () => checkKey, download: () => download, exportBuffer: () => exportBuffer, getRemoteFile: () => getRemoteFile, importBuffer: () => importBuffer, listRemoteFiles: () => listRemoteFiles, possiblyUpload: () => possiblyUpload, removeFile: () => removeFile, resetSyncState: () => resetSyncState, upload: () => upload });
            var adm_zip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/adm-zip/adm-zip.js"), adm_zip__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(adm_zip__WEBPACK_IMPORTED_MODULE_0__), uuid__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/fetch/index.api.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _encryption__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _mutators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _post__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _prefs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _server_config__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts");
            async function checkHTTPStatus(res) { if (200 === res.status)
                return res; if (403 === res.status)
                try {
                    let text = await res.text(), data1 = JSON.parse(text)?.data;
                    if (data1?.reason === "token-expired")
                        throw await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.removeItem("user-token"), new _errors__WEBPACK_IMPORTED_MODULE_7__.HTTPError(403, "token-expired");
                }
                catch (e) {
                    if (e instanceof _errors__WEBPACK_IMPORTED_MODULE_7__.HTTPError)
                        throw e;
                } return res.text().then(str => { throw new _errors__WEBPACK_IMPORTED_MODULE_7__.HTTPError(res.status, str); }); }
            async function fetchJSON(...args) { let res = await (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch)(...args); return (res = await checkHTTPStatus(res)).json(); }
            async function checkKey() { let res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"), { cloudFileId, encryptKeyId } = _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs(); try {
                res = await (0, _post__WEBPACK_IMPORTED_MODULE_9__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/user-get-key", { token: userToken, fileId: cloudFileId });
            }
            catch (e) {
                return console.log(e), { valid: !1, error: { reason: "network" } };
            } return { valid: res.id == encryptKeyId && (null == encryptKeyId || _encryption__WEBPACK_IMPORTED_MODULE_6__.hasKey(encryptKeyId)) }; }
            async function resetSyncState(newKeyState) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"), { cloudFileId } = _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs(); try {
                await (0, _post__WEBPACK_IMPORTED_MODULE_9__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/reset-user-file", { token: userToken, fileId: cloudFileId });
            }
            catch (e) {
                if (e instanceof _errors__WEBPACK_IMPORTED_MODULE_7__.PostError)
                    return { error: { reason: "unauthorized" === e.reason ? "unauthorized" : "network" } };
                return { error: { reason: "internal" } };
            } if (newKeyState)
                try {
                    await (0, _post__WEBPACK_IMPORTED_MODULE_9__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/user-create-key", { token: userToken, fileId: cloudFileId, keyId: newKeyState.key.getId(), keySalt: newKeyState.salt, testContent: newKeyState.testContent });
                }
                catch (e) {
                    if (e instanceof _errors__WEBPACK_IMPORTED_MODULE_7__.PostError)
                        return { error: { reason: "network" } };
                    return { error: { reason: "internal" } };
                } return {}; }
            async function exportBuffer() {
                let { id, budgetName } = _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs();
                if (!budgetName)
                    return null;
                let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.getBudgetDir(id), zipped = new (adm_zip__WEBPACK_IMPORTED_MODULE_0___default());
                return await (0, _mutators__WEBPACK_IMPORTED_MODULE_8__.runMutator)(async () => {
                    let rawDbContent = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.readFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "db.sqlite"), "binary"), memDb = await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_4__.openDatabase(rawDbContent);
                    _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_4__.execQuery(memDb, `
        DELETE FROM kvcache;
        DELETE FROM kvcache_key;
      `);
                    let dbContent = await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_4__.exportDatabase(memDb);
                    _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_4__.closeDatabase(memDb);
                    let meta = JSON.parse(await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.readFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "metadata.json")));
                    meta.resetClock = !0;
                    let metaContent = Buffer.from(JSON.stringify(meta), "utf8");
                    zipped.addFile("db.sqlite", Buffer.from(dbContent)), zipped.addFile("metadata.json", metaContent);
                }), Buffer.from(zipped.toBuffer());
            }
            async function importBuffer(fileData, buffer) { let zipped, entries, meta; try {
                entries = (zipped = new (adm_zip__WEBPACK_IMPORTED_MODULE_0___default())(buffer)).getEntries();
            }
            catch (err) {
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("not-zip-file");
            } let dbEntry = entries.find(e => e.entryName.includes("db.sqlite")), metaEntry = entries.find(e => e.entryName.includes("metadata.json")); if (!dbEntry || !metaEntry)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("invalid-zip-file"); let dbContent = zipped.readFile(dbEntry), metaContent = zipped.readFile(metaEntry); try {
                meta = JSON.parse(metaContent.toString("utf8"));
            }
            catch (err) {
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("invalid-meta-file");
            } meta = { ...meta, cloudFileId: fileData.fileId, groupId: fileData.groupId, lastUploaded: _shared_months__WEBPACK_IMPORTED_MODULE_5__.currentDay(), encryptKeyId: fileData.encryptMeta ? fileData.encryptMeta.keyId : null }; let budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.getBudgetDir(meta.id); if (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.exists(budgetDir)) {
                let dbFile = _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "db.sqlite"), metaFile = _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "metadata.json");
                await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.exists(dbFile) && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.removeFile(dbFile), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.exists(metaFile) && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.removeFile(metaFile);
            }
            else
                await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.mkdir(budgetDir); return await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.writeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "db.sqlite"), dbContent), await _platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.writeFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_3__.join(budgetDir, "metadata.json"), JSON.stringify(meta)), { id: meta.id }; }
            async function upload() { let res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"); if (!userToken)
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileUploadError)("unauthorized"); let zipContent = await exportBuffer(); if (null == zipContent)
                return; let { id, groupId, budgetName, cloudFileId: originalCloudFileId, encryptKeyId } = _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs(), cloudFileId = originalCloudFileId, uploadContent = zipContent, uploadMeta = null; if (encryptKeyId) {
                let encrypted;
                try {
                    encrypted = await _encryption__WEBPACK_IMPORTED_MODULE_6__.encrypt(zipContent, encryptKeyId);
                }
                catch (e) {
                    throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileUploadError)("encrypt-failure", { isMissingKey: "missing-key" === e.message });
                }
                uploadContent = encrypted.value, uploadMeta = encrypted.meta;
            } cloudFileId || (cloudFileId = (0, uuid__WEBPACK_IMPORTED_MODULE_12__.default)()); try {
                res = await fetchJSON((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/upload-user-file", { method: "POST", headers: { "Content-Length": uploadContent.length, "Content-Type": "application/encrypted-file", "X-ACTUAL-TOKEN": userToken, "X-ACTUAL-FILE-ID": cloudFileId, "X-ACTUAL-NAME": encodeURIComponent(budgetName), "X-ACTUAL-FORMAT": 2, ...uploadMeta ? { "X-ACTUAL-ENCRYPT-META": JSON.stringify(uploadMeta) } : null, ...groupId ? { "X-ACTUAL-GROUP-ID": groupId } : null }, body: uploadContent });
            }
            catch (err) {
                if (console.log("Upload failure", err), err instanceof _errors__WEBPACK_IMPORTED_MODULE_7__.PostError)
                    throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileUploadError)("unauthorized" === err.reason ? "unauthorized" : err.reason || "network");
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileUploadError)("internal");
            } if ("ok" === res.status)
                _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs() && _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs().id === id && await _prefs__WEBPACK_IMPORTED_MODULE_10__.savePrefs({ lastUploaded: _shared_months__WEBPACK_IMPORTED_MODULE_5__.currentDay(), cloudFileId, groupId: res.groupId });
            else
                throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileUploadError)("internal"); }
            async function possiblyUpload() { let { cloudFileId, groupId, lastUploaded } = _prefs__WEBPACK_IMPORTED_MODULE_10__.getPrefs(), threshold = lastUploaded && _shared_months__WEBPACK_IMPORTED_MODULE_5__.addDays(lastUploaded, 7), currentDay = _shared_months__WEBPACK_IMPORTED_MODULE_5__.currentDay(); (!lastUploaded || !(currentDay < threshold)) && cloudFileId && groupId && upload().catch(() => { }); }
            async function removeFile(fileId) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"); await (0, _post__WEBPACK_IMPORTED_MODULE_9__.post)((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/delete-user-file", { token: userToken, fileId }); }
            async function listRemoteFiles() { let res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"); if (!userToken)
                return null; try {
                res = await fetchJSON((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/list-user-files", { headers: { "X-ACTUAL-TOKEN": userToken } });
            }
            catch (e) {
                return console.log("Unexpected error fetching file list from server", e), null;
            } return "error" === res.status ? (console.log("Error fetching file list from server", res), null) : res.data.map(file => ({ ...file, hasKey: _encryption__WEBPACK_IMPORTED_MODULE_6__.hasKey(file.encryptKeyId) })).filter(Boolean); }
            async function getRemoteFile(fileId) { let res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"); if (!userToken)
                return null; try {
                res = await fetchJSON((0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER + "/get-user-file-info", { headers: { "X-ACTUAL-TOKEN": userToken, "X-ACTUAL-FILE-ID": fileId } });
            }
            catch (e) {
                return console.log("Unexpected error fetching file from server", e), null;
            } return "error" === res.status ? (console.log("Error fetching file from server", res), null) : { ...res.data, hasKey: _encryption__WEBPACK_IMPORTED_MODULE_6__.hasKey(res.data.encryptKeyId) }; }
            async function download(cloudFileId) { let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("user-token"), syncServer = (0, _server_config__WEBPACK_IMPORTED_MODULE_11__.getServer)().SYNC_SERVER, userFileFetch = (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch)(`${syncServer}/download-user-file`, { headers: { "X-ACTUAL-TOKEN": userToken, "X-ACTUAL-FILE-ID": cloudFileId } }).then(checkHTTPStatus).then(res => res.arrayBuffer ? res.arrayBuffer().then(ab => Buffer.from(ab)) : res.buffer()).catch(err => { throw console.log("Download failure", err), (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("download-failure"); }), userFileInfoFetch = fetchJSON(`${syncServer}/get-user-file-info`, { headers: { "X-ACTUAL-TOKEN": userToken, "X-ACTUAL-FILE-ID": cloudFileId } }).catch(err => { throw console.log("Error fetching file info", err), (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("internal", { fileId: cloudFileId }); }), [userFileInfoRes, userFileRes] = await Promise.all([userFileInfoFetch, userFileFetch]); if ("ok" !== userFileInfoRes.status)
                throw console.log("Could not download file from the server. Are you sure you have the right file ID?", userFileInfoRes), (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("internal", { fileId: cloudFileId }); let fileData = userFileInfoRes.data, buffer = userFileRes; if (fileData.encryptMeta)
                try {
                    buffer = await _encryption__WEBPACK_IMPORTED_MODULE_6__.decrypt(buffer, fileData.encryptMeta);
                }
                catch (e) {
                    throw (0, _errors__WEBPACK_IMPORTED_MODULE_7__.FileDownloadError)("decrypt-failure", { isMissingKey: "missing-key" === e.message });
                } return importBuffer(fileData, buffer); }
        }, "./packages/loot-core/src/server/dashboard/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var lodash_isMatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/lodash/isMatch.js"), lodash_isMatch__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(lodash_isMatch__WEBPACK_IMPORTED_MODULE_0__), _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _shared_dashboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/dashboard.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _app__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _aql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _models__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _reports_app__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/reports/app.ts"), _sync__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _undo__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            function isExportedCustomReportWidget(widget) { return "custom-report" === widget.type; }
            let exportModel = { validate(dashboard) { if ((0, _models__WEBPACK_IMPORTED_MODULE_9__.requiredFields)("Dashboard", dashboard, ["version", "widgets"]), !Array.isArray(dashboard.widgets))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError("Invalid dashboard.widgets data type: it must be an array of widgets."); dashboard.widgets.forEach((widget, idx) => { if ((0, _models__WEBPACK_IMPORTED_MODULE_9__.requiredFields)(`Dashboard widget #${idx}`, widget, ["type", "x", "y", "width", "height", ...isExportedCustomReportWidget(widget) ? ["meta"] : []]), !Number.isInteger(widget.x))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError(`Invalid widget.${idx}.x data-type for value ${widget.x}.`); if (!Number.isInteger(widget.y))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError(`Invalid widget.${idx}.y data-type for value ${widget.y}.`); if (!Number.isInteger(widget.width))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError(`Invalid widget.${idx}.width data-type for value ${widget.width}.`); if (!Number.isInteger(widget.height))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError(`Invalid widget.${idx}.height data-type for value ${widget.height}.`); if (!["net-worth-card", "cash-flow-card", "spending-card", "custom-report", "markdown-card", "summary-card", "calendar-card"].includes(widget.type))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError(`Invalid widget.${idx}.type value ${widget.type}.`); isExportedCustomReportWidget(widget) && _reports_app__WEBPACK_IMPORTED_MODULE_11__.reportModel.validate(widget.meta); }); } };
            async function updateDashboard(widgets) { let { data: dbWidgets } = await (0, _aql__WEBPACK_IMPORTED_MODULE_6__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("dashboard").filter({ id: { $oneof: widgets.map(({ id }) => id) } }).select("*")), dbWidgetMap = new Map(dbWidgets.map(widget => [widget.id, widget])); await Promise.all(widgets.filter(widget => !lodash_isMatch__WEBPACK_IMPORTED_MODULE_0___default()(dbWidgetMap.get(widget.id) ?? {}, widget)).map(widget => _db__WEBPACK_IMPORTED_MODULE_7__.update("dashboard", widget))); }
            async function updateDashboardWidget(widget) { await _db__WEBPACK_IMPORTED_MODULE_7__.updateWithSchema("dashboard", widget); }
            async function resetDashboard() { await (0, _sync__WEBPACK_IMPORTED_MODULE_12__.batchMessages)(async () => { await Promise.all([_db__WEBPACK_IMPORTED_MODULE_7__.deleteAll("dashboard"), ..._shared_dashboard__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_DASHBOARD_STATE.map(widget => _db__WEBPACK_IMPORTED_MODULE_7__.insertWithSchema("dashboard", widget))]); }); }
            async function addDashboardWidget(widget) { if (!("x" in widget) && !("y" in widget)) {
                let data1 = await _db__WEBPACK_IMPORTED_MODULE_7__.first("SELECT x, y, width, height FROM dashboard WHERE tombstone = 0 ORDER BY y DESC, x DESC");
                if (data1) {
                    let xBoundaryCheck = data1.x + data1.width + widget.width;
                    widget.x = xBoundaryCheck > 12 ? 0 : data1.x + data1.width, widget.y = data1.y + (xBoundaryCheck > 12 ? data1.height : 0);
                }
                else
                    widget.x = 0, widget.y = 0;
            } await _db__WEBPACK_IMPORTED_MODULE_7__.insertWithSchema("dashboard", widget); }
            async function removeDashboardWidget(widgetId) { await _db__WEBPACK_IMPORTED_MODULE_7__.delete_("dashboard", widgetId); }
            async function importDashboard({ filepath }) { try {
                if (!await _platform_server_fs__WEBPACK_IMPORTED_MODULE_2__.exists(filepath))
                    throw Error(`File not found at the provided path: ${filepath}`);
                let content = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_2__.readFile(filepath), parsedContent = JSON.parse(content);
                exportModel.validate(parsedContent);
                let customReportIds = await _db__WEBPACK_IMPORTED_MODULE_7__.all("SELECT id from custom_reports"), customReportIdSet = new Set(customReportIds.map(({ id }) => id));
                return await (0, _sync__WEBPACK_IMPORTED_MODULE_12__.batchMessages)(async () => { await Promise.all([_db__WEBPACK_IMPORTED_MODULE_7__.deleteAll("dashboard"), ...parsedContent.widgets.map(widget => _db__WEBPACK_IMPORTED_MODULE_7__.insertWithSchema("dashboard", { type: widget.type, width: widget.width, height: widget.height, x: widget.x, y: widget.y, meta: isExportedCustomReportWidget(widget) ? { id: widget.meta.id } : widget.meta })), ...parsedContent.widgets.filter(isExportedCustomReportWidget).filter(({ meta }) => !customReportIdSet.has(meta.id)).map(({ meta }) => _db__WEBPACK_IMPORTED_MODULE_7__.insertWithSchema("custom_reports", _reports_app__WEBPACK_IMPORTED_MODULE_11__.reportModel.fromJS(meta))), ...parsedContent.widgets.filter(isExportedCustomReportWidget).filter(({ meta }) => customReportIdSet.has(meta.id)).map(({ meta }) => _db__WEBPACK_IMPORTED_MODULE_7__.updateWithSchema("custom_reports", { ...Object.fromEntries(Object.entries(_reports_app__WEBPACK_IMPORTED_MODULE_11__.reportModel.fromJS(meta)).map(([key, value]) => [key, value ?? null])), tombstone: !1 }))]); }), { status: "ok" };
            }
            catch (err) {
                if (err instanceof Error && (err.message = "Error importing file: " + err.message, (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureException)(err)), err instanceof SyntaxError)
                    return { error: "json-parse-error" };
                if (err instanceof _errors__WEBPACK_IMPORTED_MODULE_8__.ValidationError)
                    return { error: "validation-error", message: err.message };
                return { error: "internal-error" };
            } }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_5__.createApp)();
            app.method("dashboard-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(updateDashboard))), app.method("dashboard-update-widget", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(updateDashboardWidget))), app.method("dashboard-reset", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(resetDashboard))), app.method("dashboard-add-widget", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(addDashboardWidget))), app.method("dashboard-remove-widget", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(removeDashboardWidget))), app.method("dashboard-import", (0, _mutators__WEBPACK_IMPORTED_MODULE_10__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_13__.undoable)(importDashboard)));
        }, "./packages/loot-core/src/server/db/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { all: () => all, asyncTransaction: () => asyncTransaction, cache: () => cache, closeDatabase: () => closeDatabase, deleteAccount: () => deleteAccount, deleteAll: () => deleteAll, deleteCategory: () => deleteCategory, deleteCategoryGroup: () => deleteCategoryGroup, deletePayee: () => deletePayee, deleteTag: () => deleteTag, deleteTransaction: () => deleteTransaction, deleteTransferPayee: () => deleteTransferPayee, delete_: () => delete_, execQuery: () => execQuery, findTags: () => findTags, first: () => first, firstSync: () => firstSync, fromDateRepr: () => _models__WEBPACK_IMPORTED_MODULE_7__.fromDateRepr, getAccount: () => getAccount, getAccounts: () => getAccounts, getAllTags: () => getAllTags, getCategories: () => getCategories, getCategoriesGrouped: () => getCategoriesGrouped, getCommonPayees: () => getCommonPayees, getDatabase: () => getDatabase, getDatabasePath: () => getDatabasePath, getOrphanedPayees: () => getOrphanedPayees, getPayee: () => getPayee, getPayeeByName: () => getPayeeByName, getPayees: () => getPayees, getTags: () => getTags, getTransaction: () => getTransaction, getTransactions: () => getTransactions, insert: () => insert, insertAccount: () => insertAccount, insertCategory: () => insertCategory, insertCategoryGroup: () => insertCategoryGroup, insertPayee: () => insertPayee, insertTag: () => insertTag, insertTransaction: () => insertTransaction, insertWithSchema: () => insertWithSchema, insertWithUUID: () => insertWithUUID, loadClock: () => loadClock, mergePayees: () => mergePayees, moveAccount: () => moveAccount, moveCategory: () => moveCategory, moveCategoryGroup: () => moveCategoryGroup, openDatabase: () => openDatabase, run: () => run, runQuery: () => runQuery, select: () => select, selectFirstWithSchema: () => selectFirstWithSchema, selectWithSchema: () => selectWithSchema, setDatabase: () => setDatabase, syncGetOrphanedPayees: () => syncGetOrphanedPayees, toDateRepr: () => _models__WEBPACK_IMPORTED_MODULE_7__.toDateRepr, transaction: () => transaction, update: () => update, updateAccount: () => updateAccount, updateCategory: () => updateCategory, updateCategoryGroup: () => updateCategoryGroup, updatePayee: () => updatePayee, updateTag: () => updateTag, updateTransaction: () => updateTransaction, updateWithSchema: () => updateWithSchema });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), lru_cache__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/lru-cache/dist/esm/index.js"), uuid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _sync__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _sort__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/db/sort.ts");
            __webpack_require__("./packages/loot-core/src/server/db/types/index.ts");
            let dbPath = null, db = null;
            function getDatabasePath() { return dbPath; }
            async function openDatabase(id) { db && await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.closeDatabase(db), dbPath = _platform_server_fs__WEBPACK_IMPORTED_MODULE_2__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_2__.getBudgetDir(id), "db.sqlite"), setDatabase(await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.openDatabase(dbPath)); }
            async function closeDatabase() { db && (await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.closeDatabase(db), setDatabase(null)); }
            function setDatabase(db_) { db = db_, _queryCache = new lru_cache__WEBPACK_IMPORTED_MODULE_1__.LRUCache({ max: 100 }); }
            function getDatabase() { return db; }
            async function loadClock() { let row = await first("SELECT * FROM messages_clock"); if (row) {
                let clock = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.deserializeClock)(row.clock);
                (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.setClock)(clock);
            }
            else {
                let timestamp = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp(0, 0, (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.makeClientId)()), clock = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.makeClock)(timestamp);
                (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.setClock)(clock), await runQuery("INSERT INTO messages_clock (id, clock) VALUES (?, ?)", [1, (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.serializeClock)(clock)]);
            } }
            function runQuery(sql, params, fetchAll) { return fetchAll ? _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.runQuery(db, sql, params, !0) : _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.runQuery(db, sql, params, !1); }
            function execQuery(sql) { _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.execQuery(db, sql); }
            let _queryCache = new lru_cache__WEBPACK_IMPORTED_MODULE_1__.LRUCache({ max: 100 });
            function cache(sql) { let cached = _queryCache.get(sql); if (cached)
                return cached; let prepared = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.prepare(db, sql); return _queryCache.set(sql, prepared), prepared; }
            function transaction(fn) { return _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.transaction(db, fn); }
            function asyncTransaction(fn) { return _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_3__.asyncTransaction(db, fn); }
            async function all(sql, params) { return runQuery(sql, params, !0); }
            async function first(sql, params) { let arr = await runQuery(sql, params, !0); return 0 === arr.length ? null : arr[0]; }
            function firstSync(sql, params) { let arr = runQuery(sql, params, !0); return 0 === arr.length ? null : arr[0]; }
            async function run(sql, params) { return runQuery(sql, params); }
            async function select(table, id) { return (await runQuery("SELECT * FROM " + table + " WHERE id = ?", [id], !0))[0]; }
            async function update(table, params) { let fields = Object.keys(params).filter(k => "id" !== k); if (null == params.id)
                throw Error("update: id is required"); await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.sendMessages)(fields.map(k => ({ dataset: table, row: params.id, column: k, value: params[k], timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() }))); }
            async function insertWithUUID(table, row) { return row.id || (row = { ...row, id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)() }), await insert(table, row), row.id; }
            async function insert(table, row) { let fields = Object.keys(row).filter(k => "id" !== k); if (null == row.id)
                throw Error("insert: id is required"); await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.sendMessages)(fields.map(k => ({ dataset: table, row: row.id, column: k, value: row[k], timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() }))); }
            async function delete_(table, id) { await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.sendMessages)([{ dataset: table, row: id, column: "tombstone", value: 1, timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() }]); }
            async function deleteAll(table) {
                let rows = await all(`
    SELECT id FROM ${table} WHERE tombstone = 0
  `);
                await Promise.all(rows.map(({ id }) => delete_(table, id)));
            }
            async function selectWithSchema(table, sql, params) { return (await runQuery(sql, params, !0)).map(row => (0, _aql__WEBPACK_IMPORTED_MODULE_6__.convertFromSelect)(_aql__WEBPACK_IMPORTED_MODULE_6__.schema, _aql__WEBPACK_IMPORTED_MODULE_6__.schemaConfig, table, row)).filter(Boolean); }
            async function selectFirstWithSchema(table, sql, params) { let rows = await selectWithSchema(table, sql, params); return rows.length > 0 ? rows[0] : null; }
            function insertWithSchema(table, row) { return row.id || (row = { ...row, id: (0, uuid__WEBPACK_IMPORTED_MODULE_11__.default)() }), insertWithUUID(table, (0, _aql__WEBPACK_IMPORTED_MODULE_6__.convertForInsert)(_aql__WEBPACK_IMPORTED_MODULE_6__.schema, _aql__WEBPACK_IMPORTED_MODULE_6__.schemaConfig, table, row)); }
            function updateWithSchema(table, fields) { return update(table, (0, _aql__WEBPACK_IMPORTED_MODULE_6__.convertForUpdate)(_aql__WEBPACK_IMPORTED_MODULE_6__.schema, _aql__WEBPACK_IMPORTED_MODULE_6__.schemaConfig, table, fields)); }
            async function getCategories(ids) { let whereIn = ids ? `c.id IN (${toSqlQueryParameters(ids)}) AND` : "", query = `SELECT c.* FROM categories c WHERE ${whereIn} c.tombstone = 0 ORDER BY c.sort_order, c.id`; return ids ? await all(query, [...ids]) : await all(query); }
            async function getCategoriesGrouped(ids) {
                let categoryGroupWhereIn = ids ? `cg.id IN (${toSqlQueryParameters(ids)}) AND` : "", categoryGroupQuery = `SELECT cg.* FROM category_groups cg WHERE ${categoryGroupWhereIn} cg.tombstone = 0
    ORDER BY cg.is_income, cg.sort_order, cg.id`, categoryWhereIn = ids ? `c.cat_group IN (${toSqlQueryParameters(ids)}) AND` : "", categoryQuery = `SELECT c.* FROM categories c WHERE ${categoryWhereIn} c.tombstone = 0
    ORDER BY c.sort_order, c.id`, groups = ids ? await all(categoryGroupQuery, [...ids]) : await all(categoryGroupQuery), categories = ids ? await all(categoryQuery, [...ids]) : await all(categoryQuery);
                return groups.map(group => ({ ...group, categories: categories.filter(c => c.cat_group === group.id) }));
            }
            async function insertCategoryGroup(group) {
                let existingGroup = await first("SELECT id, name, hidden FROM category_groups WHERE UPPER(name) = ? and tombstone = 0 LIMIT 1", [group.name.toUpperCase()]);
                if (existingGroup)
                    throw Error(`A ${existingGroup.hidden ? "hidden " : ""}’${existingGroup.name}’ category group already exists.`);
                let lastGroup = await first(`
    SELECT sort_order FROM category_groups WHERE tombstone = 0 ORDER BY sort_order DESC, id DESC LIMIT 1
  `), sort_order = (lastGroup ? lastGroup.sort_order : 0) + _sort__WEBPACK_IMPORTED_MODULE_9__.SORT_INCREMENT;
                return group = { ..._models__WEBPACK_IMPORTED_MODULE_7__.categoryGroupModel.validate(group), sort_order }, await insertWithUUID("category_groups", group);
            }
            function updateCategoryGroup(group) { return update("category_groups", group = _models__WEBPACK_IMPORTED_MODULE_7__.categoryGroupModel.validate(group, { update: !0 })); }
            async function moveCategoryGroup(id, targetId) { let groups = await all("SELECT id, sort_order FROM category_groups WHERE tombstone = 0 ORDER BY sort_order, id"), { updates, sort_order } = (0, _sort__WEBPACK_IMPORTED_MODULE_9__.shoveSortOrders)(groups, targetId); for (let info of updates)
                await update("category_groups", info); await update("category_groups", { id, sort_order }); }
            async function deleteCategoryGroup(group, transferId) { let categories = await all("SELECT * FROM categories WHERE cat_group = ?", [group.id]); await Promise.all(categories.map(cat => deleteCategory(cat, transferId))), await delete_("category_groups", group.id); }
            async function insertCategory(category, { atEnd } = { atEnd: void 0 }) {
                let sort_order, id_;
                return await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.batchMessages)(async () => {
                    if (await first("SELECT id FROM categories WHERE cat_group = ? and UPPER(name) = ? and tombstone = 0 LIMIT 1", [category.cat_group, category.name.toUpperCase()]))
                        throw Error(`Category ‘${category.name}’ already exists in group ‘${category.cat_group}’`);
                    if (atEnd) {
                        let lastCat = await first(`
        SELECT sort_order FROM categories WHERE tombstone = 0 ORDER BY sort_order DESC, id DESC LIMIT 1
      `);
                        sort_order = (lastCat ? lastCat.sort_order : 0) + _sort__WEBPACK_IMPORTED_MODULE_9__.SORT_INCREMENT;
                    }
                    else {
                        let categories = await all("SELECT id, sort_order FROM categories WHERE cat_group = ? AND tombstone = 0 ORDER BY sort_order, id", [category.cat_group]), { updates, sort_order: order } = (0, _sort__WEBPACK_IMPORTED_MODULE_9__.shoveSortOrders)(categories, categories.length > 0 ? categories[0].id : null);
                        for (let info of updates)
                            await update("categories", info);
                        sort_order = order;
                    }
                    category = { ..._models__WEBPACK_IMPORTED_MODULE_7__.categoryModel.validate(category), sort_order };
                    let id = await insertWithUUID("categories", category);
                    await insert("category_mapping", { id, transferId: id }), id_ = id;
                }), id_;
            }
            function updateCategory(category) { return update("categories", category = _models__WEBPACK_IMPORTED_MODULE_7__.categoryModel.validate(category, { update: !0 })); }
            async function moveCategory(id, groupId, targetId) { if (!groupId)
                throw Error("moveCategory: groupId is required"); let categories = await all("SELECT id, sort_order FROM categories WHERE cat_group = ? AND tombstone = 0 ORDER BY sort_order, id", [groupId]), { updates, sort_order } = (0, _sort__WEBPACK_IMPORTED_MODULE_9__.shoveSortOrders)(categories, targetId); for (let info of updates)
                await update("categories", info); await update("categories", { id, sort_order, cat_group: groupId }); }
            async function deleteCategory(category, transferId) { if (transferId) {
                for (let mapping of (await all("SELECT * FROM category_mapping WHERE transferId = ?", [category.id])))
                    await update("category_mapping", { id: mapping.id, transferId });
                await update("category_mapping", { id: category.id, transferId });
            } return delete_("categories", category.id); }
            async function getPayee(id) { return first("SELECT * FROM payees WHERE id = ?", [id]); }
            async function getAccount(id) { return first("SELECT * FROM accounts WHERE id = ?", [id]); }
            async function insertPayee(payee) { let id; return payee = _models__WEBPACK_IMPORTED_MODULE_7__.payeeModel.validate(payee), await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.batchMessages)(async () => { id = await insertWithUUID("payees", payee), await insert("payee_mapping", { id, targetId: id }); }), id; }
            async function deletePayee(payee) { let { transfer_acct } = await first("SELECT * FROM payees WHERE id = ?", [payee.id]); if (!transfer_acct)
                return delete_("payees", payee.id); }
            async function deleteTransferPayee(payee) { return delete_("payees", payee.id); }
            function updatePayee(payee) { return update("payees", payee = _models__WEBPACK_IMPORTED_MODULE_7__.payeeModel.validate(payee, { update: !0 })); }
            async function mergePayees(target, ids) { let dbPayees = await all("SELECT * FROM payees"), payees = (0, _shared_util__WEBPACK_IMPORTED_MODULE_5__.groupById)(dbPayees); null == payees[target].transfer_acct && (ids = ids.filter(id => null == payees[id].transfer_acct), await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.batchMessages)(async () => { await Promise.all(ids.map(async (id) => { let mappings = await all("SELECT id FROM payee_mapping WHERE targetId = ?", [id]); await Promise.all(mappings.map(m => update("payee_mapping", { id: m.id, targetId: target }))); })), await Promise.all(ids.map(id => Promise.all([update("payee_mapping", { id, targetId: target }), delete_("payees", id)]))); })); }
            function getPayees() {
                return all(`
    SELECT p.*, COALESCE(a.name, p.name) AS name FROM payees p
    LEFT JOIN accounts a ON (p.transfer_acct = a.id AND a.tombstone = 0)
    WHERE p.tombstone = 0 AND (p.transfer_acct IS NULL OR a.id IS NOT NULL)
    ORDER BY p.transfer_acct IS NULL DESC, p.name COLLATE NOCASE, a.offbudget, a.sort_order
  `);
            }
            function getCommonPayees() {
                let twelveWeeksAgo = (0, _models__WEBPACK_IMPORTED_MODULE_7__.toDateRepr)(_shared_months__WEBPACK_IMPORTED_MODULE_4__.subWeeks(_shared_months__WEBPACK_IMPORTED_MODULE_4__.currentDate(), 12));
                return all(`
    SELECT     p.id as id, p.name as name, p.favorite as favorite,
      p.category as category, TRUE as common, NULL as transfer_acct,
    count(*) as c,
    max(t.date) as latest
    FROM payees p
    LEFT JOIN v_transactions_internal_alive t on t.payee == p.id
    WHERE LENGTH(p.name) > 0
    AND p.tombstone = 0
    AND t.date > ${twelveWeeksAgo}
    GROUP BY p.id
    ORDER BY c DESC ,p.transfer_acct IS NULL DESC, p.name
    COLLATE NOCASE
    LIMIT 10
  `);
            }
            let orphanedPayeesQuery = `
  SELECT p.id
  FROM payees p
    LEFT JOIN payee_mapping pm ON pm.id = p.id
    LEFT JOIN v_transactions_internal_alive t ON t.payee = pm.targetId
  WHERE p.tombstone = 0
    AND p.transfer_acct IS NULL
    AND t.id IS NULL
    AND NOT EXISTS (
      SELECT 1
      FROM rules r,
      json_each(r.conditions) as cond
      WHERE r.tombstone = 0
        AND json_extract(cond.value, '$.field') = 'description'
        AND json_extract(cond.value, '$.value') = pm.targetId
    );
`;
            function syncGetOrphanedPayees() { return all(orphanedPayeesQuery); }
            async function getOrphanedPayees() { return (await all(orphanedPayeesQuery)).map(row => row.id); }
            async function getPayeeByName(name) { return first("SELECT * FROM payees WHERE UNICODE_LOWER(name) = ? AND tombstone = 0", [name.toLowerCase()]); }
            function getAccounts() {
                return all(`SELECT a.*, b.name as bankName, b.id as bankId FROM accounts a
       LEFT JOIN banks b ON a.bank = b.id
       WHERE a.tombstone = 0
       ORDER BY sort_order, name`);
            }
            async function insertAccount(account) { let accounts = await all("SELECT * FROM accounts WHERE offbudget = ? ORDER BY sort_order, name", [+!!account.offbudget]), { sort_order } = (0, _sort__WEBPACK_IMPORTED_MODULE_9__.shoveSortOrders)(accounts); return insertWithUUID("accounts", account = _models__WEBPACK_IMPORTED_MODULE_7__.accountModel.validate({ ...account, sort_order })); }
            function updateAccount(account) { return update("accounts", account = _models__WEBPACK_IMPORTED_MODULE_7__.accountModel.validate(account, { update: !0 })); }
            function deleteAccount(account) { return delete_("accounts", account.id); }
            async function moveAccount(id, targetId) { let accounts, account = await first("SELECT * FROM accounts WHERE id = ?", [id]); accounts = account.closed ? await all("SELECT id, sort_order FROM accounts WHERE closed = 1 ORDER BY sort_order, name") : await all("SELECT id, sort_order FROM accounts WHERE tombstone = 0 AND offbudget = ? ORDER BY sort_order, name", [+!!account.offbudget]); let { updates, sort_order } = (0, _sort__WEBPACK_IMPORTED_MODULE_9__.shoveSortOrders)(accounts, targetId); await (0, _sync__WEBPACK_IMPORTED_MODULE_8__.batchMessages)(async () => { for (let info of updates)
                update("accounts", info); update("accounts", { id, sort_order }); }); }
            async function getTransaction(id) { return (await selectWithSchema("transactions", "SELECT * FROM v_transactions WHERE id = ?", [id]))[0]; }
            async function getTransactions(accountId) { if (arguments.length > 1)
                throw Error("`getTransactions` was given a second argument, it now only takes a single argument `accountId`"); return selectWithSchema("transactions", "SELECT * FROM v_transactions WHERE account = ?", [accountId]); }
            function insertTransaction(transaction) { return insertWithSchema("transactions", transaction); }
            function updateTransaction(transaction) { return updateWithSchema("transactions", transaction); }
            async function deleteTransaction(transaction) { return delete_("transactions", transaction.id); }
            function toSqlQueryParameters(params) { return params.map(() => "?").join(","); }
            function getTags() {
                return all(`
    SELECT id, tag, color, description
    FROM tags
    WHERE tombstone = 0
    ORDER BY tag
  `);
            }
            function getAllTags() {
                return all(`
    SELECT id, tag, color, description
    FROM tags
    ORDER BY tag
  `);
            }
            function insertTag(tag) { return insertWithUUID("tags", tag); }
            async function deleteTag(tag) { return delete_("tags", tag.id); }
            function updateTag(tag) { return update("tags", tag); }
            function findTags() {
                return all(`
    SELECT notes
    FROM transactions
    WHERE tombstone = 0 AND notes LIKE ?
  `, ["%#%"]);
            }
        }, "./packages/loot-core/src/server/db/mappings.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let allMappings, unlistenSync;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getMapping: () => getMapping, getMappings: () => getMappings, loadMappings: () => loadMappings });
            var _sync_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            async function loadMappings() { let categories = (await _index__WEBPACK_IMPORTED_MODULE_1__.all("SELECT * FROM category_mapping")).map(r => [r.id, r.transferId]), payees = (await _index__WEBPACK_IMPORTED_MODULE_1__.all("SELECT * FROM payee_mapping")).map(r => [r.id, r.targetId]); allMappings = new Map(categories.concat(payees)), unlistenSync && unlistenSync(), unlistenSync = (0, _sync_index__WEBPACK_IMPORTED_MODULE_0__.addSyncListener)(onApplySync); }
            function onApplySync(oldValues, newValues) { newValues.forEach((items, table) => { if (-1 !== table.indexOf("mapping")) {
                let field = "category_mapping" === table ? "transferId" : "targetId";
                items.forEach(newValue => { allMappings.set(newValue.id, newValue[field]); });
            } }); }
            function getMappings() { return allMappings; }
            function getMapping(id) { return allMappings.get(id) || null; }
        }, "./packages/loot-core/src/server/db/sort.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { SORT_INCREMENT: () => SORT_INCREMENT, shoveSortOrders: () => shoveSortOrders });
            let SORT_INCREMENT = 16384;
            function shoveSortOrders(items, targetId = null) { let to = items.findIndex(item => item.id === targetId), target = items[to], before = items[to - 1], updates = []; if (targetId && -1 !== to) {
                if (target.sort_order - (before ? before.sort_order : 0) <= 2) {
                    let next = to, order = Math.floor(items[next].sort_order) + SORT_INCREMENT;
                    for (; next < items.length && !(order <= items[next].sort_order);)
                        updates.push({ id: items[next].id, sort_order: order }), next++, order += SORT_INCREMENT;
                }
                return { updates, sort_order: function (items, to) { let below = items[to - 1], above = items[to]; return below ? above ? (below.sort_order + above.sort_order) / 2 : below.sort_order + SORT_INCREMENT : above.sort_order / 2; }(items, to) };
            } {
                let order;
                return { updates, sort_order: items.length > 0 ? items[items.length - 1].sort_order + SORT_INCREMENT : SORT_INCREMENT };
            } }
        }, "./packages/loot-core/src/server/db/types/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
        }, "./packages/loot-core/src/server/db/util.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            async function incrFetch(runQuery, terms, compare, makeQuery, params = []) { let results = [], fetchedIds = new Set; for (let i = 0; i < terms.length; i += 500) {
                let slice = terms.slice(i, i + 500).filter(id => !fetchedIds.has(id));
                if (slice.length > 0) {
                    let query = makeQuery("(" + slice.map(id => compare(id)).join(" OR ") + ")"), rows = await runQuery(query, params, !0);
                    fetchedIds = new Set([...fetchedIds, ...slice]), results = results.concat(rows);
                }
            } return results; }
            function whereIn(ids, field) { return `${field} IN (` + [...new Set(ids)].map(id => `'${id}'`).join(",") + ")"; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { incrFetch: () => incrFetch, whereIn: () => whereIn });
        }, "./packages/loot-core/src/server/encryption/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _post__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _prefs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _server_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _sync__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_1__.createApp)();
            async function keyMake({ password }) { if (!_prefs__WEBPACK_IMPORTED_MODULE_3__.getPrefs())
                throw Error("key-make must be called with file loaded"); let salt = ___WEBPACK_IMPORTED_MODULE_6__.randomBytes(32).toString("base64"), id = (0, uuid__WEBPACK_IMPORTED_MODULE_7__.default)(), key = await ___WEBPACK_IMPORTED_MODULE_6__.createKey({ id, password, salt }); await ___WEBPACK_IMPORTED_MODULE_6__.loadKey(key); let testContent = await (0, _sync__WEBPACK_IMPORTED_MODULE_5__.makeTestMessage)(key.getId()); return await (0, _sync__WEBPACK_IMPORTED_MODULE_5__.resetSync)({ key, salt, testContent: JSON.stringify({ ...testContent, value: testContent.value.toString("base64") }) }); }
            async function keyTest({ cloudFileId, password }) { let validCloudFileId, res, userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"); null == cloudFileId && (cloudFileId = _prefs__WEBPACK_IMPORTED_MODULE_3__.getPrefs().cloudFileId); try {
                let serverConfig = (0, _server_config__WEBPACK_IMPORTED_MODULE_4__.getServer)();
                if (!serverConfig)
                    throw Error("No sync server configured.");
                res = await (0, _post__WEBPACK_IMPORTED_MODULE_2__.post)(serverConfig.SYNC_SERVER + "/user-get-key", { token: userToken, fileId: cloudFileId }), validCloudFileId = cloudFileId;
            }
            catch (e) {
                return console.log(e), { error: { reason: "network" } };
            } let { id, salt, test: originalTest } = res; if (!originalTest)
                return { error: { reason: "old-key-style" } }; let test = JSON.parse(originalTest), key = await ___WEBPACK_IMPORTED_MODULE_6__.createKey({ id, password, salt }); ___WEBPACK_IMPORTED_MODULE_6__.loadKey(key); try {
                await ___WEBPACK_IMPORTED_MODULE_6__.decrypt(Buffer.from(test.value, "base64"), test.meta);
            }
            catch (e) {
                return console.log(e), ___WEBPACK_IMPORTED_MODULE_6__.unloadKey(key), { error: { reason: "decrypt-failure" } };
            } let keys = JSON.parse(await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("encrypt-keys") || "{}"); return keys[validCloudFileId] = key.serialize(), await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("encrypt-keys", JSON.stringify(keys)), _prefs__WEBPACK_IMPORTED_MODULE_3__.getPrefs() && await _prefs__WEBPACK_IMPORTED_MODULE_3__.savePrefs({ encryptKeyId: key.getId() }), {}; }
            app.method("key-make", keyMake), app.method("key-test", keyTest);
        }, "./packages/loot-core/src/server/encryption/encryption-internals.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createKey: () => createKey, decrypt: () => decrypt, encrypt: () => encrypt, importKey: () => importKey, randomBytes: () => randomBytes });
            var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("crypto"), crypto__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);
            let ENCRYPTION_ALGORITHM = "aes-256-gcm";
            function randomBytes(n) { return crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(n); }
            function encrypt(masterKey, value) { let masterKeyBuffer = masterKey.getValue().raw, iv = crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(12), cipher = crypto__WEBPACK_IMPORTED_MODULE_0___default().createCipheriv(ENCRYPTION_ALGORITHM, masterKeyBuffer, iv), encrypted = cipher.update(value); encrypted = Buffer.concat([encrypted, cipher.final()]); let authTag = cipher.getAuthTag(); return { value: encrypted, meta: { keyId: masterKey.getId(), algorithm: ENCRYPTION_ALGORITHM, iv: iv.toString("base64"), authTag: authTag.toString("base64") } }; }
            function decrypt(masterKey, encrypted, meta) { let masterKeyBuffer = masterKey.getValue().raw, { algorithm, iv: originalIv, authTag: originalAuthTag } = meta, iv = Buffer.from(originalIv, "base64"), authTag = Buffer.from(originalAuthTag, "base64"), decipher = crypto__WEBPACK_IMPORTED_MODULE_0___default().createDecipheriv(algorithm, masterKeyBuffer, iv); decipher.setAuthTag(authTag); let decrypted = decipher.update(encrypted); return Buffer.concat([decrypted, decipher.final()]); }
            function createKey({ secret, salt }) { let buffer = function ({ numBytes, secret, salt }) { return crypto__WEBPACK_IMPORTED_MODULE_0___default().pbkdf2Sync(secret || crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(128).toString("base64"), salt || crypto__WEBPACK_IMPORTED_MODULE_0___default().randomBytes(32).toString("base64"), 1e4, numBytes || 32, "sha512"); }({ secret, salt }); return { raw: buffer, base64: buffer.toString("base64") }; }
            function importKey(str) { return { raw: Buffer.from(str, "base64"), base64: str }; }
        }, "./packages/loot-core/src/server/encryption/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { createKey: () => createKey, decrypt: () => decrypt, encrypt: () => encrypt, getKey: () => getKey, hasKey: () => hasKey, loadKey: () => loadKey, randomBytes: () => randomBytes, unloadAllKeys: () => unloadAllKeys, unloadKey: () => unloadKey });
            var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _encryption_internals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/encryption/encryption-internals.ts");
            let keys = {};
            class Key {
                constructor({ id }) { this.id = id || (0, uuid__WEBPACK_IMPORTED_MODULE_1__.default)(); }
                async createFromPassword({ password, salt }) { this.value = await _encryption_internals__WEBPACK_IMPORTED_MODULE_0__.createKey({ secret: password, salt }); }
                async createFromBase64(str) { this.value = await _encryption_internals__WEBPACK_IMPORTED_MODULE_0__.importKey(str); }
                getId() { return this.id; }
                getValue() { return this.value; }
                serialize() { return { id: this.id, base64: this.value.base64 }; }
            }
            function getKey(keyId) { if (null == keyId || null == keys[keyId])
                throw Error("missing-key"); return keys[keyId]; }
            function hasKey(keyId) { return keyId in keys; }
            function encrypt(value, keyId) { return _encryption_internals__WEBPACK_IMPORTED_MODULE_0__.encrypt(getKey(keyId), value); }
            function decrypt(encrypted, meta) { return _encryption_internals__WEBPACK_IMPORTED_MODULE_0__.decrypt(getKey(meta.keyId), encrypted, meta); }
            function randomBytes(n) { return _encryption_internals__WEBPACK_IMPORTED_MODULE_0__.randomBytes(n); }
            async function loadKey(key) { let keyInstance; key instanceof Key ? keyInstance = key : (keyInstance = new Key({ id: key.id }), await keyInstance.createFromBase64(key.base64)), keys[keyInstance.getId()] = keyInstance; }
            function unloadKey(key) { delete keys[key.getId()]; }
            function unloadAllKeys() { keys = {}; }
            async function createKey({ id, password, salt }) { let key = new Key({ id }); return await key.createFromPassword({ password, salt }), key; }
        }, "./packages/loot-core/src/server/errors.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { APIError: () => APIError, BankSyncError: () => BankSyncError, FileDownloadError: () => FileDownloadError, FileUploadError: () => FileUploadError, HTTPError: () => HTTPError, PostError: () => PostError, RuleError: () => RuleError, SyncError: () => SyncError, TransactionError: () => TransactionError, ValidationError: () => ValidationError });
            class PostError extends Error {
                constructor(reason, meta) { super("PostError: " + reason), this.type = "PostError", this.reason = reason, this.meta = meta; }
            }
            class BankSyncError extends Error {
                constructor(reason, category, code) { super("BankSyncError: " + reason), this.type = "BankSyncError", this.reason = reason, this.category = category, this.code = code; }
            }
            class HTTPError extends Error {
                constructor(code, body) { super(`HTTPError: unsuccessful status code (${code}): ${body}`), this.statusCode = code, this.responseBody = body; }
            }
            class SyncError extends Error {
                constructor(reason, meta) { super("SyncError: " + reason), this.reason = reason, this.meta = meta; }
            }
            class ValidationError extends Error {
            }
            class TransactionError extends Error {
            }
            class RuleError extends Error {
                constructor(name, message) { super("RuleError: " + message), this.type = name; }
            }
            function APIError(msg, meta) { return { type: "APIError", message: msg, meta }; }
            function FileDownloadError(reason, meta) { return { type: "FileDownloadError", reason, meta }; }
            function FileUploadError(reason, meta) { return { type: "FileUploadError", reason, meta }; }
        }, "./packages/loot-core/src/server/filters/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let filterModel = { validate(filter, { update } = {}) { if ((0, _models__WEBPACK_IMPORTED_MODULE_2__.requiredFields)("transaction_filters", filter, ["conditions"], update), (!update || "conditionsOp" in filter) && !["and", "or"].includes(filter.conditionsOp))
                    throw Error("Invalid filter conditionsOp: " + filter.conditionsOp); return filter; }, toJS(row) { let { conditions, conditions_op, ...fields } = row; return { ...fields, conditionsOp: conditions_op, conditions: (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.parseConditionsOrActions)(conditions) }; }, fromJS(filter) { let { conditionsOp, ...row } = filter; return conditionsOp && (row.conditions_op = conditionsOp), row; } };
            async function filterNameExists(name, filterId, newItem) { let idForName = await _db__WEBPACK_IMPORTED_MODULE_1__.first("SELECT id from transaction_filters WHERE tombstone = 0 AND name = ?", [name]); return null !== idForName && (!!newItem || idForName.id !== filterId); }
            function conditionExists(item, filters, newItem) { let { conditions, conditionsOp } = item, fConditionFound = null; return (filters.some(filter => !(1 !== conditions.length && filter.conditionsOp !== conditionsOp || filter.tombstone || filter.conditions.length !== conditions.length || conditions.some(cond => !filter.conditions.some(fcond => cond.value === fcond.value && cond.op === fcond.op && cond.field === fcond.field && function (options1, options2) { let opt1 = options1 ?? {}, opt2 = options2 ?? {}, keys1 = Object.keys(opt1), keys2 = Object.keys(opt2); return keys1.length === keys2.length && keys1.every(key => opt1[key] === opt2[key]); }(cond.options, fcond.options)))) && (fConditionFound = filter, !0)), newItem) ? !!fConditionFound && fConditionFound.name : !!fConditionFound && fConditionFound.id !== item.id && fConditionFound.name; }
            async function createFilter(filter) { let filterId = (0, uuid__WEBPACK_IMPORTED_MODULE_6__.default)(), item = { id: filterId, conditions: filter.state.conditions, conditionsOp: filter.state.conditionsOp, name: filter.state.name }; if (item.name) {
                if (await filterNameExists(item.name, item.id, !0))
                    throw Error("There is already a filter named " + item.name);
            }
            else
                throw Error("Filter name is required"); if (item.conditions.length > 0) {
                let condExists = conditionExists(item, filter.filters, !0);
                if (condExists)
                    throw Error("Duplicate filter warning: conditions already exist. Filter name: " + condExists);
            }
            else
                throw Error("Conditions are required"); return await _db__WEBPACK_IMPORTED_MODULE_1__.insertWithSchema("transaction_filters", filterModel.fromJS(item)), filterId; }
            async function updateFilter(filter) { let item = { id: filter.state.id, conditions: filter.state.conditions, conditionsOp: filter.state.conditionsOp, name: filter.state.name }; if (item.name) {
                if (await filterNameExists(item.name, item.id, !1))
                    throw Error("There is already a filter named " + item.name);
            }
            else
                throw Error("Filter name is required"); if (item.conditions.length > 0) {
                let condExists = conditionExists(item, filter.filters, !1);
                if (condExists)
                    throw Error("Duplicate filter warning: conditions already exist. Filter name: " + condExists);
            }
            else
                throw Error("Conditions are required"); await _db__WEBPACK_IMPORTED_MODULE_1__.updateWithSchema("transaction_filters", filterModel.fromJS(item)); }
            async function deleteFilter(id) { await _db__WEBPACK_IMPORTED_MODULE_1__.delete_("transaction_filters", id); }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            app.method("filter-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(createFilter)), app.method("filter-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(updateFilter)), app.method("filter-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_5__.undoable)(deleteFilter)));
        }, "./packages/loot-core/src/server/importers/actual.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { importActual: () => importActual });
            var _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _cloud_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/cloud-storage.ts"), _main__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/main.ts"), _sheet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts");
            async function importActual(_filepath, buffer) {
                let id;
                await _main__WEBPACK_IMPORTED_MODULE_3__.handlers["close-budget"]();
                try {
                    ({ id } = await _cloud_storage__WEBPACK_IMPORTED_MODULE_2__.importBuffer({ cloudFileId: null, groupId: null }, buffer));
                }
                catch (e) {
                    if ("FileDownloadError" === e.type)
                        return { error: e.reason };
                    throw e;
                }
                let sqliteDb = await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.openDatabase(_platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.getBudgetDir(id), "db.sqlite"));
                _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.execQuery(sqliteDb, `
          DELETE FROM kvcache;
          DELETE FROM kvcache_key;
        `), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.closeDatabase(sqliteDb), await _main__WEBPACK_IMPORTED_MODULE_3__.handlers["load-budget"]({ id }), await _main__WEBPACK_IMPORTED_MODULE_3__.handlers["get-budget-bounds"](), await (0, _sheet__WEBPACK_IMPORTED_MODULE_4__.waitOnSpreadsheet)(), await _cloud_storage__WEBPACK_IMPORTED_MODULE_2__.upload().catch(() => { });
            }
        }, "./packages/loot-core/src/server/importers/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { handleBudgetImport: () => handleBudgetImport });
            var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/main.ts"), _actual__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/importers/actual.ts");
            let importers = { ynab4: __webpack_require__("./packages/loot-core/src/server/importers/ynab4.ts"), ynab5: __webpack_require__("./packages/loot-core/src/server/importers/ynab5.ts") };
            async function handleBudgetImport(type, filepath, buffer) { if ("actual" === type)
                return (0, _actual__WEBPACK_IMPORTED_MODULE_1__.importActual)(filepath, buffer); let importer = importers[type]; try {
                let data1, budgetName;
                try {
                    data1 = importer.parseFile(buffer), budgetName = importer.getBudgetName(filepath, data1);
                }
                catch (e) {
                    console.error("failed to parse file", e);
                }
                if (!budgetName)
                    return { error: "not-" + type };
                try {
                    await _main__WEBPACK_IMPORTED_MODULE_0__.handlers["api/start-import"]({ budgetName });
                }
                catch (e) {
                    return console.error("failed to start import", e), { error: "unknown" };
                }
                await importer.doImport(data1);
            }
            catch (e) {
                return await _main__WEBPACK_IMPORTED_MODULE_0__.handlers["api/abort-import"](), console.error("failed to run import", e), { error: "unknown" };
            } await _main__WEBPACK_IMPORTED_MODULE_0__.handlers["api/finish-import"](); }
        }, "./packages/loot-core/src/server/importers/ynab4.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { doImport: () => doImport, getBudgetName: () => getBudgetName, parseFile: () => parseFile });
            var _actual_app_api_injected__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/api/injected.js"), _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/api/methods.ts"), _actual_app_api_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/api/utils.js"), adm_zip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/adm-zip/adm-zip.js"), adm_zip__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(adm_zip__WEBPACK_IMPORTED_MODULE_3__), slash__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/slash/index.js"), slash__WEBPACK_IMPORTED_MODULE_4___default = __webpack_require__.n(slash__WEBPACK_IMPORTED_MODULE_4__), uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _shared_months__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/shared/util.ts");
            async function importAccounts(data1, entityIdMap) { return Promise.all((0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.sortByKey)(data1.accounts, "sortableIndex").map(async (account) => { if (!account.isTombstone) {
                let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.createAccount({ name: account.accountName, offbudget: !account.onBudget, closed: !!account.hidden });
                entityIdMap.set(account.entityId, id);
            } })); }
            async function importCategories(data1, entityIdMap) { let masterCategories = (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.sortByKey)(data1.masterCategories, "sortableIndex"); await Promise.all(masterCategories.map(async (masterCategory) => { if ("OUTFLOW" === masterCategory.type && !masterCategory.isTombstone && masterCategory.subCategories && masterCategory.subCategories.some(cat => !cat.isTombstone)) {
                let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.createCategoryGroup({ name: masterCategory.name, is_income: !1 });
                if (entityIdMap.set(masterCategory.entityId, id), masterCategory.note && (0, _actual_app_api_injected__WEBPACK_IMPORTED_MODULE_0__.send)("notes-save", { id, note: masterCategory.note }), masterCategory.subCategories) {
                    let subCategories = (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.sortByKey)(masterCategory.subCategories, "sortableIndex");
                    for (let category of (subCategories.reverse(), subCategories))
                        if (!category.isTombstone) {
                            let categoryName = category.name;
                            if ("Hidden Categories" === masterCategory.name) {
                                let categoryNameParts = categoryName.split(" ` ");
                                categoryNameParts.pop(), categoryName = categoryNameParts.join("/").trim();
                            }
                            let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.createCategory({ name: categoryName, group_id: entityIdMap.get(category.masterCategoryId) });
                            entityIdMap.set(category.entityId, id), category.note && (0, _actual_app_api_injected__WEBPACK_IMPORTED_MODULE_0__.send)("notes-save", { id, note: category.note });
                        }
                }
            } })); }
            async function importPayees(data1, entityIdMap) { for (let payee of data1.payees)
                if (!payee.isTombstone) {
                    let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.createPayee({ name: payee.name, category: entityIdMap.get(payee.autoFillCategoryId) || null, transfer_acct: entityIdMap.get(payee.targetAccountId) || null });
                    entityIdMap.set(payee.entityId, id);
                } }
            async function importTransactions(data1, entityIdMap) { let incomeCategoryId = (await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.getCategories()).find(cat => "Income" === cat.name).id, accounts = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.getAccounts(), payees = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.getPayees(); function getCategory(id) { return null == id || "Category/__Split__" === id ? null : "Category/__ImmediateIncome__" === id || "Category/__DeferredIncome__" === id ? incomeCategoryId : entityIdMap.get(id); } for (let transaction of data1.transactions)
                if (entityIdMap.set(transaction.entityId, (0, uuid__WEBPACK_IMPORTED_MODULE_7__.default)()), transaction.subTransactions)
                    for (let subTransaction of transaction.subTransactions)
                        entityIdMap.set(subTransaction.entityId, (0, uuid__WEBPACK_IMPORTED_MODULE_7__.default)()); let transactionsGrouped = (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.groupBy)(data1.transactions, "accountId"); await Promise.all([...transactionsGrouped.keys()].map(async (accountId) => { let toImport = transactionsGrouped.get(accountId).map(transaction => { if (transaction.isTombstone)
                return null; function transferProperties(t) { let transferId = entityIdMap.get(t.transferTransactionId) || null, payee = null, imported_payee = null; return transferId ? payee = payees.find(p => p.transfer_acct === entityIdMap.get(t.targetAccountId)).id : (payee = entityIdMap.get(t.payeeId), imported_payee = data1.payees.find(p => p.entityId === t.payeeId)?.name), { transfer_id: transferId, payee, imported_payee }; } return { id: entityIdMap.get(transaction.entityId), amount: (0, _actual_app_api_utils__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(transaction.amount), category: !function (acctId) { let acct = accounts.find(acct => acct.id === acctId); if (!acct)
                    throw Error("Could not find account for transaction when importing"); return acct.offbudget; }(entityIdMap.get(accountId)) ? getCategory(transaction.categoryId) : null, date: transaction.date, notes: transaction.memo || null, cleared: "Cleared" === transaction.cleared || "Reconciled" === transaction.cleared, reconciled: "Reconciled" === transaction.cleared, ...transferProperties(transaction), subtransactions: transaction.subTransactions && transaction.subTransactions.filter(st => !st.isTombstone).map(t => ({ id: entityIdMap.get(t.entityId), amount: (0, _actual_app_api_utils__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(t.amount), category: getCategory(t.categoryId), notes: t.memo || null, ...transferProperties(t) })) }; }).filter(x => x); await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.addTransactions(entityIdMap.get(accountId), toImport, { learnCategories: !0 }); })); }
            async function importBudgets(data1, entityIdMap) { let budgets = (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.sortByKey)(data1.monthlyBudgets, "month"); await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.batchBudgetUpdates(async () => { for (let budget of budgets) {
                let filled = function (data1, categoryBudgets) { let budgets = [...categoryBudgets]; return data1.masterCategories.forEach(masterCategory => { masterCategory.subCategories && masterCategory.subCategories.forEach(category => { budgets.find(b => b.categoryId === category.entityId) || budgets.push({ budgeted: 0, categoryId: category.entityId }); }); }), budgets; }(data1, budget.monthlySubCategoryBudgets.filter(b => !b.isTombstone));
                await Promise.all(filled.map(async (catBudget) => { let amount = (0, _actual_app_api_utils__WEBPACK_IMPORTED_MODULE_2__.amountToInteger)(catBudget.budgeted), catId = entityIdMap.get(catBudget.categoryId), month = _shared_months__WEBPACK_IMPORTED_MODULE_5__.monthFromDate(budget.month); catId && (await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.setBudgetAmount(month, catId, amount), "AffectsBuffer" === catBudget.overspendingHandling ? await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.setBudgetCarryover(month, catId, !1) : "Confined" === catBudget.overspendingHandling && await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_1__.setBudgetCarryover(month, catId, !0)); }));
            } }); }
            async function doImport(data1) { let entityIdMap = new Map; console.log("Importing Accounts..."), await importAccounts(data1, entityIdMap), console.log("Importing Categories..."), await importCategories(data1, entityIdMap), console.log("Importing Payees..."), await importPayees(data1, entityIdMap), console.log("Importing Transactions..."), await importTransactions(data1, entityIdMap), console.log("Importing Budgets..."), await importBudgets(data1, entityIdMap), console.log("Setting up..."); }
            function getBudgetName(filepath) { let unixFilepath = slash__WEBPACK_IMPORTED_MODULE_4___default()(filepath); if (!/\.zip/.test(unixFilepath))
                return null; let m = (unixFilepath = unixFilepath.replace(/\.zip$/, "").replace(/.ynab4$/, "")).match(/([^/~]+)[^/]*$/); return m ? m[1] : null; }
            function getFile(entries, path) { let files = entries.filter(e => e.entryName === path); if (0 === files.length)
                throw Error("Could not find file: " + path); if (files.length >= 2)
                throw Error("File name matches multiple files: " + path); return files[0]; }
            function join(...paths) { return paths.slice(1).reduce((full, path) => full + "/" + path.replace(/^\//, ""), paths[0].replace(/\/$/, "")); }
            function parseFile(buffer) { let contents, devices, zipped = new (adm_zip__WEBPACK_IMPORTED_MODULE_3___default())(buffer), entries = zipped.getEntries(), root = "", dirMatch = entries[0].entryName.match(/([^/]*\.ynab4)/); dirMatch && (root = dirMatch[1] + "/"); let meta = JSON.parse(zipped.readFile(getFile(entries, root + "Budget.ymeta")).toString("utf8")), budgetPath = join(root, meta.relativeDataFolderName), deviceFiles = entries.filter(e => e.entryName.startsWith(join(budgetPath, "devices"))), yfullPath = join(budgetPath, (devices = deviceFiles.map(entry => { let data1, contents = zipped.readFile(entry).toString("utf8"); try {
                data1 = JSON.parse(contents);
            }
            catch (e) {
                return null;
            } return data1.hasFullKnowledge ? { deviceGUID: data1.deviceGUID, shortName: data1.shortDeviceId, recentness: data1.knowledge.split(",").reduce((total, version) => { let [_, number] = version.split("-"); return total + parseInt(number); }, 0) } : null; }).filter(x => x), (devices = (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.sortByKey)(devices, "recentness"))[devices.length - 1].deviceGUID), "Budget.yfull"); try {
                contents = zipped.readFile(getFile(entries, yfullPath)).toString("utf8");
            }
            catch (e) {
                throw console.log(e), Error("Error reading Budget.yfull file");
            } try {
                return JSON.parse(contents);
            }
            catch (e) {
                throw Error("Error parsing Budget.yfull file");
            } }
        }, "./packages/loot-core/src/server/importers/ynab5.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { doImport: () => doImport, getBudgetName: () => getBudgetName, parseFile: () => parseFile });
            var _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/api/methods.ts"), uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _shared_months__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts");
            function amountFromYnab(amount) { return Math.round(amount / 10); }
            async function importCategories(data1, entityIdMap) { let incomeCatId = findIdByName(await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.getCategories(), "Income"), ynabIncomeCategories = ["To be Budgeted", "Inflow: Ready to Assign"]; for (let group of data1.category_groups)
                if (!group.deleted) {
                    let groupId;
                    if (!equalsIgnoreCase(group.name, "Internal Master Category") && !equalsIgnoreCase(group.name, "Credit Card Payments") && !equalsIgnoreCase(group.name, "Hidden Categories") && !equalsIgnoreCase(group.name, "Income")) {
                        let run = !0, count = 1, origName = group.name;
                        for (; run;)
                            try {
                                groupId = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.createCategoryGroup({ name: group.name, is_income: !1, hidden: group.hidden }), entityIdMap.set(group.id, groupId), run = !1;
                            }
                            catch (e) {
                                if (group.name = origName + "-" + count.toString(), (count += 1) >= 10)
                                    throw run = !1, Error(e.message);
                            }
                    }
                    for (let cat of (equalsIgnoreCase(group.name, "Income") && (groupId = incomeCatId, entityIdMap.set(group.id, groupId)), data1.categories.filter(cat => cat.category_group_id === group.id).reverse()))
                        if (!cat.deleted)
                            switch (function (cat) { if (cat.category_group_id === findIdByName(data1.category_groups, "Internal Master Category"))
                                if (ynabIncomeCategories.some(ynabIncomeCategory => equalsIgnoreCase(cat.name, ynabIncomeCategory)))
                                    return "income";
                                else
                                    return "internal"; return cat.category_group_id === findIdByName(data1.category_groups, "Credit Card Payments") ? "creditCard" : cat.category_group_id === findIdByName(data1.category_groups, "Income") ? "income" : void 0; }(cat)) {
                                case "income":
                                    entityIdMap.set(cat.id, incomeCatId);
                                    break;
                                case "creditCard":
                                case "internal": break;
                                default: {
                                    let run = !0, count = 1, origName = cat.name;
                                    for (; run;)
                                        try {
                                            let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.createCategory({ name: cat.name, group_id: groupId, hidden: cat.hidden });
                                            entityIdMap.set(cat.id, id), run = !1;
                                        }
                                        catch (e) {
                                            if (cat.name = origName + "-" + count.toString(), (count += 1) >= 10)
                                                throw run = !1, Error(e.message);
                                        }
                                }
                            }
                } }
            async function importTransactions(data1, entityIdMap) { let payees = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.getPayees(), categories = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.getCategories(), incomeCatId = findIdByName(categories, "Income"), startingBalanceCatId = findIdByName(categories, "Starting Balances"), startingPayeeYNAB = findIdByName(data1.payees, "Starting Balance"), transactionsGrouped = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.groupBy)(data1.transactions, "account_id"), subtransactionsGrouped = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.groupBy)(data1.subtransactions, "transaction_id"), payeeTransferAcctHashMap = new Map(payees.filter(payee => payee?.transfer_acct).map(payee => [payee.transfer_acct, payee])), orphanTransferMap = new Map, orphanSubtransfer = [], orphanSubtransferTrxId = [], orphanSubtransferAcctIdByTrxIdMap = new Map, orphanSubtransferDateByTrxIdMap = new Map; for (let transaction of data1.subtransactions)
                entityIdMap.set(transaction.id, (0, uuid__WEBPACK_IMPORTED_MODULE_3__.default)()), transaction.transfer_account_id && (orphanSubtransfer.push(transaction), orphanSubtransferTrxId.push(transaction.transaction_id)); for (let transaction of data1.transactions) {
                if (entityIdMap.set(transaction.id, (0, uuid__WEBPACK_IMPORTED_MODULE_3__.default)()), transaction.transfer_account_id && !transaction.transfer_transaction_id) {
                    let key = transaction.account_id + "#" + transaction.transfer_account_id;
                    orphanTransferMap.has(key) ? orphanTransferMap.get(key).push(transaction) : orphanTransferMap.set(key, [transaction]);
                }
                orphanSubtransferTrxId.includes(transaction.id) && (orphanSubtransferAcctIdByTrxIdMap.set(transaction.id, transaction.account_id), orphanSubtransferDateByTrxIdMap.set(transaction.id, transaction.date));
            } let orphanSubtransferMap = orphanSubtransfer.reduce((map, subtransaction) => { let key = subtransaction.transfer_account_id + "#" + orphanSubtransferAcctIdByTrxIdMap.get(subtransaction.transaction_id); return map.has(key) ? map.get(key).push(subtransaction) : map.set(key, [subtransaction]), map; }, new Map), orphanTransferComparator = (a, b) => { let date_a = "date" in a ? a.date : orphanSubtransferDateByTrxIdMap.get(a.transaction_id), date_b = "date" in b ? b.date : orphanSubtransferDateByTrxIdMap.get(b.transaction_id), amount_a = "date" in a ? a.amount : -a.amount, amount_b = "date" in b ? b.amount : -b.amount; return date_a > date_b ? 1 : date_a < date_b ? -1 : amount_a > amount_b ? 1 : amount_a < amount_b ? -1 : a.memo > b.memo ? 1 : a.memo < b.memo ? -1 : 0; }, orphanTrxIdSubtrxIdMap = new Map; orphanTransferMap.forEach((transactions, key) => { let subtransactions = orphanSubtransferMap.get(key); if (subtransactions) {
                transactions.sort(orphanTransferComparator), subtransactions.sort(orphanTransferComparator);
                let transactionIdx = 0, subtransactionIdx = 0;
                do
                    switch (orphanTransferComparator(transactions[transactionIdx], subtransactions[subtransactionIdx])) {
                        case 0:
                            orphanTrxIdSubtrxIdMap.set(transactions[transactionIdx].id, entityIdMap.get(subtransactions[subtransactionIdx].id)), orphanTrxIdSubtrxIdMap.set(subtransactions[subtransactionIdx].id, entityIdMap.get(transactions[transactionIdx].id)), transactionIdx++, subtransactionIdx++;
                            break;
                        case -1:
                            transactionIdx++;
                            break;
                        case 1: subtransactionIdx++;
                    }
                while (transactionIdx < transactions.length && subtransactionIdx < subtransactions.length);
            } }), await Promise.all([...transactionsGrouped.keys()].map(async (accountId) => { let toImport = transactionsGrouped.get(accountId).map(transaction => { if (transaction.deleted)
                return null; let subtransactions = subtransactionsGrouped.get(transaction.id), newTransaction = { id: entityIdMap.get(transaction.id), account: entityIdMap.get(transaction.account_id), date: transaction.date, amount: amountFromYnab(transaction.amount), category: entityIdMap.get(transaction.category_id) || null, cleared: ["cleared", "reconciled"].includes(transaction.cleared), reconciled: "reconciled" === transaction.cleared, notes: transaction.memo || null, imported_id: transaction.import_id || null, transfer_id: entityIdMap.get(transaction.transfer_transaction_id) || orphanTrxIdSubtrxIdMap.get(transaction.id) || null, subtransactions: subtransactions ? subtransactions.map(subtrans => ({ id: entityIdMap.get(subtrans.id), amount: amountFromYnab(subtrans.amount), category: entityIdMap.get(subtrans.category_id) || null, notes: subtrans.memo, transfer_id: orphanTrxIdSubtrxIdMap.get(subtrans.id) || null, payee: null, imported_payee: null })) : null, payee: null, imported_payee: null }, transactionPayeeUpdate = (trx, newTrx) => { if (trx.transfer_account_id) {
                let mappedTransferAccountId = entityIdMap.get(trx.transfer_account_id);
                newTrx.payee = payeeTransferAcctHashMap.get(mappedTransferAccountId)?.id;
            }
            else
                newTrx.payee = entityIdMap.get(trx.payee_id), newTrx.imported_payee = data1.payees.find(p => !p.deleted && p.id === trx.payee_id)?.name; }; return transactionPayeeUpdate(transaction, newTransaction), newTransaction.subtransactions && subtransactions.forEach(subtrans => { let newSubtransaction = newTransaction.subtransactions.find(newSubtrans => newSubtrans.id === entityIdMap.get(subtrans.id)); transactionPayeeUpdate(subtrans, newSubtransaction); }), transaction.payee_id === startingPayeeYNAB && entityIdMap.get(transaction.category_id) === incomeCatId && (newTransaction.category = startingBalanceCatId, newTransaction.payee = null), newTransaction; }).filter(x => x); await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.addTransactions(entityIdMap.get(accountId), toImport, { learnCategories: !0 }); })); }
            async function importBudgets(data1, entityIdMap) { let budgets = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.sortByKey)(data1.months, "month"), internalCatIdYnab = findIdByName(data1.category_groups, "Internal Master Category"), creditcardCatIdYnab = findIdByName(data1.category_groups, "Credit Card Payments"); await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.batchBudgetUpdates(async () => { for (let budget of budgets) {
                let month = _shared_months__WEBPACK_IMPORTED_MODULE_1__.monthFromDate(budget.month);
                await Promise.all(budget.categories.map(async (catBudget) => { let catId = entityIdMap.get(catBudget.id), amount = Math.round(catBudget.budgeted / 10); catId && catBudget.category_group_id !== internalCatIdYnab && catBudget.category_group_id !== creditcardCatIdYnab && await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.setBudgetAmount(month, catId, amount); }));
            } }); }
            async function doImport(data1) { let entityIdMap = new Map; console.log("Importing Accounts..."), await Promise.all(data1.accounts.map(async (account) => { if (!account.deleted) {
                let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.createAccount({ name: account.name, offbudget: !account.on_budget, closed: account.closed });
                entityIdMap.set(account.id, id);
            } })), console.log("Importing Categories..."), await importCategories(data1, entityIdMap), console.log("Importing Payees..."), await Promise.all(data1.payees.map(async (payee) => { if (!payee.deleted) {
                let id = await _actual_app_api_methods__WEBPACK_IMPORTED_MODULE_0__.createPayee({ name: payee.name });
                entityIdMap.set(payee.id, id);
            } })), console.log("Importing Transactions..."), await importTransactions(data1, entityIdMap), console.log("Importing Budgets..."), await importBudgets(data1, entityIdMap), console.log("Setting up..."); }
            function parseFile(buffer) { let data1 = JSON.parse(buffer.toString()); return data1.data && (data1 = data1.data), data1.budget && (data1 = data1.budget), data1; }
            function getBudgetName(_filepath, data1) { return data1.budget_name || data1.name; }
            function equalsIgnoreCase(stringa, stringb) { return 0 === stringa.localeCompare(stringb, void 0, { sensitivity: "base" }); }
            function findIdByName(categories, name) { return categories.find(cat => equalsIgnoreCase(cat.name, name))?.id; }
        }, "./packages/loot-core/src/server/main-app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts");
            let app = (0, __webpack_require__("./packages/loot-core/src/server/app.ts").createApp)();
            app.events.on("sync", event => { _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__.send("sync-event", event); });
        }, "./packages/loot-core/src/server/main.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getDefaultDocumentDir: () => getDefaultDocumentDir, handlers: () => handlers, init: () => init, initApp: () => initApp, lib: () => lib }), __webpack_require__("./packages/loot-core/src/server/polyfills.ts");
            var _actual_app_api_injected__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/api/injected.js"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _accounts_app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/accounts/app.ts"), _admin_app__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/admin/app.ts"), _api__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/api.ts"), _aql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _auth_app__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/auth/app.ts"), _budget_app__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/budget/app.ts"), _budgetfiles_app__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/budgetfiles/app.ts"), _dashboard_app__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/dashboard/app.ts"), _db__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _encryption__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts"), _encryption_app__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./packages/loot-core/src/server/encryption/app.ts"), _filters_app__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./packages/loot-core/src/server/filters/app.ts"), _main_app__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./packages/loot-core/src/server/main-app.ts"), _mutators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _notes_app__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./packages/loot-core/src/server/notes/app.ts"), _payees_app__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__("./packages/loot-core/src/server/payees/app.ts"), _post__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _preferences_app__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__("./packages/loot-core/src/server/preferences/app.ts"), _prefs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _reports_app__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__("./packages/loot-core/src/server/reports/app.ts"), _rules_app__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__("./packages/loot-core/src/server/rules/app.ts"), _schedules_app__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__("./packages/loot-core/src/server/schedules/app.ts"), _server_config__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _spreadsheet_app__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/app.ts"), _sync__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _sync_app__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__("./packages/loot-core/src/server/sync/app.ts"), _tags_app__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__("./packages/loot-core/src/server/tags/app.ts"), _tools_app__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__("./packages/loot-core/src/server/tools/app.ts"), _transactions_app__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__("./packages/loot-core/src/server/transactions/app.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let handlers = {};
            function getDefaultDocumentDir() { return _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.join(process.env.ACTUAL_DOCUMENT_DIR, "Actual"); }
            async function setupDocumentsDir() { async function ensureExists(dir) { await _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.exists(dir) || await _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.mkdir(dir); } let documentDir = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("document-dir"); if (documentDir)
                try {
                    await ensureExists(documentDir);
                }
                catch (e) {
                    documentDir = null;
                } documentDir || (documentDir = getDefaultDocumentDir()), await ensureExists(documentDir), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__._setDocumentDir(documentDir); }
            async function initApp(isDev, socketName) { await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.init(), await Promise.all([_platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.init(), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.init()]), await setupDocumentsDir(); let keysStr = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("encrypt-keys"); if (keysStr)
                try {
                    let keys = JSON.parse(keysStr);
                    await Promise.all(Object.keys(keys).map(fileId => _encryption__WEBPACK_IMPORTED_MODULE_16__.loadKey(keys[fileId])));
                }
                catch (e) {
                    throw console.log("Error loading key", e), Error("load-key-error");
                } let url = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("server-url"); url || await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.removeItem("user-token"), (0, _server_config__WEBPACK_IMPORTED_MODULE_29__.setServer)(url), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.init(socketName, _main_app__WEBPACK_IMPORTED_MODULE_19__.app.handlers), global.$query = _aql__WEBPACK_IMPORTED_MODULE_10__.aqlQuery, global.$q = _shared_query__WEBPACK_IMPORTED_MODULE_6__.q, isDev && (global.$send = (name, args) => (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.runHandler)(_main_app__WEBPACK_IMPORTED_MODULE_19__.app.handlers[name], args), global.$db = _db__WEBPACK_IMPORTED_MODULE_15__, global.$setSyncingMode = _sync__WEBPACK_IMPORTED_MODULE_31__.setSyncingMode); }
            async function init(config) { let dataDir, serverURL; return config ? (dataDir = config.dataDir, serverURL = config.serverURL) : (dataDir = process.env.ACTUAL_DATA_DIR, serverURL = process.env.ACTUAL_SERVER_URL), await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.init(), await Promise.all([_platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.init({ persist: !1 }), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.init()]), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__._setDocumentDir(dataDir || process.cwd()), serverURL ? ((0, _server_config__WEBPACK_IMPORTED_MODULE_29__.setServer)(serverURL), config.password && await (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.runHandler)(handlers["subscribe-sign-in"], { password: config.password })) : ((0, _server_config__WEBPACK_IMPORTED_MODULE_29__.setServer)(null), _main_app__WEBPACK_IMPORTED_MODULE_19__.app.events.on("load-budget", () => { (0, _sync__WEBPACK_IMPORTED_MODULE_31__.setSyncingMode)("offline"); })), lib; }
            handlers.undo = (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.mutator)(async function () { return (0, _undo__WEBPACK_IMPORTED_MODULE_37__.undo)(); }), handlers.redo = (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.mutator)(function () { return (0, _undo__WEBPACK_IMPORTED_MODULE_37__.redo)(); }), handlers["make-filters-from-conditions"] = async function ({ conditions, applySpecialCases }) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_36__.conditionsToAQL(conditions, { applySpecialCases }); }, handlers.query = async function (query) { if (null == query.table)
                throw Error("query has no table, did you forgot to call `.serialize`?"); return (0, _aql__WEBPACK_IMPORTED_MODULE_10__.aqlQuery)(query); }, handlers["get-server-version"] = async function () { let version; if (!(0, _server_config__WEBPACK_IMPORTED_MODULE_29__.getServer)())
                return { error: "no-server" }; try {
                let res = await (0, _post__WEBPACK_IMPORTED_MODULE_23__.get)((0, _server_config__WEBPACK_IMPORTED_MODULE_29__.getServer)().BASE_SERVER + "/info");
                version = JSON.parse(res).build.version;
            }
            catch (err) {
                return { error: "network-failure" };
            } return { version }; }, handlers["get-server-url"] = async function () { return (0, _server_config__WEBPACK_IMPORTED_MODULE_29__.getServer)() && (0, _server_config__WEBPACK_IMPORTED_MODULE_29__.getServer)().BASE_SERVER; }, handlers["set-server-url"] = async function ({ url, validate = !0 }) { if (null == url)
                await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.removeItem("user-token");
            else if (url = url.replace(/\/+$/, ""), validate) {
                let result = await (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.runHandler)(handlers["subscribe-needs-bootstrap"], { url });
                if ("error" in result)
                    return { error: result.error };
            } return await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.setItem("server-url", url), await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.setItem("did-bootstrap", !0), (0, _server_config__WEBPACK_IMPORTED_MODULE_29__.setServer)(url), {}; }, handlers["app-focused"] = async function () { _prefs__WEBPACK_IMPORTED_MODULE_25__.getPrefs() && _prefs__WEBPACK_IMPORTED_MODULE_25__.getPrefs().id && (0, _sync__WEBPACK_IMPORTED_MODULE_31__.fullSync)(); }, handlers = (0, _api__WEBPACK_IMPORTED_MODULE_9__.installAPI)(handlers), _actual_app_api_injected__WEBPACK_IMPORTED_MODULE_1__.override((name, args) => (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.runHandler)(_main_app__WEBPACK_IMPORTED_MODULE_19__.app.handlers[name], args)), _main_app__WEBPACK_IMPORTED_MODULE_19__.app.handlers = handlers, _main_app__WEBPACK_IMPORTED_MODULE_19__.app.combine(_auth_app__WEBPACK_IMPORTED_MODULE_11__.app, _schedules_app__WEBPACK_IMPORTED_MODULE_28__.app, _budget_app__WEBPACK_IMPORTED_MODULE_12__.app, _dashboard_app__WEBPACK_IMPORTED_MODULE_14__.app, _notes_app__WEBPACK_IMPORTED_MODULE_21__.app, _preferences_app__WEBPACK_IMPORTED_MODULE_24__.app, _tools_app__WEBPACK_IMPORTED_MODULE_34__.app, _filters_app__WEBPACK_IMPORTED_MODULE_18__.app, _reports_app__WEBPACK_IMPORTED_MODULE_26__.app, _rules_app__WEBPACK_IMPORTED_MODULE_27__.app, _admin_app__WEBPACK_IMPORTED_MODULE_8__.app, _transactions_app__WEBPACK_IMPORTED_MODULE_35__.app, _accounts_app__WEBPACK_IMPORTED_MODULE_7__.app, _payees_app__WEBPACK_IMPORTED_MODULE_22__.app, _spreadsheet_app__WEBPACK_IMPORTED_MODULE_30__.app, _sync_app__WEBPACK_IMPORTED_MODULE_32__.app, _budgetfiles_app__WEBPACK_IMPORTED_MODULE_13__.app, _encryption_app__WEBPACK_IMPORTED_MODULE_17__.app, _tags_app__WEBPACK_IMPORTED_MODULE_33__.app);
            let lib = { getDataDir: _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.getDataDir, sendMessage: (msg, args) => _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send(msg, args), send: async (name, args) => await (0, _mutators__WEBPACK_IMPORTED_MODULE_20__.runHandler)(_main_app__WEBPACK_IMPORTED_MODULE_19__.app.handlers[name], args), on: (name, func) => _main_app__WEBPACK_IMPORTED_MODULE_19__.app.events.on(name, func), q: _shared_query__WEBPACK_IMPORTED_MODULE_6__.q, db: _db__WEBPACK_IMPORTED_MODULE_15__ };
        }, "./packages/loot-core/src/server/migrate/migrations.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { applyMigration: () => applyMigration, getAppliedMigrations: () => getAppliedMigrations, getMigrationList: () => getMigrationList, getMigrationsDir: () => getMigrationsDir, getPending: () => getPending, getUpMigration: () => getUpMigration, migrate: () => migrate, withMigrationsDir: () => withMigrationsDir });
            var _migrations_1632571489012_remove_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/migrations/1632571489012_remove_cache.js"), _migrations_1722717601000_reports_move_selected_categories__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/migrations/1722717601000_reports_move_selected_categories.js"), _migrations_1722804019000_create_dashboard_table__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/migrations/1722804019000_create_dashboard_table.js"), _migrations_1723665565000_prefs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/migrations/1723665565000_prefs.js"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _prefs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts");
            let MIGRATIONS_DIR = _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.migrationsPath, javascriptMigrations = { 0x17c1cd7faf4: _migrations_1632571489012_remove_cache__WEBPACK_IMPORTED_MODULE_0__.default, 1722717601e3: _migrations_1722717601000_reports_move_selected_categories__WEBPACK_IMPORTED_MODULE_1__.default, 1722804019e3: _migrations_1722804019000_create_dashboard_table__WEBPACK_IMPORTED_MODULE_2__.default, 1723665565e3: _migrations_1723665565000_prefs__WEBPACK_IMPORTED_MODULE_3__.default };
            async function withMigrationsDir(dir, func) { let oldDir = MIGRATIONS_DIR; MIGRATIONS_DIR = dir, await func(), MIGRATIONS_DIR = oldDir; }
            function getMigrationsDir() { return MIGRATIONS_DIR; }
            function getMigrationId(name) { return parseInt(name.match(/^(\d)+/)[0]); }
            function getUpMigration(id, names) { for (let m of names)
                if (getMigrationId(m) === id)
                    return m; }
            async function patchBadMigrations(db) { (await getAppliedMigrations(db)).includes(0x1886833d2f0) && (await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.runQuery(db, "DELETE FROM __migrations__ WHERE id = ?", [0x1886833d2f0]), await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.runQuery(db, "INSERT INTO __migrations__ (id) VALUES (?)", [0x1893150d0e9])); }
            async function getAppliedMigrations(db) { return (await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.runQuery(db, "SELECT * FROM __migrations__ ORDER BY id ASC", [], !0)).map(row => row.id); }
            async function getMigrationList(migrationsDir) { return (await _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.listDir(migrationsDir)).filter(name => name.match(/(\.sql|\.js)$/)).sort((m1, m2) => { let id1 = getMigrationId(m1), id2 = getMigrationId(m2); return id1 < id2 ? -1 : +(id1 > id2); }); }
            function getPending(appliedIds, all) { return all.filter(name => { let id = getMigrationId(name); return -1 === appliedIds.indexOf(id); }); }
            async function applyJavaScript(db, id) { if (null == javascriptMigrations[id])
                throw Error("Could not find JS migration code to run for " + id); return (0, javascriptMigrations[id])({ runQuery: (query, params, fetchAll) => _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.runQuery(db, query, params, fetchAll), execQuery: query => _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.execQuery(db, query), transaction: func => _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.transaction(db, func) }, { fs: _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__, fileId: _prefs__WEBPACK_IMPORTED_MODULE_6__.getPrefs()?.id }); }
            async function applySql(db, sql) { try {
                await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.execQuery(db, sql);
            }
            catch (e) {
                throw console.log("Error applying sql:", sql), e;
            } }
            async function applyMigration(db, name, migrationsDir) { let code = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.readFile(_platform_server_fs__WEBPACK_IMPORTED_MODULE_4__.join(migrationsDir, name)); name.match(/\.js$/) ? await applyJavaScript(db, getMigrationId(name)) : await applySql(db, code), await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_5__.runQuery(db, "INSERT INTO __migrations__ (id) VALUES (?)", [getMigrationId(name)]); }
            async function migrate(db) { await patchBadMigrations(db); let appliedIds = await getAppliedMigrations(db), available = await getMigrationList(MIGRATIONS_DIR); for (let i = 0; i < appliedIds.length; i++)
                if (i >= available.length || appliedIds[i] !== getMigrationId(available[i]))
                    throw console.error("Database is out of sync with migrations:", { appliedIds: appliedIds, available: available }), Error("out-of-sync-migrations"); let pending = getPending(appliedIds, available); for (let migration of pending)
                await applyMigration(db, migration, MIGRATIONS_DIR); return pending; }
        }, "./packages/loot-core/src/server/models.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { accountModel: () => accountModel, categoryGroupModel: () => categoryGroupModel, categoryModel: () => categoryModel, fromDateRepr: () => fromDateRepr, payeeModel: () => payeeModel, requiredFields: () => requiredFields, toDateRepr: () => toDateRepr });
            var _aql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/errors.ts");
            function requiredFields(name, row, fields, update) { fields.forEach(field => { if (update) {
                if (row.hasOwnProperty(field) && null == row[field])
                    throw new _errors__WEBPACK_IMPORTED_MODULE_1__.ValidationError(`${name} is missing field ${String(field)}`);
            }
            else if (!row.hasOwnProperty(field) || null == row[field])
                throw new _errors__WEBPACK_IMPORTED_MODULE_1__.ValidationError(`${name} is missing field ${String(field)}`); }); }
            function toDateRepr(str) { if ("string" != typeof str)
                throw Error("toDateRepr not passed a string: " + str); return parseInt(str.replace(/-/g, "")); }
            function fromDateRepr(number) { if ("number" != typeof number)
                throw Error("fromDateRepr not passed a number: " + number); let dateString = number.toString(); return dateString.slice(0, 4) + "-" + dateString.slice(4, 6) + "-" + dateString.slice(6); }
            let accountModel = { validate: (account, { update } = {}) => (requiredFields("account", account, update ? ["name", "offbudget", "closed"] : ["name"], update), account) }, categoryModel = { validate(category, { update } = {}) { requiredFields("category", category, update ? ["name", "is_income", "cat_group"] : ["name", "cat_group"], update); let { sort_order, ...rest } = category; return { ...rest }; }, toDb: (category, { update } = {}) => update ? (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForUpdate)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "categories", category) : (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForInsert)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "categories", category), fromDb: category => (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertFromSelect)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "categories", category) }, categoryGroupModel = { validate(categoryGroup, { update } = {}) { requiredFields("categoryGroup", categoryGroup, update ? ["name", "is_income"] : ["name"], update); let { sort_order, ...rest } = categoryGroup; return { ...rest }; }, toDb: (categoryGroup, { update } = {}) => update ? (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForUpdate)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "category_groups", categoryGroup) : (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForInsert)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "category_groups", categoryGroup), fromDb(categoryGroup) { let { categories, ...rest } = categoryGroup; return { ...(0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertFromSelect)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "category_groups", rest), categories: categories.filter(category => category.cat_group === categoryGroup.id).map(categoryModel.fromDb) }; } }, payeeModel = { validate: (payee, { update } = {}) => (requiredFields("payee", payee, update ? [] : ["name"], update), payee), toDb: (payee, { update } = {}) => update ? (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForUpdate)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "payees", payee) : (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertForInsert)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "payees", payee), fromDb: payee => (0, _aql__WEBPACK_IMPORTED_MODULE_0__.convertFromSelect)(_aql__WEBPACK_IMPORTED_MODULE_0__.schema, _aql__WEBPACK_IMPORTED_MODULE_0__.schemaConfig, "payees", payee) };
        }, "./packages/loot-core/src/server/mutators.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { disableGlobalMutations: () => disableGlobalMutations, enableGlobalMutations: () => enableGlobalMutations, getMutatorContext: () => getMutatorContext, isMutating: () => isMutating, mutator: () => mutator, runHandler: () => runHandler, runMutator: () => runMutator, withMutatorContext: () => withMutatorContext });
            var _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _shared_async__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/async.ts");
            let runningMethods = new Set, currentContext = null, mutatingMethods = new WeakMap, _latestHandlerNames = [];
            function mutator(handler) { return mutatingMethods.set(handler, !0), handler; }
            function isMutating(handler) { return mutatingMethods.has(handler); }
            async function flushRunningMethods() { for (await wait(200); runningMethods.size > 0;)
                await Promise.all([...runningMethods.values()]), await wait(100); }
            function wait(time) { return new Promise(resolve => setTimeout(resolve, time)); }
            async function runHandler(handler, args, { undoTag, name } = {}) { if (_latestHandlerNames.push(name), _latestHandlerNames.length > 5 && (_latestHandlerNames = _latestHandlerNames.slice(-5)), mutatingMethods.has(handler))
                return runMutator(() => handler(args), { undoTag }); "close-budget" === name && await flushRunningMethods(); let promise = handler(args); return runningMethods.add(promise), promise.then(() => { runningMethods.delete(promise); }), promise; }
            function enableGlobalMutations() { }
            function disableGlobalMutations() { }
            let runMutator = (0, _shared_async__WEBPACK_IMPORTED_MODULE_1__.sequential)(function (func, initialContext = {}) { return currentContext = initialContext, func().finally(() => { currentContext = null; }); });
            function withMutatorContext(context, func) { if (null == currentContext)
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureBreadcrumb)("Recent methods: " + _latestHandlerNames.join(", ")), (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureException)(Error("withMutatorContext: mutator not running")), func(); let prevContext = currentContext; return currentContext = { ...currentContext, ...context }, func().finally(() => { currentContext = prevContext; }); }
            function getMutatorContext() { return null == currentContext ? ((0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureBreadcrumb)({ category: "server", message: "Recent methods: " + _latestHandlerNames.join(", ") }), {}) : currentContext; }
        }, "./packages/loot-core/src/server/notes/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function updateNotes({ id, note }) { await _db__WEBPACK_IMPORTED_MODULE_1__.update("notes", { id, note }); }
            app.method("notes-save", updateNotes);
        }, "./packages/loot-core/src/server/payees/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _models__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _sync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function createPayee({ name }) { return _db__WEBPACK_IMPORTED_MODULE_1__.insertPayee({ name }); }
            async function getCommonPayees() { return (await _db__WEBPACK_IMPORTED_MODULE_1__.getCommonPayees()).map(_models__WEBPACK_IMPORTED_MODULE_2__.payeeModel.fromDb); }
            async function getPayees() { return (await _db__WEBPACK_IMPORTED_MODULE_1__.getPayees()).map(_models__WEBPACK_IMPORTED_MODULE_2__.payeeModel.fromDb); }
            async function getOrphanedPayees() { return await _db__WEBPACK_IMPORTED_MODULE_1__.syncGetOrphanedPayees(); }
            async function getPayeeRuleCounts() { let payeeCounts = {}; return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_5__.iterateIds(_transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_5__.getRules(), "payee", (rule, id) => { null == payeeCounts[id] && (payeeCounts[id] = 0), payeeCounts[id]++; }), payeeCounts; }
            async function mergePayees({ targetId, mergeIds }) { await _db__WEBPACK_IMPORTED_MODULE_1__.mergePayees(targetId, mergeIds); }
            async function batchChangePayees({ added, deleted, updated }) { await (0, _sync__WEBPACK_IMPORTED_MODULE_4__.batchMessages)(async () => { deleted && await Promise.all(deleted.map(p => ({ id: p.id })).map(p => _db__WEBPACK_IMPORTED_MODULE_1__.deletePayee(p))), added && await Promise.all(added.map(p => _models__WEBPACK_IMPORTED_MODULE_2__.payeeModel.toDb(p)).map(p => _db__WEBPACK_IMPORTED_MODULE_1__.insertPayee(p))), updated && await Promise.all(updated.map(p => _models__WEBPACK_IMPORTED_MODULE_2__.payeeModel.toDb(p, { update: !0 })).map(p => _db__WEBPACK_IMPORTED_MODULE_1__.updatePayee(p))); }); }
            async function checkOrphanedPayees({ ids }) { let orphaned = new Set(await _db__WEBPACK_IMPORTED_MODULE_1__.getOrphanedPayees()); return ids.filter(id => orphaned.has(id)); }
            async function getPayeeRules({ id }) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_5__.getRulesForPayee(id).map(rule => rule.serialize()); }
            app.method("payee-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_6__.undoable)(createPayee))), app.method("common-payees-get", getCommonPayees), app.method("payees-get", getPayees), app.method("payees-get-orphaned", getOrphanedPayees), app.method("payees-get-rule-counts", getPayeeRuleCounts), app.method("payees-merge", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_6__.undoable)(mergePayees, args => ({ mergeIds: args.mergeIds, targetId: args.targetId })))), app.method("payees-batch-change", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_6__.undoable)(batchChangePayees))), app.method("payees-check-orphaned", checkOrphanedPayees), app.method("payees-get-rules", getPayeeRules);
        }, "./packages/loot-core/src/server/polyfills.ts": () => { }, "./packages/loot-core/src/server/post.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { del: () => del, get: () => get, patch: () => patch, post: () => post, postBinary: () => postBinary });
            var _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/fetch/index.api.ts"), _shared_platform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/platform.electron.ts"), _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/errors.ts");
            function throwIfNot200(res, text) { if (200 !== res.status) {
                if (500 === res.status)
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(500 === res.status ? "internal" : text);
                if (-1 !== res.headers.get("Content-Type").toLowerCase().indexOf("application/json")) {
                    let json = JSON.parse(text);
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(json.reason);
                }
                if (["ngrok-error-code"].some(header => res.headers.has(header)))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("network-failure");
                throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(text);
            } }
            async function post(url, data1, headers = {}, timeout = null) {
                let text, res, responseData;
                try {
                    let controller = new AbortController, timeoutId = setTimeout(() => controller.abort(), timeout), signal = timeout ? controller.signal : null;
                    res = await (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(url, { method: "POST", body: JSON.stringify(data1), signal, headers: { ...headers, "Content-Type": "application/json" } }), clearTimeout(timeoutId), text = await res.text();
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("network-failure");
                }
                throwIfNot200(res, text);
                try {
                    responseData = JSON.parse(text);
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("parse-json", { meta: text });
                }
                if ("ok" !== responseData.status)
                    throw console.log("API call failed: " + url + `
Data: ` + JSON.stringify(data1, null, 2) + `
Response: ` + JSON.stringify(res, null, 2)), new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(responseData.description || responseData.reason || "unknown");
                return responseData.data;
            }
            async function del(url, data1, headers = {}, timeout = null) {
                let text, res;
                try {
                    let controller = new AbortController, timeoutId = setTimeout(() => controller.abort(), timeout), signal = timeout ? controller.signal : null;
                    res = await (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(url, { method: "DELETE", body: JSON.stringify(data1), signal, headers: { ...headers, "Content-Type": "application/json" } }), clearTimeout(timeoutId), text = await res.text();
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("network-failure");
                }
                throwIfNot200(res, text);
                try {
                    res = JSON.parse(text);
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("parse-json", { meta: text });
                }
                if ("ok" !== res.status)
                    throw console.log("API call failed: " + url + `
Data: ` + JSON.stringify(data1, null, 2) + `
Response: ` + JSON.stringify(res, null, 2)), new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(res.description || res.reason || "unknown");
                return res.data;
            }
            async function patch(url, data1, headers = {}, timeout = null) {
                let text, res;
                try {
                    let controller = new AbortController, timeoutId = setTimeout(() => controller.abort(), timeout), signal = timeout ? controller.signal : null;
                    res = await (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(url, { method: "PATCH", body: JSON.stringify(data1), signal, headers: { ...headers, "Content-Type": "application/json" } }), clearTimeout(timeoutId), text = await res.text();
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("network-failure");
                }
                throwIfNot200(res, text);
                try {
                    res = JSON.parse(text);
                }
                catch (err) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("parse-json", { meta: text });
                }
                if ("ok" !== res.status)
                    throw console.log("API call failed: " + url + `
Data: ` + JSON.stringify(data1, null, 2) + `
Response: ` + JSON.stringify(res, null, 2)), new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError(res.description || res.reason || "unknown");
                return res.data;
            }
            async function postBinary(url, data1, headers) { let res, buffer; try {
                res = await (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(url, { method: "POST", body: _shared_platform__WEBPACK_IMPORTED_MODULE_1__.isBrowser ? data1 : Buffer.from(data1), headers: { "Content-Length": data1.length, "Content-Type": "application/actual-sync", ...headers } });
            }
            catch (err) {
                throw new _errors__WEBPACK_IMPORTED_MODULE_2__.PostError("network-failure");
            } return buffer = res.arrayBuffer ? Buffer.from(await res.arrayBuffer()) : await res.buffer(), throwIfNot200(res, buffer.toString()), buffer; }
            function get(url, opts) { return (0, _platform_server_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(url, opts).then(res => res.text()); }
        }, "./packages/loot-core/src/server/preferences/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _main__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/main.ts"), _mutators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _post__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _prefs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _server_config__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _undo__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_3__.createApp)();
            async function saveSyncedPrefs({ id, value }) { id && await _db__WEBPACK_IMPORTED_MODULE_4__.update("preferences", { id, value }); }
            async function getSyncedPrefs() { return (await _db__WEBPACK_IMPORTED_MODULE_4__.all("SELECT id, value FROM preferences")).reduce((carry, { value, id }) => (carry[id] = value, carry), {}); }
            async function saveGlobalPrefs(prefs) { return prefs && (void 0 !== prefs.maxMonths && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("max-months", "" + prefs.maxMonths), void 0 !== prefs.categoryExpandedState && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("category-expanded-state", "" + prefs.categoryExpandedState), void 0 !== prefs.documentDir && await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.exists(prefs.documentDir) && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("document-dir", prefs.documentDir), void 0 !== prefs.floatingSidebar && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("floating-sidebar", "" + prefs.floatingSidebar), void 0 !== prefs.language && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("language", prefs.language), void 0 !== prefs.theme && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("theme", prefs.theme), void 0 !== prefs.preferredDarkTheme && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("preferred-dark-theme", prefs.preferredDarkTheme), void 0 !== prefs.serverSelfSignedCert && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("server-self-signed-cert", prefs.serverSelfSignedCert), void 0 !== prefs.syncServerConfig && await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.setItem("syncServerConfig", prefs.syncServerConfig)), "ok"; }
            async function loadGlobalPrefs() { let { "floating-sidebar": floatingSidebar, "category-expanded-state": categoryExpandedState, "max-months": maxMonths, "document-dir": documentDir, "encrypt-key": encryptKey, language, theme, "preferred-dark-theme": preferredDarkTheme, "server-self-signed-cert": serverSelfSignedCert, syncServerConfig } = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.multiGet(["floating-sidebar", "category-expanded-state", "max-months", "document-dir", "encrypt-key", "language", "theme", "preferred-dark-theme", "server-self-signed-cert", "syncServerConfig"]); return { floatingSidebar: "true" === floatingSidebar, categoryExpandedState: (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.stringToInteger)(categoryExpandedState || "") || 0, maxMonths: (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.stringToInteger)(maxMonths || "") || 1, documentDir: documentDir || (0, _main__WEBPACK_IMPORTED_MODULE_5__.getDefaultDocumentDir)(), keyId: encryptKey && JSON.parse(encryptKey).id, language, theme: "light" === theme || "dark" === theme || "auto" === theme || "development" === theme || "midnight" === theme ? theme : "auto", preferredDarkTheme: "dark" === preferredDarkTheme || "midnight" === preferredDarkTheme ? preferredDarkTheme : "dark", serverSelfSignedCert: serverSelfSignedCert || void 0, syncServerConfig: syncServerConfig || void 0 }; }
            async function saveMetadataPrefs(prefsToSet) { if (!prefsToSet)
                return "ok"; let { cloudFileId } = (0, _prefs__WEBPACK_IMPORTED_MODULE_8__.getPrefs)(); if (prefsToSet.budgetName && cloudFileId) {
                let userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_0__.getItem("user-token"), syncServer = (0, _server_config__WEBPACK_IMPORTED_MODULE_9__.getServer)()?.SYNC_SERVER;
                if (!syncServer)
                    throw Error("No sync server set");
                await (0, _post__WEBPACK_IMPORTED_MODULE_7__.post)(syncServer + "/update-user-filename", { token: userToken, fileId: cloudFileId, name: prefsToSet.budgetName });
            } return await (0, _prefs__WEBPACK_IMPORTED_MODULE_8__.savePrefs)(prefsToSet), "ok"; }
            async function loadMetadataPrefs() { return (0, _prefs__WEBPACK_IMPORTED_MODULE_8__.getPrefs)(); }
            app.method("preferences/save", (0, _mutators__WEBPACK_IMPORTED_MODULE_6__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_10__.undoable)(saveSyncedPrefs))), app.method("preferences/get", getSyncedPrefs), app.method("save-global-prefs", saveGlobalPrefs), app.method("load-global-prefs", loadGlobalPrefs), app.method("save-prefs", saveMetadataPrefs), app.method("load-prefs", loadMetadataPrefs);
        }, "./packages/loot-core/src/server/prefs.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { BUDGET_TYPES: () => BUDGET_TYPES, UPCOMING_SCHEDULED_TRANSACTION_LENGTHS: () => UPCOMING_SCHEDULED_TRANSACTION_LENGTHS, getDefaultPrefs: () => getDefaultPrefs, getPrefs: () => getPrefs, loadPrefs: () => loadPrefs, savePrefs: () => savePrefs, unloadPrefs: () => unloadPrefs });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _sync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            let BUDGET_TYPES = ["tracking", "envelope"], UPCOMING_SCHEDULED_TRANSACTION_LENGTHS = ["1", "7", "14", "30"], prefs = null;
            async function loadPrefs(id) { let fullpath = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(id), "metadata.json"); try {
                prefs = JSON.parse(await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.readFile(fullpath));
            }
            catch (e) {
                prefs = { id, budgetName: id };
            } return prefs.id = id, prefs; }
            async function savePrefs(prefsToSet, { avoidSync = !1 } = {}) { if (Object.assign(prefs, prefsToSet), !avoidSync) {
                let messages = Object.keys(prefsToSet).map(key => "budgetName" === key ? { dataset: "prefs", row: key, column: "value", value: prefsToSet[key], timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() } : null).filter(x => x);
                messages.length > 0 && await (0, _sync__WEBPACK_IMPORTED_MODULE_2__.sendMessages)(messages);
            } {
                let prefsPath = _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.join(_platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.getBudgetDir(prefs.id), "metadata.json");
                await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.writeFile(prefsPath, JSON.stringify(prefs));
            } }
            function unloadPrefs() { prefs = null; }
            function getPrefs() { return prefs; }
            function getDefaultPrefs(id, budgetName) { return { id, budgetName }; }
        }, "./packages/loot-core/src/server/reports/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app, reportModel: () => reportModel });
            var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _undo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let reportModel = { validate(report, { update } = {}) { if ((0, _models__WEBPACK_IMPORTED_MODULE_3__.requiredFields)("Report", report, ["conditionsOp"], update), (!update || "conditionsOp" in report) && !["and", "or"].includes(report.conditionsOp))
                    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.ValidationError("Invalid filter conditionsOp: " + report.conditionsOp); return report; }, toJS: row => ({ id: row.id, name: row.name, startDate: row.start_date, endDate: row.end_date, isDateStatic: 1 === row.date_static, dateRange: row.date_range, mode: row.mode, groupBy: row.group_by, sortBy: row.sort_by, interval: row.interval, balanceType: row.balance_type, showEmpty: 1 === row.show_empty, showOffBudget: 1 === row.show_offbudget, showHiddenCategories: 1 === row.show_hidden, showUncategorized: 1 === row.show_uncategorized, includeCurrentInterval: 1 === row.include_current, graphType: row.graph_type, conditions: row.conditions, conditionsOp: row.conditions_op }), fromJS: report => ({ id: report.id, name: report.name, start_date: report.startDate, end_date: report.endDate, date_static: +!!report.isDateStatic, date_range: report.dateRange, mode: report.mode, group_by: report.groupBy, sort_by: report.sortBy, interval: report.interval, balance_type: report.balanceType, show_empty: +!!report.showEmpty, show_offbudget: +!!report.showOffBudget, show_hidden: +!!report.showHiddenCategories, show_uncategorized: +!!report.showUncategorized, include_current: +!!report.includeCurrentInterval, graph_type: report.graphType, conditions: report.conditions, conditions_op: report.conditionsOp }) };
            async function reportNameExists(name, reportId, newItem) { let idForName = await _db__WEBPACK_IMPORTED_MODULE_1__.first("SELECT id from custom_reports WHERE tombstone = 0 AND name = ?", [name]); return null !== idForName && (!!newItem || idForName.id !== reportId); }
            async function createReport(report) { let reportId = (0, uuid__WEBPACK_IMPORTED_MODULE_6__.default)(), item = { ...report, id: reportId }; if (!item.name)
                throw Error("Report name is required"); if (await reportNameExists(item.name, item.id ?? "", !0))
                throw Error("There is already a report named " + item.name); return await _db__WEBPACK_IMPORTED_MODULE_1__.insertWithSchema("custom_reports", reportModel.fromJS(item)), reportId; }
            async function updateReport(item) { if (!item.name)
                throw Error("Report name is required"); if (!item.id)
                throw Error("Report recall error"); if (await reportNameExists(item.name, item.id, !1))
                throw Error("There is already a report named " + item.name); await _db__WEBPACK_IMPORTED_MODULE_1__.updateWithSchema("custom_reports", reportModel.fromJS(item)); }
            async function deleteReport(id) { await _db__WEBPACK_IMPORTED_MODULE_1__.delete_("custom_reports", id); }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            app.method("report/create", (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_5__.undoable)(createReport))), app.method("report/update", (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_5__.undoable)(updateReport))), app.method("report/delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_5__.undoable)(deleteReport)));
        }, "./packages/loot-core/src/server/rules/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _mutators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _sync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), ___WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/rules/index.ts");
            function validateRule(rule) { function runValidation(array, validate) { let result = array.map(item => { try {
                validate(item);
            }
            catch (e) {
                if (e instanceof _errors__WEBPACK_IMPORTED_MODULE_1__.RuleError)
                    return console.warn("Invalid rule", e), e.type;
                throw e;
            } return null; }); return result.filter(res => "string" == typeof res).length ? result : null; } let conditionErrors = runValidation(rule.conditions, cond => new ___WEBPACK_IMPORTED_MODULE_6__.Condition(cond.op, cond.field, cond.value, cond.options)), actionErrors = runValidation(rule.actions, action => "set-split-amount" === action.op ? new ___WEBPACK_IMPORTED_MODULE_6__.Action(action.op, null, action.value, action.options) : "link-schedule" === action.op || "prepend-notes" === action.op || "append-notes" === action.op ? new ___WEBPACK_IMPORTED_MODULE_6__.Action(action.op, null, action.value, null) : new ___WEBPACK_IMPORTED_MODULE_6__.Action(action.op, action.field, action.value, action.options)); return conditionErrors || actionErrors ? { conditionErrors, actionErrors } : null; }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function ruleValidate(rule) { return { error: validateRule(rule) }; }
            async function addRule(rule) { let error = validateRule(rule); return error ? { error } : { id: await _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.insertRule(rule), ...rule }; }
            async function updateRule(rule) { let error = validateRule(rule); return error ? { error } : (await _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.updateRule(rule), rule); }
            async function deleteRule(id) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.deleteRule(id); }
            async function deleteAllRules(ids) { let someDeletionsFailed = !1; return await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { for (let id of ids)
                !1 === await _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.deleteRule(id) && (someDeletionsFailed = !0); }), { someDeletionsFailed }; }
            async function applyRuleActions({ transactions, actions }) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.applyActions(transactions, actions); }
            async function addRulePayeeRename({ fromNames, to }) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.updatePayeeRenameRule(fromNames, to); }
            async function getRule({ id }) { let rule = _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.getRules().find(rule => rule.id === id); return rule ? rule.serialize() : null; }
            async function getRules() { return (0, ___WEBPACK_IMPORTED_MODULE_6__.rankRules)(_transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.getRules()).map(rule => rule.serialize()); }
            async function runRules({ transaction }) { return _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_4__.runRules(transaction); }
            app.method("rule-validate", ruleValidate), app.method("rule-add", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(addRule)), app.method("rule-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(updateRule)), app.method("rule-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(deleteRule)), app.method("rule-delete-all", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(deleteAllRules)), app.method("rule-apply-actions", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_5__.undoable)(applyRuleActions))), app.method("rule-add-payee-rename", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(addRulePayeeRename)), app.method("rules-get", getRules), app.method("rule-get", getRule), app.method("rules-run", runRules);
        }, "./packages/loot-core/src/server/rules/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Action: () => Action, Condition: () => Condition, Rule: () => Rule, RuleIndexer: () => RuleIndexer, execActions: () => execActions, iterateIds: () => iterateIds, migrateIds: () => migrateIds, parseDateString: () => parseDateString, rankRules: () => rankRules });
            var date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/date-fns/isValid.js"), date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/date-fns/parseISO.js"), date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/subDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/date-fns/addDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/date-fns/addMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/date-fns/subMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/date-fns/addWeeks.js"), date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/date-fns/subWeeks.js"), date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/date-fns/addYears.js"), date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/date-fns/subYears.js"), handlebars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/handlebars/dist/handlebars.js"), _shared_months__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_rules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/rules.ts"), _shared_schedules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/schedules.ts"), _shared_transactions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/transactions.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _errors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _util_rschedule__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/util/rschedule.ts");
            function assert(test, type, msg) { if (!test)
                throw new _errors__WEBPACK_IMPORTED_MODULE_6__.RuleError(type, msg); }
            function parseDateString(str) { if ("string" != typeof str)
                ;
            else if (10 === str.length)
                return date_fns__WEBPACK_IMPORTED_MODULE_14__.isValid(date_fns__WEBPACK_IMPORTED_MODULE_15__.parseISO(str)) ? { type: "date", date: str } : null;
            else if (7 === str.length)
                return date_fns__WEBPACK_IMPORTED_MODULE_14__.isValid(date_fns__WEBPACK_IMPORTED_MODULE_15__.parseISO(str + "-01")) ? { type: "month", date: str } : null;
            else if (4 === str.length)
                return date_fns__WEBPACK_IMPORTED_MODULE_14__.isValid(date_fns__WEBPACK_IMPORTED_MODULE_15__.parseISO(str + "-01-01")) ? { type: "year", date: str } : null; return null; }
            !function () { let regexTest = /^\/(.*)\/([gimuy]*)$/; function mathHelper(fn) { return (a, ...b) => b.map(Number).reduce(fn, Number(a)); } function regexHelper(mapRegex, mapNonRegex, apply) { return (value, regex, replace) => { let regexp; if (null == value)
                return null; if ("string" != typeof regex || "string" != typeof replace)
                return ""; let match = regexTest.exec(regex); return regexp = match ? mapRegex(match[1], match[2]) : mapNonRegex(regex), apply(String(value), regexp, replace); }; } for (let [name, fn] of Object.entries({ regex: regexHelper((regex, flags) => new RegExp(regex, flags), value => new RegExp(value), (value, regex, replace) => value.replace(regex, replace)), replace: regexHelper((regex, flags) => new RegExp(regex, flags), value => value, (value, regex, replace) => value.replace(regex, replace)), replaceAll: regexHelper((regex, flags) => new RegExp(regex, flags), value => value, (value, regex, replace) => value.replaceAll(regex, replace)), add: mathHelper((a, b) => a + b), sub: mathHelper((a, b) => a - b), div: mathHelper((a, b) => a / b), mul: mathHelper((a, b) => a * b), mod: mathHelper((a, b) => a % b), floor: a => Math.floor(Number(a)), ceil: a => Math.ceil(Number(a)), round: a => Math.round(Number(a)), abs: a => Math.abs(Number(a)), min: mathHelper((a, b) => Math.min(a, b)), max: mathHelper((a, b) => Math.max(a, b)), fixed: (a, digits) => Number(a).toFixed(Number(digits)), day: date => date && (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(date, "d"), month: date => date && (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(date, "M"), year: date => date && (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(date, "yyyy"), format: (date, f) => date && f && (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(date, f), addDays: (date, days) => date && days ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.addDays)(date, days), "yyyy-MM-dd") : date, subDays: (date, days) => date && days ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.subDays)(date, days), "yyyy-MM-dd") : date, addMonths: (date, months) => date && months ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_8__.addMonths)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), months), "yyyy-MM-dd") : date, subMonths: (date, months) => date && months ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_9__.subMonths)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), months), "yyyy-MM-dd") : date, addWeeks: (date, weeks) => date && weeks ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_10__.addWeeks)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), weeks), "yyyy-MM-dd") : date, subWeeks: (date, weeks) => date && weeks ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_11__.subWeeks)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), weeks), "yyyy-MM-dd") : date, addYears: (date, years) => date && years ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_12__.addYears)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), years), "yyyy-MM-dd") : date, subYears: (date, years) => date && years ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, date_fns__WEBPACK_IMPORTED_MODULE_13__.subYears)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), years), "yyyy-MM-dd") : date, setDay: (date, day) => { if (!date)
                    return date; let actualDay = Number((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(date, "d")); return (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)((0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.addDays)(date, day - actualDay), "yyyy-MM-dd"); }, debug: value => { console.log(value); }, concat: (...args) => args.join("") }))
                handlebars__WEBPACK_IMPORTED_MODULE_0__.registerHelper(name, (...args) => fn(...args.slice(0, -1))); }();
            let CONDITION_TYPES = { date: { ops: ["is", "isapprox", "gt", "gte", "lt", "lte"], nullable: !1, parse(op, value, fieldName) { let parsed = "string" == typeof value ? parseDateString(value) : null != value.frequency ? function (desc) { try {
                        let rules = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_3__.recurConfigToRSchedule)(desc);
                        return { type: "recur", schedule: new _util_rschedule__WEBPACK_IMPORTED_MODULE_7__.Schedule({ rrules: rules, data: { skipWeekend: desc.skipWeekend, weekendSolve: desc.weekendSolveMode } }) };
                    }
                    catch (e) {
                        throw new _errors__WEBPACK_IMPORTED_MODULE_6__.RuleError("parse-recur-date", e.message);
                    } }(value) : null; return assert(parsed, "date-format", `Invalid date format (field: ${fieldName})`), "isapprox" === op ? assert("date" === parsed.type || "recur" === parsed.type, "date-format", `Invalid date value for “isapprox” (field: ${fieldName})`) : ("gt" === op || "gte" === op || "lt" === op || "lte" === op) && assert("date" === parsed.type, "date-format", `Invalid date value for “${op}” (field: ${fieldName})`), parsed; } }, id: { ops: ["is", "contains", "matches", "oneOf", "isNot", "doesNotContain", "notOneOf", "and", "onBudget", "offBudget"], nullable: !0, parse: (op, value, fieldName) => (("oneOf" === op || "notOneOf" === op || "and" === op) && assert(Array.isArray(value), "no-empty-array", `oneOf must have an array value (field: ${fieldName})`), value) }, string: { ops: ["is", "contains", "matches", "oneOf", "isNot", "doesNotContain", "notOneOf", "hasTags"], nullable: !0, parse: (op, value, fieldName) => "oneOf" === op || "notOneOf" === op ? (assert(Array.isArray(value), "no-empty-array", `oneOf must have an array value (field: ${fieldName}): ${JSON.stringify(value)}`), value.filter(Boolean).map(val1 => val1.toLowerCase())) : (assert("string" == typeof value, "not-string", `Invalid string value (field: ${fieldName})`), ("contains" === op || "matches" === op || "doesNotContain" === op || "hasTags" === op) && assert(value.length > 0, "no-empty-string", `${op} must have non-empty string (field: ${fieldName})`), "hasTags" === op) ? value : value.toLowerCase() }, number: { ops: ["is", "isapprox", "isbetween", "gt", "gte", "lt", "lte"], nullable: !1, parse(op, value, fieldName) { let parsed = "number" == typeof value ? { type: "literal", value } : function (between) { let { num1, num2 } = between; return "number" != typeof num1 || "number" != typeof num2 ? null : { type: "between", num1, num2 }; }(value); return assert(null != parsed, "not-number", `Value must be a number or between amount: ${JSON.stringify(value)} (field: ${fieldName})`), "isbetween" === op ? assert("between" === parsed.type, "number-format", `Invalid between value for “${op}” (field: ${fieldName})`) : assert("literal" === parsed.type, "number-format", `Invalid number value for “${op}” (field: ${fieldName})`), parsed; } }, boolean: { ops: ["is"], nullable: !1, parse: (op, value, fieldName) => (assert("boolean" == typeof value, "not-boolean", `Value must be a boolean: ${value} (field: ${fieldName})`), value) } };
            class Condition {
                constructor(op, field, value, options1) { let typeName = _shared_rules__WEBPACK_IMPORTED_MODULE_2__.FIELD_TYPES.get(field); assert(typeName, "internal", "Invalid condition field: " + field); let type = CONDITION_TYPES[typeName]; assert(type, "internal", `Invalid condition type: ${typeName} (field: ${field})`), assert((0, _shared_rules__WEBPACK_IMPORTED_MODULE_2__.isValidOp)(field, op), "internal", `Invalid condition operator: ${op} (type: ${typeName}, field: ${field})`), !0 !== type.nullable && assert(null != value, "no-null", `Field cannot be empty: ${field}`), "string" === typeName && !0 !== type.nullable && assert("" !== value, "no-null", `Field cannot be empty: ${field}`), this.rawValue = value, this.unparsedValue = value, this.op = op, this.field = field, this.value = type.parse ? type.parse(op, value, field) : value, this.options = options1, this.type = typeName; }
                eval(object) { let fieldValue = object[this.field], type = this.type; if ("string" === type && (fieldValue ??= ""), void 0 === fieldValue)
                    return !1; if ("string" == typeof fieldValue && (fieldValue = fieldValue.toLowerCase()), "number" === type && this.options) {
                    if (this.options.outflow) {
                        if (fieldValue > 0)
                            return !1;
                        fieldValue = -fieldValue;
                    }
                    else if (this.options.inflow && fieldValue < 0)
                        return !1;
                } let extractValue = v => "number" === type ? v.value : v; switch (this.op) {
                    case "isapprox":
                    case "is":
                        if ("date" === type) {
                            if (null == fieldValue)
                                return !1;
                            if ("recur" === this.value.type) {
                                let { schedule } = this.value;
                                if ("isapprox" !== this.op)
                                    return schedule.occursOn({ date: (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(fieldValue) });
                                {
                                    let fieldDate = (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(fieldValue);
                                    return schedule.occursBetween(date_fns__WEBPACK_IMPORTED_MODULE_16__.subDays(fieldDate, 2), date_fns__WEBPACK_IMPORTED_MODULE_17__.addDays(fieldDate, 2));
                                }
                            }
                            {
                                let { date } = this.value;
                                if ("isapprox" === this.op) {
                                    let fullDate = (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(date), high = (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.addDays)(fullDate, 2);
                                    return fieldValue >= (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.subDays)(fullDate, 2) && fieldValue <= high;
                                }
                                switch (this.value.type) {
                                    case "date": return fieldValue === date;
                                    case "month": return (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.monthFromDate)(fieldValue) === date;
                                    case "year": return (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.yearFromDate)(fieldValue) === date;
                                }
                            }
                        }
                        else if ("number" === type) {
                            let number = this.value.value;
                            if ("isapprox" === this.op) {
                                let threshold = (0, _shared_rules__WEBPACK_IMPORTED_MODULE_2__.getApproxNumberThreshold)(number);
                                return fieldValue >= number - threshold && fieldValue <= number + threshold;
                            }
                            return fieldValue === number;
                        }
                        return fieldValue === this.value;
                    case "isNot": return fieldValue !== this.value;
                    case "isbetween": {
                        let [low, high] = (0, _shared_rules__WEBPACK_IMPORTED_MODULE_2__.sortNumbers)(this.value.num1, this.value.num2);
                        return fieldValue >= low && fieldValue <= high;
                    }
                    case "contains":
                    case "hasTags":
                        if (null === fieldValue)
                            break;
                        return -1 !== String(fieldValue).indexOf(this.value);
                    case "doesNotContain":
                        if (null === fieldValue)
                            break;
                        return -1 === String(fieldValue).indexOf(this.value);
                    case "oneOf":
                        if (null === fieldValue)
                            break;
                        return -1 !== this.value.indexOf(fieldValue);
                    case "notOneOf":
                        if (null === fieldValue)
                            break;
                        return -1 === this.value.indexOf(fieldValue);
                    case "gt":
                        if (null === fieldValue)
                            break;
                        if ("date" === type)
                            return (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.isAfter)(fieldValue, this.value.date);
                        return fieldValue > extractValue(this.value);
                    case "gte":
                        if (null === fieldValue)
                            break;
                        if ("date" === type)
                            return fieldValue === this.value.date || (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.isAfter)(fieldValue, this.value.date);
                        return fieldValue >= extractValue(this.value);
                    case "lt":
                        if (null === fieldValue)
                            break;
                        if ("date" === type)
                            return (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.isBefore)(fieldValue, this.value.date);
                        return fieldValue < extractValue(this.value);
                    case "lte":
                        if (null === fieldValue)
                            break;
                        if ("date" === type)
                            return fieldValue === this.value.date || (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.isBefore)(fieldValue, this.value.date);
                        return fieldValue <= extractValue(this.value);
                    case "matches":
                        if (null === fieldValue)
                            break;
                        try {
                            return new RegExp(this.value).test(fieldValue);
                        }
                        catch (e) {
                            console.log("invalid regexp in matches condition", e);
                            break;
                        }
                    case "onBudget":
                        if (!object._account)
                            break;
                        return 0 === object._account.offbudget;
                    case "offBudget":
                        if (!object._account)
                            break;
                        return 1 === object._account.offbudget;
                } return !1; }
                getValue() { return this.value; }
                serialize() { return { op: this.op, field: this.field, value: this.unparsedValue, type: this.type, ...this.options ? { options: this.options } : null }; }
            }
            let ACTION_OPS = ["set", "set-split-amount", "link-schedule", "prepend-notes", "append-notes"];
            class Action {
                constructor(op, field, value, options1) { if (assert(ACTION_OPS.includes(op), "internal", `Invalid action operation: ${op}`), "set" === op) {
                    let typeName = _shared_rules__WEBPACK_IMPORTED_MODULE_2__.FIELD_TYPES.get(field);
                    if (assert(typeName, "internal", `Invalid field for action: ${field}`), this.field = field, this.type = typeName, options1?.template) {
                        this.handlebarsTemplate = handlebars__WEBPACK_IMPORTED_MODULE_0__.compile(options1.template, { noEscape: !0 });
                        try {
                            this.handlebarsTemplate({});
                        }
                        catch (e) {
                            console.debug(e), assert(!1, "invalid-template", "Invalid Handlebars template");
                        }
                    }
                }
                else
                    "set-split-amount" === op ? (this.field = null, this.type = "number") : "link-schedule" === op ? (this.field = null, this.type = "id") : ("prepend-notes" === op || "append-notes" === op) && (this.field = "notes", this.type = "id"); "account" === field && assert(value, "no-null", `Field cannot be empty: ${field}`), this.op = op, this.rawValue = value, this.value = value, this.options = options1; }
                exec(object) { switch (this.op) {
                    case "set":
                        if (this.handlebarsTemplate)
                            switch (object[this.field] = this.handlebarsTemplate({ ...object, today: (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.currentDay)() }), this.type) {
                                case "number":
                                    object[this.field] = parseFloat(object[this.field]);
                                    break;
                                case "date":
                                    let parsed = (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.parseDate)(object[this.field]);
                                    parsed && date_fns__WEBPACK_IMPORTED_MODULE_14__.isValid(parsed) ? object[this.field] = (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.format)(parsed, "yyyy-MM-dd") : (console.error(`rules: invalid date produced by template for field “${this.field}”:`, object[this.field]), object[this.field] = "9999-12-31");
                                    break;
                                case "boolean": object[this.field] = "true" === object[this.field];
                            }
                        else
                            object[this.field] = this.value;
                        "payee_name" === this.field && (object.payee = "new");
                        break;
                    case "set-split-amount":
                        "fixed-amount" === this.options.method && (object.amount = this.value);
                        break;
                    case "link-schedule":
                        object.schedule = this.value;
                        break;
                    case "prepend-notes":
                        object[this.field] = object[this.field] ? this.value + object[this.field] : this.value;
                        break;
                    case "append-notes": object[this.field] = object[this.field] ? object[this.field] + this.value : this.value;
                } }
                serialize() { return { op: this.op, field: this.field, value: this.value, type: this.type, ...this.options ? { options: this.options } : null }; }
            }
            function getSplitRemainder(transactions) { let { error } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.recalculateSplit)((0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.groupTransaction)(transactions)); return error ? error.difference : 0; }
            function execActions(actions, transaction) { let parentActions = actions.filter(action => !action.options?.splitIndex), childActions = actions.filter(action => action.options?.splitIndex), totalSplitCount = actions.reduce((prev, cur) => Math.max(prev, cur.options?.splitIndex ?? 0), 0) + 1, nonSplitResult = (parentActions.forEach(action => action.exec(transaction)), transaction); return 1 === totalSplitCount || nonSplitResult.is_child ? nonSplitResult : function (actions, transaction) { let splitAmountActions = actions.filter(action => "set-split-amount" === action.op), { data: data1 } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.splitTransaction)((0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.ungroupTransaction)(transaction), transaction.id), newTransactions = data1; actions.forEach(action => { let splitTransactionIndex = (action.options?.splitIndex ?? 0) + 1; if (splitTransactionIndex >= newTransactions.length) {
                let { data: data1 } = (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.addSplitTransaction)(newTransactions, transaction.id);
                newTransactions = data1;
            } action.exec(newTransactions[splitTransactionIndex]); }); let remainingAfterFixedAmounts = getSplitRemainder(newTransactions); splitAmountActions.filter(action => "fixed-percent" === action.options.method).forEach(action => { let splitTransactionIndex = (action.options?.splitIndex ?? 0) + 1, amount = Math.round(remainingAfterFixedAmounts * (action.value / 100)); newTransactions[splitTransactionIndex].amount = amount; }); let remainderActions = splitAmountActions.filter(action => "remainder" === action.options.method), remainingAfterFixedPercents = getSplitRemainder(newTransactions); if (0 !== remainderActions.length) {
                let amountPerRemainderSplit = Math.round(remainingAfterFixedPercents / remainderActions.length), lastNonFixedTransactionIndex = -1;
                remainderActions.forEach(action => { let splitTransactionIndex = (action.options?.splitIndex ?? 0) + 1; newTransactions[splitTransactionIndex].amount = amountPerRemainderSplit, lastNonFixedTransactionIndex = Math.max(lastNonFixedTransactionIndex, splitTransactionIndex); }), newTransactions[lastNonFixedTransactionIndex].amount += getSplitRemainder(newTransactions);
            } return newTransactions.splice(1, 1), (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.recalculateSplit)((0, _shared_transactions__WEBPACK_IMPORTED_MODULE_4__.groupTransaction)(newTransactions)); }(childActions, nonSplitResult); }
            class Rule {
                constructor({ id, stage, conditionsOp, conditions, actions }) { this.id = id, this.stage = stage ?? null, this.conditionsOp = conditionsOp, this.conditions = conditions.map(c => new Condition(c.op, c.field, c.value, c.options)), this.actions = actions.map(a => new Action(a.op, a.field, a.value, a.options)); }
                evalConditions(object) { if (0 === this.conditions.length)
                    return !1; let method = "or" === this.conditionsOp ? "some" : "every"; return this.conditions[method](condition => condition.eval(object)); }
                execActions(object) { let result = execActions(this.actions, { ...object }); return Object.keys(result).reduce((prev, cur) => (result[cur] !== object[cur] && (prev[cur] = result[cur]), prev), {}); }
                exec(object) { return this.evalConditions(object) ? this.execActions(object) : null; }
                apply(object) { let changes = this.exec(object); return Object.assign({}, object, changes); }
                getId() { return this.id; }
                serialize() { return { id: this.id, stage: this.stage, conditionsOp: this.conditionsOp, conditions: this.conditions.map(c => c.serialize()), actions: this.actions.map(a => a.serialize()) }; }
            }
            class RuleIndexer {
                constructor({ field, method }) { this.field = field, this.method = method, this.rules = new Map; }
                getIndex(key) { return this.rules.has(key) || this.rules.set(key, new Set), this.rules.get(key); }
                getIndexForValue(value) { return this.getIndex(this.getKey(value) || "*"); }
                getKey(value) { return "string" == typeof value && "" !== value ? "firstchar" === this.method ? value[0].toLowerCase() : value.toLowerCase() : null; }
                getIndexes(rule) { let cond = rule.conditions.find(cond => cond.field === this.field), indexes = []; return cond && ("oneOf" === cond.op || "is" === cond.op || "isNot" === cond.op || "notOneOf" === cond.op) ? "oneOf" === cond.op || "notOneOf" === cond.op ? cond.value.forEach(val1 => indexes.push(this.getIndexForValue(val1))) : indexes.push(this.getIndexForValue(cond.value)) : indexes.push(this.getIndex("*")), indexes; }
                index(rule) { this.getIndexes(rule).forEach(index => { index.add(rule); }); }
                remove(rule) { this.getIndexes(rule).forEach(index => { index.delete(rule); }); }
                getApplicableRules(object) { let indexedRules; if (this.field in object) {
                    let key = this.getKey(object[this.field]);
                    key && (indexedRules = this.rules.get(key));
                } return (0, _shared_util__WEBPACK_IMPORTED_MODULE_5__.fastSetMerge)(indexedRules || new Set, this.rules.get("*") || new Set); }
            }
            let OP_SCORES = { is: 10, isNot: 10, oneOf: 9, notOneOf: 9, isapprox: 5, isbetween: 5, gt: 1, gte: 1, lt: 1, lte: 1, contains: 0, doesNotContain: 0, matches: 0, hasTags: 0, onBudget: 0, offBudget: 0 };
            function _rankRules(rules) { let scores = new Map; return rules.forEach(rule => { scores.set(rule, function (rule) { let initialScore = rule.conditions.reduce((score, condition) => null == OP_SCORES[condition.op] ? (console.log(`Found invalid operation while ranking: ${condition.op}`), 0) : score + OP_SCORES[condition.op], 0); return rule.conditions.every(cond => "is" === cond.op || "isNot" === cond.op || "isapprox" === cond.op || "oneOf" === cond.op || "notOneOf" === cond.op) ? 2 * initialScore : initialScore; }(rule)); }), [...rules].sort((r1, r2) => { let score1 = scores.get(r1), score2 = scores.get(r2); if (score1 < score2)
                return -1; {
                if (score1 > score2)
                    return 1;
                let id1 = r1.getId(), id2 = r2.getId();
                return id1 < id2 ? -1 : +(id1 > id2);
            } }); }
            function rankRules(rules) { let pre = [], normal = [], post = []; for (let rule of rules)
                switch (rule.stage) {
                    case "pre":
                        pre.push(rule);
                        break;
                    case "post":
                        post.push(rule);
                        break;
                    default: normal.push(rule);
                } return pre = _rankRules(pre), normal = _rankRules(normal), post = _rankRules(post), pre.concat(normal).concat(post); }
            function migrateIds(rule, mappings) { for (let ci = 0; ci < rule.conditions.length; ci++) {
                let cond = rule.conditions[ci];
                if ("id" === cond.type)
                    switch (cond.op) {
                        case "is":
                        case "isNot":
                            cond.value = mappings.get(cond.rawValue) || cond.rawValue, cond.unparsedValue = cond.value;
                            break;
                        case "oneOf":
                        case "notOneOf": cond.value = cond.rawValue.map(v => mappings.get(v) || v), cond.unparsedValue = [...cond.value];
                    }
            } for (let ai = 0; ai < rule.actions.length; ai++) {
                let action = rule.actions[ai];
                "id" === action.type && "set" === action.op && (action.value = mappings.get(action.rawValue) || action.rawValue);
            } }
            function iterateIds(rules, fieldName, func) { let i; ruleiter: for (i = 0; i < rules.length; i++) {
                let rule = rules[i];
                for (let ci = 0; ci < rule.conditions.length; ci++) {
                    let cond = rule.conditions[ci];
                    if ("id" === cond.type && cond.field === fieldName)
                        switch (cond.op) {
                            case "is":
                            case "isNot":
                                if (func(rule, cond.value))
                                    continue ruleiter;
                                break;
                            case "oneOf":
                            case "notOneOf": for (let vi = 0; vi < cond.value.length; vi++)
                                if (func(rule, cond.value[vi]))
                                    continue ruleiter;
                        }
                }
                for (let ai = 0; ai < rule.actions.length; ai++) {
                    let action = rule.actions[ai];
                    if ("id" === action.type && action.field === fieldName && "set" === action.op && func(rule, action.value))
                        break;
                }
            } }
        }, "./packages/loot-core/src/server/schedules/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app, createSchedule: () => createSchedule, deleteSchedule: () => deleteSchedule, getRuleForSchedule: () => getRuleForSchedule, setNextDate: () => setNextDate, updateConditions: () => updateConditions, updateSchedule: () => updateSchedule });
            var date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/date-fns/addDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./node_modules/date-fns/startOfDay.js"), deep_equal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/deep-equal/index.js"), deep_equal__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(deep_equal__WEBPACK_IMPORTED_MODULE_0__), uuid__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_schedules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/schedules.ts"), _accounts_sync__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/accounts/sync.ts"), _app__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _aql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _models__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _mutators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _prefs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _rules__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/rules/index.ts"), _sync__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _undo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _util_rschedule__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./packages/loot-core/src/server/util/rschedule.ts"), _find_schedules__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./packages/loot-core/src/server/schedules/find-schedules.ts");
            function updateConditions(conditions, newConditions) { let scheduleConds = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(conditions), newScheduleConds = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(newConditions), replacements = function (arr1, arr2) { let result = []; for (let i = 0; i < arr1.length; i++)
                result.push([arr1[i], arr2[i]]); return result; }(Object.values(scheduleConds), Object.values(newScheduleConds)), updated = conditions.map(cond => { let r = replacements.find(r => cond === r[0]); return r && r[1] ? r[1] : cond; }), added = replacements.filter(x => null == x[0] && null != x[1]).map(x => x[1]); return updated.concat(added); }
            async function getRuleForSchedule(id) { if (null == id)
                throw Error("Schedule not attached to a rule"); let { data: ruleId } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ id }).calculate("rule")); return (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.getRules)().find(rule => rule.id === ruleId); }
            async function fixRuleForSchedule(id) { let { data: ruleId } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ id }).calculate("rule")); ruleId && await _db__WEBPACK_IMPORTED_MODULE_9__.delete_("rules", ruleId); let newId = await (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.insertRule)({ stage: null, conditionsOp: "and", conditions: [{ op: "isapprox", field: "date", value: (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay)() }, { op: "isapprox", field: "amount", value: 0 }], actions: [{ op: "link-schedule", value: id }] }); return await _db__WEBPACK_IMPORTED_MODULE_9__.updateWithSchema("schedules", { id, rule: newId }), (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.getRules)().find(rule => rule.id === newId); }
            async function setNextDate({ id, start, conditions, reset }) { if (null == conditions) {
                let rule = await getRuleForSchedule(id);
                if (null == rule)
                    throw Error("No rule found for schedule");
                conditions = rule.serialize().conditions;
            } let { date: dateCond } = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(conditions), { data: nextDate } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ id }).calculate("next_date")); if (dateCond) {
                let newNextDate = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getNextDate)(dateCond, start ? start(nextDate) : new Date);
                if (newNextDate !== nextDate) {
                    let nd = await _db__WEBPACK_IMPORTED_MODULE_9__.first("SELECT id, base_next_date_ts FROM schedules_next_date WHERE schedule_id = ?", [id]);
                    await _db__WEBPACK_IMPORTED_MODULE_9__.update("schedules_next_date", reset ? { id: nd.id, base_next_date: (0, _models__WEBPACK_IMPORTED_MODULE_10__.toDateRepr)(newNextDate), base_next_date_ts: Date.now() } : { id: nd.id, local_next_date: (0, _models__WEBPACK_IMPORTED_MODULE_10__.toDateRepr)(newNextDate), local_next_date_ts: nd.base_next_date_ts });
                }
            } }
            async function checkIfScheduleExists(name, scheduleId) { let idForName = await _db__WEBPACK_IMPORTED_MODULE_9__.first("SELECT id from schedules WHERE tombstone = 0 AND name = ?", [name]); return null != idForName && (!scheduleId || idForName.id !== scheduleId); }
            async function createSchedule({ schedule = null, conditions = [] } = {}) { let scheduleId = schedule?.id || (0, uuid__WEBPACK_IMPORTED_MODULE_19__.default)(), { date: dateCond } = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(conditions); if (null == dateCond)
                throw Error("A date condition is required to create a schedule"); if (null == dateCond.value)
                throw Error("Date is required"); let nextDate = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getNextDate)(dateCond), nextDateRepr = nextDate ? (0, _models__WEBPACK_IMPORTED_MODULE_10__.toDateRepr)(nextDate) : null; if (schedule)
                if (schedule.name) {
                    if (await checkIfScheduleExists(schedule.name, scheduleId))
                        throw Error("Cannot create schedules with the same name");
                }
                else
                    schedule.name = null; let ruleId = await (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.insertRule)({ stage: null, conditionsOp: "and", conditions, actions: [{ op: "link-schedule", value: scheduleId }] }), now = Date.now(); return await _db__WEBPACK_IMPORTED_MODULE_9__.insertWithUUID("schedules_next_date", { schedule_id: scheduleId, local_next_date: nextDateRepr, local_next_date_ts: now, base_next_date: nextDateRepr, base_next_date_ts: now }), await _db__WEBPACK_IMPORTED_MODULE_9__.insertWithSchema("schedules", { ...schedule, id: scheduleId, rule: ruleId }), scheduleId; }
            async function updateSchedule({ schedule, conditions, resetNextDate }) { let rule; if (schedule.rule)
                throw Error("You cannot change the rule of a schedule"); if (conditions) {
                let { date: dateCond } = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(conditions);
                if (dateCond && null == dateCond.value)
                    throw Error("Date is required");
                null == (rule = await getRuleForSchedule(schedule.id)) && (rule = await fixRuleForSchedule(schedule.id));
            } return await (0, _sync__WEBPACK_IMPORTED_MODULE_14__.batchMessages)(async () => { if (conditions) {
                let oldConditions = rule.serialize().conditions, newConditions = updateConditions(oldConditions, conditions);
                await (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.updateRule)({ id: rule.id, conditions: newConditions }), !resetNextDate && deep_equal__WEBPACK_IMPORTED_MODULE_0___default()(oldConditions.find(c => "account" === c.field), oldConditions.find(c => "account" === c.field)) && deep_equal__WEBPACK_IMPORTED_MODULE_0___default()((({ type, ...fields }) => fields)(oldConditions.find(c => "date" === c.field) || {}), (({ type, ...fields }) => fields)(newConditions.find(c => "date" === c.field) || {})) || await setNextDate({ id: schedule.id, conditions: newConditions, reset: !0 });
            }
            else
                resetNextDate && await setNextDate({ id: schedule.id, reset: !0 }); await _db__WEBPACK_IMPORTED_MODULE_9__.updateWithSchema("schedules", schedule); }), schedule.id; }
            async function deleteSchedule({ id }) { let { data: ruleId } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ id }).calculate("rule")); await (0, _sync__WEBPACK_IMPORTED_MODULE_14__.batchMessages)(async () => { await _db__WEBPACK_IMPORTED_MODULE_9__.delete_("rules", ruleId), await _db__WEBPACK_IMPORTED_MODULE_9__.delete_("schedules", id); }); }
            async function skipNextDate({ id }) { return setNextDate({ id, start: nextDate => date_fns__WEBPACK_IMPORTED_MODULE_20__.addDays((0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.parseDate)(nextDate), 1) }); }
            async function getUpcomingDates({ config, count }) { let rules = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.recurConfigToRSchedule)(config); try {
                return new _util_rschedule__WEBPACK_IMPORTED_MODULE_17__.Schedule({ rrules: rules }).occurrences({ start: date_fns__WEBPACK_IMPORTED_MODULE_21__.startOfDay(new Date), take: count }).toArray().map(date => config.skipWeekend ? (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getDateWithSkippedWeekend)(date.date, config.weekendSolveMode) : date.date).map(date => (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.dayFromDate)(date));
            }
            catch (err) {
                throw (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureBreadcrumb)(config), err;
            } }
            function onRuleUpdate(rule) { let { actions, conditions } = rule instanceof _rules__WEBPACK_IMPORTED_MODULE_13__.Rule ? rule.serialize() : _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.ruleModel.toJS(rule); if (actions && actions.find(a => "link-schedule" === a.op)) {
                let scheduleId = actions.find(a => "link-schedule" === a.op).value;
                if (scheduleId) {
                    let conds = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.extractScheduleConds)(conditions), payeeIdx = conditions.findIndex(c => c === conds.payee), accountIdx = conditions.findIndex(c => c === conds.account), amountIdx = conditions.findIndex(c => c === conds.amount), dateIdx = conditions.findIndex(c => c === conds.date);
                    _db__WEBPACK_IMPORTED_MODULE_9__.runQuery("INSERT OR REPLACE INTO schedules_json_paths (schedule_id, payee, account, amount, date) VALUES (?, ?, ?, ?, ?)", [scheduleId, -1 === payeeIdx ? null : `$[${payeeIdx}]`, -1 === accountIdx ? null : `$[${accountIdx}]`, -1 === amountIdx ? null : `$[${amountIdx}]`, -1 === dateIdx ? null : `$[${dateIdx}]`]);
                }
            } }
            function onApplySync(oldValues, newValues) { newValues.forEach((items, table) => { "rules" === table && items.forEach(newValue => { onRuleUpdate(newValue); }); }); }
            async function postTransactionForSchedule({ id, today }) { let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ id }).select("*")), schedule = data1[0]; if (null == schedule || null == schedule._account)
                return; let transaction = { payee: schedule._payee, account: schedule._account, amount: (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getScheduledAmount)(schedule._amount), date: today ? (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay)() : schedule.next_date, schedule: schedule.id, cleared: !1 }; transaction.account && await (0, _accounts_sync__WEBPACK_IMPORTED_MODULE_6__.addTransactions)(transaction.account, [transaction]); }
            async function advanceSchedulesService(syncSuccess) { let { data: schedules } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("schedules").filter({ completed: !1, "_account.closed": !1 }).select("*")), { data: hasTransData } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getHasTransactionsQuery)(schedules)), hasTrans = new Set(hasTransData.filter(Boolean).map(row => row.schedule)), failedToPost = [], didPost = !1, { data: upcomingLength } = await (0, _aql__WEBPACK_IMPORTED_MODULE_8__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_4__.q)("preferences").filter({ id: "upcomingScheduledTransactionLength" }).select("value")); for (let schedule of schedules) {
                let status = (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_5__.getStatus)(schedule.next_date, schedule.completed, hasTrans.has(schedule.id), upcomingLength[0]?.value ?? "7");
                if ("paid" === status) {
                    if (schedule._date)
                        if (schedule._date.frequency)
                            try {
                                await setNextDate({ id: schedule.id });
                            }
                            catch (err) { }
                        else
                            schedule._date < (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay)() && await updateSchedule({ schedule: { id: schedule.id, completed: !0 } });
                }
                else
                    ("due" === status || "missed" === status) && schedule.posts_transaction && schedule._account && (syncSuccess ? (await postTransactionForSchedule({ id: schedule.id }), didPost = !0) : failedToPost.push(schedule._payee));
            } failedToPost.length > 0 ? _platform_server_connection__WEBPACK_IMPORTED_MODULE_2__.send("schedules-offline") : didPost && _platform_server_connection__WEBPACK_IMPORTED_MODULE_2__.send("sync-event", { type: "success", tables: ["transactions"], syncDisabled: !1 }); }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_7__.createApp)();
            app.method("schedule/create", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_16__.undoable)(createSchedule))), app.method("schedule/update", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_16__.undoable)(updateSchedule))), app.method("schedule/delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_16__.undoable)(deleteSchedule))), app.method("schedule/skip-next-date", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_16__.undoable)(skipNextDate))), app.method("schedule/post-transaction", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_16__.undoable)(postTransactionForSchedule))), app.method("schedule/force-run-service", (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.mutator)(() => advanceSchedulesService(!0))), app.method("schedule/discover", function () { return (0, _find_schedules__WEBPACK_IMPORTED_MODULE_18__.findSchedules)(); }), app.method("schedule/get-upcoming-dates", getUpcomingDates), app.service(function () { return _db__WEBPACK_IMPORTED_MODULE_9__.transaction(() => { (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_15__.getRules)().forEach(rule => { onRuleUpdate(rule); }); }), (0, _sync__WEBPACK_IMPORTED_MODULE_14__.addSyncListener)(onApplySync); }), app.events.on("sync", ({ type }) => { if (("success" === type || "error" === type || "unauthorized" === type) && _prefs__WEBPACK_IMPORTED_MODULE_12__.getPrefs()) {
                let { lastScheduleRun } = _prefs__WEBPACK_IMPORTED_MODULE_12__.getPrefs();
                lastScheduleRun !== (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay)() && ((0, _mutators__WEBPACK_IMPORTED_MODULE_11__.runMutator)(() => advanceSchedulesService("success" === type)), _prefs__WEBPACK_IMPORTED_MODULE_12__.savePrefs({ lastScheduleRun: (0, _shared_months__WEBPACK_IMPORTED_MODULE_3__.currentDay)() }));
            } });
        }, "./packages/loot-core/src/server/schedules/find-schedules.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { findSchedules: () => findSchedules });
            var date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/date-fns/subDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/date-fns/addDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/date-fns/differenceInDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/date-fns/subWeeks.js"), date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/date-fns/subMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/date-fns/getDate.js"), date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/format.js"), date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/date-fns/subYears.js"), uuid__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _shared_rules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/rules.ts"), _shared_schedules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/schedules.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _models__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _util_rschedule__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/util/rschedule.ts");
            async function getTransactions(date, account) { let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("transactions").filter({ account, schedule: null, "payee.transfer_acct": null, $and: [{ date: { $gte: date_fns__WEBPACK_IMPORTED_MODULE_10__.subDays(date, 2) } }, { date: { $lte: date_fns__WEBPACK_IMPORTED_MODULE_11__.addDays(date, 2) } }] }).select("*").options({ splits: "none" })); return data1; }
            function getRank(day1, day2) { return 1 / (Math.abs(date_fns__WEBPACK_IMPORTED_MODULE_12__.differenceInDays((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(day1), (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(day2))) + 1); }
            async function schedulesForPattern(baseStart, numDays, baseConfig, accountId) { let schedules = []; for (let i = 0; i < numDays; i++) {
                var config;
                let config1, start = date_fns__WEBPACK_IMPORTED_MODULE_11__.addDays(baseStart, i);
                if ("function" == typeof baseConfig) {
                    if (!1 === (config1 = baseConfig(start)))
                        continue;
                }
                else
                    config1 = { ...baseConfig, start };
                config1.start = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(config1.start);
                let data1 = [];
                for (let date of (config = config1, new _util_rschedule__WEBPACK_IMPORTED_MODULE_9__.Schedule({ rrules: (0, _shared_schedules__WEBPACK_IMPORTED_MODULE_3__.recurConfigToRSchedule)(config) }).occurrences({ take: 3 }).toArray().map(d => d.date)))
                    data1.push({ date: (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(date), transactions: await getTransactions(date, accountId) });
                schedules = schedules.concat(function (allOccurs, config) { let baseOccur = (allOccurs = [...allOccurs].reverse())[0], occurs = allOccurs.slice(1), schedules = []; for (let trans of baseOccur.transactions) {
                    let threshold = (0, _shared_rules__WEBPACK_IMPORTED_MODULE_2__.getApproxNumberThreshold)(trans.amount), payee = trans.payee, found = occurs.map(occur => { let matched = occur.transactions.find(t => t.amount >= trans.amount - threshold && t.amount <= trans.amount + threshold); return (matched = matched && matched.payee === payee ? matched : null) ? { trans: matched, rank: getRank(occur.date, matched.date) } : null; });
                    if (-1 !== found.indexOf(null))
                        continue;
                    let rank = found.reduce((total, match) => total + match.rank, getRank(baseOccur.date, trans.date)), exactAmount = found.reduce((exact, match) => exact && match.trans.amount === trans.amount, !0);
                    schedules.push({ rank, amount: trans.amount, account: trans.account, payee: trans.payee, date: config, exactDate: rank === allOccurs.length, exactAmount });
                } return schedules; }(data1, config1));
            } return schedules; }
            async function weekly(startDate, accountId) { return schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_13__.subWeeks((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 4), 14, { frequency: "weekly" }, accountId); }
            async function every2weeks(startDate, accountId) { return schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_13__.subWeeks((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 7), 14, { frequency: "weekly", interval: 2 }, accountId); }
            async function monthly(startDate, accountId) { return schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_14__.subMonths((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 4), 62, start => !(date_fns__WEBPACK_IMPORTED_MODULE_15__.getDate(start) > 28) && { start, frequency: "monthly" }, accountId); }
            async function monthlyLastDay(startDate, accountId) { let s1 = await schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_14__.subMonths((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 3), 1, { frequency: "monthly", patterns: [{ type: "day", value: -1 }] }, accountId), s2 = await schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_14__.subMonths((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 4), 1, { frequency: "monthly", patterns: [{ type: "day", value: -1 }] }, accountId); return s1.concat(s2); }
            async function monthly1stor3rd(startDate, accountId) { return schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_13__.subWeeks((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 8), 14, start => { let dayValue = date_fns__WEBPACK_IMPORTED_MODULE_16__.format(new Date, "iiii").slice(0, 2).toUpperCase(); return { start, frequency: "monthly", patterns: [{ type: dayValue, value: 1 }, { type: dayValue, value: 3 }] }; }, accountId); }
            async function monthly2ndor4th(startDate, accountId) { return schedulesForPattern(date_fns__WEBPACK_IMPORTED_MODULE_14__.subMonths((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(startDate), 8), 14, start => { let dayValue = date_fns__WEBPACK_IMPORTED_MODULE_16__.format(new Date, "iiii").slice(0, 2).toUpperCase(); return { start, frequency: "monthly", patterns: [{ type: dayValue, value: 2 }, { type: dayValue, value: 4 }] }; }, accountId); }
            async function findStartDate(schedule) { let conditions = schedule._conditions, currentConfig = conditions.find(c => "date" === c.field).value; for (;;) {
                let prevConfig = currentConfig;
                switch ((currentConfig = { ...prevConfig }).frequency) {
                    case "weekly":
                        currentConfig.start = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(date_fns__WEBPACK_IMPORTED_MODULE_13__.subWeeks((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(currentConfig.start), currentConfig.interval || 1));
                        break;
                    case "monthly":
                        currentConfig.start = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(date_fns__WEBPACK_IMPORTED_MODULE_14__.subMonths((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(currentConfig.start), currentConfig.interval || 1));
                        break;
                    case "yearly":
                        currentConfig.start = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(date_fns__WEBPACK_IMPORTED_MODULE_17__.subYears((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(currentConfig.start), currentConfig.interval || 1));
                        break;
                    default: throw Error("findStartDate: invalid frequency");
                }
                let newConditions = conditions.map(c => "date" === c.field ? { ...c, value: currentConfig } : c), { filters, errors } = (0, _transactions_transaction_rules__WEBPACK_IMPORTED_MODULE_8__.conditionsToAQL)(newConditions, { recurDateBounds: 1 });
                if (errors.length > 0) {
                    currentConfig = null;
                    break;
                }
                let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("transactions").filter({ $and: filters }).select("*"));
                if (0 === data1.length) {
                    currentConfig = prevConfig;
                    break;
                }
            } return currentConfig ? { ...schedule, date: currentConfig, _conditions: conditions.map(c => "date" === c.field ? { ...c, value: currentConfig } : c) } : schedule; }
            async function findSchedules() { let { data: accounts } = await (0, _aql__WEBPACK_IMPORTED_MODULE_5__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_1__.q)("accounts").filter({ closed: !1 }).select("*")), allSchedules = []; for (let account of accounts) {
                let latestTrans = await _db__WEBPACK_IMPORTED_MODULE_6__.first("SELECT date FROM v_transactions WHERE account = ? AND parent_id IS NULL ORDER BY date DESC LIMIT 1", [account.id]);
                if (latestTrans) {
                    let latestDate = (0, _models__WEBPACK_IMPORTED_MODULE_7__.fromDateRepr)(latestTrans.date);
                    allSchedules = allSchedules.concat(await weekly(latestDate, account.id), await every2weeks(latestDate, account.id), await monthly(latestDate, account.id), await monthlyLastDay(latestDate, account.id), await monthly1stor3rd(latestDate, account.id), await monthly2ndor4th(latestDate, account.id));
                }
            } let schedules = [...(0, _shared_util__WEBPACK_IMPORTED_MODULE_4__.groupBy)(allSchedules, "payee").entries()].map(([, schedules]) => { schedules.sort((s1, s2) => s2.rank - s1.rank); let winner = schedules[0]; return { id: (0, uuid__WEBPACK_IMPORTED_MODULE_18__.default)(), account: winner.account, payee: winner.payee, date: winner.date, amount: winner.amount, _conditions: [{ op: "is", field: "account", value: winner.account }, { op: "is", field: "payee", value: winner.payee }, { op: winner.exactDate ? "is" : "isapprox", field: "date", value: winner.date }, { op: winner.exactAmount ? "is" : "isapprox", field: "amount", value: winner.amount }] }; }), finalized = []; for (let schedule of schedules)
                finalized.push(await findStartDate(schedule)); return finalized; }
        }, "./packages/loot-core/src/server/server-config.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getServer: () => getServer, isValidBaseURL: () => isValidBaseURL, setServer: () => setServer });
            var _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts");
            let config = null;
            function joinURL(base, ...paths) { let url = new URL(base); return url.pathname = _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.join(url.pathname, ...paths), url.toString(); }
            function isValidBaseURL(base) { try {
                return new URL(base), !0;
            }
            catch (error) {
                return !1;
            } }
            function setServer(url) { config = null == url ? null : getServer(url); }
            function getServer(url) { if (url)
                try {
                    return { BASE_SERVER: url, SYNC_SERVER: joinURL(url, "/sync"), SIGNUP_SERVER: joinURL(url, "/account"), GOCARDLESS_SERVER: joinURL(url, "/gocardless"), SIMPLEFIN_SERVER: joinURL(url, "/simplefin"), PLUGGYAI_SERVER: joinURL(url, "/pluggyai") };
                }
                catch (error) {
                    console.warn("Unable to parse server URL - using the global config.", { config }, error);
                } return config; }
        }, "./packages/loot-core/src/server/sheet.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let globalSheet, globalOnChange, globalCacheDb;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { endTransaction: () => endTransaction, get: () => get, getCell: () => getCell, getCellValue: () => getCellValue, loadSpreadsheet: () => loadSpreadsheet, loadUserBudgets: () => loadUserBudgets, reloadSpreadsheet: () => reloadSpreadsheet, startTransaction: () => startTransaction, unloadSpreadsheet: () => unloadSpreadsheet, waitOnSpreadsheet: () => waitOnSpreadsheet });
            var _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/sqlite/index.electron.ts"), _shared_months__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_platform__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/platform.electron.ts"), _spreadsheet_spreadsheet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/spreadsheet.ts"), _spreadsheet_util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts");
            function get() { return globalSheet; }
            async function updateSpreadsheetCache(rawDb, names) { await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.transaction(rawDb, () => { names.forEach(name => { let node = globalSheet._getNode(name); null == node.sql && _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(rawDb, "INSERT OR REPLACE INTO kvcache (key, value) VALUES (?, ?)", [name, JSON.stringify(node.value)]); }); }); }
            function setCacheStatus(mainDb, cacheDb, { clean }) { if (clean) {
                let num = 1e7 * Math.random();
                _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(cacheDb, "INSERT OR REPLACE INTO kvcache_key (id, key) VALUES (1, ?)", [num]), mainDb && _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(mainDb, "INSERT OR REPLACE INTO kvcache_key (id, key) VALUES (1, ?)", [num]);
            }
            else
                _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(cacheDb, "DELETE FROM kvcache_key"); }
            async function loadSpreadsheet(db, onSheetChange) {
                let cacheDb, sheet, mainDb = db.getDatabase();
                if (_shared_platform__WEBPACK_IMPORTED_MODULE_3__.isBrowser)
                    cacheDb = mainDb;
                else {
                    let cachePath = db.getDatabasePath().replace(/db\.sqlite$/, "cache.sqlite");
                    globalCacheDb = cacheDb = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.openDatabase(cachePath), _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.execQuery(cacheDb, `
        CREATE TABLE IF NOT EXISTS kvcache (key TEXT PRIMARY KEY, value TEXT);
        CREATE TABLE IF NOT EXISTS kvcache_key (id INTEGER PRIMARY KEY, key REAL)
      `);
                }
                if (sheet = new _spreadsheet_spreadsheet__WEBPACK_IMPORTED_MODULE_4__.Spreadsheet(updateSpreadsheetCache.bind(null, cacheDb), setCacheStatus.bind(null, mainDb, cacheDb)), (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureBreadcrumb)({ message: "loading spreadsheet", category: "server" }), globalSheet = sheet, globalOnChange = onSheetChange, onSheetChange && sheet.addEventListener("change", onSheetChange), function (mainDb, cacheDb) { let rows = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(cacheDb, "SELECT key FROM kvcache_key WHERE id = 1", [], !0), num = 0 === rows.length ? null : rows[0].key; if (null == num)
                    return !0; if (mainDb) {
                    let rows = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(mainDb, "SELECT key FROM kvcache_key WHERE id = 1", [], !0);
                    if (0 === rows.length || rows[0].key !== num)
                        return !0;
                } return 0 === (rows = _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(cacheDb, "SELECT * FROM kvcache LIMIT 1", [], !0)).length; }(mainDb, cacheDb))
                    console.log("Loading fresh spreadsheet"), await loadUserBudgets(db);
                else {
                    let cachedRows = await _platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.runQuery(cacheDb, "SELECT * FROM kvcache", [], !0);
                    for (let row of (console.log(`Loaded spreadsheet from cache (${cachedRows.length} items)`), cachedRows)) {
                        let parsed = JSON.parse(row.value);
                        sheet.load(row.key, parsed);
                    }
                }
                return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureBreadcrumb)({ message: "loaded spreadsheet", category: "server" }), sheet;
            }
            function unloadSpreadsheet() { globalSheet && (globalSheet.unload(), globalSheet = null), globalCacheDb && (_platform_server_sqlite__WEBPACK_IMPORTED_MODULE_1__.closeDatabase(globalCacheDb), globalCacheDb = null); }
            async function reloadSpreadsheet(db) { if (globalSheet)
                return unloadSpreadsheet(), loadSpreadsheet(db, globalOnChange); }
            async function loadUserBudgets(db) {
                let sheet = globalSheet, { value: budgetType = "envelope" } = await db.first("SELECT value from preferences WHERE id = ?", ["budgetType"]) ?? {}, budgets = await db.all(`
      SELECT * FROM ${"tracking" === budgetType ? "reflect_budgets" : "zero_budgets"} b
      LEFT JOIN categories c ON c.id = b.category
      WHERE c.tombstone = 0
    `);
                for (let budget of (sheet.startTransaction(), budgets))
                    if (budget.month && budget.category) {
                        let sheetName = `budget${budget.month}`;
                        sheet.set(`${sheetName}!budget-${budget.category}`, budget.amount), sheet.set(`${sheetName}!carryover-${budget.category}`, 1 === budget.carryover), sheet.set(`${sheetName}!goal-${budget.category}`, budget.goal), sheet.set(`${sheetName}!long-goal-${budget.category}`, budget.long_goal);
                    }
                if ("tracking" !== budgetType)
                    for (let budgetMonth of (await db.all("SELECT * FROM zero_budget_months"))) {
                        let sheetName = (0, _shared_months__WEBPACK_IMPORTED_MODULE_2__.sheetForMonth)(budgetMonth.id);
                        sheet.set(`${sheetName}!buffered`, budgetMonth.buffered);
                    }
                sheet.endTransaction();
            }
            function getCell(sheet, name) { return globalSheet._getNode((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_5__.resolveName)(sheet, name)); }
            function getCellValue(sheet, name) { return globalSheet.getValue((0, _spreadsheet_util__WEBPACK_IMPORTED_MODULE_5__.resolveName)(sheet, name)); }
            function startTransaction() { globalSheet && globalSheet.startTransaction(); }
            function endTransaction() { globalSheet && globalSheet.endTransaction(); }
            function waitOnSpreadsheet() { return new Promise(resolve => { globalSheet ? globalSheet.onFinish(resolve) : resolve(void 0); }); }
        }, "./packages/loot-core/src/server/spreadsheet/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _sheet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function getCell({ sheetName, name }) { let node = _sheet__WEBPACK_IMPORTED_MODULE_1__.get()._getNode((0, _util__WEBPACK_IMPORTED_MODULE_2__.resolveName)(sheetName, name)); return { name: node.name, value: node.value }; }
            async function getCellNames({ sheetName }) { let names = []; for (let name of _sheet__WEBPACK_IMPORTED_MODULE_1__.get().getNodes().keys()) {
                let { sheet: nodeSheet, name: nodeName } = (0, _util__WEBPACK_IMPORTED_MODULE_2__.unresolveName)(name);
                nodeSheet === sheetName && names.push(nodeName);
            } return names; }
            async function createQuery({ sheetName, name, query }) { return _sheet__WEBPACK_IMPORTED_MODULE_1__.get().createQuery(sheetName, name, query), "ok"; }
            app.method("get-cell", getCell), app.method("get-cell-names", getCellNames), app.method("create-query", createQuery);
        }, "./packages/loot-core/src/server/spreadsheet/globals.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function number(v) { if ("number" == typeof v)
                return v; if ("string" == typeof v) {
                let parsed = parseFloat(v);
                return isNaN(parsed) ? 0 : parsed;
            } return 0; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { number: () => number });
        }, "./packages/loot-core/src/server/spreadsheet/graph-data-structure.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function Graph() {
                let graph = { addNode, removeNode: function (node) { return removeIncomingEdges(node), edges.delete(node), incomingEdges.delete(node), graph; }, adjacent, adjacentIncoming, addEdge: function (node1, node2) { return addNode(node1), addNode(node2), adjacent(node1).add(node2), adjacentIncoming(node2).add(node1), graph; }, removeEdge, removeIncomingEdges, topologicalSort: function (sourceNodes) { let visited = new Set, sorted = []; return sourceNodes.forEach(name => { visited.has(name) || function (name, visited, sorted) { let stackTrace = []; for (stackTrace.push({ count: -1, value: name, parent: "", level: 0 }); stackTrace.length > 0;) {
                        let current = stackTrace.slice(-1)[0], adjacents = adjacent(current.value);
                        if (-1 === current.count && (current.count = adjacents.size), current.count > 0) {
                            let iter = adjacents.values(), cur = iter.next();
                            for (; !cur.done;)
                                visited.has(cur.value) ? current.count-- : stackTrace.push({ count: -1, parent: current.value, value: cur.value, level: current.level + 1 }), cur = iter.next();
                        }
                        else {
                            visited.has(current.value) || (visited.add(current.value), sorted.unshift(current.value));
                            let removed = stackTrace.pop();
                            for (let i = 0; i < stackTrace.length; i++)
                                stackTrace[i].value === removed.parent && stackTrace[i].count--;
                        }
                    } }(name, visited, sorted); }), sorted; }, generateDOT: function () {
                        let edgeStrings = [];
                        return edges.forEach(function (adj, edge) { 0 !== adj.length && edgeStrings.push(`${edge} -> {${adj.join(",")}}`); }), `
    digraph G {
      ${edgeStrings.join(`
`).replace(/!/g, "_")}
    }
    `;
                    }, getEdges: function () { return { edges, incomingEdges }; } }, edges = new Map, incomingEdges = new Map;
                function addNode(node) { return edges.set(node, adjacent(node)), incomingEdges.set(node, adjacentIncoming(node)), graph; }
                function removeIncomingEdges(node) { let incoming = adjacentIncoming(node); incomingEdges.set(node, new Set); let iter = incoming.values(), cur = iter.next(); for (; !cur.done;)
                    removeEdge(cur.value, node), cur = iter.next(); }
                function adjacent(node) { return edges.get(node) || new Set; }
                function adjacentIncoming(node) { return incomingEdges.get(node) || new Set; }
                function removeEdge(node1, node2) { return edges.has(node1) && adjacent(node1).delete(node2), incomingEdges.has(node2) && adjacentIncoming(node2).delete(node1), graph; }
                return graph;
            }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Graph: () => Graph });
        }, "./packages/loot-core/src/server/spreadsheet/spreadsheet.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Spreadsheet: () => Spreadsheet });
            var mitt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/mitt/dist/mitt.mjs"), _aql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _graph_data_structure__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/graph-data-structure.ts"), _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/spreadsheet/util.ts");
            class Spreadsheet {
                constructor(saveCache, setCacheStatus) { this.graph = new _graph_data_structure__WEBPACK_IMPORTED_MODULE_2__.Graph, this.nodes = new Map, this.transactionDepth = 0, this.saveCache = saveCache, this.setCacheStatus = setCacheStatus, this.dirtyCells = [], this.computeQueue = [], this.events = (0, mitt__WEBPACK_IMPORTED_MODULE_0__.default)(), this._meta = { createdMonths: new Set, budgetType: "envelope" }; }
                meta() { return this._meta; }
                setMeta(meta) { this._meta = meta; }
                _getNode(name) { let { sheet } = (0, _util__WEBPACK_IMPORTED_MODULE_3__.unresolveName)(name); return this.nodes.has(name) || this.nodes.set(name, { name, expr: null, value: null, sheet }), this.nodes.get(name); }
                getNode(name) { return this._getNode(name); }
                hasCell(name) { return this.nodes.has(name); }
                add(name, expr) { this.set(name, expr); }
                getNodes() { return this.nodes; }
                serialize() { return { graph: this.graph.getEdges(), nodes: [...this.nodes.entries()] }; }
                transaction(func) { this.startTransaction(); try {
                    func();
                }
                catch (e) {
                    console.log(e);
                } return this.endTransaction(); }
                startTransaction() { this.transactionDepth++; }
                endTransaction() { if (this.transactionDepth--, 0 === this.transactionDepth) {
                    let cells = this.dirtyCells;
                    this.dirtyCells = [], this.queueComputation(this.graph.topologicalSort(cells));
                } return []; }
                queueComputation(cellNames) { this.computeQueue = this.computeQueue.concat(cellNames), Promise.resolve().then(() => { this.running || this.runComputations(); }); }
                runComputations(idx = 0) { for (this.running = !0; idx < this.computeQueue.length;) {
                    let node, result, name = this.computeQueue[idx];
                    try {
                        if ((node = this.getNode(name))._run) {
                            let args = node._dependencies.map(dep => this.getNode(dep).value);
                            (result = node._run(...args)) instanceof Promise && console.warn(`dynamic cell ${name} returned a promise! this is discouraged because errors are not handled properly`);
                        }
                        else if (node.sql)
                            result = (0, _aql__WEBPACK_IMPORTED_MODULE_1__.aqlCompiledQuery)(node.query, node.sql.sqlPieces, node.sql.state);
                        else {
                            idx++;
                            continue;
                        }
                    }
                    catch (e) {
                        console.log("Error while evaluating " + name + ":", e), this.running = !1, this.computeQueue = [];
                        return;
                    }
                    if (result instanceof Promise)
                        return void result.then(value => { node.value = value, this.runComputations(idx + 1); }, err => { console.warn(`Failed running ${node.name}!`, err), this.runComputations(idx + 1); });
                    node.value = result, idx++;
                } idx === this.computeQueue.length && (this.events.emit("change", { names: this.computeQueue }), "function" == typeof this.saveCache && this.saveCache(this.computeQueue), this.markCacheSafe(), this.running = !1, this.computeQueue = []); }
                markCacheSafe() { !this.cacheBarrier && this.setCacheStatus && this.setCacheStatus({ clean: !0 }); }
                markCacheDirty() { this.setCacheStatus && this.setCacheStatus({ clean: !1 }); }
                startCacheBarrier() { this.cacheBarrier = !0, this.markCacheDirty(); }
                endCacheBarrier() { this.cacheBarrier = !1, this.running || this.computeQueue.length > 0 || this.markCacheSafe(); }
                addEventListener(name, func) { return this.events.on(name, func), () => this.events.off(name, func); }
                onFinish(func) { if (0 !== this.transactionDepth)
                    throw Error("onFinish called while inside a spreadsheet transaction. This is not allowed as it will lead to race conditions"); if (!this.running && 0 === this.computeQueue.length)
                    return func([]), () => { }; let remove = this.addEventListener("change", (...args) => (remove(), func(...args))); return remove; }
                unload() { this.events.all.clear(); }
                getValue(name) { return this.getNode(name).value; }
                getExpr(name) { return this.getNode(name).expr; }
                getCellValue(sheet, name) { return this.getNode((0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheet, name)).value; }
                getCellExpr(sheet, name) { return this.getNode((0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheet, name)).expr; }
                getCellValueLoose(sheetName, cellName) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName); return this.nodes.has(name) ? this.getNode(name).value : null; }
                bootup(onReady) { this.onFinish(() => { onReady(); }); }
                load(name, value) { let node = this._getNode(name); node.expr = value, node.value = value; }
                create(name, value) { return this.transaction(() => { let node = this._getNode(name); node.expr = value, node.value = value, this._markDirty(name); }); }
                set(name, value) { this.create(name, value); }
                recompute(name) { this.transaction(() => { this.dirtyCells.push(name); }); }
                recomputeAll() { this.transaction(() => { this.dirtyCells = [...this.nodes.keys()]; }); }
                createQuery(sheetName, cellName, query) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName), node = this._getNode(name); if (node.query !== query) {
                    node.query = query;
                    let { sqlPieces, state } = (0, _aql__WEBPACK_IMPORTED_MODULE_1__.compileQuery)(node.query, _aql__WEBPACK_IMPORTED_MODULE_1__.schema, _aql__WEBPACK_IMPORTED_MODULE_1__.schemaConfig);
                    node.sql = { sqlPieces, state }, this.transaction(() => { this._markDirty(name); });
                } }
                createStatic(sheetName, cellName, initialValue) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName); this.nodes.has(name) || this.create(name, initialValue); }
                createDynamic(sheetName, cellName, { dependencies = [], run, initialValue, refresh = !1 }) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName), node = this._getNode(name); !node.dynamic && (node.dynamic = !0, node._run = run, node._dependencies = dependencies = dependencies.map(dep => { let resolved; return (0, _util__WEBPACK_IMPORTED_MODULE_3__.unresolveName)(dep).sheet ? dep : (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, dep); }), this.graph.removeIncomingEdges(name), dependencies.forEach(dep => { this.graph.addEdge(dep, name); }), (null == node.value || refresh) && this.transaction(() => { node.value = initialValue, this._markDirty(name); })); }
                clearSheet(sheetName) { for (let [name, node] of this.nodes.entries())
                    node.sheet === sheetName && this.nodes.delete(name); }
                voidCell(sheetName, name, voidValue = null) { let node = this.getNode((0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, name)); node._run = null, node.dynamic = !1, node.value = voidValue; }
                deleteCell(sheetName, name) { this.voidCell(sheetName, name), this.nodes.delete((0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, name)); }
                addDependencies(sheetName, cellName, deps) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName); deps = deps.map(dep => (0, _util__WEBPACK_IMPORTED_MODULE_3__.unresolveName)(dep).sheet ? dep : (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, dep)); let node = this.getNode(name), newDeps = deps.filter(dep => -1 === (node._dependencies || []).indexOf(dep)); newDeps.length > 0 && (node._dependencies = (node._dependencies || []).concat(newDeps), newDeps.forEach(dep => { this.graph.addEdge(dep, name); }), this.recompute(name)); }
                removeDependencies(sheetName, cellName, deps) { let name = (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, cellName); deps = deps.map(dep => (0, _util__WEBPACK_IMPORTED_MODULE_3__.unresolveName)(dep).sheet ? dep : (0, _util__WEBPACK_IMPORTED_MODULE_3__.resolveName)(sheetName, dep)); let node = this.getNode(name); node._dependencies = (node._dependencies || []).filter(dep => -1 === deps.indexOf(dep)), deps.forEach(dep => { this.graph.removeEdge(dep, name); }), this.recompute(name); }
                _markDirty(name) { this.dirtyCells.push(name); }
                triggerDatabaseChanges(oldValues, newValues) { let tables = new Set([...oldValues.keys(), ...newValues.keys()]); this.startTransaction(), this.nodes.forEach(node => { node.sql && node.sql.state.dependencies.some(dep => tables.has(dep)) && this._markDirty(node.name); }), this.endTransaction(); }
            }
        }, "./packages/loot-core/src/server/spreadsheet/util.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function unresolveName(name) { let idx = name.indexOf("!"); return -1 !== idx ? { sheet: name.slice(0, idx), name: name.slice(idx + 1) } : { sheet: null, name }; }
            function resolveName(sheet, name) { return sheet + "!" + name; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { resolveName: () => resolveName, unresolveName: () => unresolveName });
        }, "./packages/loot-core/src/server/sync/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _repair__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/sync/repair.ts"), _reset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/sync/reset.ts"), ___WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function sync() { return await (0, ___WEBPACK_IMPORTED_MODULE_3__.fullSync)(); }
            async function resetSync() { return await (0, _reset__WEBPACK_IMPORTED_MODULE_2__.resetSync)(); }
            async function repairSync() { await (0, _repair__WEBPACK_IMPORTED_MODULE_1__.repairSync)(); }
            app.method("sync", sync), app.method("sync-reset", resetSync), app.method("sync-repair", repairSync);
        }, "./packages/loot-core/src/server/sync/encoder.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { decode: () => decode, encode: () => encode });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _prefs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts");
            function coerceBuffer(value) { return Buffer.isBuffer(value) ? value : Buffer.from(value); }
            async function encode(groupId, fileId, since, messages) { let { encryptKeyId } = _prefs__WEBPACK_IMPORTED_MODULE_3__.getPrefs(), requestPb = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.SyncRequest; for (let i = 0; i < messages.length; i++) {
                let msg = messages[i], envelopePb = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.MessageEnvelope;
                envelopePb.setTimestamp(msg.timestamp.toString());
                let messagePb = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.Message;
                messagePb.setDataset(msg.dataset), messagePb.setRow(msg.row), messagePb.setColumn(msg.column), messagePb.setValue(msg.value);
                let binaryMsg = messagePb.serializeBinary();
                if (encryptKeyId) {
                    let result, encrypted = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.EncryptedData;
                    try {
                        result = await _encryption__WEBPACK_IMPORTED_MODULE_1__.encrypt(binaryMsg, encryptKeyId);
                    }
                    catch (e) {
                        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SyncError("encrypt-failure", { isMissingKey: "missing-key" === e.message });
                    }
                    encrypted.setData(result.value), encrypted.setIv(Buffer.from(result.meta.iv, "base64")), encrypted.setAuthtag(Buffer.from(result.meta.authTag, "base64")), envelopePb.setContent(encrypted.serializeBinary()), envelopePb.setIsencrypted(!0);
                }
                else
                    envelopePb.setContent(binaryMsg);
                requestPb.addMessages(envelopePb);
            } return requestPb.setGroupid(groupId), requestPb.setFileid(fileId), requestPb.setKeyid(encryptKeyId), requestPb.setSince(since.toString()), requestPb.serializeBinary(); }
            async function decode(data1) { let { encryptKeyId } = _prefs__WEBPACK_IMPORTED_MODULE_3__.getPrefs(), responsePb = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.SyncResponse.deserializeBinary(data1), merkle = JSON.parse(responsePb.getMerkle()), list = responsePb.getMessagesList(), messages = []; for (let i = 0; i < list.length; i++) {
                let msg, envelopePb = list[i], timestamp = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.parse(envelopePb.getTimestamp());
                if (envelopePb.getIsencrypted()) {
                    let decrypted, binary = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.EncryptedData.deserializeBinary(envelopePb.getContent());
                    try {
                        decrypted = await _encryption__WEBPACK_IMPORTED_MODULE_1__.decrypt(coerceBuffer(binary.getData()), { keyId: encryptKeyId, algorithm: "aes-256-gcm", iv: coerceBuffer(binary.getIv()), authTag: coerceBuffer(binary.getAuthtag()) });
                    }
                    catch (e) {
                        throw console.log(e), new _errors__WEBPACK_IMPORTED_MODULE_2__.SyncError("decrypt-failure", { isMissingKey: "missing-key" === e.message });
                    }
                    msg = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.Message.deserializeBinary(decrypted);
                }
                else
                    msg = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.Message.deserializeBinary(envelopePb.getContent());
                messages.push({ timestamp, dataset: msg.getDataset(), row: msg.getRow(), column: msg.getColumn(), value: msg.getValue() });
            } return { messages, merkle }; }
        }, "./packages/loot-core/src/server/sync/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addSyncListener: () => addSyncListener, applyMessages: () => applyMessages, batchMessages: () => batchMessages, checkSyncingMode: () => checkSyncingMode, clearFullSyncTimeout: () => clearFullSyncTimeout, deserializeValue: () => deserializeValue, fullSync: () => fullSync, getMessagesSince: () => getMessagesSince, initialFullSync: () => initialFullSync, makeTestMessage: () => _make_test_message__WEBPACK_IMPORTED_MODULE_20__.makeTestMessage, receiveMessages: () => receiveMessages, repairSync: () => _repair__WEBPACK_IMPORTED_MODULE_18__.repairSync, resetSync: () => _reset__WEBPACK_IMPORTED_MODULE_21__.resetSync, scheduleFullSync: () => scheduleFullSync, sendMessages: () => sendMessages, serializeValue: () => serializeValue, setSyncingMode: () => setSyncingMode });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _platform_server_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/platform/server/log/index.ts"), _shared_async__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/shared/async.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _budget_base__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/budget/base.ts"), _db__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _main_app__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/main-app.ts"), _mutators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _post__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./packages/loot-core/src/server/post.ts"), _prefs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts"), _server_config__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./packages/loot-core/src/server/server-config.ts"), _sheet__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./packages/loot-core/src/server/sheet.ts"), _undo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _encoder__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./packages/loot-core/src/server/sync/encoder.ts"), _repair__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./packages/loot-core/src/server/sync/repair.ts"), _utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./packages/loot-core/src/server/sync/utils.ts"), _make_test_message__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./packages/loot-core/src/server/sync/make-test-message.ts"), _reset__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__("./packages/loot-core/src/server/sync/reset.ts");
            let SYNCING_MODE = "enabled";
            function setSyncingMode(mode) { let prevMode = SYNCING_MODE; switch (mode) {
                case "enabled":
                    SYNCING_MODE = "enabled";
                    break;
                case "offline":
                    SYNCING_MODE = "offline";
                    break;
                case "disabled":
                    SYNCING_MODE = "disabled";
                    break;
                case "import":
                    SYNCING_MODE = "import";
                    break;
                default: throw Error("setSyncingMode: invalid mode: " + mode);
            } return prevMode; }
            function checkSyncingMode(mode) { switch (mode) {
                case "enabled": return "enabled" === SYNCING_MODE || "offline" === SYNCING_MODE;
                case "disabled": return "disabled" === SYNCING_MODE || "import" === SYNCING_MODE;
                case "offline": return "offline" === SYNCING_MODE;
                case "import": return "import" === SYNCING_MODE;
                default: throw Error("checkSyncingMode: invalid mode: " + mode);
            } }
            function apply(msg, prev) { let { dataset, row, column, value } = msg; if ("prefs" === dataset)
                ;
            else {
                let query;
                try {
                    query = prev ? { sql: `UPDATE ${dataset} SET ${column} = ? WHERE id = ?`, params: [value, row] } : { sql: `INSERT INTO ${dataset} (id, ${column}) VALUES (?, ?)`, params: [row, value] }, _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(_db__WEBPACK_IMPORTED_MODULE_8__.cache(query.sql), query.params);
                }
                catch (error) {
                    throw new _errors__WEBPACK_IMPORTED_MODULE_9__.SyncError("invalid-schema", { error: { message: error.message, stack: error.stack }, query });
                }
            } }
            async function fetchAll(table, ids) {
                let results = [];
                for (let i = 0; i < ids.length; i += 100) {
                    let sql, partIds = ids.slice(i, i + 100), column = `${table}.id`;
                    "transactions" === table ? (sql = `
        SELECT t.*, c.transferId AS category
        FROM transactions t
        LEFT JOIN category_mapping c ON c.id = t.category
      `, column = "t.id") : sql = `SELECT * FROM ${table}`, sql += " WHERE ", sql += partIds.map(() => `${column} = ?`).join(" OR ");
                    try {
                        let rows = await _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(sql, partIds, !0);
                        results = results.concat(rows);
                    }
                    catch (error) {
                        throw new _errors__WEBPACK_IMPORTED_MODULE_9__.SyncError("invalid-schema", { error: { message: error.message, stack: error.stack }, query: { sql, params: partIds } });
                    }
                }
                return results;
            }
            function serializeValue(value) { if (null === value)
                return "0:"; if ("number" == typeof value)
                return "N:" + value; if ("string" == typeof value)
                return "S:" + value; throw Error("Unserializable value type: " + JSON.stringify(value)); }
            function deserializeValue(value) { switch (value[0]) {
                case "0": return null;
                case "N": return parseFloat(value.slice(2));
                case "S": return value.slice(2);
            } throw Error("Invalid type key for value: " + value); }
            let _syncListeners = [];
            function addSyncListener(func) { return _syncListeners.push(func), () => { _syncListeners = _syncListeners.filter(f => f !== func); }; }
            async function compareMessages(messages) { let newMessages = []; for (let i = 0; i < messages.length; i++) {
                let message = messages[i], { dataset, row, column, timestamp } = message, timestampStr = timestamp.toString(), res = _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(_db__WEBPACK_IMPORTED_MODULE_8__.cache("SELECT timestamp FROM messages_crdt WHERE dataset = ? AND row = ? AND column = ? AND timestamp >= ?"), [dataset, row, column, timestampStr], !0);
                0 === res.length ? newMessages.push(message) : res[0].timestamp !== timestampStr && newMessages.push({ ...message, old: !0 });
            } return newMessages; }
            let applyMessages = (0, _shared_async__WEBPACK_IMPORTED_MODULE_5__.sequential)(async (messages) => {
                let clock, currentMerkle;
                if (checkSyncingMode("import"))
                    return void function (messages) { _db__WEBPACK_IMPORTED_MODULE_8__.transaction(() => { for (let i = 0; i < messages.length; i++) {
                        let msg = messages[i], { dataset } = msg;
                        if (!msg.old) {
                            try {
                                apply(msg);
                            }
                            catch (e) {
                                apply(msg, !0);
                            }
                            if ("prefs" === dataset)
                                throw Error("Cannot set prefs while importing");
                        }
                    } }); }(messages);
                checkSyncingMode("enabled") && (messages = await compareMessages(messages)), messages = [...messages].sort((m1, m2) => { let t1 = m1.timestamp ? m1.timestamp.toString() : "", t2 = m2.timestamp ? m2.timestamp.toString() : ""; return t1 < t2 ? -1 : +(t1 > t2); });
                let idsPerTable = {};
                async function fetchData() { let data1 = new Map; for (let table of Object.keys(idsPerTable)) {
                    let rows = await fetchAll(table, idsPerTable[table]);
                    for (let i = 0; i < rows.length; i++) {
                        let row = rows[i];
                        (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.setIn)(data1, [table, row.id], row);
                    }
                } return data1; }
                messages.forEach(msg => { "prefs" !== msg.dataset && (null == idsPerTable[msg.dataset] && (idsPerTable[msg.dataset] = []), idsPerTable[msg.dataset].push(msg.row)); });
                let prefsToSet = {}, oldData = await fetchData();
                _undo__WEBPACK_IMPORTED_MODULE_16__.appendMessages(messages, oldData), checkSyncingMode("enabled") && (currentMerkle = (clock = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)()).merkle), _sheet__WEBPACK_IMPORTED_MODULE_15__.get() && _sheet__WEBPACK_IMPORTED_MODULE_15__.get().startCacheBarrier(), _db__WEBPACK_IMPORTED_MODULE_8__.transaction(() => {
                    let added = new Set;
                    for (let msg of messages) {
                        let { dataset, row, column, timestamp, value } = msg;
                        msg.old || (apply(msg, (0, _shared_util__WEBPACK_IMPORTED_MODULE_6__.getIn)(oldData, [dataset, row]) || added.has(dataset + row)), "prefs" === dataset ? prefsToSet[row] = value : added.add(dataset + row)), checkSyncingMode("enabled") && (_db__WEBPACK_IMPORTED_MODULE_8__.runQuery(_db__WEBPACK_IMPORTED_MODULE_8__.cache(`INSERT INTO messages_crdt (timestamp, dataset, row, column, value)
           VALUES (?, ?, ?, ?, ?)`), [timestamp.toString(), dataset, row, column, serializeValue(value)]), currentMerkle = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.merkle.insert(currentMerkle, timestamp)), "preferences" === dataset && "budgetType" === row && (0, _budget_base__WEBPACK_IMPORTED_MODULE_7__.setType)(value);
                    }
                    checkSyncingMode("enabled") && (currentMerkle = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.merkle.prune(currentMerkle), _db__WEBPACK_IMPORTED_MODULE_8__.runQuery(_db__WEBPACK_IMPORTED_MODULE_8__.cache("INSERT OR REPLACE INTO messages_clock (id, clock) VALUES (1, ?)"), [(0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.serializeClock)({ ...clock, merkle: currentMerkle })]));
                }), checkSyncingMode("enabled") && (clock.merkle = currentMerkle), Object.keys(prefsToSet).length > 0 && (_prefs__WEBPACK_IMPORTED_MODULE_13__.savePrefs(prefsToSet, { avoidSync: !0 }), _platform_server_connection__WEBPACK_IMPORTED_MODULE_3__.send("prefs-updated"));
                let newData = await fetchData();
                _sheet__WEBPACK_IMPORTED_MODULE_15__.get() && (_sheet__WEBPACK_IMPORTED_MODULE_15__.startTransaction(), (0, _budget_base__WEBPACK_IMPORTED_MODULE_7__.triggerBudgetChanges)(oldData, newData), _sheet__WEBPACK_IMPORTED_MODULE_15__.get().triggerDatabaseChanges(oldData, newData), _sheet__WEBPACK_IMPORTED_MODULE_15__.endTransaction(), _sheet__WEBPACK_IMPORTED_MODULE_15__.get().endCacheBarrier()), _syncListeners.forEach(func => func(oldData, newData));
                let tables = getTablesFromMessages(messages.filter(msg => !msg.old));
                return _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "applied", tables, data: newData, prevData: oldData }), messages;
            });
            function receiveMessages(messages) { return messages.forEach(msg => { _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.recv(msg.timestamp); }), (0, _mutators__WEBPACK_IMPORTED_MODULE_11__.runMutator)(() => applyMessages(messages)); }
            async function _sendMessages(messages) { try {
                await applyMessages(messages);
            }
            catch (e) {
                throw e instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.SyncError && ("invalid-schema" === e.reason ? _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: "apply-failure", meta: e.meta }) : _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", meta: e.meta })), e;
            } await scheduleFullSync(); }
            let IS_BATCHING = !1, _BATCHED = [];
            async function batchMessages(func) { if (IS_BATCHING)
                return void await func(); IS_BATCHING = !0; let batched = []; try {
                await func();
            }
            finally {
                IS_BATCHING = !1, batched = _BATCHED, _BATCHED = [];
            } batched.length > 0 && await _sendMessages(batched); }
            async function sendMessages(messages) { if (!IS_BATCHING)
                return _sendMessages(messages); _BATCHED = _BATCHED.concat(messages); }
            function getMessagesSince(since) { return _db__WEBPACK_IMPORTED_MODULE_8__.runQuery("SELECT timestamp, dataset, row, column, value FROM messages_crdt WHERE timestamp > ?", [since], !0); }
            function clearFullSyncTimeout() { syncTimeout && (clearTimeout(syncTimeout), syncTimeout = null); }
            let syncTimeout = null;
            function scheduleFullSync() { clearFullSyncTimeout(), checkSyncingMode("enabled") && !checkSyncingMode("offline") && (syncTimeout = setTimeout(fullSync, 1e3)); }
            function getTablesFromMessages(messages) { return messages.reduce((acc, message) => { let dataset = "schedules_next_date" === message.dataset ? "schedules" : message.dataset; return acc.includes(dataset) || acc.push(dataset), acc; }, []); }
            async function initialFullSync() { let result = await fullSync(); return (0, _utils__WEBPACK_IMPORTED_MODULE_19__.isError)(result) ? (await _sheet__WEBPACK_IMPORTED_MODULE_15__.waitOnSpreadsheet(), result) : {}; }
            let fullSync = (0, _shared_async__WEBPACK_IMPORTED_MODULE_5__.once)(async function () { let messages; _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "start" }); try {
                messages = await _fullSync(null, 0, null);
            }
            catch (e) {
                return console.log(e), e instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.SyncError ? "out-of-sync" === e.reason ? ((0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureException)(e), _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: "out-of-sync", meta: e.meta })) : "invalid-schema" === e.reason ? _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: "invalid-schema", meta: e.meta }) : "decrypt-failure" === e.reason || "encrypt-failure" === e.reason ? _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: e.reason, meta: e.meta }) : _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", meta: e.meta }) : e instanceof _errors__WEBPACK_IMPORTED_MODULE_9__.PostError ? (console.log(e), "unauthorized" === e.reason ? (_main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "unauthorized" }), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.setItem("readOnly", "true")) : "network-failure" === e.reason ? _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: "network" }) : _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error", subtype: e.reason })) : ((0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_1__.captureException)(e), _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "error" })), { error: { message: e.message, reason: e.reason, meta: e.meta } };
            } let tables = getTablesFromMessages(messages); return _main_app__WEBPACK_IMPORTED_MODULE_10__.app.events.emit("sync", { type: "success", tables, syncDisabled: checkSyncingMode("disabled") }), { messages }; });
            async function _fullSync(sinceTimestamp, count, prevDiffTime) { let { cloudFileId, groupId, lastSyncedTimestamp } = _prefs__WEBPACK_IMPORTED_MODULE_13__.getPrefs() || {}; if (clearFullSyncTimeout(), checkSyncingMode("disabled") || checkSyncingMode("offline"))
                return []; let currentTime = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString(), since = sinceTimestamp || lastSyncedTimestamp || new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp(Date.now() - 3e5, 0, "0").toString(), messages = getMessagesSince(since), userToken = await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_2__.getItem("user-token"); _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info("Syncing since", since, messages.length, "(attempt: " + count + ")"); let buffer = await _encoder__WEBPACK_IMPORTED_MODULE_17__.encode(groupId, cloudFileId, since, messages), resBuffer = await (0, _post__WEBPACK_IMPORTED_MODULE_12__.postBinary)((0, _server_config__WEBPACK_IMPORTED_MODULE_14__.getServer)().SYNC_SERVER + "/sync", buffer, { "X-ACTUAL-TOKEN": userToken }); if (!_prefs__WEBPACK_IMPORTED_MODULE_13__.getPrefs() || _prefs__WEBPACK_IMPORTED_MODULE_13__.getPrefs().groupId !== groupId)
                return []; let res = await _encoder__WEBPACK_IMPORTED_MODULE_17__.decode(resBuffer); _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info("Got messages from server", res.messages.length); let localTimeChanged = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString() !== currentTime, receivedMessages = []; res.messages.length > 0 && (receivedMessages = await receiveMessages(res.messages.map(msg => ({ ...msg, value: deserializeValue(msg.value) })))); let diffTime = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.merkle.diff(res.merkle, (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().merkle); if (null !== diffTime) {
                if (count >= 10 && diffTime === prevDiffTime || count >= 100) {
                    _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info("SENT -------"), _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info(JSON.stringify(messages)), _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info("RECEIVED -------"), _platform_server_log__WEBPACK_IMPORTED_MODULE_4__.logger.info(JSON.stringify(res.messages));
                    let rebuiltMerkle = (0, _repair__WEBPACK_IMPORTED_MODULE_18__.rebuildMerkleHash)();
                    if (console.log(count, "messages:", messages.length, messages.length > 0 ? messages[0] : null, "res.messages:", res.messages.length, res.messages.length > 0 ? res.messages[0] : null, "clientId", (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.node(), "groupId", groupId, "diffTime:", diffTime, diffTime === prevDiffTime, "local clock:", (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString(), (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().merkle.hash, "rebuilt hash:", rebuiltMerkle.numMessages, rebuiltMerkle.trie.hash, "server hash:", res.merkle.hash, "localTimeChanged:", localTimeChanged), rebuiltMerkle.trie.hash === res.merkle.hash) {
                        let clocks = await _db__WEBPACK_IMPORTED_MODULE_8__.all("SELECT * FROM messages_clock");
                        1 !== clocks.length && console.log("Bad number of clocks:", clocks.length), console.log("Merkle hash in db:", (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.deserializeClock)(clocks[0].clock).merkle.hash);
                    }
                    throw new _errors__WEBPACK_IMPORTED_MODULE_9__.SyncError("out-of-sync");
                }
                receivedMessages = receivedMessages.concat(await _fullSync(new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp(diffTime, 0, "0").toString(), localTimeChanged ? 0 : count + 1, diffTime));
            }
            else
                (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString() !== lastSyncedTimestamp && await _prefs__WEBPACK_IMPORTED_MODULE_13__.savePrefs({ lastSyncedTimestamp: (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)().timestamp.toString() }); return receivedMessages; }
        }, "./packages/loot-core/src/server/sync/make-test-message.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { makeTestMessage: () => makeTestMessage });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/encryption/index.ts");
            async function randomString() { return (await _encryption__WEBPACK_IMPORTED_MODULE_1__.randomBytes(12)).toString(); }
            async function makeTestMessage(keyId) { let messagePb = new _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.SyncProtoBuf.Message; messagePb.setDataset(await randomString()), messagePb.setRow(await randomString()), messagePb.setColumn(await randomString()), messagePb.setValue(await randomString()); let binaryMsg = messagePb.serializeBinary(); return await _encryption__WEBPACK_IMPORTED_MODULE_1__.encrypt(binaryMsg, keyId); }
        }, "./packages/loot-core/src/server/sync/migrate.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { listen: () => listen, unlisten: () => unlisten });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            function migrateParentIds(_oldValues, newValues) { newValues.forEach((items, table) => { if ("transactions" === table) {
                let toApply = [];
                items.forEach(newValue => { if (1 === newValue.isChild && null == newValue.parent_id && newValue.id.includes("/")) {
                    let parentId = newValue.id.split("/")[0];
                    toApply.push({ dataset: "transactions", row: newValue.id, column: "parent_id", value: parentId, timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() });
                } }), toApply.length > 0 && (0, _index__WEBPACK_IMPORTED_MODULE_1__.applyMessages)(toApply);
            } }); }
            let _unlisten = null;
            function listen() { unlisten(), _unlisten = (0, _index__WEBPACK_IMPORTED_MODULE_1__.addSyncListener)(migrateParentIds); }
            function unlisten() { _unlisten && (_unlisten(), _unlisten = null); }
        }, "./packages/loot-core/src/server/sync/repair.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { rebuildMerkleHash: () => rebuildMerkleHash, repairSync: () => repairSync });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            function rebuildMerkleHash() { let rows = _db__WEBPACK_IMPORTED_MODULE_1__.runQuery("SELECT timestamp FROM messages_crdt", [], !0), trie = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.merkle.emptyTrie(); for (let i = 0; i < rows.length; i++)
                trie = _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.merkle.insert(trie, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.parse(rows[i].timestamp)); return { numMessages: rows.length, trie }; }
            async function repairSync() { let rebuilt = rebuildMerkleHash(), clock = (0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.getClock)(); clock.merkle = rebuilt.trie, _db__WEBPACK_IMPORTED_MODULE_1__.runQuery(_db__WEBPACK_IMPORTED_MODULE_1__.cache("INSERT OR REPLACE INTO messages_clock (id, clock) VALUES (1, ?)"), [(0, _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.serializeClock)(clock)]); }
        }, "./packages/loot-core/src/server/sync/reset.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { resetSync: () => resetSync });
            var _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/exceptions/index.ts"), _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/asyncStorage/index.electron.ts"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _cloud_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/cloud-storage.ts"), _db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _mutators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _prefs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/prefs.ts");
            async function resetSync(keyState) {
                if (!keyState) {
                    let { valid, error } = await _cloud_storage__WEBPACK_IMPORTED_MODULE_3__.checkKey();
                    if (error)
                        return { error };
                    if (!valid)
                        return { error: { reason: "file-has-new-key" } };
                }
                let { error } = await _cloud_storage__WEBPACK_IMPORTED_MODULE_3__.resetSyncState(keyState);
                if (error)
                    return { error };
                if (await (0, _mutators__WEBPACK_IMPORTED_MODULE_5__.runMutator)(async () => {
                    await _db__WEBPACK_IMPORTED_MODULE_4__.execQuery(`
      DELETE FROM messages_crdt;
      DELETE FROM messages_clock;
      DELETE FROM transactions WHERE tombstone = 1;
      DELETE FROM accounts WHERE tombstone = 1;
      DELETE FROM payees WHERE tombstone = 1;
      DELETE FROM categories WHERE tombstone = 1;
      DELETE FROM category_groups WHERE tombstone = 1;
      DELETE FROM schedules WHERE tombstone = 1;
      DELETE FROM rules WHERE tombstone = 1;
      ANALYZE;
      VACUUM;
    `), await _db__WEBPACK_IMPORTED_MODULE_4__.loadClock();
                }), await _prefs__WEBPACK_IMPORTED_MODULE_6__.savePrefs({ groupId: null, lastSyncedTimestamp: null, lastUploaded: null }), keyState) {
                    let { key } = keyState, { cloudFileId } = _prefs__WEBPACK_IMPORTED_MODULE_6__.getPrefs(), keys = JSON.parse(await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.getItem("encrypt-keys") || "{}");
                    keys[cloudFileId] = key.serialize(), await _platform_server_asyncStorage__WEBPACK_IMPORTED_MODULE_1__.setItem("encrypt-keys", JSON.stringify(keys)), await _prefs__WEBPACK_IMPORTED_MODULE_6__.savePrefs({ encryptKeyId: key.getId() });
                }
                try {
                    await _cloud_storage__WEBPACK_IMPORTED_MODULE_3__.upload();
                }
                catch (e) {
                    if (e.reason)
                        return { error: e };
                    return (0, _platform_exceptions__WEBPACK_IMPORTED_MODULE_0__.captureException)(e), { error: { reason: "upload-failure" } };
                }
                finally {
                    _platform_server_connection__WEBPACK_IMPORTED_MODULE_2__.send("prefs-updated");
                }
                return {};
            }
        }, "./packages/loot-core/src/server/sync/utils.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function isError(value) { return void 0 !== value.error; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { isError: () => isError });
        }, "./packages/loot-core/src/server/tags/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _mutators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _sync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _undo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/undo.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_0__.createApp)();
            async function getTags() { return await _db__WEBPACK_IMPORTED_MODULE_1__.getTags(); }
            async function createTag({ tag, color = null, description = null }) { let { id: tagId = null } = (await _db__WEBPACK_IMPORTED_MODULE_1__.getAllTags()).find(t => t.tag === tag) || {}; return tagId ? (await _db__WEBPACK_IMPORTED_MODULE_1__.updateTag({ id: tagId, tag, color, description, tombstone: 0 }), { id: tagId, tag, color, description }) : { id: await _db__WEBPACK_IMPORTED_MODULE_1__.insertTag({ tag: tag.trim(), color: color ? color.trim() : null, description }), tag, color, description }; }
            async function deleteTag(tag) { return await _db__WEBPACK_IMPORTED_MODULE_1__.deleteTag(tag), tag.id; }
            async function deleteAllTags(ids) { return await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { for (let id of ids)
                await _db__WEBPACK_IMPORTED_MODULE_1__.deleteTag({ id }); }), ids; }
            async function updateTag(tag) { return await _db__WEBPACK_IMPORTED_MODULE_1__.updateTag(tag), tag; }
            async function findTags() { let taggedNotes = await _db__WEBPACK_IMPORTED_MODULE_1__.findTags(), tags = await getTags(); for (let { notes } of taggedNotes)
                for (let [_, tag] of notes.matchAll(/(?<!#)#([^#\s]+)/g))
                    tags.find(t => t.tag === tag) || tags.push(await createTag({ tag })); return tags.sort(function (a, b) { return a.tag < b.tag ? -1 : +(a.tag > b.tag); }); }
            app.method("tags-get", getTags), app.method("tags-create", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_4__.undoable)(createTag))), app.method("tags-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_4__.undoable)(deleteTag))), app.method("tags-delete-all", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(deleteAllTags)), app.method("tags-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_4__.undoable)(updateTag))), app.method("tags-find", (0, _mutators__WEBPACK_IMPORTED_MODULE_2__.mutator)(findTags));
        }, "./packages/loot-core/src/server/tools/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _shared_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _aql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _mutators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _transactions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/transactions/index.ts");
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_1__.createApp)();
            async function fixSplitTransactions() {
                let blankPayeeRows = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT t.*, p.payee AS parentPayee FROM v_transactions_internal t
    LEFT JOIN v_transactions_internal p ON t.parent_id = p.id
    WHERE t.is_child = 1 AND t.payee IS NULL AND p.payee IS NOT NULL
  `);
                await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = blankPayeeRows.map(row => ({ id: row.id, payee: row.parentPayee })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); });
                let clearedRows = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT t.id, p.cleared FROM v_transactions_internal t
    LEFT JOIN v_transactions_internal p ON t.parent_id = p.id
    WHERE t.is_child = 1 AND t.cleared != p.cleared
  `);
                await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = clearedRows.map(row => ({ id: row.id, cleared: 1 === row.cleared })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); });
                let deletedRows = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT t.* FROM v_transactions_internal t
    LEFT JOIN v_transactions_internal p ON t.parent_id = p.id
    WHERE t.is_child = 1 AND t.tombstone = 0 AND (p.tombstone = 1 OR p.id IS NULL)
  `);
                await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = deletedRows.map(row => ({ id: row.id, tombstone: !0 })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); });
                let mismatchedSplits = (await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_0__.q)("transactions").options({ splits: "grouped" }).filter({ is_parent: !0 }).select("*"))).data.filter(t => t.subtransactions.reduce((acc, st) => acc + st.amount, 0) !== t.amount), brokenTransfers = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT t1.id
    FROM v_transactions_internal t1
           JOIN accounts a1 ON t1.account = a1.id
           JOIN v_transactions_internal t2 ON t1.transfer_id = t2.id
           JOIN accounts a2 ON t2.account = a2.id
    WHERE a1.offbudget = a2.offbudget
      AND t1.category IS NOT NULL
  `);
                await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = brokenTransfers.map(row => ({ id: row.id, category: null })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); });
                let errorRows = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT id FROM v_transactions_internal WHERE error IS NOT NULL AND is_parent = 0
  `);
                await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = errorRows.map(({ id }) => ({ id, error: null })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); });
                let parentTransactionsWithCategory = await _db__WEBPACK_IMPORTED_MODULE_3__.all(`
    SELECT id FROM transactions WHERE isParent = 1 AND category IS NOT NULL
  `);
                return await (0, _mutators__WEBPACK_IMPORTED_MODULE_4__.runMutator)(async () => { let updated = parentTransactionsWithCategory.map(({ id }) => ({ id, category: null })); await (0, _transactions__WEBPACK_IMPORTED_MODULE_5__.batchUpdateTransactions)({ updated }); }), { numBlankPayees: blankPayeeRows.length, numCleared: clearedRows.length, numDeleted: deletedRows.length, numTransfersFixed: brokenTransfers.length, numNonParentErrorsFixed: errorRows.length, numParentTransactionsWithCategoryFixed: parentTransactionsWithCategory.length, mismatchedSplits };
            }
            app.method("tools/fix-split-transactions", fixSplitTransactions);
        }, "./packages/loot-core/src/server/transactions/app.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { app: () => app });
            var _shared_query__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/query.ts"), _app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/app.ts"), _aql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _mutators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _undo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/undo.ts"), _export_export_to_csv__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/transactions/export/export-to-csv.ts"), _import_parse_file__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/transactions/import/parse-file.ts"), _merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/transactions/merge.ts"), ___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/transactions/index.ts");
            async function handleBatchUpdateTransactions({ added, deleted, updated, learnCategories }) { return await (0, ___WEBPACK_IMPORTED_MODULE_8__.batchUpdateTransactions)({ added, updated, deleted, learnCategories }); }
            async function addTransaction(transaction) { return await handleBatchUpdateTransactions({ added: [transaction] }), {}; }
            async function updateTransaction(transaction) { return await handleBatchUpdateTransactions({ updated: [transaction] }), {}; }
            async function deleteTransaction(transaction) { return await handleBatchUpdateTransactions({ deleted: [transaction] }), {}; }
            async function parseTransactionsFile({ filepath, options: options1 }) { return (0, _import_parse_file__WEBPACK_IMPORTED_MODULE_6__.parseFile)(filepath, options1); }
            async function exportTransactions({ transactions, accounts, categoryGroups, payees }) { return (0, _export_export_to_csv__WEBPACK_IMPORTED_MODULE_5__.exportToCSV)(transactions, accounts, categoryGroups, payees); }
            async function exportTransactionsQuery({ query: queryState }) { return (0, _export_export_to_csv__WEBPACK_IMPORTED_MODULE_5__.exportQueryToCSV)(new _shared_query__WEBPACK_IMPORTED_MODULE_0__.Query(queryState)); }
            async function getEarliestTransaction() { let { data: data1 } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)((0, _shared_query__WEBPACK_IMPORTED_MODULE_0__.q)("transactions").options({ splits: "none" }).orderBy({ date: "asc" }).select("*").limit(1)); return data1[0] || null; }
            let app = (0, _app__WEBPACK_IMPORTED_MODULE_1__.createApp)();
            app.method("transactions-batch-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_4__.undoable)(handleBatchUpdateTransactions))), app.method("transactions-merge", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)((0, _undo__WEBPACK_IMPORTED_MODULE_4__.undoable)(_merge__WEBPACK_IMPORTED_MODULE_7__.mergeTransactions))), app.method("transaction-add", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(addTransaction)), app.method("transaction-update", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(updateTransaction)), app.method("transaction-delete", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(deleteTransaction)), app.method("transactions-parse-file", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(parseTransactionsFile)), app.method("transactions-export", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(exportTransactions)), app.method("transactions-export-query", (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.mutator)(exportTransactionsQuery)), app.method("get-earliest-transaction", getEarliestTransaction);
        }, "./packages/loot-core/src/server/transactions/export/export-to-csv.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { exportQueryToCSV: () => exportQueryToCSV, exportToCSV: () => exportToCSV });
            var csv_stringify_sync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-stringify/lib/sync.js"), _shared_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts");
            async function exportToCSV(transactions, accounts, categoryGroups, payees) { let accountNamesById = accounts.reduce((reduced, { id, name }) => (reduced[id] = name, reduced), {}), categoryNamesById = categoryGroups.reduce((reduced, { name, categories: subCategories }) => (subCategories.forEach(subCategory => reduced[subCategory.id] = `${name}: ${subCategory.name}`), reduced), {}), payeeNamesById = payees.reduce((reduced, { id, name }) => (reduced[id] = name, reduced), {}), transactionsForExport = transactions.map(({ account, date, payee, notes, category, amount, cleared, reconciled }) => ({ Account: accountNamesById[account], Date: date, Payee: payeeNamesById[payee], Notes: notes, Category: categoryNamesById[category], Amount: null == amount ? 0 : (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.integerToAmount)(amount), Cleared: cleared, Reconciled: reconciled })); return (0, csv_stringify_sync__WEBPACK_IMPORTED_MODULE_0__.stringify)(transactionsForExport, { header: !0 }); }
            async function exportQueryToCSV(query) { let { data: transactions } = await (0, _aql__WEBPACK_IMPORTED_MODULE_2__.aqlQuery)(query.select([{ Id: "id" }, { Account: "account.name" }, { Date: "date" }, { Payee: "payee.name" }, { ParentId: "parent_id" }, { IsParent: "is_parent" }, { IsChild: "is_child" }, { SortOrder: "sort_order" }, { Notes: "notes" }, { Category: "category.name" }, { Amount: "amount" }, { Cleared: "cleared" }, { Reconciled: "reconciled" }]).options({ splits: "all" })), parentsChildCount = new Map, childSplitOrder = new Map; for (let trans of transactions)
                if (trans.IsChild) {
                    let childNumber = parentsChildCount.get(trans.ParentId) || 0;
                    childNumber++, childSplitOrder.set(trans.Id, childNumber), parentsChildCount.set(trans.ParentId, childNumber);
                } let transactionsForExport = transactions.map(trans => ({ Account: trans.Account, Date: trans.Date, Payee: trans.Payee, Notes: trans.IsParent ? "(SPLIT INTO " + parentsChildCount.get(trans.Id) + ") " + (trans.Notes || "") : trans.IsChild ? "(SPLIT " + childSplitOrder.get(trans.Id) + " OF " + parentsChildCount.get(trans.ParentId) + ") " + (trans.Notes || "") : trans.Notes, Category: trans.Category, Amount: trans.IsParent || null == trans.Amount ? 0 : (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.integerToAmount)(trans.Amount), Split_Amount: trans.IsParent ? (0, _shared_util__WEBPACK_IMPORTED_MODULE_1__.integerToAmount)(trans.Amount) : 0, Cleared: !0 === trans.Reconciled ? "Reconciled" : !0 === trans.Cleared ? "Cleared" : "Not cleared" })); return (0, csv_stringify_sync__WEBPACK_IMPORTED_MODULE_0__.stringify)(transactionsForExport, { header: !0 }); }
        }, "./packages/loot-core/src/server/transactions/import/ofx2json.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { html2Plain: () => html2Plain, ofx2json: () => ofx2json });
            var xml2js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/xml2js/lib/xml2js.js"), _shared_months__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/months.ts");
            function html2Plain(value) { return value?.replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&#39;/g, "'").replace(/&quot;/g, '"').replace(/(&amp;|&#038;)/g, "&"); }
            async function parseXml(content) { return await (0, xml2js__WEBPACK_IMPORTED_MODULE_0__.parseStringPromise)(content, { explicitArray: !1, trim: !0 }); }
            function getAsArray(value) { return Array.isArray(value) ? value : void 0 === value ? [] : [value]; }
            function mapOfxTransaction(stmtTrn) { let dtPosted = stmtTrn.DTPOSTED, transactionDate = dtPosted ? new Date(Number(dtPosted.substring(0, 4)), Number(dtPosted.substring(4, 6)) - 1, Number(dtPosted.substring(6, 8))) : null; return { amount: stmtTrn.TRNAMT, type: stmtTrn.TRNTYPE, fitId: stmtTrn.FITID, date: (0, _shared_months__WEBPACK_IMPORTED_MODULE_1__.dayFromDate)(transactionDate), name: html2Plain(stmtTrn.NAME), memo: html2Plain(stmtTrn.MEMO) }; }
            async function ofx2json(ofx) { let contents = ofx.split(/<OFX\s?>/, 2), headerString = contents[0].split(/\r?\n/), headers = {}; headerString.forEach(attrs => { if (attrs) {
                let headAttr = attrs.split(/:/, 2);
                headers[headAttr[0]] = headAttr[1];
            } }); let content = `<OFX>${contents[1]}`, dataParsed = null; try {
                dataParsed = await parseXml(content);
            }
            catch (e) {
                let sanitized = content.replace(/&/g, "&#038;").replace(/&amp;/g, "&#038;").replace(/>\s+</g, "><").replace(/\s+</g, "<").replace(/>\s+/g, ">").replace(/\.(?=[^<>]*>)/g, "").replace(/<(\w+?)>([^<]+)/g, "<$1>$2</<added>$1>").replace(/<\/<added>(\w+?)>(<\/\1>)?/g, "</$1>");
                dataParsed = await parseXml(sanitized);
            } return { headers, transactions: (function (data1) { let ofx = data1?.OFX; return ofx?.CREDITCARDMSGSRSV1 != null ? function (ofx) { let msg = ofx?.CREDITCARDMSGSRSV1; return getAsArray(msg?.CCSTMTTRNRS).flatMap(s => { let stmtRs = s?.CCSTMTRS, tranList = stmtRs?.BANKTRANLIST; return getAsArray(tranList?.STMTTRN); }); }(ofx) : ofx?.INVSTMTMSGSRSV1 != null ? function (ofx) { let msg = ofx?.INVSTMTMSGSRSV1; return getAsArray(msg?.INVSTMTTRNRS).flatMap(s => { let stmtRs = s?.INVSTMTRS, tranList = stmtRs?.INVTRANLIST; return getAsArray(tranList?.INVBANKTRAN?.flatMap(t => t?.STMTTRN)); }); }(ofx) : function (ofx) { let msg = ofx?.BANKMSGSRSV1; return getAsArray(msg?.STMTTRNRS).flatMap(s => { let stmtRs = s?.STMTRS, tranList = stmtRs?.BANKTRANLIST; return getAsArray(tranList?.STMTTRN); }); }(ofx); })(dataParsed).map(mapOfxTransaction) }; }
        }, "./packages/loot-core/src/server/transactions/import/parse-file.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { parseFile: () => parseFile });
            var csv_parse_sync__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/csv-parse/lib/sync.js"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _ofx2json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/transactions/import/ofx2json.ts"), _qif2json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/transactions/import/qif2json.ts"), _xmlcamt2json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/transactions/import/xmlcamt2json.ts");
            async function parseFile(filepath, options1 = {}) { let errors = [], m = filepath.match(/\.[^.]*$/); if (m)
                switch (m[0].toLowerCase()) {
                    case ".qif": return parseQIF(filepath, options1);
                    case ".csv":
                    case ".tsv": return parseCSV(filepath, options1);
                    case ".ofx":
                    case ".qfx": return parseOFX(filepath, options1);
                    case ".xml": return parseCAMT(filepath, options1);
                } return errors.push({ message: "Invalid file type", internal: "" }), { errors, transactions: [] }; }
            async function parseCSV(filepath, options1) {
                let data1, errors = [], contents = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.readFile(filepath);
                options1.skipLines > 0 && (contents = contents.split(/\r?\n/).slice(options1.skipLines).join(`\r
`));
                try {
                    data1 = (0, csv_parse_sync__WEBPACK_IMPORTED_MODULE_0__.parse)(contents, { columns: options1?.hasHeaderRow, bom: !0, delimiter: options1?.delimiter || ",", quote: '"', trim: !0, relax_column_count: !0, skip_empty_lines: !0 });
                }
                catch (err) {
                    return errors.push({ message: "Failed parsing: " + err.message, internal: err.message }), { errors, transactions: [] };
                }
                return { errors, transactions: data1 };
            }
            async function parseQIF(filepath, options1 = {}) { let data1, errors = [], contents = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.readFile(filepath); try {
                data1 = (0, _qif2json__WEBPACK_IMPORTED_MODULE_4__.qif2json)(contents);
            }
            catch (err) {
                return errors.push({ message: "Failed parsing: doesn’t look like a valid QIF file.", internal: err.stack }), { errors, transactions: [] };
            } return { errors: [], transactions: data1.transactions.map(trans => ({ amount: null != trans.amount ? (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.looselyParseAmount)(trans.amount) : null, date: trans.date, payee_name: trans.payee, imported_payee: trans.payee, notes: options1.importNotes && trans.memo || null })).filter(trans => null != trans.date && null != trans.amount) }; }
            async function parseOFX(filepath, options1) { let data1, errors = [], contents = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.readFile(filepath); try {
                data1 = await (0, _ofx2json__WEBPACK_IMPORTED_MODULE_3__.ofx2json)(contents);
            }
            catch (err) {
                return errors.push({ message: "Failed importing file", internal: err.stack }), { errors };
            } let useMemoFallback = options1.fallbackMissingPayeeToMemo; return { errors, transactions: data1.transactions.map(trans => ({ amount: trans.amount, imported_id: trans.fitId, date: trans.date, payee_name: trans.name || (useMemoFallback ? trans.memo : null), imported_payee: trans.name || (useMemoFallback ? trans.memo : null), notes: options1.importNotes && trans.memo || null })) }; }
            async function parseCAMT(filepath, options1 = {}) { let data1, errors = [], contents = await _platform_server_fs__WEBPACK_IMPORTED_MODULE_1__.readFile(filepath); try {
                data1 = await (0, _xmlcamt2json__WEBPACK_IMPORTED_MODULE_5__.xmlCAMT2json)(contents);
            }
            catch (err) {
                return console.error(err), errors.push({ message: "Failed importing file", internal: err.stack }), { errors };
            } return { errors, transactions: data1.map(trans => ({ ...trans, notes: options1.importNotes ? trans.notes : null })) }; }
        }, "./packages/loot-core/src/server/transactions/import/qif2json.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function qif2json(qif, options1 = {}) {
                let lines = qif.split(`
`).filter(Boolean), line = lines.shift(), type = /!Type:([^$]*)$/.exec(line.trim()), data1 = { dateFormat: options1.dateFormat, transactions: [] }, transactions = data1.transactions, transaction = {};
                if (!type || !type.length)
                    throw Error("File does not appear to be a valid qif file: " + line);
                data1.type = type[1];
                let division = {};
                for (; line = lines.shift();) {
                    if ("^" === (line = line.trim())) {
                        transactions.push(transaction), transaction = {};
                        continue;
                    }
                    switch (line[0]) {
                        case "D":
                            transaction.date = line.substring(1);
                            break;
                        case "T":
                            transaction.amount = line.substring(1);
                            break;
                        case "N":
                            transaction.number = line.substring(1);
                            break;
                        case "M":
                            transaction.memo = line.substring(1);
                            break;
                        case "A":
                            transaction.address = (transaction.address || []).concat(line.substring(1));
                            break;
                        case "P":
                            transaction.payee = line.substring(1).replace(/&amp;/g, "&");
                            break;
                        case "L":
                            let lArray = line.substring(1).split(":");
                            transaction.category = lArray[0], void 0 !== lArray[1] && (transaction.subcategory = lArray[1]);
                            break;
                        case "C":
                            transaction.clearedStatus = line.substring(1);
                            break;
                        case "S":
                            let sArray = line.substring(1).split(":");
                            division.category = sArray[0], void 0 !== sArray[1] && (division.subcategory = sArray[1]);
                            break;
                        case "E":
                            division.description = line.substring(1);
                            break;
                        case "$":
                            division.amount = parseFloat(line.substring(1)), transaction.division instanceof Array || (transaction.division = []), transaction.division.push(division), division = {};
                            break;
                        default: throw Error("Unknown Detail Code: " + line[0]);
                    }
                }
                return Object.keys(transaction).length && transactions.push(transaction), data1;
            }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { qif2json: () => qif2json });
        }, "./packages/loot-core/src/server/transactions/import/xmlcamt2json.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { xmlCAMT2json: () => xmlCAMT2json });
            var xml2js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/xml2js/lib/xml2js.js");
            function findKeys(obj, key) { let result = []; for (let i in obj)
                obj.hasOwnProperty(i) && (i === key && (Array.isArray(obj[i]) ? result = result.concat(obj[i]) : result.push(obj[i])), "object" == typeof obj[i] && (result = result.concat(findKeys(obj[i], key)))); return result; }
            function getPayeeNameFromTxDtls(TxDtls, isDebit) { if (TxDtls?.RltdPties) {
                let Nm = findKeys(isDebit ? TxDtls.RltdPties.Cdtr : TxDtls.RltdPties.Dbtr, "Nm");
                return Nm.length > 0 ? Nm[0] : null;
            } return null; }
            function getNotesFromTxDtls(TxDtls) { if (TxDtls?.RmtInf) {
                let Ustrd = TxDtls.RmtInf.Ustrd;
                return Array.isArray(Ustrd) ? Ustrd.join(" ") : Ustrd;
            } return null; }
            function convertToNumberOrNull(value) { let number = Number(value); return isNaN(number) ? null : number; }
            function getDtOrDtTm(Date1) { return Date1 ? "DtTm" in Date1 ? Date1.DtTm.slice(0, 10) : Date1?.Dt : null; }
            async function xmlCAMT2json(content) { let entries = findKeys(await (0, xml2js__WEBPACK_IMPORTED_MODULE_0__.parseStringPromise)(content, { explicitArray: !1 }), "Ntry"), transactions = []; for (let entry of entries) {
                let id = entry.AcctSvcrRef, amount = convertToNumberOrNull(entry.Amt?._), isDebit = "DBIT" === entry.CdtDbtInd, date = getDtOrDtTm(entry.ValDt) || getDtOrDtTm(entry.BookgDt);
                if (Array.isArray(entry.NtryDtls?.TxDtls))
                    entry.NtryDtls.TxDtls.forEach(TxDtls => { let subPayee = getPayeeNameFromTxDtls(TxDtls, isDebit), subNotes = getNotesFromTxDtls(TxDtls), Amt = findKeys(TxDtls, "Amt"), amount = Amt.length > 0 ? convertToNumberOrNull(Amt[0]._) : null; transactions.push({ amount: isDebit ? -amount : amount, date, payee_name: subPayee, imported_payee: subPayee, notes: subNotes }); });
                else {
                    let payee_name, notes;
                    (payee_name = getPayeeNameFromTxDtls(entry.NtryDtls?.TxDtls, isDebit)) || !entry.AddtlNtryInf || (payee_name = entry.AddtlNtryInf), (notes = getNotesFromTxDtls(entry.NtryDtls?.TxDtls)) || !entry.AddtlNtryInf || entry.AddtlNtryInf === payee_name || (notes = entry.AddtlNtryInf), payee_name || notes || !entry.NtryRef || (notes = entry.NtryRef), payee_name && notes && payee_name.includes(notes) && (notes = null);
                    let transaction = { amount: isDebit ? -amount : amount, date, payee_name, imported_payee: payee_name, notes };
                    id && (transaction.imported_id = id), transactions.push(transaction);
                }
            } return transactions.filter(trans => null != trans.date && null != trans.amount); }
        }, "./packages/loot-core/src/server/transactions/index.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { batchUpdateTransactions: () => batchUpdateTransactions });
            var _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _db_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/util.ts"), _sync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), _transaction_rules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts"), _transfer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/transactions/transfer.ts");
            async function idsWithChildren(ids) { let whereIds = (0, _db_util__WEBPACK_IMPORTED_MODULE_2__.whereIn)(ids, "parent_id"), rows = await _db__WEBPACK_IMPORTED_MODULE_1__.all(`SELECT id FROM v_transactions_internal WHERE ${whereIds}`), set = new Set(ids); for (let row of rows)
                set.add(row.id); return [...set]; }
            async function getTransactionsByIds(ids) { return (0, _db_util__WEBPACK_IMPORTED_MODULE_2__.incrFetch)((query, params) => _db__WEBPACK_IMPORTED_MODULE_1__.selectWithSchema("transactions", query, params), ids, id => `id = '${id}'`, where => `SELECT * FROM v_transactions_internal WHERE ${where}`); }
            async function batchUpdateTransactions({ added, deleted, updated, learnCategories = !1, detectOrphanPayees = !0, runTransfers = !0 }) { let transfersUpdated, addedIds = [], updatedIds = updated ? updated.map(u => u.id) : [], deletedIds = deleted ? await idsWithChildren(deleted.map(d => d.id)) : [], oldPayees = new Set, accounts = await _db__WEBPACK_IMPORTED_MODULE_1__.all("SELECT * FROM accounts WHERE tombstone = 0"); if (updated) {
                let descUpdatedIds = updated.filter(update => update.payee).map(update => update.id), transactions = await getTransactionsByIds(descUpdatedIds);
                for (let i = 0; i < transactions.length; i++)
                    oldPayees.add(transactions[i].payee);
            } await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { added && (addedIds = await Promise.all(added.map(async (t) => { let account = accounts.find(acct => acct.id === t.account); return (t.is_parent || 1 === account.offbudget) && (t.category = null), _db__WEBPACK_IMPORTED_MODULE_1__.insertTransaction(t); }))), deleted && await Promise.all(deletedIds.map(async (id) => { await _db__WEBPACK_IMPORTED_MODULE_1__.deleteTransaction({ id }); })), updated && await Promise.all(updated.map(async (t) => { if (t.account) {
                let account = accounts.find(acct => acct.id === t.account);
                (t.is_parent || 1 === account.offbudget) && (t.category = null);
            } await _db__WEBPACK_IMPORTED_MODULE_1__.updateTransaction(t); })); }); let allAdded = await getTransactionsByIds(addedIds), allUpdated = await getTransactionsByIds(updatedIds), allDeleted = await getTransactionsByIds(deletedIds); if (runTransfers && await (0, _sync__WEBPACK_IMPORTED_MODULE_3__.batchMessages)(async () => { await Promise.all(allAdded.map(t => _transfer__WEBPACK_IMPORTED_MODULE_5__.onInsert(t))), transfersUpdated = (await Promise.all(allUpdated.map(t => _transfer__WEBPACK_IMPORTED_MODULE_5__.onUpdate(t)))).filter(Boolean), await Promise.all(allDeleted.map(t => _transfer__WEBPACK_IMPORTED_MODULE_5__.onDelete(t))); }), learnCategories) {
                let ids = new Set([...added ? added.filter(add => add.category).map(add => add.id) : [], ...updated ? updated.filter(update => update.category).map(update => update.id) : []]);
                await _transaction_rules__WEBPACK_IMPORTED_MODULE_4__.updateCategoryRules(allAdded.concat(allUpdated).filter(trans => ids.has(trans.id)));
            } if (detectOrphanPayees && updated) {
                let newPayeeIds = updated.map(u => u.payee).filter(Boolean);
                if (newPayeeIds.length > 0) {
                    let allOrphaned = new Set(await _db__WEBPACK_IMPORTED_MODULE_1__.getOrphanedPayees()), orphanedIds = [...oldPayees].filter(id => allOrphaned.has(id));
                    orphanedIds.length > 0 && _platform_server_connection__WEBPACK_IMPORTED_MODULE_0__.send("orphaned-payees", { orphanedIds, updatedPayeeIds: newPayeeIds });
                }
            } return { added: allAdded, updated: runTransfers ? transfersUpdated : allUpdated, deleted: allDeleted }; }
        }, "./packages/loot-core/src/server/transactions/merge.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { mergeTransactions: () => mergeTransactions });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts");
            async function mergeTransactions(transactions) { var a, b; let txIds = transactions?.map(x => x?.id).filter(Boolean) || []; if (2 !== txIds.length)
                throw Error("Merging is only possible with 2 transactions, but found " + JSON.stringify(transactions)); let [a1, b1] = await Promise.all(txIds.map(_db__WEBPACK_IMPORTED_MODULE_0__.getTransaction)); if (a1 && b1) {
                if (a1.amount !== b1.amount)
                    throw Error("Transaction amounts must match for merge");
            }
            else
                throw Error("One of the provided transactions does not exist"); let { keep, drop } = (a = a1, (b = b1).imported_id && !a.imported_id ? { keep: b, drop: a } : a.imported_id && !b.imported_id ? { keep: a, drop: b } : b.imported_payee && !a.imported_payee ? { keep: b, drop: a } : a.imported_payee && !b.imported_payee || 0 > a.date.localeCompare(b.date) ? { keep: a, drop: b } : { keep: b, drop: a }); return await Promise.all([_db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: keep.id, payee: keep.payee || drop.payee, category: keep.category || drop.category, notes: keep.notes || drop.notes, cleared: keep.cleared || drop.cleared, reconciled: keep.reconciled || drop.reconciled }), _db__WEBPACK_IMPORTED_MODULE_0__.deleteTransaction(drop)]), keep.id; }
        }, "./packages/loot-core/src/server/transactions/transaction-rules.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            let allRules, unlistenSync, firstcharIndexer, payeeIndexer;
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { applyActions: () => applyActions, conditionsToAQL: () => conditionsToAQL, deleteRule: () => deleteRule, finalizeTransactionForRules: () => finalizeTransactionForRules, getProbableCategory: () => getProbableCategory, getRules: () => getRules, getRulesForPayee: () => getRulesForPayee, insertRule: () => insertRule, iterateIds: () => _rules__WEBPACK_IMPORTED_MODULE_9__.iterateIds, loadRules: () => loadRules, makeRule: () => makeRule, parseConditionsOrActions: () => parseConditionsOrActions, prepareTransactionForRules: () => prepareTransactionForRules, resetState: () => resetState, ruleModel: () => ruleModel, runRules: () => runRules, serializeConditionsOrActions: () => serializeConditionsOrActions, updateCategoryRules: () => updateCategoryRules, updatePayeeRenameRule: () => updatePayeeRenameRule, updateRule: () => updateRule });
            var _shared_months__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _shared_rules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/rules.ts"), _shared_transactions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/transactions.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _aql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _db_mappings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./packages/loot-core/src/server/db/mappings.ts"), _errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./packages/loot-core/src/server/errors.ts"), _models__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./packages/loot-core/src/server/models.ts"), _rules__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./packages/loot-core/src/server/rules/index.ts"), _sync__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts"), ___WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./packages/loot-core/src/server/transactions/index.ts");
            function resetState() { allRules = new Map, firstcharIndexer = new _rules__WEBPACK_IMPORTED_MODULE_9__.RuleIndexer({ field: "imported_payee", method: "firstchar" }), payeeIndexer = new _rules__WEBPACK_IMPORTED_MODULE_9__.RuleIndexer({ field: "payee" }); }
            let internalFields = _aql__WEBPACK_IMPORTED_MODULE_4__.schemaConfig.views.transactions.fields, publicFields = Object.fromEntries(Object.entries(_aql__WEBPACK_IMPORTED_MODULE_4__.schemaConfig.views.transactions.fields).map(entry => [entry[1], entry[0]]));
            function parseConditionsOrActions(str) { return str ? (function (str) { let value; try {
                value = "string" == typeof str ? JSON.parse(str) : str;
            }
            catch (e) {
                throw new _errors__WEBPACK_IMPORTED_MODULE_7__.RuleError("internal", "Cannot parse rule json");
            } if (!Array.isArray(value))
                throw new _errors__WEBPACK_IMPORTED_MODULE_7__.RuleError("internal", "Rule json must be an array"); return value; })(str).map(item => ({ ...item, field: publicFields[item.field] || item.field })) : []; }
            function serializeConditionsOrActions(arr) { return JSON.stringify(arr.map(item => ({ ...item, field: internalFields[item.field] || item.field }))); }
            let ruleModel = { validate(rule, { update } = {}) { if ((0, _models__WEBPACK_IMPORTED_MODULE_8__.requiredFields)("rules", rule, ["conditions", "actions"], update), (!update || "stage" in rule) && "pre" !== rule.stage && "post" !== rule.stage && null !== rule.stage)
                    throw Error("Invalid rule stage: " + rule.stage); if ((!update || "conditionsOp" in rule) && !["and", "or"].includes(rule.conditionsOp))
                    throw Error("Invalid rule conditionsOp: " + rule.conditionsOp); return rule; }, toJS(row) { let { conditions, conditions_op, actions, ...fields } = row; return { ...fields, conditionsOp: conditions_op, conditions: parseConditionsOrActions(conditions), actions: parseConditionsOrActions(actions) }; }, fromJS(rule) { let { conditions, conditionsOp, actions, ...row } = rule; return conditionsOp && (row.conditions_op = conditionsOp), Array.isArray(conditions) && (row.conditions = serializeConditionsOrActions(conditions)), Array.isArray(actions) && (row.actions = serializeConditionsOrActions(actions)), row; } };
            function makeRule(data1) { let rule; try {
                rule = new _rules__WEBPACK_IMPORTED_MODULE_9__.Rule(ruleModel.toJS(data1));
            }
            catch (e) {
                if (console.warn("Invalid rule", e), e instanceof _errors__WEBPACK_IMPORTED_MODULE_7__.RuleError)
                    return null;
                throw e;
            } return (0, _rules__WEBPACK_IMPORTED_MODULE_9__.migrateIds)(rule, (0, _db_mappings__WEBPACK_IMPORTED_MODULE_6__.getMappings)()), rule; }
            async function loadRules() {
                resetState();
                let rules = await _db__WEBPACK_IMPORTED_MODULE_5__.all(`
    SELECT * FROM rules
      WHERE conditions IS NOT NULL AND actions IS NOT NULL AND tombstone = 0
  `);
                for (let i = 0; i < rules.length; i++) {
                    let desc = rules[i];
                    ("cleanup" === desc.stage || "modify" === desc.stage) && (desc.stage = "pre");
                    let rule = makeRule(desc);
                    rule && (allRules.set(rule.id, rule), firstcharIndexer.index(rule), payeeIndexer.index(rule));
                }
                unlistenSync && unlistenSync(), unlistenSync = (0, _sync__WEBPACK_IMPORTED_MODULE_10__.addSyncListener)(onApplySync);
            }
            function getRules() { return [...allRules.values()]; }
            async function insertRule(rule) { return rule = ruleModel.validate(rule), _db__WEBPACK_IMPORTED_MODULE_5__.insertWithUUID("rules", ruleModel.fromJS(rule)); }
            async function updateRule(rule) { return rule = ruleModel.validate(rule, { update: !0 }), _db__WEBPACK_IMPORTED_MODULE_5__.update("rules", ruleModel.fromJS(rule)); }
            async function deleteRule(id) { return !await _db__WEBPACK_IMPORTED_MODULE_5__.first("SELECT id FROM schedules WHERE rule = ?", [id]) && (await _db__WEBPACK_IMPORTED_MODULE_5__.delete_("rules", id), !0); }
            function onApplySync(oldValues, newValues) { newValues.forEach((items, table) => { "rules" === table && items.forEach(newValue => { let oldRule = allRules.get(newValue.id); if (1 === newValue.tombstone) {
                let rule = allRules.get(newValue.id);
                rule && (allRules.delete(rule.getId()), firstcharIndexer.remove(rule), payeeIndexer.remove(rule));
            }
            else {
                let rule = makeRule(newValue);
                rule && (oldRule && (firstcharIndexer.remove(oldRule), payeeIndexer.remove(oldRule)), allRules.set(newValue.id, rule), firstcharIndexer.index(rule), payeeIndexer.index(rule));
            } }); }), [...newValues.keys()].find(table => -1 !== table.indexOf("mapping")) && getRules().forEach(rule => { (0, _rules__WEBPACK_IMPORTED_MODULE_9__.migrateIds)(rule, (0, _db_mappings__WEBPACK_IMPORTED_MODULE_6__.getMappings)()); }); }
            async function runRules(trans, accounts = null) { let accountsMap = null; accountsMap = null === accounts ? new Map((await _db__WEBPACK_IMPORTED_MODULE_5__.getAccounts()).map(account => [account.id, account])) : accounts; let finalTrans = await prepareTransactionForRules({ ...trans }, accountsMap), rules = (0, _rules__WEBPACK_IMPORTED_MODULE_9__.rankRules)((0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.fastSetMerge)(firstcharIndexer.getApplicableRules(trans), payeeIndexer.getApplicableRules(trans))); for (let i = 0; i < rules.length; i++)
                finalTrans = rules[i].apply(finalTrans); return await finalizeTransactionForRules(finalTrans); }
            function conditionsToAQL(conditions, { recurDateBounds = 100, applySpecialCases = !0 } = {}) { let errors = []; conditions = conditions.map(cond => { if (cond instanceof _rules__WEBPACK_IMPORTED_MODULE_9__.Condition)
                return cond; try {
                return new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition(cond.op, cond.field, cond.value, cond.options);
            }
            catch (e) {
                return errors.push(e.type || "internal"), console.log("conditionsToAQL: invalid condition: " + e.message), null;
            } }).map(cond => applySpecialCases && cond ? "is" === cond.op && "category" === cond.field && null === cond.value ? new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition("and", cond.field, [cond, new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition("is", "transfer", !1, null), new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition("is", "parent", !1, null)], {}) : "isNot" === cond.op && "category" === cond.field && null === cond.value ? new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition("and", cond.field, [cond, new _rules__WEBPACK_IMPORTED_MODULE_9__.Condition("is", "parent", !1, null)], {}) : cond : cond).filter(Boolean); let mapConditionToActualQL = cond => { let { type, options: options1 } = cond, { field, op, value } = cond, getValue = value => "number" === type ? value.value : value; "transfer" === field && "is" === op ? (field = "transfer_id", value && (op = "isNot"), value = null) : "parent" === field && "is" === op && (field = "is_parent", op = value ? "true" : "false"); let apply = (field, aqlOp, value) => { if ("number" === type) {
                if (options1) {
                    if (options1.outflow)
                        return { $and: [{ amount: { $lt: 0 } }, { [field]: { $transform: "$neg", [aqlOp]: value } }] };
                    else if (options1.inflow)
                        return { $and: [{ amount: { $gt: 0 } }, { [field]: { [aqlOp]: value } }] };
                }
                return { amount: { [aqlOp]: value } };
            } return "string" === type ? { [field]: { $transform: "hasTags" !== op ? "$lower" : void 0, [aqlOp]: value } } : "date" === type ? { [field]: { [aqlOp]: value.date } } : { [field]: { [aqlOp]: value } }; }; switch (op) {
                case "isapprox":
                case "is":
                    if ("date" === type)
                        if ("recur" === value.type)
                            return { $or: value.schedule.occurrences({ take: recurDateBounds }).toArray().map(d => (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.dayFromDate)(d.date)).map(d => "isapprox" === op ? { $and: [{ date: { $gte: (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.subDays)(d, 2) } }, { date: { $lte: (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.addDays)(d, 2) } }] } : { date: d }) };
                        else if ("isapprox" === op) {
                            let fullDate = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.parseDate)(value.date), high = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.addDays)(fullDate, 2);
                            return { $and: [{ date: { $gte: (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.subDays)(fullDate, 2) } }, { date: { $lte: high } }] };
                        }
                        else
                            switch (value.type) {
                                case "date": return { date: value.date };
                                case "month": return { $and: [{ date: { $gte: value.date + "-00" } }, { date: { $lte: value.date + "-99" } }] };
                                case "year": return { $and: [{ date: { $gte: value.date + "-00-00" } }, { date: { $lte: value.date + "-99-99" } }] };
                            }
                    else if ("number" === type) {
                        let number = value.value;
                        if ("isapprox" === op) {
                            let threshold = (0, _shared_rules__WEBPACK_IMPORTED_MODULE_1__.getApproxNumberThreshold)(number);
                            return { $and: [apply(field, "$gte", number - threshold), apply(field, "$lte", number + threshold)] };
                        }
                        return apply(field, "$eq", number);
                    }
                    else if ("string" === type && "" === value)
                        return { $or: [apply(field, "$eq", null), apply(field, "$eq", "")] };
                    return apply(field, "$eq", value);
                case "isNot": return apply(field, "$ne", value);
                case "isbetween":
                    let [low, high] = (0, _shared_rules__WEBPACK_IMPORTED_MODULE_1__.sortNumbers)(value.num1, value.num2);
                    return { [field]: [{ $gte: low }, { $lte: high }] };
                case "contains": return apply("id" === type ? field + ".name" : field, "$like", "%" + value + "%");
                case "matches": return apply("id" === type ? field + ".name" : field, "$regexp", value);
                case "doesNotContain": return apply("id" === type ? field + ".name" : field, "$notlike", "%" + value + "%");
                case "oneOf":
                    let values = value;
                    if (0 === values.length)
                        return { id: null };
                    return { $or: values.map(v => apply(field, "$eq", v)) };
                case "hasTags":
                    let tagValues = [];
                    for (let [_, tag] of value.matchAll(/(?<!#)(#[^#\s]+)/g))
                        tagValues.find(t => t.tag === tag) || tagValues.push(tag);
                    return { $and: tagValues.map(v => { let regex = RegExp(`(?<!#)${v.replace(/[.*+?^${}()|[\]\\]/g, "\\$&")}([\\s#]|$)`); return apply(field, "$regexp", regex.source); }) };
                case "notOneOf":
                    let notValues = value;
                    if (0 === notValues.length)
                        return { id: null };
                    return { $and: notValues.map(v => apply(field, "$ne", v)) };
                case "gt": return apply(field, "$gt", getValue(value));
                case "gte": return apply(field, "$gte", getValue(value));
                case "lt": return apply(field, "$lt", getValue(value));
                case "lte": return apply(field, "$lte", getValue(value));
                case "true": return apply(field, "$eq", !0);
                case "false": return apply(field, "$eq", !1);
                case "and": return { $and: getValue(value).map(subExpr => mapConditionToActualQL(subExpr)) };
                case "onBudget": return { "account.offbudget": !1 };
                case "offBudget": return { "account.offbudget": !0 };
                default: throw Error("Unhandled operator: " + op);
            } }; return { filters: conditions.map(mapConditionToActualQL), errors }; }
            async function applyActions(transactions, actions) { let parsedActions = actions.map(action => { if (action instanceof _rules__WEBPACK_IMPORTED_MODULE_9__.Action)
                return action; try {
                if ("set-split-amount" === action.op)
                    return new _rules__WEBPACK_IMPORTED_MODULE_9__.Action(action.op, null, action.value, action.options);
                if ("link-schedule" === action.op)
                    return new _rules__WEBPACK_IMPORTED_MODULE_9__.Action(action.op, null, action.value, null);
                if ("prepend-notes" === action.op || "append-notes" === action.op)
                    return new _rules__WEBPACK_IMPORTED_MODULE_9__.Action(action.op, null, action.value, null);
                return new _rules__WEBPACK_IMPORTED_MODULE_9__.Action(action.op, action.field, action.value, action.options);
            }
            catch (e) {
                return console.log("Action error", e), null;
            } }).filter(Boolean); if (parsedActions.length !== actions.length)
                return null; let accountsMap = new Map((await _db__WEBPACK_IMPORTED_MODULE_5__.getAccounts()).map(account => [account.id, account])), updated = (await Promise.all(transactions.map(transactions => prepareTransactionForRules(transactions, accountsMap)))).flatMap(trans => (0, _shared_transactions__WEBPACK_IMPORTED_MODULE_2__.ungroupTransaction)((0, _rules__WEBPACK_IMPORTED_MODULE_9__.execActions)(parsedActions, trans))), finalized = []; for (let trans of updated)
                finalized.push(await finalizeTransactionForRules(trans)); return (0, ___WEBPACK_IMPORTED_MODULE_11__.batchUpdateTransactions)({ updated: finalized }); }
            function getRulesForPayee(payeeId) { let rules = new Set; return (0, _rules__WEBPACK_IMPORTED_MODULE_9__.iterateIds)(getRules(), "payee", (rule, id) => { id === payeeId && rules.add(rule); }), (0, _rules__WEBPACK_IMPORTED_MODULE_9__.rankRules)([...rules]); }
            async function updatePayeeRenameRule(fromNames, to) { let renameRule = (function* (stage, condField, actionField, { condValue, actionValue }) { let rules = getRules(); for (let i = 0; i < rules.length; i++) {
                let rule = rules[i];
                "pre" === rule.stage && 1 === rule.actions.length && "set" === rule.actions[0].op && rule.actions[0].field === actionField && (null == actionValue || rule.actions[0].value === actionValue) && 1 === rule.conditions.length && ("oneOf" === rule.conditions[0].op || "oneOf" === rule.conditions[0].op) && rule.conditions[0].field === condField && (null == condValue || -1 !== rule.conditions[0].value.indexOf(condValue)) && (yield rule.serialize());
            } return null; })(0, "imported_payee", "payee", { actionValue: to }).next().value; if (!renameRule)
                return insertRule(new _rules__WEBPACK_IMPORTED_MODULE_9__.Rule({ stage: "pre", conditionsOp: "and", conditions: [{ op: "oneOf", field: "imported_payee", value: fromNames }], actions: [{ op: "set", field: "payee", value: to }] }).serialize()); {
                let condition = renameRule.conditions[0], newValue = [...(0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.fastSetMerge)(new Set(condition.value), new Set(fromNames.filter(name => "" !== name)))], rule = { ...renameRule, conditions: [{ ...condition, value: newValue }] };
                return await updateRule(rule), renameRule.id;
            } }
            function getProbableCategory(transactions) { let scores = new Map; transactions.forEach(trans => { trans.category && scores.set(trans.category, (scores.get(trans.category) || 0) + 1); }); let winner = transactions.reduce((winner, trans) => { let score = scores.get(trans.category); return !winner || score > winner.score ? { score, category: trans.category } : winner; }, null); return winner.score >= 3 ? winner.category : null; }
            async function updateCategoryRules(transactions) {
                if (0 === transactions.length)
                    return;
                let payeeIds = new Set(transactions.map(trans => trans.payee)), transIds = new Set(transactions.map(trans => trans.id)), oldestDate = null;
                for (let i = 0; i < transactions.length; i++)
                    (null === oldestDate || transactions[i].date < oldestDate) && (oldestDate = transactions[i].date);
                oldestDate = (0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.subDays)(oldestDate, 180);
                let register = await _db__WEBPACK_IMPORTED_MODULE_5__.all(`SELECT t.* FROM v_transactions t
     LEFT JOIN accounts a ON a.id = t.account
     LEFT JOIN payees p ON p.id = t.payee
     WHERE date >= ? AND date <= ? AND is_parent = 0 AND a.closed = 0 AND p.learn_categories = 1
     ORDER BY date DESC`, [(0, _models__WEBPACK_IMPORTED_MODULE_8__.toDateRepr)(oldestDate), (0, _models__WEBPACK_IMPORTED_MODULE_8__.toDateRepr)((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.addDays)((0, _shared_months__WEBPACK_IMPORTED_MODULE_0__.currentDay)(), 180))]), allTransactions = (0, _shared_util__WEBPACK_IMPORTED_MODULE_3__.partitionByField)(register, "payee"), categoriesToSet = new Map;
                for (let payeeId of payeeIds)
                    if (payeeId) {
                        let latestTrans = (allTransactions.get(payeeId) || []).slice(0, 5);
                        if (latestTrans.find(trans => transIds.has(trans.id))) {
                            let category = getProbableCategory(latestTrans);
                            category && categoriesToSet.set(payeeId, category);
                        }
                    }
                await (0, _sync__WEBPACK_IMPORTED_MODULE_10__.batchMessages)(async () => { for (let [payeeId, category] of categoriesToSet.entries()) {
                    let ruleSetters = [...function* (stage, condField, actionField, { condValue, actionValue }) { let rules = getRules(); for (let i = 0; i < rules.length; i++) {
                            let rule = rules[i];
                            null === rule.stage && 1 === rule.actions.length && "set" === rule.actions[0].op && rule.actions[0].field === actionField && (void 0 === actionValue || rule.actions[0].value === actionValue) && 1 === rule.conditions.length && ("is" === rule.conditions[0].op || "isNot" === rule.conditions[0].op) && rule.conditions[0].field === condField && (void 0 === condValue || rule.conditions[0].value === condValue) && (yield rule.serialize());
                        } return null; }(0, "payee", "category", { condValue: payeeId })];
                    if (ruleSetters.length > 0)
                        for (let rule of ruleSetters) {
                            let action = rule.actions[0];
                            action.value !== category && await updateRule({ ...rule, actions: [{ ...action, value: category }] });
                        }
                    else {
                        let newRule = new _rules__WEBPACK_IMPORTED_MODULE_9__.Rule({ stage: null, conditionsOp: "and", conditions: [{ op: "is", field: "payee", value: payeeId }], actions: [{ op: "set", field: "category", value: category }] });
                        await insertRule(newRule.serialize());
                    }
                } });
            }
            async function prepareTransactionForRules(trans, accounts = null) { let r = { ...trans }; if (trans.payee) {
                let payee = await (0, _db__WEBPACK_IMPORTED_MODULE_5__.getPayee)(trans.payee);
                payee && (r.payee_name = payee.name);
            } return trans.account && (null !== accounts && accounts.has(trans.account) ? r._account = accounts.get(trans.account) : r._account = await (0, _db__WEBPACK_IMPORTED_MODULE_5__.getAccount)(trans.account)), r; }
            async function finalizeTransactionForRules(trans) { if ("payee_name" in trans) {
                if ("new" === trans.payee)
                    if (trans.payee_name) {
                        let payeeId = (await (0, _db__WEBPACK_IMPORTED_MODULE_5__.getPayeeByName)(trans.payee_name))?.id;
                        payeeId ??= await (0, _db__WEBPACK_IMPORTED_MODULE_5__.insertPayee)({ name: trans.payee_name }), trans.payee = payeeId;
                    }
                    else
                        trans.payee = null;
                delete trans.payee_name;
            } return trans; }
        }, "./packages/loot-core/src/server/transactions/transfer.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addTransfer: () => addTransfer, onDelete: () => onDelete, onInsert: () => onInsert, onUpdate: () => onUpdate, removeTransfer: () => removeTransfer, updateTransfer: () => updateTransfer });
            var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _transaction_rules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/transactions/transaction-rules.ts");
            async function getPayee(acct) { return _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT * FROM payees WHERE transfer_acct = ?", [acct]); }
            async function getTransferredAccount(transaction) { if (transaction.payee) {
                let result = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT transfer_acct FROM v_payees WHERE id = ?", [transaction.payee]);
                return result?.transfer_acct || null;
            } return null; }
            async function clearCategory(transaction, transferAcct) { let { offbudget: fromOffBudget } = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT offbudget FROM accounts WHERE id = ?", [transaction.account]), { offbudget: toOffBudget } = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT offbudget FROM accounts WHERE id = ?", [transferAcct]); return fromOffBudget === toOffBudget && (await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.id, category: null }), transaction.transfer_id && await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.transfer_id, category: null }), !0); }
            async function addTransfer(transaction, transferredAccount) { if (transaction.is_parent)
                return null; let { id: fromPayee } = await _db__WEBPACK_IMPORTED_MODULE_0__.first("SELECT id FROM payees WHERE transfer_acct = ?", [transaction.account]), transferTransaction = { account: transferredAccount, amount: -transaction.amount, payee: fromPayee, date: transaction.date, transfer_id: transaction.id, notes: transaction.notes || null, schedule: transaction.schedule, cleared: !1 }, { notes, cleared } = await (0, _transaction_rules__WEBPACK_IMPORTED_MODULE_1__.runRules)(transferTransaction), id = await _db__WEBPACK_IMPORTED_MODULE_0__.insertTransaction({ ...transferTransaction, notes, cleared }); await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.id, transfer_id: id }); let categoryCleared = await clearCategory(transaction, transferredAccount); return { id: transaction.id, transfer_id: id, ...categoryCleared ? { category: null } : {} }; }
            async function removeTransfer(transaction) { let transferTrans = await _db__WEBPACK_IMPORTED_MODULE_0__.getTransaction(transaction.transfer_id); return transferTrans && (transferTrans.is_child ? await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.transfer_id, transfer_id: null, payee: null }) : await _db__WEBPACK_IMPORTED_MODULE_0__.deleteTransaction({ id: transaction.transfer_id })), await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.id, transfer_id: null }), { id: transaction.id, transfer_id: null }; }
            async function updateTransfer(transaction, transferredAccount) { let payee = await getPayee(transaction.account); if (await _db__WEBPACK_IMPORTED_MODULE_0__.updateTransaction({ id: transaction.transfer_id, account: transferredAccount, payee: payee.id, date: transaction.date, notes: transaction.notes, amount: -transaction.amount, schedule: transaction.schedule }), await clearCategory(transaction, transferredAccount))
                return { id: transaction.id, category: null }; }
            async function onInsert(transaction) { let transferredAccount = await getTransferredAccount(transaction); if (transferredAccount)
                return addTransfer(transaction, transferredAccount); }
            async function onDelete(transaction) { transaction.transfer_id && await removeTransfer(transaction); }
            async function onUpdate(transaction) { let transferredAccount = await getTransferredAccount(transaction); return transaction.is_parent ? removeTransfer(transaction) : transferredAccount && !transaction.transfer_id ? addTransfer(transaction, transferredAccount) : !transferredAccount && transaction.transfer_id ? removeTransfer(transaction) : transferredAccount && transaction.transfer_id ? updateTransfer(transaction, transferredAccount) : void 0; }
        }, "./packages/loot-core/src/server/undo.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { appendMessages: () => appendMessages, clearUndo: () => clearUndo, redo: () => redo, undo: () => undo, undoable: () => undoable, withUndo: () => withUndo });
            var _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("@actual-app/crdt"), _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/platform/server/connection/index.api.ts"), _shared_util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/util.ts"), _mutators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/mutators.ts"), _sync__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./packages/loot-core/src/server/sync/index.ts");
            let MESSAGE_HISTORY = [{ type: "marker" }], CURSOR = 0;
            function appendMessages(messages, oldData) { let context = (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.getMutatorContext)(); if (context.undoListening && messages.length > 0) {
                let markers = (MESSAGE_HISTORY = MESSAGE_HISTORY.slice(0, CURSOR + 1)).filter(item => "marker" === item.type);
                if (markers.length > 20) {
                    let slice = markers.slice(-20), cutoff = MESSAGE_HISTORY.indexOf(slice[0]);
                    CURSOR = (MESSAGE_HISTORY = MESSAGE_HISTORY.slice(cutoff)).length - 1;
                }
                let { undoTag } = context;
                MESSAGE_HISTORY.push({ type: "messages", messages, oldData, undoTag }), CURSOR++;
            } }
            function clearUndo() { MESSAGE_HISTORY = [{ type: "marker" }], CURSOR = 0; }
            function withUndo(func, meta) { let context = (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.getMutatorContext)(); if (context.undoDisabled || context.undoListening)
                return func(); MESSAGE_HISTORY = MESSAGE_HISTORY.slice(0, CURSOR + 1); let marker = { type: "marker", meta }; return "marker" === MESSAGE_HISTORY[MESSAGE_HISTORY.length - 1].type ? MESSAGE_HISTORY[MESSAGE_HISTORY.length - 1] = marker : (MESSAGE_HISTORY.push(marker), CURSOR++), (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.withMutatorContext)({ undoListening: !0, undoTag: context.undoTag }, func); }
            function undoable(func, metaFunc) { return (...args) => withUndo(() => func.apply(null, args), metaFunc ? metaFunc(...args) : void 0); }
            async function applyUndoAction(messages, meta, undoTag) { await (0, _mutators__WEBPACK_IMPORTED_MODULE_3__.withMutatorContext)({ undoListening: !1 }, () => (0, _sync__WEBPACK_IMPORTED_MODULE_4__.sendMessages)(messages.map(msg => ({ ...msg, timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() })))); let tables = messages.reduce((acc, message) => (acc.includes(message.dataset) || acc.push(message.dataset), acc), []); _platform_server_connection__WEBPACK_IMPORTED_MODULE_1__.send("undo-event", { messages, tables, meta, undoTag }); }
            async function undo() { let end = CURSOR; for (CURSOR = Math.max(CURSOR - 1, 0); CURSOR > 0 && "marker" !== MESSAGE_HISTORY[CURSOR].type;)
                CURSOR--; let meta = MESSAGE_HISTORY[CURSOR].meta, start = Math.max(CURSOR, 0), entries = MESSAGE_HISTORY.slice(start, end + 1).filter(entry => "messages" === entry.type); if (entries.length > 0) {
                let toApply = entries.reduce((acc, entry) => acc.concat(entry.messages.map(message => (function (message, oldData) { let oldItem = (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.getIn)(oldData, [message.dataset, message.row]); if (oldItem) {
                    let column = message.column;
                    return "spreadsheet_cells" === message.dataset && (column = "cachedValue"), { ...message, value: oldItem[column] };
                } if ("spreadsheet_cells" === message.dataset)
                    return "expr" === message.column ? { ...message, value: null } : message; if ("category_mapping" !== message.dataset && "payee_mapping" !== message.dataset)
                    return "zero_budget_months" === message.dataset || "zero_budgets" === message.dataset || "reflect_budgets" === message.dataset ? ["buffered", "amount", "carryover"].includes(message.column) ? { ...message, value: 0 } : null : "notes" === message.dataset ? { ...message, value: null } : { ...message, column: "tombstone", value: 1 }; return null; })(message, entry.oldData)).filter(x => x)), []).reverse();
                await applyUndoAction(toApply, meta, entries[0].undoTag);
            } }
            async function redo() { let meta = "marker" === MESSAGE_HISTORY[CURSOR].type ? MESSAGE_HISTORY[CURSOR].meta : null, start = CURSOR; for (CURSOR = Math.min(CURSOR + 1, MESSAGE_HISTORY.length - 1); CURSOR < MESSAGE_HISTORY.length - 1 && "marker" !== MESSAGE_HISTORY[CURSOR].type;)
                CURSOR++; let end = CURSOR, entries = MESSAGE_HISTORY.slice(start + 1, end + 1).filter(entry => "messages" === entry.type); if (entries.length > 0) {
                let toApply = entries.reduce((acc, entry) => acc.concat(entry.messages).concat(function (messages, oldData) { let resurrect = new Set; return messages.forEach(message => { (0, _shared_util__WEBPACK_IMPORTED_MODULE_2__.getIn)(oldData, [message.dataset, message.row]) || ["zero_budget_months", "zero_budgets", "reflect_budgets", "notes", "category_mapping", "payee_mapping"].includes(message.dataset) || resurrect.add(message.dataset + "." + message.row); }), [...resurrect].map(desc => { let [table, row] = desc.split("."); return { dataset: table, row, column: "tombstone", value: 0, timestamp: _actual_app_crdt__WEBPACK_IMPORTED_MODULE_0__.Timestamp.send() }; }); }(entry.messages, entry.oldData)), []);
                await applyUndoAction(toApply, meta, entries[entries.length - 1].undoTag);
            } }
        }, "./packages/loot-core/src/server/update.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { updateVersion: () => updateVersion });
            var md5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/md5/md5.js"), md5__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(md5__WEBPACK_IMPORTED_MODULE_0__), _aql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/aql/index.ts"), _db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/server/db/index.ts"), _migrate_migrations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/server/migrate/migrations.ts");
            async function runMigrations() { await _migrate_migrations__WEBPACK_IMPORTED_MODULE_3__.migrate(_db__WEBPACK_IMPORTED_MODULE_2__.getDatabase()); }
            async function updateViews() { let hashKey = "view-hash", { value: hash } = await _db__WEBPACK_IMPORTED_MODULE_2__.first("SELECT value FROM __meta__ WHERE key = ?", [hashKey]) || {}, views = (0, _aql__WEBPACK_IMPORTED_MODULE_1__.makeViews)(_aql__WEBPACK_IMPORTED_MODULE_1__.schema, _aql__WEBPACK_IMPORTED_MODULE_1__.schemaConfig), currentHash = md5__WEBPACK_IMPORTED_MODULE_0___default()(views); hash !== currentHash && (await _db__WEBPACK_IMPORTED_MODULE_2__.execQuery(views), await _db__WEBPACK_IMPORTED_MODULE_2__.runQuery("INSERT OR REPLACE INTO __meta__ (key, value) VALUES (?, ?)", [hashKey, currentHash])); }
            async function updateVersion() { await runMigrations(), await updateViews(); }
        }, "./packages/loot-core/src/server/util/budget-name.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { idFromBudgetName: () => idFromBudgetName, uniqueBudgetName: () => uniqueBudgetName, validateBudgetName: () => validateBudgetName });
            var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/platform/server/fs/index.electron.ts"), _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/main.ts");
            async function uniqueBudgetName(initialName = "My Finances") { let budgets = await _main__WEBPACK_IMPORTED_MODULE_1__.handlers["get-budgets"](), idx = 1, newName = initialName; for (; budgets.find(file => file.name === newName);)
                newName = `${initialName} ${idx}`, idx++; return newName; }
            async function validateBudgetName(name) { let trimmedName = name.trim(), uniqueName = await uniqueBudgetName(trimmedName), message = null; return "" === trimmedName && (message = "Budget name cannot be blank"), trimmedName.length > 100 && (message = "Budget name is too long (max length 100)"), uniqueName !== trimmedName && (message = `“${name}” already exists, try “${uniqueName}” instead`), message ? { valid: !1, message } : { valid: !0 }; }
            async function idFromBudgetName(name) { let id = name.replace(/( |[^A-Za-z0-9])/g, "-") + "-" + (0, uuid__WEBPACK_IMPORTED_MODULE_2__.default)().slice(0, 7), index = 0, budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.getBudgetDir(id); for (; await _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.exists(budgetDir);)
                index++, budgetDir = _platform_server_fs__WEBPACK_IMPORTED_MODULE_0__.getBudgetDir(id + index.toString()); return index > 0 && (id += index.toString()), id; }
        }, "./packages/loot-core/src/server/util/custom-sync-mapping.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { defaultMappings: () => defaultMappings, mappingsFromString: () => mappingsFromString, mappingsToString: () => mappingsToString });
            let mappingsToString = mapping => JSON.stringify(Object.fromEntries([...mapping.entries()].map(([key, value]) => [key, Object.fromEntries(value)]))), mappingsFromString = str => { try {
                let parsed = JSON.parse(str);
                if ("object" != typeof parsed || null === parsed)
                    throw Error("Invalid mapping format");
                return new Map(Object.entries(parsed).map(([key, value]) => [key, new Map(Object.entries(value))]));
            }
            catch (e) {
                let message = e instanceof Error ? e.message : e;
                throw Error(`Failed to parse mapping: ${message}`);
            } }, defaultMappings = new Map([["payment", new Map([["date", "date"], ["payee", "payeeName"], ["notes", "notes"]])], ["deposit", new Map([["date", "date"], ["payee", "payeeName"], ["notes", "notes"]])]]);
        }, "./packages/loot-core/src/server/util/rschedule.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { AddOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.AddOperator, ArgumentError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.ArgumentError, Calendar: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Calendar, Collection: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Collection, CollectionIterator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.CollectionIterator, DateAdapter: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.DateAdapter, DateAdapterBase: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.DateAdapterBase, DateTime: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.DateTime, Dates: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Dates, InfiniteLoopError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.InfiniteLoopError, IntersectionOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.IntersectionOperator, InvalidDateAdapterError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.InvalidDateAdapterError, InvalidDateTime: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.InvalidDateTime, InvalidDateTimeError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.InvalidDateTimeError, MergeDurationOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.MergeDurationOperator, MergeDurationOperatorError: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.MergeDurationOperatorError, OccurrenceGenerator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.OccurrenceGenerator, OccurrenceIterator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.OccurrenceIterator, Operator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Operator, RecurrenceRuleError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.RecurrenceRuleError, RecurrenceRulesIterator: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.RecurrenceRulesIterator, Rule: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Rule, RuleBase: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.RuleBase, RuleOptionError: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.RuleOptionError, Schedule: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.Schedule, ScheduleBase: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.ScheduleBase, SplitDurationOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.SplitDurationOperator, SplitDurationOperatorError: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.SplitDurationOperatorError, StandardDateAdapter: () => _rschedule_standard_date_adapter__WEBPACK_IMPORTED_MODULE_1__.StandardDateAdapter, SubtractOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.SubtractOperator, UniqueOperator: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.UniqueOperator, ValidDateTime: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.ValidDateTime, add: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.add, cloneJSON: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.cloneJSON, cloneRuleOptions: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.cloneRuleOptions, dateInputToDateAdapter: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.dateInputToDateAdapter, dateInputToDateTime: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.dateInputToDateTime, dateTimeSortComparer: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.dateTimeSortComparer, freqToGranularity: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.freqToGranularity, getDaysInYear: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.getDaysInYear, getDifferenceBetweenWeekdays: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.getDifferenceBetweenWeekdays, intersection: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.intersection, isLeapYear: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.isLeapYear, mergeDuration: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.mergeDuration, normalizeDateTimeTimezone: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.normalizeDateTimeTimezone, normalizeRuleOptions: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.normalizeRuleOptions, numberSortComparer: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.numberSortComparer, orderedWeekdays: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.orderedWeekdays, recurrenceRulesReducer: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.recurrenceRulesReducer, splitDuration: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.splitDuration, subtract: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.subtract, uniqDateTimes: () => _rschedule_core__WEBPACK_IMPORTED_MODULE_2__.uniqDateTimes, unique: () => _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__.unique }), __webpack_require__("./node_modules/@rschedule/standard-date-adapter/es2015/setup.js");
            var _rschedule_standard_date_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@rschedule/standard-date-adapter/es2015/main.js"), _rschedule_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@rschedule/core/es2015/main.js"), _rschedule_core_generators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@rschedule/core/es2015/generators.js");
        }, "./packages/loot-core/src/shared/async.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function sequential(fn) { let sequenceState = { running: null, queue: [] }; function pump() { let next = sequenceState.queue.shift(); void 0 !== next ? run(next.args, next.resolve, next.reject) : sequenceState.running = null; } function run(args, resolve, reject) { sequenceState.running = fn.apply(null, args).then(val1 => { pump(), resolve(val1); }, err => { pump(), reject(err); }); } return (...args) => new Promise(sequenceState.running ? (resolve, reject) => { sequenceState.queue.push({ resolve, reject, args }); } : (resolve, reject) => run(args, resolve, reject)); }
            function once(fn) { let promise = null; return (...args) => (promise || (promise = fn.apply(null, args).finally(() => { promise = null; })), promise); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { once: () => once, sequential: () => sequential });
        }, "./packages/loot-core/src/shared/dashboard.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { DEFAULT_DASHBOARD_STATE: () => DEFAULT_DASHBOARD_STATE });
            let DEFAULT_DASHBOARD_STATE = [{ type: "net-worth-card", width: 8, height: 2, x: 0, y: 0, meta: null }, { type: "cash-flow-card", width: 4, height: 2, x: 8, y: 0, meta: null }, { type: "spending-card", width: 4, height: 2, x: 0, y: 2, meta: null }];
        }, "./packages/loot-core/src/shared/environment.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function isPreviewEnvironment() { return "true" === String(process.env.REACT_APP_NETLIFY); }
            function isDevelopmentEnvironment() { return !0; }
            function isNonProductionEnvironment() { return isPreviewEnvironment() || !0; }
            function isElectron() { return navigator.userAgent.indexOf("Electron") >= 0; }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { isDevelopmentEnvironment: () => isDevelopmentEnvironment, isElectron: () => isElectron, isNonProductionEnvironment: () => isNonProductionEnvironment, isPreviewEnvironment: () => isPreviewEnvironment });
        }, "./packages/loot-core/src/shared/errors.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { LazyLoadFailedError: () => LazyLoadFailedError, getBankSyncError: () => getBankSyncError, getCreateKeyError: () => getCreateKeyError, getDownloadError: () => getDownloadError, getOpenIdErrors: () => getOpenIdErrors, getSecretsError: () => getSecretsError, getSyncError: () => getSyncError, getTestKeyError: () => getTestKeyError, getUploadError: () => getUploadError, getUserAccessErrors: () => getUserAccessErrors });
            var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/i18next/dist/esm/i18next.js");
            function getUploadError({ reason, meta }) { switch (reason) {
                case "unauthorized": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You are not logged in.");
                case "encrypt-failure":
                    if (meta.isMissingKey)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Encrypting your file failed because you are missing your encryption key. Create your key in the next step.");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Encrypting the file failed. You have the correct key so this is an internal bug. To fix this, generate a new key in the next step.");
                case "file-has-reset": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Something went wrong while resetting your file. Please try again.");
                case "file-has-new-key": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unable to encrypt your data because you are missing the key. Create the latest key in the next step.");
                case "network": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Uploading the file failed. Check your network connection.");
                default: return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("An internal error occurred, sorry! Visit https://actualbudget.org/contact/ for support. (ref: {{reason}})", { reason });
            } }
            function getDownloadError({ reason, meta, fileName }) { switch (reason) {
                case "network":
                case "download-failure": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Downloading the file failed. Check your network connection.");
                case "not-zip-file":
                case "invalid-zip-file":
                case "invalid-meta-file": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Downloaded file is invalid, sorry! Visit https://actualbudget.org/contact/ for support.");
                case "decrypt-failure": return "Unable to decrypt file " + (fileName || "(unknown)") + ". To change your key, first download this file with the proper password.";
                case "out-of-sync-migrations": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("This budget cannot be loaded with this version of the app. Make sure the app is up-to-date.");
                default:
                    let info = meta && "object" == typeof meta && "fileId" in meta && meta.fileId ? `, fileId: ${meta.fileId}` : "";
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Something went wrong trying to download that file, sorry! Visit https://actualbudget.org/contact/ for support. reason: {{reason}}{{info}}", { reason, info });
            } }
            function getCreateKeyError(error) { return getUploadError(error); }
            function getTestKeyError({ reason }) { switch (reason) {
                case "network": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unable to connect to the server. We need to access the server to get some information about your keys.");
                case "old-key-style": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("This file is encrypted with an old unsupported key style. Recreate the key on a device where the file is available, or use an older version of Actual to download it.");
                case "decrypt-failure": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unable to decrypt file with this password. Please try again.");
                default: return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Something went wrong trying to create a key, sorry! Visit https://actualbudget.org/contact/ for support.");
            } }
            function getSyncError(error, id) { return "out-of-sync-migrations" === error || "out-of-sync-data" === error ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("This budget cannot be loaded with this version of the app.") : "budget-not-found" === error ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Budget “{{id}}” not found. Check the ID of your budget in the Advanced section of the settings page.", { id }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("We had an unknown problem opening “{{id}}”.", { id }); }
            function getBankSyncError(error) { return error.message || (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("We had an unknown problem syncing the account."); }
            class LazyLoadFailedError extends Error {
                constructor(name, cause) {
                    this.type = "app-init-failure";
                    this.meta = {};
                    super(`Error: failed loading lazy-loaded module ${name}`), this.meta = { name }, this.cause = cause;
                }
            }
            function getUserAccessErrors(reason) { switch (reason) {
                case "unauthorized": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You are not logged in.");
                case "token-expired": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Login expired, please log in again.");
                case "user-cant-be-empty": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Please select a user.");
                case "invalid-file-id": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("This file is invalid.");
                case "file-denied": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You don`t have permissions over this file.");
                case "user-already-have-access": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("User already has access.");
                default: return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("An internal error occurred, sorry! Visit https://actualbudget.org/contact/ for support. (ref: {{reason}})", { reason });
            } }
            function getSecretsError(error, reason) { switch (reason) {
                case "unauthorized": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You are not logged in.");
                case "not-admin": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You have to be admin to set secrets");
                default: return error;
            } }
            function getOpenIdErrors(reason) { switch (reason) {
                case "unauthorized": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("You are not logged in.");
                case "configuration-error": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("This configuration is not valid. Please check it again.");
                case "unable-to-change-file-config-enabled": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Unable to enable OpenID. Please update the config.json file in this case.");
                default: return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("An internal error occurred, sorry! Visit https://actualbudget.org/contact/ for support. (ref: {{reason}})", { reason });
            } }
        }, "./packages/loot-core/src/shared/locale.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getLocale: () => getLocale });
            var date_fns_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/locale/en-US.js"), date_fns_locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/locale.js");
            function getLocale(language) { if (!language || "string" != typeof language)
                return date_fns_locale__WEBPACK_IMPORTED_MODULE_0__.enUS; let localeKey = language.replace("-", ""); return localeKey in date_fns_locale__WEBPACK_IMPORTED_MODULE_1__ || (localeKey = language.replace("-", "").substring(0, 2)) in date_fns_locale__WEBPACK_IMPORTED_MODULE_1__ ? date_fns_locale__WEBPACK_IMPORTED_MODULE_1__[localeKey] : date_fns_locale__WEBPACK_IMPORTED_MODULE_0__.enUS; }
        }, "./packages/loot-core/src/shared/months.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { _dayRange: () => _dayRange, _parse: () => _parse, _range: () => _range, _weekRange: () => _weekRange, _yearRange: () => _yearRange, addDays: () => addDays, addMonths: () => addMonths, addWeeks: () => addWeeks, addYears: () => addYears, bounds: () => bounds, currentDate: () => currentDate, currentDay: () => currentDay, currentMonth: () => currentMonth, currentWeek: () => currentWeek, currentYear: () => currentYear, dayFromDate: () => dayFromDate, dayRange: () => dayRange, dayRangeInclusive: () => dayRangeInclusive, differenceInCalendarDays: () => differenceInCalendarDays, differenceInCalendarMonths: () => differenceInCalendarMonths, firstDayOfMonth: () => firstDayOfMonth, format: () => format, formatDistance: () => formatDistance, getDateFormatRegex: () => getDateFormatRegex, getDay: () => getDay, getDayMonthFormat: () => getDayMonthFormat, getDayMonthRegex: () => getDayMonthRegex, getMonth: () => getMonth, getMonthEnd: () => getMonthEnd, getMonthFromIndex: () => getMonthFromIndex, getMonthIndex: () => getMonthIndex, getMonthYearFormat: () => getMonthYearFormat, getMonthYearRegex: () => getMonthYearRegex, getShortYearFormat: () => getShortYearFormat, getShortYearRegex: () => getShortYearRegex, getWeekEnd: () => getWeekEnd, getYear: () => getYear, getYearEnd: () => getYearEnd, getYearStart: () => getYearStart, isAfter: () => isAfter, isBefore: () => isBefore, isCurrentDay: () => isCurrentDay, isCurrentMonth: () => isCurrentMonth, lastDayOfMonth: () => lastDayOfMonth, monthFromDate: () => monthFromDate, nameForMonth: () => nameForMonth, nextMonth: () => nextMonth, parseDate: () => parseDate, prevMonth: () => prevMonth, prevYear: () => prevYear, range: () => range, rangeInclusive: () => rangeInclusive, sheetForMonth: () => sheetForMonth, subDays: () => subDays, subMonths: () => subMonths, subWeeks: () => subWeeks, subYears: () => subYears, weekFromDate: () => weekFromDate, weekRangeInclusive: () => weekRangeInclusive, yearFromDate: () => yearFromDate, yearRangeInclusive: () => yearRangeInclusive });
            var date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/date-fns/format.js"), date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/date-fns/startOfWeek.js"), date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/date-fns/startOfMonth.js"), date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/endOfMonth.js"), date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/parse.js"), date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/addMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/subMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./node_modules/date-fns/addYears.js"), date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./node_modules/date-fns/addWeeks.js"), date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./node_modules/date-fns/differenceInCalendarMonths.js"), date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./node_modules/date-fns/differenceInCalendarDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./node_modules/date-fns/subWeeks.js"), date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./node_modules/date-fns/subYears.js"), date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./node_modules/date-fns/addDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./node_modules/date-fns/subDays.js"), date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("./node_modules/date-fns/isBefore.js"), date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__("./node_modules/date-fns/isAfter.js"), date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__("./node_modules/date-fns/endOfWeek.js"), date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__("./node_modules/date-fns/formatDistance.js"), memoize_one__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__("./node_modules/memoize-one/dist/memoize-one.esm.js"), _platform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/platform.electron.ts");
            function _parse(value) { if ("string" == typeof value) {
                let [year, month, day] = value.split("-");
                return null != day ? new Date(parseInt(year), parseInt(month) - 1, parseInt(day), 12) : null != month ? new Date(parseInt(year), parseInt(month) - 1, 1, 12) : new Date(parseInt(year), 0, 1, 12);
            } return "number" == typeof value ? new Date(value) : value; }
            let parseDate = _parse;
            function yearFromDate(date) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date), "yyyy"); }
            function monthFromDate(date) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date), "yyyy-MM"); }
            function weekFromDate(date, firstDayOfWeekIdx) { let converted = parseInt(firstDayOfWeekIdx || "0"); return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date_fns__WEBPACK_IMPORTED_MODULE_2__.startOfWeek(_parse(date), { weekStartsOn: converted })), "yyyy-MM-dd"); }
            function firstDayOfMonth(date) { return dayFromDate(date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth(_parse(date))); }
            function lastDayOfMonth(date) { return dayFromDate(date_fns__WEBPACK_IMPORTED_MODULE_4__.endOfMonth(_parse(date))); }
            function dayFromDate(date) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date), "yyyy-MM-dd"); }
            function currentMonth() { return global.IS_TESTING || _platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright ? global.currentMonth || "2017-01" : date_fns__WEBPACK_IMPORTED_MODULE_1__.format(new Date, "yyyy-MM"); }
            function currentWeek(firstDayOfWeekIdx) { if (global.IS_TESTING || _platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright)
                return global.currentWeek || "2017-01-01"; {
                let converted = parseInt(firstDayOfWeekIdx || "0");
                return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date_fns__WEBPACK_IMPORTED_MODULE_2__.startOfWeek(new Date, { weekStartsOn: converted })), "yyyy-MM-dd");
            } }
            function currentYear() { return global.IS_TESTING || _platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright ? global.currentMonth || "2017" : date_fns__WEBPACK_IMPORTED_MODULE_1__.format(new Date, "yyyy"); }
            function currentDate() { return global.IS_TESTING || _platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright ? date_fns__WEBPACK_IMPORTED_MODULE_5__.parse(currentDay(), "yyyy-MM-dd", new Date) : new Date; }
            function currentDay() { return global.IS_TESTING || _platform__WEBPACK_IMPORTED_MODULE_0__.isPlaywright ? "2017-01-01" : date_fns__WEBPACK_IMPORTED_MODULE_1__.format(new Date, "yyyy-MM-dd"); }
            function nextMonth(month) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_6__.addMonths(_parse(month), 1), "yyyy-MM"); }
            function prevYear(month) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_7__.subMonths(_parse(month), 12), "yyyy-MM"); }
            function prevMonth(month) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_7__.subMonths(_parse(month), 1), "yyyy-MM"); }
            function addYears(year, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_8__.addYears(_parse(year), n), "yyyy"); }
            function addMonths(month, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_6__.addMonths(_parse(month), n), "yyyy-MM"); }
            function addWeeks(date, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_9__.addWeeks(_parse(date), n), "yyyy-MM-dd"); }
            function differenceInCalendarMonths(month1, month2) { return date_fns__WEBPACK_IMPORTED_MODULE_10__.differenceInCalendarMonths(_parse(month1), _parse(month2)); }
            function differenceInCalendarDays(month1, month2) { return date_fns__WEBPACK_IMPORTED_MODULE_11__.differenceInCalendarDays(_parse(month1), _parse(month2)); }
            function subMonths(month, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_7__.subMonths(_parse(month), n), "yyyy-MM"); }
            function subWeeks(date, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_12__.subWeeks(_parse(date), n), "yyyy-MM-dd"); }
            function subYears(year, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_13__.subYears(_parse(year), n), "yyyy"); }
            function addDays(day, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_14__.addDays(_parse(day), n), "yyyy-MM-dd"); }
            function subDays(day, n) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_15__.subDays(_parse(day), n), "yyyy-MM-dd"); }
            function isBefore(month1, month2) { return date_fns__WEBPACK_IMPORTED_MODULE_16__.isBefore(_parse(month1), _parse(month2)); }
            function isAfter(month1, month2) { return date_fns__WEBPACK_IMPORTED_MODULE_17__.isAfter(_parse(month1), _parse(month2)); }
            function isCurrentMonth(month) { return month === currentMonth(); }
            function isCurrentDay(day) { return day === currentDay(); }
            function bounds(month) { return { start: parseInt(date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_3__.startOfMonth(_parse(month)), "yyyyMMdd")), end: parseInt(date_fns__WEBPACK_IMPORTED_MODULE_1__.format(date_fns__WEBPACK_IMPORTED_MODULE_4__.endOfMonth(_parse(month)), "yyyyMMdd")) }; }
            function _yearRange(start, end, inclusive = !1) { let years = [], year = yearFromDate(start), endYear = yearFromDate(end); for (; date_fns__WEBPACK_IMPORTED_MODULE_16__.isBefore(_parse(year), _parse(endYear));)
                years.push(year), year = addYears(year, 1); return inclusive && years.push(year), years; }
            function yearRangeInclusive(start, end) { return _yearRange(start, end, !0); }
            function _weekRange(start, end, inclusive = !1, firstDayOfWeekIdx) { let weeks = [], week = weekFromDate(start, firstDayOfWeekIdx), endWeek = weekFromDate(end, firstDayOfWeekIdx); for (; date_fns__WEBPACK_IMPORTED_MODULE_16__.isBefore(_parse(week), _parse(endWeek));)
                weeks.push(week), week = addWeeks(week, 1); return inclusive && weeks.push(week), weeks; }
            function weekRangeInclusive(start, end, firstDayOfWeekIdx) { return _weekRange(start, end, !0, firstDayOfWeekIdx); }
            function _range(start, end, inclusive = !1) { let months = [], month = monthFromDate(start), endMonth = monthFromDate(end); for (; date_fns__WEBPACK_IMPORTED_MODULE_16__.isBefore(_parse(month), _parse(endMonth));)
                months.push(month), month = addMonths(month, 1); return inclusive && months.push(month), months; }
            function range(start, end) { return _range(start, end); }
            function rangeInclusive(start, end) { return _range(start, end, !0); }
            function _dayRange(start, end, inclusive = !1) { let days = [], day = start; for (; date_fns__WEBPACK_IMPORTED_MODULE_16__.isBefore(_parse(day), _parse(end));)
                days.push(dayFromDate(day)), day = addDays(day, 1); return inclusive && days.push(dayFromDate(day)), days; }
            function dayRange(start, end) { return _dayRange(start, end); }
            function dayRangeInclusive(start, end) { return _dayRange(start, end, !0); }
            function getMonthFromIndex(year, monthIndex) { let formatMonth = `${monthIndex + 1}`.padStart(2, "0"); return `${year}-${formatMonth}`; }
            function getMonthIndex(month) { return parseInt(month.slice(5, 7)) - 1; }
            function getYear(month) { return month.slice(0, 4); }
            function getMonth(day) { return day.slice(0, 7); }
            function getDay(day) { return Number(date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(day), "dd")); }
            function getMonthEnd(day) { return subDays(nextMonth(day.slice(0, 7)) + "-01", 1); }
            function getWeekEnd(date, firstDayOfWeekIdx) { let converted = parseInt(firstDayOfWeekIdx || "0"); return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(date_fns__WEBPACK_IMPORTED_MODULE_18__.endOfWeek(_parse(date), { weekStartsOn: converted })), "yyyy-MM-dd"); }
            function getYearStart(month) { return getYear(month) + "-01"; }
            function getYearEnd(month) { return getYear(month) + "-12"; }
            function sheetForMonth(month) { return "budget" + month.replace("-", ""); }
            function nameForMonth(month, locale) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(month), "MMMM ‘yy", { locale }); }
            function format(month, format, locale) { return date_fns__WEBPACK_IMPORTED_MODULE_1__.format(_parse(month), format, { locale }); }
            function formatDistance(date1, date2, locale, options1) { return date_fns__WEBPACK_IMPORTED_MODULE_19__.formatDistance(_parse(date1), _parse(date2), { locale, ...options1 }); }
            let getDateFormatRegex = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => new RegExp(format.replace(/d+/g, "\\d{1,2}").replace(/M+/g, "\\d{1,2}").replace(/y+/g, "\\d{4}"))), getDayMonthFormat = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => format.replace(/y+/g, "").replace(/[^\w]$/, "").replace(/^[^\w]/, "")), getDayMonthRegex = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => RegExp("^" + format.replace(/y+/g, "").replace(/[^\w]$/, "").replace(/^[^\w]/, "").replace(/d+/g, "\\d{1,2}").replace(/M+/g, "\\d{1,2}") + "$")), getMonthYearFormat = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => format.replace(/d+/g, "").replace(/[^\w]$/, "").replace(/^[^\w]/, "").replace(/\/\//, "/").replace(/\.\./, ".").replace(/--/, "-")), getMonthYearRegex = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => RegExp("^" + format.replace(/d+/g, "").replace(/[^\w]$/, "").replace(/^[^\w]/, "").replace(/\/\//, "/").replace(/M+/g, "\\d{1,2}").replace(/y+/g, "\\d{2,4}") + "$")), getShortYearFormat = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => format.replace(/y+/g, "yy")), getShortYearRegex = (0, memoize_one__WEBPACK_IMPORTED_MODULE_20__.default)(format => RegExp("^" + format.replace(/[^\w]$/, "").replace(/^[^\w]/, "").replace(/d+/g, "\\d{1,2}").replace(/M+/g, "\\d{1,2}").replace(/y+/g, "\\d{2}") + "$"));
        }, "./packages/loot-core/src/shared/normalisation.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            function getNormalisedString(value) { return value.toLowerCase().normalize("NFD").replace(/\p{Diacritic}/gu, ""); }
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { getNormalisedString: () => getNormalisedString });
        }, "./packages/loot-core/src/shared/platform.electron.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { OS: () => OS, env: () => env, isBrowser: () => isBrowser, isIOSAgent: () => isIOSAgent, isPlaywright: () => isPlaywright });
            let os = __webpack_require__("os"), isWindows = "win32" === os.platform(), isMac = "darwin" === os.platform(), isLinux = "linux" === os.platform(), isPlaywright = !1, OS = isWindows ? "windows" : isMac ? "mac" : isLinux ? "linux" : "unknown", env = "unknown", isBrowser = !1, isIOSAgent = !1;
        }, "./packages/loot-core/src/shared/query.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { Query: () => Query, getPrimaryOrderBy: () => getPrimaryOrderBy, q: () => q });
            class Query {
                constructor(state) { this.state = { tableOptions: state.tableOptions || {}, filterExpressions: state.filterExpressions || [], selectExpressions: state.selectExpressions || [], groupExpressions: state.groupExpressions || [], orderExpressions: state.orderExpressions || [], calculation: !1, rawMode: !1, withDead: !1, validateRefs: !0, limit: null, offset: null, ...state }; }
                filter(expr) { return new Query({ ...this.state, filterExpressions: [...this.state.filterExpressions, expr] }); }
                unfilter(exprs) { if (!exprs)
                    return new Query({ ...this.state, filterExpressions: [] }); let exprSet = new Set(exprs); return new Query({ ...this.state, filterExpressions: this.state.filterExpressions.filter(expr => !exprSet.has(Object.keys(expr)[0])) }); }
                select(exprs = []) { return Array.isArray(exprs) || (exprs = [exprs]), new Query({ ...this.state, selectExpressions: exprs, calculation: !1 }); }
                calculate(expr) { return new Query({ ...this.state, selectExpressions: [{ result: expr }], calculation: !0 }); }
                groupBy(exprs) { return Array.isArray(exprs) || (exprs = [exprs]), new Query({ ...this.state, groupExpressions: [...this.state.groupExpressions, ...exprs] }); }
                orderBy(exprs) { return Array.isArray(exprs) || (exprs = [exprs]), new Query({ ...this.state, orderExpressions: [...this.state.orderExpressions, ...exprs] }); }
                limit(num) { return new Query({ ...this.state, limit: num }); }
                offset(num) { return new Query({ ...this.state, offset: num }); }
                raw() { return new Query({ ...this.state, rawMode: !0 }); }
                withDead() { return new Query({ ...this.state, withDead: !0 }); }
                withoutValidatedRefs() { return new Query({ ...this.state, validateRefs: !1 }); }
                options(opts) { return new Query({ ...this.state, tableOptions: opts }); }
                reset() { return q(this.state.table); }
                serialize() { return this.state; }
                serializeAsString() { return JSON.stringify(this.serialize()); }
            }
            function getPrimaryOrderBy(query, defaultOrderBy) { let orderExprs = query.serialize().orderExpressions; if (0 === orderExprs.length)
                return defaultOrderBy ? { order: "asc", ...defaultOrderBy } : null; let firstOrder = orderExprs[0]; if ("string" == typeof firstOrder)
                return { field: firstOrder, order: "asc" }; let [field] = Object.keys(firstOrder); return { field, order: firstOrder[field] }; }
            function q(table) { return new Query({ table }); }
        }, "./packages/loot-core/src/shared/rules.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { ALLOCATION_METHODS: () => ALLOCATION_METHODS, FIELD_TYPES: () => FIELD_TYPES, deserializeField: () => deserializeField, friendlyOp: () => friendlyOp, getApproxNumberThreshold: () => getApproxNumberThreshold, getFieldError: () => getFieldError, getValidOps: () => getValidOps, isValidOp: () => isValidOp, makeValue: () => makeValue, mapField: () => mapField, parse: () => parse, sortNumbers: () => sortNumbers, unparse: () => unparse });
            var i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/i18next/dist/esm/i18next.js"), _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/shared/util.ts");
            let TYPE_INFO = { date: { ops: ["is", "isapprox", "gt", "gte", "lt", "lte"], nullable: !1 }, id: { ops: ["is", "contains", "matches", "oneOf", "isNot", "doesNotContain", "notOneOf", "onBudget", "offBudget"], nullable: !0 }, saved: { ops: [], nullable: !1 }, string: { ops: ["is", "contains", "matches", "oneOf", "isNot", "doesNotContain", "notOneOf", "hasTags"], nullable: !0 }, number: { ops: ["is", "isapprox", "isbetween", "gt", "gte", "lt", "lte"], nullable: !1 }, boolean: { ops: ["is"], nullable: !1 } }, FIELD_INFO = { imported_payee: { type: "string", disallowedOps: new Set(["hasTags"]) }, payee: { type: "id", disallowedOps: new Set(["onBudget", "offBudget"]) }, payee_name: { type: "string" }, date: { type: "date" }, notes: { type: "string" }, amount: { type: "number" }, category: { type: "id", disallowedOps: new Set(["onBudget", "offBudget"]), internalOps: new Set(["and"]) }, account: { type: "id" }, cleared: { type: "boolean" }, reconciled: { type: "boolean" }, saved: { type: "saved" }, transfer: { type: "boolean" }, parent: { type: "boolean" } }, FIELD_TYPES = new Map(Object.entries(FIELD_INFO).map(([field, info]) => [field, info.type]));
            function isValidOp(field, op) { let type = FIELD_TYPES.get(field); return !(!type || FIELD_INFO[field].disallowedOps?.has(op)) && (TYPE_INFO[type].ops.includes(op) || FIELD_INFO[field].internalOps?.has(op)); }
            function getValidOps(field) { let type = FIELD_TYPES.get(field); return type ? TYPE_INFO[type].ops.filter(op => !FIELD_INFO[field].disallowedOps?.has(op)) : []; }
            let ALLOCATION_METHODS = { "fixed-amount": "a fixed amount", "fixed-percent": "a fixed percent of the remainder", remainder: "an equal portion of the remainder" };
            function mapField(field, opts) { switch (opts = opts || {}, field) {
                case "imported_payee": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("imported payee");
                case "payee_name": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("payee (name)");
                case "amount":
                    if (opts.inflow)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("amount (inflow)");
                    if (opts.outflow)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("amount (outflow)");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("amount");
                case "amount-inflow": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("amount (inflow)");
                case "amount-outflow": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("amount (outflow)");
                case "account": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("account");
                case "date": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("date");
                case "category": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("category");
                case "notes": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("notes");
                case "payee": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("payee");
                case "saved": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("saved");
                case "cleared": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("cleared");
                case "reconciled": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("reconciled");
                case "transfer": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("transfer");
                default: return field;
            } }
            function friendlyOp(op, type) { switch (op) {
                case "oneOf": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("one of");
                case "notOneOf": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("not one of");
                case "is": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is");
                case "isNot": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is not");
                case "isapprox": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is approx");
                case "isbetween": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is between");
                case "contains": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("contains");
                case "hasTags": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("has tags");
                case "matches": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("matches");
                case "doesNotContain": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("does not contain");
                case "gt":
                    if ("date" === type)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is after");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is greater than");
                case "gte":
                    if ("date" === type)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is after or equals");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is greater than or equals");
                case "lt":
                    if ("date" === type)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is before");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is less than");
                case "lte":
                    if ("date" === type)
                        return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is before or equals");
                    return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is less than or equals");
                case "true": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is true");
                case "false": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is false");
                case "set": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("set");
                case "set-split-amount": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("allocate");
                case "link-schedule": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("link schedule");
                case "prepend-notes": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("prepend to notes");
                case "append-notes": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("append to notes");
                case "and": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("and");
                case "or": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("or");
                case "onBudget": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is on budget");
                case "offBudget": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("is off budget");
                default: return "";
            } }
            function deserializeField(field) { return "amount-inflow" === field ? { field: "amount", options: { inflow: !0 } } : "amount-outflow" === field ? { field: "amount", options: { outflow: !0 } } : { field }; }
            function getFieldError(type) { switch (type) {
                case "date-format": return "Invalid date format";
                case "no-null":
                case "no-empty-array":
                case "no-empty-string": return "Value cannot be empty";
                case "not-string": return "Value must be a string";
                case "not-boolean": return "Value must be a boolean";
                case "not-number": return "Value must be a number";
                case "invalid-field": return "Please choose a valid field for this type of rule";
                case "invalid-template": return "Invalid handlebars template";
                default: return "Internal error, sorry! Please get in touch https://actualbudget.org/contact/ for support";
            } }
            function sortNumbers(num1, num2) { return num1 < num2 ? [num1, num2] : [num2, num1]; }
            function parse(item) { if ("set-split-amount" === item.op)
                return "fixed-amount" === item.options.method ? { ...item, value: item.value && (0, _util__WEBPACK_IMPORTED_MODULE_1__.integerToAmount)(item.value) } : item; switch (item.type) {
                case "number": {
                    let parsed = item.value;
                    return "amount" === item.field && "isbetween" !== item.op && null != parsed && (parsed = (0, _util__WEBPACK_IMPORTED_MODULE_1__.integerToAmount)(parsed)), { ...item, value: parsed };
                }
                case "string": {
                    let parsed = null == item.value ? "" : item.value;
                    return { ...item, value: parsed };
                }
                case "boolean": {
                    let parsed = item.value;
                    return { ...item, value: parsed };
                }
            } return { ...item, error: null }; }
            function unparse({ error, inputKey, ...item }) { if ("set-split-amount" === item.op)
                return "fixed-amount" === item.options.method ? { ...item, value: item.value && (0, _util__WEBPACK_IMPORTED_MODULE_1__.amountToInteger)(item.value) } : "fixed-percent" === item.options.method ? { ...item, value: item.value && parseFloat(item.value) } : item; switch (item.type) {
                case "number": {
                    let unparsed = item.value;
                    return "amount" === item.field && "isbetween" !== item.op && (unparsed = (0, _util__WEBPACK_IMPORTED_MODULE_1__.amountToInteger)(unparsed)), { ...item, value: unparsed };
                }
                case "string": {
                    let unparsed = null == item.value ? "" : item.value;
                    return { ...item, value: unparsed };
                }
                case "boolean": {
                    let unparsed = null != item.value && item.value;
                    return { ...item, value: unparsed };
                }
            } return item; }
            function makeValue(value, cond) { return "number" === cond.type && "isbetween" !== cond.op ? { ...cond, error: null, value: value && (0, _util__WEBPACK_IMPORTED_MODULE_1__.currencyToAmount)(String(value)) || 0 } : ["oneOf", "notOneOf"].includes(cond.op) ? { ...cond, error: null, value: value || [] } : { ...cond, error: null, value }; }
            function getApproxNumberThreshold(number) { return Math.round(.075 * Math.abs(number)); }
        }, "./packages/loot-core/src/shared/schedules.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { describeSchedule: () => describeSchedule, extractScheduleConds: () => extractScheduleConds, getDateWithSkippedWeekend: () => getDateWithSkippedWeekend, getHasTransactionsQuery: () => getHasTransactionsQuery, getNextDate: () => getNextDate, getRecurringDescription: () => getRecurringDescription, getScheduledAmount: () => getScheduledAmount, getStatus: () => getStatus, getStatusLabel: () => getStatusLabel, getUpcomingDays: () => getUpcomingDays, recurConfigToRSchedule: () => recurConfigToRSchedule, scheduleIsRecurring: () => scheduleIsRecurring });
            var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/date-fns/startOfDay.js"), date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/date-fns/isWeekend.js"), date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./node_modules/date-fns/nextMonday.js"), date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./node_modules/date-fns/previousFriday.js"), i18next__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/i18next/dist/esm/i18next.js"), _server_rules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./packages/loot-core/src/server/rules/index.ts"), _months__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./packages/loot-core/src/shared/months.ts"), _query__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./packages/loot-core/src/shared/query.ts");
            function getStatus(nextDate, completed, hasTrans, upcomingLength = "7") { let upcomingDays = getUpcomingDays(upcomingLength), today = _months__WEBPACK_IMPORTED_MODULE_2__.currentDay(); if (completed)
                return "completed"; if (hasTrans)
                return "paid"; if (nextDate === today)
                return "due"; if (nextDate > today && nextDate <= _months__WEBPACK_IMPORTED_MODULE_2__.addDays(today, upcomingDays))
                return "upcoming"; if (nextDate < today)
                return "missed";
            else
                return "scheduled"; }
            function getStatusLabel(status) { switch (status) {
                case "completed": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("completed");
                case "paid": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("paid");
                case "due": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("due");
                case "upcoming": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("upcoming");
                case "missed": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("missed");
                case "scheduled": return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("scheduled");
            } }
            function getHasTransactionsQuery(schedules) { let filters = schedules.map(schedule => { let dateCond = schedule._conditions.find(c => "date" === c.field); return { $and: { schedule: schedule.id, date: { $gte: dateCond && "is" === dateCond.op ? schedule.next_date : _months__WEBPACK_IMPORTED_MODULE_2__.subDays(schedule.next_date, 2) } } }; }); return (0, _query__WEBPACK_IMPORTED_MODULE_3__.q)("transactions").options({ splits: "all" }).filter({ $or: filters }).orderBy({ date: "desc" }).select(["schedule", "date"]); }
            function makeNumberSuffix(num, locale) { return _months__WEBPACK_IMPORTED_MODULE_2__.format(new Date(2020, 0, num, 12), "do", locale); }
            function prettyDayName(day) { return ({ SU: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Sunday"), MO: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Monday"), TU: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Tuesday"), WE: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Wednesday"), TH: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Thursday"), FR: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Friday"), SA: (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Saturday") })[day]; }
            function getRecurringDescription(config, dateFormat, locale) { let interval = config.interval || 1, endModeSuffix = ""; switch (config.endMode) {
                case "after_n_occurrences":
                    endModeSuffix = 1 === config.endOccurrences ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("once") : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("{{endOccurrences}} times", { endOccurrences: config.endOccurrences });
                    break;
                case "on_date": endModeSuffix = (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("until {{dateFormatted}}", { dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.endDate, dateFormat) });
            } let weekendSolveModeString = config.weekendSolveMode ? "after" === config.weekendSolveMode ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("(after weekend)") : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("(before weekend)") : "", weekendSolveSuffix = config.skipWeekend ? weekendSolveModeString : "", suffix = endModeSuffix ? `, ${endModeSuffix} ${weekendSolveSuffix}` : `${weekendSolveSuffix}`, desc = null; switch (config.frequency) {
                case "daily":
                    desc = 1 !== interval ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every {{interval}} days", { interval }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every day");
                    break;
                case "weekly":
                    desc = 1 !== interval ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every {{interval}} weeks on {{dateFormatted}}", { interval, dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "EEEE", locale) }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every week on {{dateFormatted}}", { dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "EEEE", locale) });
                    break;
                case "monthly":
                    if (config.patterns && config.patterns.length > 0) {
                        let patterns = [...config.patterns].sort((p1, p2) => { let typeOrder = ("day" === p1.type) - ("day" === p2.type), valOrder = p1.value - p2.value; return 0 === typeOrder ? valOrder : typeOrder; }).filter(p => -1 !== p.value);
                        patterns = patterns.concat(config.patterns.filter(p => -1 === p.value));
                        let strs = [], uniqueDays = new Set(patterns.map(p => p.type)), isSameDay = 1 === uniqueDays.size && !uniqueDays.has("day");
                        for (let pattern of patterns)
                            if ("day" === pattern.type)
                                -1 === pattern.value ? strs.push((0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("last day")) : strs.push(makeNumberSuffix(pattern.value, locale));
                            else {
                                let dayName = isSameDay ? "" : " " + prettyDayName(pattern.type);
                                -1 === pattern.value ? strs.push((0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("last") + dayName) : strs.push(makeNumberSuffix(pattern.value, locale) + dayName);
                            }
                        let range = "";
                        strs.length > 2 ? (range += strs.slice(0, strs.length - 1).join(", "), range += `, ${(0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("and")} `, range += strs[strs.length - 1]) : range += strs.join(` ${(0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("and")} `), isSameDay && (range += " " + prettyDayName(patterns[0].type)), desc = 1 !== interval ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every {{interval}} months on the {{range}}", { interval, range }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every month on the {{range}}", { range });
                    }
                    else
                        desc = 1 !== interval ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every {{interval}} months on the {{dateFormatted}}", { interval, dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "do", locale) }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every month on the {{dateFormatted}}", { dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "do", locale) });
                    break;
                case "yearly":
                    desc = 1 !== interval ? (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every {{interval}} years on {{dateFormatted}}", { interval, dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "LLL do", locale) }) : (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Every year on {{dateFormatted}}", { dateFormatted: _months__WEBPACK_IMPORTED_MODULE_2__.format(config.start, "LLL do", locale) });
                    break;
                default: return (0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Recurring error");
            } return `${desc}${suffix}`.trim(); }
            function recurConfigToRSchedule(config) { let base = { start: _months__WEBPACK_IMPORTED_MODULE_2__.parseDate(config.start), frequency: config.frequency.toUpperCase(), byHourOfDay: [12] }; switch (config.interval && (base.interval = config.interval), config.endMode) {
                case "after_n_occurrences":
                    base.count = config.endOccurrences;
                    break;
                case "on_date": base.end = _months__WEBPACK_IMPORTED_MODULE_2__.parseDate(config.endDate);
            } let abbrevDay = name => name.slice(0, 2).toUpperCase(); switch (config.frequency) {
                case "daily":
                case "weekly":
                case "yearly": return [base];
                case "monthly":
                    if (!config.patterns || !(config.patterns.length > 0))
                        return [base];
                    {
                        let days = config.patterns.filter(p => "day" === p.type), dayNames = config.patterns.filter(p => "day" !== p.type);
                        return [days.length > 0 && { ...base, byDayOfMonth: days.map(p => p.value) }, dayNames.length > 0 && { ...base, byDayOfWeek: dayNames.map(p => [abbrevDay(p.type), p.value]) }].filter(Boolean);
                    }
                default: throw Error("Invalid recurring date config");
            } }
            function extractScheduleConds(conditions) { return { payee: conditions.find(cond => "is" === cond.op && "payee" === cond.field) || conditions.find(cond => "is" === cond.op && "description" === cond.field) || null, account: conditions.find(cond => "is" === cond.op && "account" === cond.field) || conditions.find(cond => "is" === cond.op && "acct" === cond.field) || null, amount: conditions.find(cond => ("is" === cond.op || "isapprox" === cond.op || "isbetween" === cond.op) && "amount" === cond.field) || null, date: conditions.find(cond => ("is" === cond.op || "isapprox" === cond.op) && "date" === cond.field) || null }; }
            function getNextDate(dateCond, start = new Date(_months__WEBPACK_IMPORTED_MODULE_2__.currentDay()), noSkipWeekend = !1) { start = date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfDay(start); let value = new _server_rules__WEBPACK_IMPORTED_MODULE_1__.Condition(dateCond.op, "date", dateCond.value, null).getValue(); if ("date" === value.type)
                return value.date; if ("recur" === value.type) {
                let dates = value.schedule.occurrences({ start, take: 1 }).toArray();
                if (0 === dates.length && (dates = value.schedule.occurrences({ reverse: !0, take: 1 }).toArray()), dates.length > 0) {
                    let date = dates[0].date;
                    return value.schedule.data.skipWeekend && !noSkipWeekend && (date = getDateWithSkippedWeekend(date, value.schedule.data.weekendSolve)), _months__WEBPACK_IMPORTED_MODULE_2__.dayFromDate(date);
                }
            } return null; }
            function getDateWithSkippedWeekend(date, solveMode) { if (date_fns__WEBPACK_IMPORTED_MODULE_5__.isWeekend(date))
                if ("after" === solveMode)
                    return date_fns__WEBPACK_IMPORTED_MODULE_6__.nextMonday(date);
                else if ("before" === solveMode)
                    return date_fns__WEBPACK_IMPORTED_MODULE_7__.previousFriday(date);
                else
                    throw Error("Unknown weekend solve mode, this should not happen!"); return date; }
            function getScheduledAmount(amount, inverse = !1) { if (null == amount)
                return 0; if ("number" == typeof amount)
                return inverse ? -amount : amount; let avg = (amount.num1 + amount.num2) / 2; return inverse ? -Math.round(avg) : Math.round(avg); }
            function describeSchedule(schedule, payee) { return payee ? `${payee.name} (${schedule.next_date})` : `${(0, i18next__WEBPACK_IMPORTED_MODULE_0__.t)("Next:")} ${schedule.next_date}`; }
            function getUpcomingDays(upcomingLength = "7", today = _months__WEBPACK_IMPORTED_MODULE_2__.currentDay()) { let month = _months__WEBPACK_IMPORTED_MODULE_2__.getMonth(today); switch (upcomingLength) {
                case "currentMonth": {
                    let day = _months__WEBPACK_IMPORTED_MODULE_2__.getDay(today);
                    return _months__WEBPACK_IMPORTED_MODULE_2__.getDay(_months__WEBPACK_IMPORTED_MODULE_2__.getMonthEnd(today)) - day;
                }
                case "oneMonth": return _months__WEBPACK_IMPORTED_MODULE_2__.differenceInCalendarDays(_months__WEBPACK_IMPORTED_MODULE_2__.nextMonth(month), month);
                default:
                    if (upcomingLength.includes("-")) {
                        let [num, unit] = upcomingLength.split("-"), value = Math.max(1, parseInt(num, 10));
                        switch (unit) {
                            case "day": return value;
                            case "week": return 7 * value;
                            case "month":
                                let future = _months__WEBPACK_IMPORTED_MODULE_2__.addMonths(today, value);
                                return _months__WEBPACK_IMPORTED_MODULE_2__.differenceInCalendarDays(future, month) + 1;
                            case "year":
                                let futureYear = _months__WEBPACK_IMPORTED_MODULE_2__.addYears(today, value);
                                return _months__WEBPACK_IMPORTED_MODULE_2__.differenceInCalendarDays(futureYear, month) + 1;
                            default: return 7;
                        }
                    }
                    return parseInt(upcomingLength, 10);
            } }
            function scheduleIsRecurring(dateCond) { return !!dateCond && "recur" === new _server_rules__WEBPACK_IMPORTED_MODULE_1__.Condition(dateCond.op, "date", dateCond.value, null).getValue().type; }
        }, "./packages/loot-core/src/shared/transactions.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { addSplitTransaction: () => addSplitTransaction, applyTransactionDiff: () => applyTransactionDiff, deleteTransaction: () => deleteTransaction, groupTransaction: () => groupTransaction, isPreviewId: () => isPreviewId, isTemporaryId: () => isTemporaryId, makeAsNonChildTransactions: () => makeAsNonChildTransactions, makeChild: () => makeChild, realizeTempTransactions: () => realizeTempTransactions, recalculateSplit: () => recalculateSplit, splitTransaction: () => splitTransaction, ungroupTransaction: () => ungroupTransaction, ungroupTransactions: () => ungroupTransactions, updateTransaction: () => updateTransaction });
            var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/uuid/dist/esm/v4.js"), _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./packages/loot-core/src/shared/util.ts");
            function isTemporaryId(id) { return -1 !== id.indexOf("temp"); }
            function isPreviewId(id) { return -1 !== id.indexOf("preview/"); }
            function num(n) { return "number" == typeof n ? n : 0; }
            function SplitTransactionError(total, parent) { return { type: "SplitTransactionError", version: 1, difference: num(parent.amount) - total }; }
            function makeChild(parent, data1 = {}) { let prefix = "temp" === parent.id ? "temp" : ""; return { amount: 0, ...data1, category: "category" in data1 ? data1.category : parent.category, payee: "payee" in data1 ? data1.payee : parent.payee, id: "id" in data1 ? data1.id : prefix + (0, uuid__WEBPACK_IMPORTED_MODULE_1__.default)(), account: parent.account, date: parent.date, cleared: null != parent.cleared ? parent.cleared : null, reconciled: "reconciled" in data1 ? data1.reconciled : parent.reconciled, starting_balance_flag: null != parent.starting_balance_flag ? parent.starting_balance_flag : null, is_child: !0, parent_id: parent.id, error: null }; }
            function makeNonChild(parent, data1) { return { amount: 0, ...data1, cleared: null != parent.cleared ? parent.cleared : null, reconciled: null != parent.reconciled ? parent.reconciled : null, sort_order: parent.sort_order || null, starting_balance_flag: null, is_child: !1, parent_id: null }; }
            function recalculateSplit(trans) { let total = (trans.subtransactions || []).reduce((acc, t) => acc + num(t.amount), 0), { error, ...rest } = trans; return { ...rest, error: total === num(trans.amount) ? null : SplitTransactionError(total, trans) }; }
            function ungroupTransactions(transactions) { return transactions.reduce((list, parent) => { let { subtransactions, ...trans } = parent, _subtransactions = subtransactions || []; list.push(trans); for (let i = 0; i < _subtransactions.length; i++)
                list.push(_subtransactions[i]); return list; }, []); }
            function groupTransaction(split) { return { ...split[0], subtransactions: split.slice(1) }; }
            function ungroupTransaction(split) { return null == split ? [] : ungroupTransactions([split]); }
            function applyTransactionDiff(groupedTrans, diff) { return groupTransaction((0, _util__WEBPACK_IMPORTED_MODULE_0__.applyChanges)(diff, ungroupTransaction(groupedTrans) || [])); }
            function replaceTransactions(transactions, id, func) { let idx = transactions.findIndex(t => t.id === id), trans = transactions[idx], transactionsCopy = [...transactions]; if (-1 === idx)
                throw Error("Tried to edit unknown transaction id: " + id); if (trans.is_parent || trans.is_child) {
                let diff, parentIndex = function (transactions, idx) { for (; idx >= 0;) {
                    if (transactions[idx].is_parent)
                        return idx;
                    idx--;
                } return null; }(transactions, idx);
                if (null == parentIndex)
                    return console.log("Cannot find parent index"), { data: [], diff: { added: [], deleted: [], updated: [] }, newTransaction: null };
                let split = function (transactions, parentIndex) { let split = [transactions[parentIndex]], curr = parentIndex + 1; for (; curr < transactions.length && transactions[curr].is_child;)
                    split.push(transactions[curr]), curr++; return split; }(transactions, parentIndex), grouped = func(groupTransaction(split)), newSplit = ungroupTransaction(grouped);
                return null == newSplit ? (diff = { added: [], deleted: [{ id: split[0].id }], updated: [] }, grouped = { ...split[0], _deleted: !0 }, transactionsCopy.splice(parentIndex, split.length)) : (diff = (0, _util__WEBPACK_IMPORTED_MODULE_0__.diffItems)(split, newSplit), transactionsCopy.splice(parentIndex, split.length, ...newSplit)), { data: transactionsCopy, newTransaction: grouped, diff };
            } {
                let grouped = func(trans), newTrans = ungroupTransaction(grouped) || [];
                return grouped && (grouped.subtransactions = grouped.subtransactions || []), transactionsCopy.splice(idx, 1, ...newTrans), { data: transactionsCopy, newTransaction: grouped || { ...trans, _deleted: !0 }, diff: (0, _util__WEBPACK_IMPORTED_MODULE_0__.diffItems)([trans], newTrans) };
            } }
            function addSplitTransaction(transactions, id) { return replaceTransactions(transactions, id, trans => { if (!trans.is_parent)
                return trans; let prevSub = (0, _util__WEBPACK_IMPORTED_MODULE_0__.last)(trans.subtransactions || []); return trans.subtransactions?.push(makeChild(trans, { amount: 0, sort_order: num(prevSub && prevSub.sort_order) - 1 })), trans; }); }
            function updateTransaction(transactions, transaction) { return replaceTransactions(transactions, transaction.id, trans => { if (!trans.is_parent)
                return transaction; {
                let parent = trans.id === transaction.id ? transaction : trans, originalSubtransactions = parent.subtransactions ?? trans.subtransactions, sub = originalSubtransactions?.map(t => { let child = t; if (trans.id === transaction.id) {
                    let { payee: childPayee, ...rest } = t, newPayee = childPayee === trans.payee ? transaction.payee : childPayee;
                    child = { ...rest, ...null != newPayee ? { payee: newPayee } : {} };
                }
                else
                    t.id === transaction.id && (child = transaction); return makeChild(parent, child); });
                return recalculateSplit({ ...parent, ...sub && { subtransactions: sub } });
            } }); }
            function deleteTransaction(transactions, id) { return replaceTransactions(transactions, id, trans => { if (!trans.is_parent || trans.id === id)
                return null; if (trans.subtransactions?.length === 1) {
                let { subtransactions, ...rest } = trans;
                return { ...rest, is_parent: !1, error: null };
            } {
                let sub = trans.subtransactions?.filter(t => t.id !== id);
                return recalculateSplit({ ...trans, ...sub && { subtransactions: sub } });
            } }); }
            function splitTransaction(transactions, id, createSubtransactions) { return replaceTransactions(transactions, id, trans => { if (trans.is_parent || trans.is_child)
                return trans; let subtransactions = createSubtransactions?.(trans) || [makeChild(trans)], { error, ...rest } = trans; return { ...rest, is_parent: !0, error: 0 === num(trans.amount) ? null : SplitTransactionError(0, trans), subtransactions: subtransactions.map(t => ({ ...t, sort_order: t.sort_order || -1 })) }; }); }
            function realizeTempTransactions(transactions) { let parent = { ...transactions.find(t => !t.is_child), id: (0, uuid__WEBPACK_IMPORTED_MODULE_1__.default)() }; return [parent, ...transactions.filter(t => t.is_child).map(child => ({ ...child, id: (0, uuid__WEBPACK_IMPORTED_MODULE_1__.default)(), parent_id: parent.id }))]; }
            function makeAsNonChildTransactions(childTransactionsToUpdate, transactions) { let [parentTransaction, ...childTransactions] = transactions, newNonChildTransactions = childTransactionsToUpdate.map(t => makeNonChild(parentTransaction, t)), remainingChildTransactions = childTransactions.filter(t => !newNonChildTransactions.some(updatedTrans => updatedTrans.id === t.id)), nonChildTransactionsToUpdate = 1 === remainingChildTransactions.length ? [...newNonChildTransactions, makeNonChild(parentTransaction, remainingChildTransactions[0])] : newNonChildTransactions, deleteParentTransaction = remainingChildTransactions.length <= 1, updatedParentTransaction = { ...parentTransaction, ...!deleteParentTransaction ? { amount: remainingChildTransactions.map(t => t.amount).reduce((total, amount) => total + amount, 0) } : {} }; return { updated: [...deleteParentTransaction ? [] : [updatedParentTransaction], ...nonChildTransactionsToUpdate], deleted: [...deleteParentTransaction ? [updatedParentTransaction] : []] }; }
        }, "./packages/loot-core/src/shared/util.ts": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, { amountToCurrency: () => amountToCurrency, amountToCurrencyNoDecimal: () => amountToCurrencyNoDecimal, amountToInteger: () => amountToInteger, appendDecimals: () => appendDecimals, applyChanges: () => applyChanges, currencyToAmount: () => currencyToAmount, currencyToInteger: () => currencyToInteger, diffItems: () => diffItems, fastSetMerge: () => fastSetMerge, getChangedValues: () => getChangedValues, getIn: () => getIn, getNumberFormat: () => getNumberFormat, groupBy: () => groupBy, groupById: () => groupById, hasFieldsChanged: () => hasFieldsChanged, integerToAmount: () => integerToAmount, integerToCurrency: () => integerToCurrency, last: () => last, looselyParseAmount: () => looselyParseAmount, numberFormats: () => numberFormats, parseNumberFormat: () => parseNumberFormat, partitionByField: () => partitionByField, reapplyThousandSeparators: () => reapplyThousandSeparators, safeNumber: () => safeNumber, setIn: () => setIn, setNumberFormat: () => setNumberFormat, sortByKey: () => sortByKey, stringToInteger: () => stringToInteger, titleFirst: () => titleFirst, toRelaxedNumber: () => toRelaxedNumber, tsToRelativeTime: () => tsToRelativeTime });
            var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/date-fns/formatDistanceToNow.js");
            function last(arr) { return arr[arr.length - 1]; }
            function getChangedValues(obj1, obj2) { let diff = {}, keys = Object.keys(obj2), hasChanged = !1; obj1.id && (diff.id = obj1.id); for (let i = 0; i < keys.length; i++) {
                let key = keys[i];
                obj1[key] !== obj2[key] && (diff[key] = obj2[key], hasChanged = !0);
            } return hasChanged ? diff : null; }
            function hasFieldsChanged(obj1, obj2, fields) { let changed = !1; for (let i = 0; i < fields.length; i++) {
                let field = fields[i];
                if (obj1[field] !== obj2[field]) {
                    changed = !0;
                    break;
                }
            } return changed; }
            function applyChanges(changes, items) { return items = [...items], changes.added && changes.added.forEach(add => { items.push(add); }), changes.updated && changes.updated.forEach(({ id, ...fields }) => { let idx = items.findIndex(t => t.id === id); items[idx] = { ...items[idx], ...fields }; }), changes.deleted && changes.deleted.forEach(t => { let idx = items.findIndex(t2 => t.id === t2.id); -1 !== idx && items.splice(idx, 1); }), items; }
            function partitionByField(data1, field) { let res = new Map; for (let i = 0; i < data1.length; i++) {
                let item = data1[i], key = item[field], items = res.get(key) || [];
                items.push(item), res.set(key, items);
            } return res; }
            function groupBy(data1, field) { let res = new Map; for (let i = 0; i < data1.length; i++) {
                let item = data1[i], key = item[field], existing = res.get(key) || [];
                res.set(key, existing.concat([item]));
            } return res; }
            function _groupById(data1) { let res = new Map; for (let i = 0; i < data1.length; i++) {
                let item = data1[i];
                res.set(item.id, item);
            } return res; }
            function diffItems(items, newItems) { let grouped = _groupById(items), newGrouped = _groupById(newItems), added = [], updated = [], deleted = items.filter(item => !newGrouped.has(item.id)).map(item => ({ id: item.id })); return newItems.forEach(newItem => { let item = grouped.get(newItem.id); if (item) {
                let changes = getChangedValues(item, newItem);
                changes && updated.push(changes);
            }
            else
                added.push(newItem); }), { added, updated, deleted }; }
            function groupById(data1) { if (!data1)
                return {}; let res = {}; for (let i = 0; i < data1.length; i++) {
                let item = data1[i];
                res[item.id] = item;
            } return res; }
            function setIn(map, keys, item) { for (let i = 0; i < keys.length; i++) {
                let key = keys[i];
                i === keys.length - 1 ? map.set(key, item) : (map.has(key) || map.set(key, new Map), map = map.get(key));
            } }
            function getIn(map, keys) { let item = map; for (let i = 0; i < keys.length && null != (item = item.get(keys[i])); i++)
                ; return item; }
            function fastSetMerge(set1, set2) { let finalSet = new Set(set1), iter = set2.values(), value = iter.next(); for (; !value.done;)
                finalSet.add(value.value), value = iter.next(); return finalSet; }
            function titleFirst(str) { return !str || str.length <= 1 ? str?.toUpperCase() ?? "" : str[0].toUpperCase() + str.slice(1); }
            function reapplyThousandSeparators(amountText) { if (!amountText || "string" != typeof amountText)
                return amountText; let { decimalSeparator, thousandsSeparator } = getNumberFormat(), [integerPartRaw, decimalPart = ""] = amountText.split(decimalSeparator), numericValue = Number(integerPartRaw.replaceAll(thousandsSeparator, "")); if (isNaN(numericValue))
                return amountText; let integerPart = numericValue.toLocaleString("en-US").replaceAll(",", thousandsSeparator); return decimalPart ? integerPart + decimalSeparator + decimalPart : integerPart; }
            function appendDecimals(amountText, hideDecimals = !1) { let { decimalSeparator: separator } = getNumberFormat(), result = amountText; return result.slice(-1) === separator && (result = result.slice(0, -1)), hideDecimals || (result = (result = (result = (result = result.replaceAll(/[,.]/g, "")).replace(/^0+(?!$)/, "")).padStart(3, "0")).slice(0, -2) + separator + result.slice(-2)), amountToCurrency(currencyToAmount(result)); }
            let NUMBER_FORMATS = ["comma-dot", "dot-comma", "space-comma", "apostrophe-dot", "comma-dot", "comma-dot-in"], numberFormats = [{ value: "comma-dot", label: "1,000.33", labelNoFraction: "1,000" }, { value: "dot-comma", label: "1.000,33", labelNoFraction: "1.000" }, { value: "space-comma", label: "1 000,33", labelNoFraction: "1 000" }, { value: "apostrophe-dot", label: "1’000.33", labelNoFraction: "1’000" }, { value: "comma-dot-in", label: "1,00,000.33", labelNoFraction: "1,00,000" }], numberFormatConfig = { format: "comma-dot", hideFraction: !1 };
            function parseNumberFormat({ format, hideFraction }) { return { format: !function (input = "") { return NUMBER_FORMATS.includes(input); }(format) ? "comma-dot" : format, hideFraction: "true" === String(hideFraction) }; }
            function setNumberFormat(config) { numberFormatConfig = config; }
            function getNumberFormat({ format = numberFormatConfig.format, hideFraction = numberFormatConfig.hideFraction, decimalPlaces } = numberFormatConfig) { let locale, thousandsSeparator, decimalSeparator, currentFormat = format || numberFormatConfig.format, currentHideFraction = "boolean" == typeof hideFraction ? hideFraction : numberFormatConfig.hideFraction; switch (format) {
                case "space-comma":
                    locale = "en-SE", thousandsSeparator = " ", decimalSeparator = ",";
                    break;
                case "dot-comma":
                    locale = "de-DE", thousandsSeparator = ".", decimalSeparator = ",";
                    break;
                case "apostrophe-dot":
                    locale = "de-CH", thousandsSeparator = "’", decimalSeparator = ".";
                    break;
                case "comma-dot-in":
                    locale = "en-IN", thousandsSeparator = ",", decimalSeparator = ".";
                    break;
                default: locale = "en-US", thousandsSeparator = ",", decimalSeparator = ".";
            } return { value: currentFormat, thousandsSeparator, decimalSeparator, formatter: new Intl.NumberFormat(locale, "number" == typeof decimalPlaces ? { minimumFractionDigits: decimalPlaces, maximumFractionDigits: decimalPlaces } : { minimumFractionDigits: 2 * !currentHideFraction, maximumFractionDigits: 2 * !currentHideFraction }) }; }
            let MAX_SAFE_NUMBER = 0x8000000000000 - 1, MIN_SAFE_NUMBER = -(0x8000000000000 - 1);
            function safeNumber(value) { if (!Number.isInteger(value))
                throw Error("safeNumber: number is not an integer: " + JSON.stringify(value)); if (value > MAX_SAFE_NUMBER || value < MIN_SAFE_NUMBER)
                throw Error("safeNumber: can’t safely perform arithmetic with number: " + value); return value; }
            function toRelaxedNumber(currencyAmount) { return integerToAmount(currencyToInteger(currencyAmount) || 0); }
            function integerToCurrency(integerAmount, formatter = getNumberFormat().formatter, decimalPlaces = 2) { let divisor = Math.pow(10, decimalPlaces), amount = safeNumber(integerAmount) / divisor; return formatter.format(amount); }
            function amountToCurrency(amount) { return getNumberFormat().formatter.format(amount); }
            function amountToCurrencyNoDecimal(amount) { return getNumberFormat({ ...numberFormatConfig, hideFraction: !0 }).formatter.format(amount); }
            function currencyToAmount(currencyAmount) { let integer, fraction, match = currencyAmount.match(/[,.](?=[^.,]*$)/); !match || match[0] === getNumberFormat().thousandsSeparator && match.index + 4 <= currencyAmount.length ? (fraction = null, integer = currencyAmount.replace(/[^\d-]/g, "")) : (integer = currencyAmount.slice(0, match.index).replace(/[^\d-]/g, ""), fraction = currencyAmount.slice(match.index + 1)); let amount = parseFloat(integer + "." + fraction); return isNaN(amount) ? null : amount; }
            function currencyToInteger(currencyAmount) { let amount = currencyToAmount(currencyAmount); return null == amount ? null : amountToInteger(amount); }
            function stringToInteger(str) { let amount = parseInt(str.replace(/[^-0-9.,]/g, "")); return isNaN(amount) ? null : amount; }
            function amountToInteger(amount, decimalPlaces = 2) { return Math.round(amount * Math.pow(10, decimalPlaces)); }
            function integerToAmount(integerAmount, decimalPlaces = 2) { return integerAmount / Math.pow(10, decimalPlaces); }
            function looselyParseAmount(amount) { function safeNumber(v) { if (isNaN(v))
                return null; let value = 100 * v; return value > MAX_SAFE_NUMBER || value < MIN_SAFE_NUMBER ? null : v; } function extractNumbers(v) { return v.replace(/[^0-9-]/g, ""); } amount.startsWith("(") && amount.endsWith(")") && (amount = amount.replace("(", "-").replace(")", "")); let m = amount.match(/[.,]([^.,]{4,9}|[^.,]{1,2})$/); return m && void 0 !== m.index ? safeNumber(parseFloat(extractNumbers(amount.slice(0, m.index)) + "." + extractNumbers(amount.slice(m.index + 1)))) : safeNumber(parseFloat(extractNumbers(amount))); }
            function sortByKey(arr, key) { return [...arr].sort((item1, item2) => item1[key] < item2[key] ? -1 : +(item1[key] > item2[key])); }
            function tsToRelativeTime(ts, locale, options1 = { capitalize: !1 }) { if (!ts)
                return "Unknown"; let parsed = new Date(parseInt(ts, 10)), distance = (0, date_fns__WEBPACK_IMPORTED_MODULE_0__.formatDistanceToNow)(parsed, { addSuffix: !0, locale }); return options1.capitalize && (distance = distance.charAt(0).toUpperCase() + distance.slice(1)), distance; }
        }, "@actual-app/crdt": module1 => {
            "use strict";
            module1.exports = require("@actual-app/crdt");
        }, "better-sqlite3": module1 => {
            "use strict";
            module1.exports = require("better-sqlite3");
        }, crypto: module1 => {
            "use strict";
            module1.exports = require("crypto");
        }, events: module1 => {
            "use strict";
            module1.exports = require("events");
        }, fs: module1 => {
            "use strict";
            module1.exports = require("fs");
        }, os: module1 => {
            "use strict";
            module1.exports = require("os");
        }, path: module1 => {
            "use strict";
            module1.exports = require("path");
        }, stream: module1 => {
            "use strict";
            module1.exports = require("stream");
        }, string_decoder: module1 => {
            "use strict";
            module1.exports = require("string_decoder");
        }, timers: module1 => {
            "use strict";
            module1.exports = require("timers");
        }, util: module1 => {
            "use strict";
            module1.exports = require("util");
        }, zlib: module1 => {
            "use strict";
            module1.exports = require("zlib");
        } }, __webpack_module_cache__ = {};
    function __webpack_require__(moduleId) { var cachedModule = __webpack_module_cache__[moduleId]; if (void 0 !== cachedModule)
        return cachedModule.exports; var module1 = __webpack_module_cache__[moduleId] = { id: moduleId, loaded: !1, exports: {} }; return __webpack_modules__[moduleId].call(module1.exports, module1, module1.exports, __webpack_require__), module1.loaded = !0, module1.exports; }
    __webpack_require__.n = module1 => { var getter = module1 && module1.__esModule ? () => module1.default : () => module1; return __webpack_require__.d(getter, { a: getter }), getter; }, __webpack_require__.d = (exports, definition) => { for (var key in definition)
        __webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key) && Object.defineProperty(exports, key, { enumerable: !0, get: definition[key] }); }, __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop), __webpack_require__.r = exports => { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(exports, "__esModule", { value: !0 }); }, __webpack_require__.nmd = module1 => (module1.paths = [], module1.children || (module1.children = []), module1);
    var __webpack_exports__ = __webpack_require__("./packages/loot-core/src/server/main.ts");
    module.exports = __webpack_exports__;
})();
//# sourceMappingURL=bundle.api.js.map
